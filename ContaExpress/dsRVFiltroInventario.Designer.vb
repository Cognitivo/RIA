'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("dsRVFiltroInventario"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class dsRVFiltroInventario
    Inherits Global.System.Data.DataSet
    
    Private tableRVFISTOCKAUNAFECHA As RVFISTOCKAUNAFECHADataTable
    
    Private tableRIMOVPRODUCTOXRANGOFECHA As RIMOVPRODUCTOXRANGOFECHADataTable
    
    Private tableRIMOVPRODUCTOPORFECHA As RIMOVPRODUCTOPORFECHADataTable
    
    Private tableRIProductos As RIProductosDataTable
    
    Private tableRIStockActual As RIStockActualDataTable
    
    Private tableRIStockMinimo As RIStockMinimoDataTable
    
    Private tableRIOrdenPorCategoria As RIOrdenPorCategoriaDataTable
    
    Private tableRICostoPromedio As RICostoPromedioDataTable
    
    Private tableRIPrecio As RIPrecioDataTable
    
    Private tableRIStockDeposito As RIStockDepositoDataTable
    
    Private tableRIListadoCosto As RIListadoCostoDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("RVFISTOCKAUNAFECHA")) Is Nothing) Then
                MyBase.Tables.Add(New RVFISTOCKAUNAFECHADataTable(ds.Tables("RVFISTOCKAUNAFECHA")))
            End If
            If (Not (ds.Tables("RIMOVPRODUCTOXRANGOFECHA")) Is Nothing) Then
                MyBase.Tables.Add(New RIMOVPRODUCTOXRANGOFECHADataTable(ds.Tables("RIMOVPRODUCTOXRANGOFECHA")))
            End If
            If (Not (ds.Tables("RIMOVPRODUCTOPORFECHA")) Is Nothing) Then
                MyBase.Tables.Add(New RIMOVPRODUCTOPORFECHADataTable(ds.Tables("RIMOVPRODUCTOPORFECHA")))
            End If
            If (Not (ds.Tables("RIProductos")) Is Nothing) Then
                MyBase.Tables.Add(New RIProductosDataTable(ds.Tables("RIProductos")))
            End If
            If (Not (ds.Tables("RIStockActual")) Is Nothing) Then
                MyBase.Tables.Add(New RIStockActualDataTable(ds.Tables("RIStockActual")))
            End If
            If (Not (ds.Tables("RIStockMinimo")) Is Nothing) Then
                MyBase.Tables.Add(New RIStockMinimoDataTable(ds.Tables("RIStockMinimo")))
            End If
            If (Not (ds.Tables("RIOrdenPorCategoria")) Is Nothing) Then
                MyBase.Tables.Add(New RIOrdenPorCategoriaDataTable(ds.Tables("RIOrdenPorCategoria")))
            End If
            If (Not (ds.Tables("RICostoPromedio")) Is Nothing) Then
                MyBase.Tables.Add(New RICostoPromedioDataTable(ds.Tables("RICostoPromedio")))
            End If
            If (Not (ds.Tables("RIPrecio")) Is Nothing) Then
                MyBase.Tables.Add(New RIPrecioDataTable(ds.Tables("RIPrecio")))
            End If
            If (Not (ds.Tables("RIStockDeposito")) Is Nothing) Then
                MyBase.Tables.Add(New RIStockDepositoDataTable(ds.Tables("RIStockDeposito")))
            End If
            If (Not (ds.Tables("RIListadoCosto")) Is Nothing) Then
                MyBase.Tables.Add(New RIListadoCostoDataTable(ds.Tables("RIListadoCosto")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVFISTOCKAUNAFECHA() As RVFISTOCKAUNAFECHADataTable
        Get
            Return Me.tableRVFISTOCKAUNAFECHA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIMOVPRODUCTOXRANGOFECHA() As RIMOVPRODUCTOXRANGOFECHADataTable
        Get
            Return Me.tableRIMOVPRODUCTOXRANGOFECHA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIMOVPRODUCTOPORFECHA() As RIMOVPRODUCTOPORFECHADataTable
        Get
            Return Me.tableRIMOVPRODUCTOPORFECHA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIProductos() As RIProductosDataTable
        Get
            Return Me.tableRIProductos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIStockActual() As RIStockActualDataTable
        Get
            Return Me.tableRIStockActual
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIStockMinimo() As RIStockMinimoDataTable
        Get
            Return Me.tableRIStockMinimo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIOrdenPorCategoria() As RIOrdenPorCategoriaDataTable
        Get
            Return Me.tableRIOrdenPorCategoria
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RICostoPromedio() As RICostoPromedioDataTable
        Get
            Return Me.tableRICostoPromedio
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIPrecio() As RIPrecioDataTable
        Get
            Return Me.tableRIPrecio
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIStockDeposito() As RIStockDepositoDataTable
        Get
            Return Me.tableRIStockDeposito
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RIListadoCosto() As RIListadoCostoDataTable
        Get
            Return Me.tableRIListadoCosto
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As dsRVFiltroInventario = CType(MyBase.Clone,dsRVFiltroInventario)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("RVFISTOCKAUNAFECHA")) Is Nothing) Then
                MyBase.Tables.Add(New RVFISTOCKAUNAFECHADataTable(ds.Tables("RVFISTOCKAUNAFECHA")))
            End If
            If (Not (ds.Tables("RIMOVPRODUCTOXRANGOFECHA")) Is Nothing) Then
                MyBase.Tables.Add(New RIMOVPRODUCTOXRANGOFECHADataTable(ds.Tables("RIMOVPRODUCTOXRANGOFECHA")))
            End If
            If (Not (ds.Tables("RIMOVPRODUCTOPORFECHA")) Is Nothing) Then
                MyBase.Tables.Add(New RIMOVPRODUCTOPORFECHADataTable(ds.Tables("RIMOVPRODUCTOPORFECHA")))
            End If
            If (Not (ds.Tables("RIProductos")) Is Nothing) Then
                MyBase.Tables.Add(New RIProductosDataTable(ds.Tables("RIProductos")))
            End If
            If (Not (ds.Tables("RIStockActual")) Is Nothing) Then
                MyBase.Tables.Add(New RIStockActualDataTable(ds.Tables("RIStockActual")))
            End If
            If (Not (ds.Tables("RIStockMinimo")) Is Nothing) Then
                MyBase.Tables.Add(New RIStockMinimoDataTable(ds.Tables("RIStockMinimo")))
            End If
            If (Not (ds.Tables("RIOrdenPorCategoria")) Is Nothing) Then
                MyBase.Tables.Add(New RIOrdenPorCategoriaDataTable(ds.Tables("RIOrdenPorCategoria")))
            End If
            If (Not (ds.Tables("RICostoPromedio")) Is Nothing) Then
                MyBase.Tables.Add(New RICostoPromedioDataTable(ds.Tables("RICostoPromedio")))
            End If
            If (Not (ds.Tables("RIPrecio")) Is Nothing) Then
                MyBase.Tables.Add(New RIPrecioDataTable(ds.Tables("RIPrecio")))
            End If
            If (Not (ds.Tables("RIStockDeposito")) Is Nothing) Then
                MyBase.Tables.Add(New RIStockDepositoDataTable(ds.Tables("RIStockDeposito")))
            End If
            If (Not (ds.Tables("RIListadoCosto")) Is Nothing) Then
                MyBase.Tables.Add(New RIListadoCostoDataTable(ds.Tables("RIListadoCosto")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableRVFISTOCKAUNAFECHA = CType(MyBase.Tables("RVFISTOCKAUNAFECHA"),RVFISTOCKAUNAFECHADataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVFISTOCKAUNAFECHA) Is Nothing) Then
                Me.tableRVFISTOCKAUNAFECHA.InitVars
            End If
        End If
        Me.tableRIMOVPRODUCTOXRANGOFECHA = CType(MyBase.Tables("RIMOVPRODUCTOXRANGOFECHA"),RIMOVPRODUCTOXRANGOFECHADataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIMOVPRODUCTOXRANGOFECHA) Is Nothing) Then
                Me.tableRIMOVPRODUCTOXRANGOFECHA.InitVars
            End If
        End If
        Me.tableRIMOVPRODUCTOPORFECHA = CType(MyBase.Tables("RIMOVPRODUCTOPORFECHA"),RIMOVPRODUCTOPORFECHADataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIMOVPRODUCTOPORFECHA) Is Nothing) Then
                Me.tableRIMOVPRODUCTOPORFECHA.InitVars
            End If
        End If
        Me.tableRIProductos = CType(MyBase.Tables("RIProductos"),RIProductosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIProductos) Is Nothing) Then
                Me.tableRIProductos.InitVars
            End If
        End If
        Me.tableRIStockActual = CType(MyBase.Tables("RIStockActual"),RIStockActualDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIStockActual) Is Nothing) Then
                Me.tableRIStockActual.InitVars
            End If
        End If
        Me.tableRIStockMinimo = CType(MyBase.Tables("RIStockMinimo"),RIStockMinimoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIStockMinimo) Is Nothing) Then
                Me.tableRIStockMinimo.InitVars
            End If
        End If
        Me.tableRIOrdenPorCategoria = CType(MyBase.Tables("RIOrdenPorCategoria"),RIOrdenPorCategoriaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIOrdenPorCategoria) Is Nothing) Then
                Me.tableRIOrdenPorCategoria.InitVars
            End If
        End If
        Me.tableRICostoPromedio = CType(MyBase.Tables("RICostoPromedio"),RICostoPromedioDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRICostoPromedio) Is Nothing) Then
                Me.tableRICostoPromedio.InitVars
            End If
        End If
        Me.tableRIPrecio = CType(MyBase.Tables("RIPrecio"),RIPrecioDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIPrecio) Is Nothing) Then
                Me.tableRIPrecio.InitVars
            End If
        End If
        Me.tableRIStockDeposito = CType(MyBase.Tables("RIStockDeposito"),RIStockDepositoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIStockDeposito) Is Nothing) Then
                Me.tableRIStockDeposito.InitVars
            End If
        End If
        Me.tableRIListadoCosto = CType(MyBase.Tables("RIListadoCosto"),RIListadoCostoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRIListadoCosto) Is Nothing) Then
                Me.tableRIListadoCosto.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "dsRVFiltroInventario"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/dsRVFiltroInventario.xsd"
        Me.EnforceConstraints = false
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableRVFISTOCKAUNAFECHA = New RVFISTOCKAUNAFECHADataTable()
        MyBase.Tables.Add(Me.tableRVFISTOCKAUNAFECHA)
        Me.tableRIMOVPRODUCTOXRANGOFECHA = New RIMOVPRODUCTOXRANGOFECHADataTable()
        MyBase.Tables.Add(Me.tableRIMOVPRODUCTOXRANGOFECHA)
        Me.tableRIMOVPRODUCTOPORFECHA = New RIMOVPRODUCTOPORFECHADataTable()
        MyBase.Tables.Add(Me.tableRIMOVPRODUCTOPORFECHA)
        Me.tableRIProductos = New RIProductosDataTable()
        MyBase.Tables.Add(Me.tableRIProductos)
        Me.tableRIStockActual = New RIStockActualDataTable()
        MyBase.Tables.Add(Me.tableRIStockActual)
        Me.tableRIStockMinimo = New RIStockMinimoDataTable()
        MyBase.Tables.Add(Me.tableRIStockMinimo)
        Me.tableRIOrdenPorCategoria = New RIOrdenPorCategoriaDataTable()
        MyBase.Tables.Add(Me.tableRIOrdenPorCategoria)
        Me.tableRICostoPromedio = New RICostoPromedioDataTable()
        MyBase.Tables.Add(Me.tableRICostoPromedio)
        Me.tableRIPrecio = New RIPrecioDataTable()
        MyBase.Tables.Add(Me.tableRIPrecio)
        Me.tableRIStockDeposito = New RIStockDepositoDataTable()
        MyBase.Tables.Add(Me.tableRIStockDeposito)
        Me.tableRIListadoCosto = New RIListadoCostoDataTable()
        MyBase.Tables.Add(Me.tableRIListadoCosto)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVFISTOCKAUNAFECHA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIMOVPRODUCTOXRANGOFECHA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIMOVPRODUCTOPORFECHA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIProductos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIStockActual() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIStockMinimo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIOrdenPorCategoria() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRICostoPromedio() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIPrecio() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIStockDeposito() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRIListadoCosto() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVFISTOCKAUNAFECHARowChangeEventHandler(ByVal sender As Object, ByVal e As RVFISTOCKAUNAFECHARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIMOVPRODUCTOXRANGOFECHARowChangeEventHandler(ByVal sender As Object, ByVal e As RIMOVPRODUCTOXRANGOFECHARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIMOVPRODUCTOPORFECHARowChangeEventHandler(ByVal sender As Object, ByVal e As RIMOVPRODUCTOPORFECHARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIProductosRowChangeEventHandler(ByVal sender As Object, ByVal e As RIProductosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIStockActualRowChangeEventHandler(ByVal sender As Object, ByVal e As RIStockActualRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIStockMinimoRowChangeEventHandler(ByVal sender As Object, ByVal e As RIStockMinimoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIOrdenPorCategoriaRowChangeEventHandler(ByVal sender As Object, ByVal e As RIOrdenPorCategoriaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RICostoPromedioRowChangeEventHandler(ByVal sender As Object, ByVal e As RICostoPromedioRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIPrecioRowChangeEventHandler(ByVal sender As Object, ByVal e As RIPrecioRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIStockDepositoRowChangeEventHandler(ByVal sender As Object, ByVal e As RIStockDepositoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RIListadoCostoRowChangeEventHandler(ByVal sender As Object, ByVal e As RIListadoCostoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVFISTOCKAUNAFECHADataTable
        Inherits Global.System.Data.TypedTableBase(Of RVFISTOCKAUNAFECHARow)
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnSTOCKFECHA As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnPRECIO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVFISTOCKAUNAFECHA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKFECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVFISTOCKAUNAFECHARow
            Get
                Return CType(Me.Rows(index),RVFISTOCKAUNAFECHARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVFISTOCKAUNAFECHARowChanging As RVFISTOCKAUNAFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVFISTOCKAUNAFECHARowChanged As RVFISTOCKAUNAFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVFISTOCKAUNAFECHARowDeleting As RVFISTOCKAUNAFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVFISTOCKAUNAFECHARowDeleted As RVFISTOCKAUNAFECHARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVFISTOCKAUNAFECHARow(ByVal row As RVFISTOCKAUNAFECHARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVFISTOCKAUNAFECHARow(ByVal CODIGO As String, ByVal DESPRODUCTO As String, ByVal DESFAMILIA As String, ByVal DESMEDIDA As String, ByVal STOCKFECHA As Decimal, ByVal DESSUCURSAL As String, ByVal CODSUCURSAL As Integer, ByVal PRECIO As Decimal) As RVFISTOCKAUNAFECHARow
            Dim rowRVFISTOCKAUNAFECHARow As RVFISTOCKAUNAFECHARow = CType(Me.NewRow,RVFISTOCKAUNAFECHARow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODIGO, DESPRODUCTO, DESFAMILIA, DESMEDIDA, STOCKFECHA, DESSUCURSAL, CODSUCURSAL, PRECIO}
            rowRVFISTOCKAUNAFECHARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVFISTOCKAUNAFECHARow)
            Return rowRVFISTOCKAUNAFECHARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVFISTOCKAUNAFECHADataTable = CType(MyBase.Clone,RVFISTOCKAUNAFECHADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVFISTOCKAUNAFECHADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnSTOCKFECHA = MyBase.Columns("STOCKFECHA")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnPRECIO = MyBase.Columns("PRECIO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnSTOCKFECHA = New Global.System.Data.DataColumn("STOCKFECHA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKFECHA)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnPRECIO = New Global.System.Data.DataColumn("PRECIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO)
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnSTOCKFECHA.ReadOnly = true
            Me.columnDESSUCURSAL.ReadOnly = true
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnCODSUCURSAL.AllowDBNull = false
            Me.columnCODSUCURSAL.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVFISTOCKAUNAFECHARow() As RVFISTOCKAUNAFECHARow
            Return CType(Me.NewRow,RVFISTOCKAUNAFECHARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVFISTOCKAUNAFECHARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVFISTOCKAUNAFECHARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVFISTOCKAUNAFECHARowChangedEvent) Is Nothing) Then
                RaiseEvent RVFISTOCKAUNAFECHARowChanged(Me, New RVFISTOCKAUNAFECHARowChangeEvent(CType(e.Row,RVFISTOCKAUNAFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVFISTOCKAUNAFECHARowChangingEvent) Is Nothing) Then
                RaiseEvent RVFISTOCKAUNAFECHARowChanging(Me, New RVFISTOCKAUNAFECHARowChangeEvent(CType(e.Row,RVFISTOCKAUNAFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVFISTOCKAUNAFECHARowDeletedEvent) Is Nothing) Then
                RaiseEvent RVFISTOCKAUNAFECHARowDeleted(Me, New RVFISTOCKAUNAFECHARowChangeEvent(CType(e.Row,RVFISTOCKAUNAFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVFISTOCKAUNAFECHARowDeletingEvent) Is Nothing) Then
                RaiseEvent RVFISTOCKAUNAFECHARowDeleting(Me, New RVFISTOCKAUNAFECHARowChangeEvent(CType(e.Row,RVFISTOCKAUNAFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVFISTOCKAUNAFECHARow(ByVal row As RVFISTOCKAUNAFECHARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVFISTOCKAUNAFECHADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIMOVPRODUCTOXRANGOFECHADataTable
        Inherits Global.System.Data.TypedTableBase(Of RIMOVPRODUCTOXRANGOFECHARow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnSTOCKINICIAL As Global.System.Data.DataColumn
        
        Private columnCOMPRA As Global.System.Data.DataColumn
        
        Private columnDEVOLUCIONCLIENTE As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIAENTRADA As Global.System.Data.DataColumn
        
        Private columnAJUSTEENTRADA As Global.System.Data.DataColumn
        
        Private columnANULDEVCOMP As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnENTRPROD As Global.System.Data.DataColumn
        
        Private columnANULVTA As Global.System.Data.DataColumn
        
        Private columnSALPROD As Global.System.Data.DataColumn
        
        Private columnDEVCOMP As Global.System.Data.DataColumn
        
        Private columnANULCOMP As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIASALIDA As Global.System.Data.DataColumn
        
        Private columnAJUSTESALIDA As Global.System.Data.DataColumn
        
        Private columnANULDEVVTA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIMOVPRODUCTOXRANGOFECHA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVOLUCIONCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVOLUCIONCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIAENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIAENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTEENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTEENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIASALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIASALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTESALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTESALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIMOVPRODUCTOXRANGOFECHARow
            Get
                Return CType(Me.Rows(index),RIMOVPRODUCTOXRANGOFECHARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOXRANGOFECHARowChanging As RIMOVPRODUCTOXRANGOFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOXRANGOFECHARowChanged As RIMOVPRODUCTOXRANGOFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOXRANGOFECHARowDeleting As RIMOVPRODUCTOXRANGOFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOXRANGOFECHARowDeleted As RIMOVPRODUCTOXRANGOFECHARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIMOVPRODUCTOXRANGOFECHARow(ByVal row As RIMOVPRODUCTOXRANGOFECHARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIMOVPRODUCTOXRANGOFECHARow( _
                    ByVal CODIGO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal STOCKINICIAL As Decimal,  _
                    ByVal COMPRA As Decimal,  _
                    ByVal DEVOLUCIONCLIENTE As Decimal,  _
                    ByVal TRANSFERENCIAENTRADA As Decimal,  _
                    ByVal AJUSTEENTRADA As Decimal,  _
                    ByVal ANULDEVCOMP As Decimal,  _
                    ByVal VENTA As Decimal,  _
                    ByVal ENTRPROD As Decimal,  _
                    ByVal ANULVTA As Decimal,  _
                    ByVal SALPROD As Decimal,  _
                    ByVal DEVCOMP As Decimal,  _
                    ByVal ANULCOMP As Decimal,  _
                    ByVal TRANSFERENCIASALIDA As Decimal,  _
                    ByVal AJUSTESALIDA As Decimal,  _
                    ByVal ANULDEVVTA As Decimal,  _
                    ByVal CODSUCURSAL As Integer,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal CODCODIGO As Integer,  _
                    ByVal CODRUBRO As Decimal,  _
                    ByVal DESSUCURSAL As String,  _
                    ByVal DESRUBRO As String) As RIMOVPRODUCTOXRANGOFECHARow
            Dim rowRIMOVPRODUCTOXRANGOFECHARow As RIMOVPRODUCTOXRANGOFECHARow = CType(Me.NewRow,RIMOVPRODUCTOXRANGOFECHARow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRODUCTO, STOCKINICIAL, COMPRA, DEVOLUCIONCLIENTE, TRANSFERENCIAENTRADA, AJUSTEENTRADA, ANULDEVCOMP, VENTA, ENTRPROD, ANULVTA, SALPROD, DEVCOMP, ANULCOMP, TRANSFERENCIASALIDA, AJUSTESALIDA, ANULDEVVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRUBRO}
            rowRIMOVPRODUCTOXRANGOFECHARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIMOVPRODUCTOXRANGOFECHARow)
            Return rowRIMOVPRODUCTOXRANGOFECHARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIMOVPRODUCTOXRANGOFECHADataTable = CType(MyBase.Clone,RIMOVPRODUCTOXRANGOFECHADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIMOVPRODUCTOXRANGOFECHADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnSTOCKINICIAL = MyBase.Columns("STOCKINICIAL")
            Me.columnCOMPRA = MyBase.Columns("COMPRA")
            Me.columnDEVOLUCIONCLIENTE = MyBase.Columns("DEVOLUCIONCLIENTE")
            Me.columnTRANSFERENCIAENTRADA = MyBase.Columns("TRANSFERENCIAENTRADA")
            Me.columnAJUSTEENTRADA = MyBase.Columns("AJUSTEENTRADA")
            Me.columnANULDEVCOMP = MyBase.Columns("ANULDEVCOMP")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnENTRPROD = MyBase.Columns("ENTRPROD")
            Me.columnANULVTA = MyBase.Columns("ANULVTA")
            Me.columnSALPROD = MyBase.Columns("SALPROD")
            Me.columnDEVCOMP = MyBase.Columns("DEVCOMP")
            Me.columnANULCOMP = MyBase.Columns("ANULCOMP")
            Me.columnTRANSFERENCIASALIDA = MyBase.Columns("TRANSFERENCIASALIDA")
            Me.columnAJUSTESALIDA = MyBase.Columns("AJUSTESALIDA")
            Me.columnANULDEVVTA = MyBase.Columns("ANULDEVVTA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnSTOCKINICIAL = New Global.System.Data.DataColumn("STOCKINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINICIAL)
            Me.columnCOMPRA = New Global.System.Data.DataColumn("COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRA)
            Me.columnDEVOLUCIONCLIENTE = New Global.System.Data.DataColumn("DEVOLUCIONCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVOLUCIONCLIENTE)
            Me.columnTRANSFERENCIAENTRADA = New Global.System.Data.DataColumn("TRANSFERENCIAENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIAENTRADA)
            Me.columnAJUSTEENTRADA = New Global.System.Data.DataColumn("AJUSTEENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTEENTRADA)
            Me.columnANULDEVCOMP = New Global.System.Data.DataColumn("ANULDEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVCOMP)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnENTRPROD = New Global.System.Data.DataColumn("ENTRPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRPROD)
            Me.columnANULVTA = New Global.System.Data.DataColumn("ANULVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULVTA)
            Me.columnSALPROD = New Global.System.Data.DataColumn("SALPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALPROD)
            Me.columnDEVCOMP = New Global.System.Data.DataColumn("DEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVCOMP)
            Me.columnANULCOMP = New Global.System.Data.DataColumn("ANULCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULCOMP)
            Me.columnTRANSFERENCIASALIDA = New Global.System.Data.DataColumn("TRANSFERENCIASALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIASALIDA)
            Me.columnAJUSTESALIDA = New Global.System.Data.DataColumn("AJUSTESALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTESALIDA)
            Me.columnANULDEVVTA = New Global.System.Data.DataColumn("ANULDEVVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVVTA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 281
            Me.columnSTOCKINICIAL.ReadOnly = true
            Me.columnCOMPRA.ReadOnly = true
            Me.columnDEVOLUCIONCLIENTE.ReadOnly = true
            Me.columnTRANSFERENCIAENTRADA.ReadOnly = true
            Me.columnAJUSTEENTRADA.ReadOnly = true
            Me.columnANULDEVCOMP.ReadOnly = true
            Me.columnVENTA.ReadOnly = true
            Me.columnENTRPROD.ReadOnly = true
            Me.columnANULVTA.ReadOnly = true
            Me.columnSALPROD.ReadOnly = true
            Me.columnDEVCOMP.ReadOnly = true
            Me.columnANULCOMP.ReadOnly = true
            Me.columnTRANSFERENCIASALIDA.ReadOnly = true
            Me.columnAJUSTESALIDA.ReadOnly = true
            Me.columnANULDEVVTA.ReadOnly = true
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIMOVPRODUCTOXRANGOFECHARow() As RIMOVPRODUCTOXRANGOFECHARow
            Return CType(Me.NewRow,RIMOVPRODUCTOXRANGOFECHARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIMOVPRODUCTOXRANGOFECHARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIMOVPRODUCTOXRANGOFECHARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIMOVPRODUCTOXRANGOFECHARowChangedEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOXRANGOFECHARowChanged(Me, New RIMOVPRODUCTOXRANGOFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOXRANGOFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIMOVPRODUCTOXRANGOFECHARowChangingEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOXRANGOFECHARowChanging(Me, New RIMOVPRODUCTOXRANGOFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOXRANGOFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIMOVPRODUCTOXRANGOFECHARowDeletedEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOXRANGOFECHARowDeleted(Me, New RIMOVPRODUCTOXRANGOFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOXRANGOFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIMOVPRODUCTOXRANGOFECHARowDeletingEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOXRANGOFECHARowDeleting(Me, New RIMOVPRODUCTOXRANGOFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOXRANGOFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIMOVPRODUCTOXRANGOFECHARow(ByVal row As RIMOVPRODUCTOXRANGOFECHARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIMOVPRODUCTOXRANGOFECHADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIMOVPRODUCTOPORFECHADataTable
        Inherits Global.System.Data.TypedTableBase(Of RIMOVPRODUCTOPORFECHARow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnSTOCKINICIAL As Global.System.Data.DataColumn
        
        Private columnCOMPRA As Global.System.Data.DataColumn
        
        Private columnDEVOLUCIONCLIENTE As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIAENTRADA As Global.System.Data.DataColumn
        
        Private columnAJUSTEENTRADA As Global.System.Data.DataColumn
        
        Private columnANULDEVCOMP As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnENTRPROD As Global.System.Data.DataColumn
        
        Private columnANULVTA As Global.System.Data.DataColumn
        
        Private columnSALPROD As Global.System.Data.DataColumn
        
        Private columnDEVCOMP As Global.System.Data.DataColumn
        
        Private columnANULCOMP As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIASALIDA As Global.System.Data.DataColumn
        
        Private columnAJUSTESALIDA As Global.System.Data.DataColumn
        
        Private columnANULDEVVTA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnFECHAMTO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIMOVPRODUCTOPORFECHA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVOLUCIONCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVOLUCIONCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIAENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIAENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTEENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTEENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIASALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIASALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTESALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTESALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIMOVPRODUCTOPORFECHARow
            Get
                Return CType(Me.Rows(index),RIMOVPRODUCTOPORFECHARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOPORFECHARowChanging As RIMOVPRODUCTOPORFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOPORFECHARowChanged As RIMOVPRODUCTOPORFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOPORFECHARowDeleting As RIMOVPRODUCTOPORFECHARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIMOVPRODUCTOPORFECHARowDeleted As RIMOVPRODUCTOPORFECHARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIMOVPRODUCTOPORFECHARow(ByVal row As RIMOVPRODUCTOPORFECHARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIMOVPRODUCTOPORFECHARow( _
                    ByVal CODIGO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal STOCKINICIAL As Decimal,  _
                    ByVal COMPRA As Decimal,  _
                    ByVal DEVOLUCIONCLIENTE As Decimal,  _
                    ByVal TRANSFERENCIAENTRADA As Decimal,  _
                    ByVal AJUSTEENTRADA As Decimal,  _
                    ByVal ANULDEVCOMP As Decimal,  _
                    ByVal VENTA As Decimal,  _
                    ByVal ENTRPROD As Decimal,  _
                    ByVal ANULVTA As Decimal,  _
                    ByVal SALPROD As Decimal,  _
                    ByVal DEVCOMP As Decimal,  _
                    ByVal ANULCOMP As Decimal,  _
                    ByVal TRANSFERENCIASALIDA As Decimal,  _
                    ByVal AJUSTESALIDA As Decimal,  _
                    ByVal ANULDEVVTA As Decimal,  _
                    ByVal CODSUCURSAL As Integer,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal CODCODIGO As Integer,  _
                    ByVal CODRUBRO As Decimal,  _
                    ByVal FECHAMTO As Date,  _
                    ByVal DESSUCURSAL As String,  _
                    ByVal DESRUBRO As String) As RIMOVPRODUCTOPORFECHARow
            Dim rowRIMOVPRODUCTOPORFECHARow As RIMOVPRODUCTOPORFECHARow = CType(Me.NewRow,RIMOVPRODUCTOPORFECHARow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRODUCTO, STOCKINICIAL, COMPRA, DEVOLUCIONCLIENTE, TRANSFERENCIAENTRADA, AJUSTEENTRADA, ANULDEVCOMP, VENTA, ENTRPROD, ANULVTA, SALPROD, DEVCOMP, ANULCOMP, TRANSFERENCIASALIDA, AJUSTESALIDA, ANULDEVVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, FECHAMTO, DESSUCURSAL, DESRUBRO}
            rowRIMOVPRODUCTOPORFECHARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIMOVPRODUCTOPORFECHARow)
            Return rowRIMOVPRODUCTOPORFECHARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIMOVPRODUCTOPORFECHADataTable = CType(MyBase.Clone,RIMOVPRODUCTOPORFECHADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIMOVPRODUCTOPORFECHADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnSTOCKINICIAL = MyBase.Columns("STOCKINICIAL")
            Me.columnCOMPRA = MyBase.Columns("COMPRA")
            Me.columnDEVOLUCIONCLIENTE = MyBase.Columns("DEVOLUCIONCLIENTE")
            Me.columnTRANSFERENCIAENTRADA = MyBase.Columns("TRANSFERENCIAENTRADA")
            Me.columnAJUSTEENTRADA = MyBase.Columns("AJUSTEENTRADA")
            Me.columnANULDEVCOMP = MyBase.Columns("ANULDEVCOMP")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnENTRPROD = MyBase.Columns("ENTRPROD")
            Me.columnANULVTA = MyBase.Columns("ANULVTA")
            Me.columnSALPROD = MyBase.Columns("SALPROD")
            Me.columnDEVCOMP = MyBase.Columns("DEVCOMP")
            Me.columnANULCOMP = MyBase.Columns("ANULCOMP")
            Me.columnTRANSFERENCIASALIDA = MyBase.Columns("TRANSFERENCIASALIDA")
            Me.columnAJUSTESALIDA = MyBase.Columns("AJUSTESALIDA")
            Me.columnANULDEVVTA = MyBase.Columns("ANULDEVVTA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnFECHAMTO = MyBase.Columns("FECHAMTO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnSTOCKINICIAL = New Global.System.Data.DataColumn("STOCKINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINICIAL)
            Me.columnCOMPRA = New Global.System.Data.DataColumn("COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRA)
            Me.columnDEVOLUCIONCLIENTE = New Global.System.Data.DataColumn("DEVOLUCIONCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVOLUCIONCLIENTE)
            Me.columnTRANSFERENCIAENTRADA = New Global.System.Data.DataColumn("TRANSFERENCIAENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIAENTRADA)
            Me.columnAJUSTEENTRADA = New Global.System.Data.DataColumn("AJUSTEENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTEENTRADA)
            Me.columnANULDEVCOMP = New Global.System.Data.DataColumn("ANULDEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVCOMP)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnENTRPROD = New Global.System.Data.DataColumn("ENTRPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRPROD)
            Me.columnANULVTA = New Global.System.Data.DataColumn("ANULVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULVTA)
            Me.columnSALPROD = New Global.System.Data.DataColumn("SALPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALPROD)
            Me.columnDEVCOMP = New Global.System.Data.DataColumn("DEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVCOMP)
            Me.columnANULCOMP = New Global.System.Data.DataColumn("ANULCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULCOMP)
            Me.columnTRANSFERENCIASALIDA = New Global.System.Data.DataColumn("TRANSFERENCIASALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIASALIDA)
            Me.columnAJUSTESALIDA = New Global.System.Data.DataColumn("AJUSTESALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTESALIDA)
            Me.columnANULDEVVTA = New Global.System.Data.DataColumn("ANULDEVVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVVTA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnFECHAMTO = New Global.System.Data.DataColumn("FECHAMTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMTO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 281
            Me.columnSTOCKINICIAL.ReadOnly = true
            Me.columnCOMPRA.ReadOnly = true
            Me.columnDEVOLUCIONCLIENTE.ReadOnly = true
            Me.columnTRANSFERENCIAENTRADA.ReadOnly = true
            Me.columnAJUSTEENTRADA.ReadOnly = true
            Me.columnANULDEVCOMP.ReadOnly = true
            Me.columnVENTA.ReadOnly = true
            Me.columnENTRPROD.ReadOnly = true
            Me.columnANULVTA.ReadOnly = true
            Me.columnSALPROD.ReadOnly = true
            Me.columnDEVCOMP.ReadOnly = true
            Me.columnANULCOMP.ReadOnly = true
            Me.columnTRANSFERENCIASALIDA.ReadOnly = true
            Me.columnAJUSTESALIDA.ReadOnly = true
            Me.columnANULDEVVTA.ReadOnly = true
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnFECHAMTO.ReadOnly = true
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIMOVPRODUCTOPORFECHARow() As RIMOVPRODUCTOPORFECHARow
            Return CType(Me.NewRow,RIMOVPRODUCTOPORFECHARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIMOVPRODUCTOPORFECHARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIMOVPRODUCTOPORFECHARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIMOVPRODUCTOPORFECHARowChangedEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOPORFECHARowChanged(Me, New RIMOVPRODUCTOPORFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOPORFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIMOVPRODUCTOPORFECHARowChangingEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOPORFECHARowChanging(Me, New RIMOVPRODUCTOPORFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOPORFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIMOVPRODUCTOPORFECHARowDeletedEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOPORFECHARowDeleted(Me, New RIMOVPRODUCTOPORFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOPORFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIMOVPRODUCTOPORFECHARowDeletingEvent) Is Nothing) Then
                RaiseEvent RIMOVPRODUCTOPORFECHARowDeleting(Me, New RIMOVPRODUCTOPORFECHARowChangeEvent(CType(e.Row,RIMOVPRODUCTOPORFECHARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIMOVPRODUCTOPORFECHARow(ByVal row As RIMOVPRODUCTOPORFECHARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIMOVPRODUCTOPORFECHADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIProductosDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIProductosRow)
        
        Private columnDescripcion As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIProductos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DescripcionColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDescripcion
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIProductosRow
            Get
                Return CType(Me.Rows(index),RIProductosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIProductosRowChanging As RIProductosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIProductosRowChanged As RIProductosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIProductosRowDeleting As RIProductosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIProductosRowDeleted As RIProductosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIProductosRow(ByVal row As RIProductosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIProductosRow(ByVal Descripcion As String, ByVal DESRUBRO As String, ByVal DESLINEA As String, ByVal DESFAMILIA As String, ByVal CODIGO As String) As RIProductosRow
            Dim rowRIProductosRow As RIProductosRow = CType(Me.NewRow,RIProductosRow)
            Dim columnValuesArray() As Object = New Object() {Descripcion, DESRUBRO, DESLINEA, Nothing, DESFAMILIA, CODIGO, Nothing}
            rowRIProductosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIProductosRow)
            Return rowRIProductosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIProductosDataTable = CType(MyBase.Clone,RIProductosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIProductosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDescripcion = MyBase.Columns("Descripcion")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDescripcion = New Global.System.Data.DataColumn("Descripcion", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDescripcion)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnDescripcion.ReadOnly = true
            Me.columnDescripcion.MaxLength = 181
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnDESLINEA.MaxLength = 100
            Me.columnCODPRODUCTO.AutoIncrement = true
            Me.columnCODPRODUCTO.AutoIncrementSeed = -1
            Me.columnCODPRODUCTO.AutoIncrementStep = -1
            Me.columnCODPRODUCTO.AllowDBNull = false
            Me.columnCODPRODUCTO.ReadOnly = true
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnCODIGO.MaxLength = 150
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIProductosRow() As RIProductosRow
            Return CType(Me.NewRow,RIProductosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIProductosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIProductosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIProductosRowChangedEvent) Is Nothing) Then
                RaiseEvent RIProductosRowChanged(Me, New RIProductosRowChangeEvent(CType(e.Row,RIProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIProductosRowChangingEvent) Is Nothing) Then
                RaiseEvent RIProductosRowChanging(Me, New RIProductosRowChangeEvent(CType(e.Row,RIProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIProductosRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIProductosRowDeleted(Me, New RIProductosRowChangeEvent(CType(e.Row,RIProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIProductosRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIProductosRowDeleting(Me, New RIProductosRowChangeEvent(CType(e.Row,RIProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIProductosRow(ByVal row As RIProductosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIProductosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIStockActualDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIStockActualRow)
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnSTOCKACTUAL As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIStockActual"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKACTUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIStockActualRow
            Get
                Return CType(Me.Rows(index),RIStockActualRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockActualRowChanging As RIStockActualRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockActualRowChanged As RIStockActualRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockActualRowDeleting As RIStockActualRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockActualRowDeleted As RIStockActualRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIStockActualRow(ByVal row As RIStockActualRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIStockActualRow(ByVal DESMEDIDA As String, ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal CODIGO As String, ByVal STOCKACTUAL As Decimal, ByVal DESSUCURSAL As String, ByVal DESRUBRO As String, ByVal PRODUCTO As String) As RIStockActualRow
            Dim rowRIStockActualRow As RIStockActualRow = CType(Me.NewRow,RIStockActualRow)
            Dim columnValuesArray() As Object = New Object() {DESMEDIDA, DESFAMILIA, DESLINEA, CODIGO, STOCKACTUAL, DESSUCURSAL, DESRUBRO, PRODUCTO, Nothing}
            rowRIStockActualRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIStockActualRow)
            Return rowRIStockActualRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCODIGO(ByVal CODCODIGO As Integer) As RIStockActualRow
            Return CType(Me.Rows.Find(New Object() {CODCODIGO}),RIStockActualRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIStockActualDataTable = CType(MyBase.Clone,RIStockActualDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIStockActualDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnSTOCKACTUAL = MyBase.Columns("STOCKACTUAL")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnSTOCKACTUAL = New Global.System.Data.DataColumn("STOCKACTUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKACTUAL)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCODIGO}, true))
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 181
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODCODIGO.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIStockActualRow() As RIStockActualRow
            Return CType(Me.NewRow,RIStockActualRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIStockActualRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIStockActualRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIStockActualRowChangedEvent) Is Nothing) Then
                RaiseEvent RIStockActualRowChanged(Me, New RIStockActualRowChangeEvent(CType(e.Row,RIStockActualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIStockActualRowChangingEvent) Is Nothing) Then
                RaiseEvent RIStockActualRowChanging(Me, New RIStockActualRowChangeEvent(CType(e.Row,RIStockActualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIStockActualRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIStockActualRowDeleted(Me, New RIStockActualRowChangeEvent(CType(e.Row,RIStockActualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIStockActualRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIStockActualRowDeleting(Me, New RIStockActualRowChangeEvent(CType(e.Row,RIStockActualRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIStockActualRow(ByVal row As RIStockActualRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIStockActualDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIStockMinimoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIStockMinimoRow)
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnMARCA As Global.System.Data.DataColumn
        
        Private columnSTOCKMINIMO As Global.System.Data.DataColumn
        
        Private columnSTOCKMAXIMO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnSTOCKACTUAL As Global.System.Data.DataColumn
        
        Private columnMEDIDA As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO1 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIStockMinimo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMINIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMINIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMAXIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMAXIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKACTUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIStockMinimoRow
            Get
                Return CType(Me.Rows(index),RIStockMinimoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockMinimoRowChanging As RIStockMinimoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockMinimoRowChanged As RIStockMinimoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockMinimoRowDeleting As RIStockMinimoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockMinimoRowDeleted As RIStockMinimoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIStockMinimoRow(ByVal row As RIStockMinimoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIStockMinimoRow(ByVal PRODUCTO As String, ByVal CATEGORIA As String, ByVal LINEA As String, ByVal MARCA As String, ByVal STOCKMINIMO As Decimal, ByVal STOCKMAXIMO As Decimal, ByVal CODPRODUCTO As Decimal, ByVal STOCKACTUAL As Decimal, ByVal MEDIDA As String, ByVal DESSUCURSAL As String, ByVal CODIGO As String, ByVal CODPRODUCTO1 As Integer) As RIStockMinimoRow
            Dim rowRIStockMinimoRow As RIStockMinimoRow = CType(Me.NewRow,RIStockMinimoRow)
            Dim columnValuesArray() As Object = New Object() {PRODUCTO, CATEGORIA, LINEA, MARCA, STOCKMINIMO, STOCKMAXIMO, Nothing, CODPRODUCTO, STOCKACTUAL, MEDIDA, DESSUCURSAL, CODIGO, CODPRODUCTO1}
            rowRIStockMinimoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIStockMinimoRow)
            Return rowRIStockMinimoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIStockMinimoDataTable = CType(MyBase.Clone,RIStockMinimoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIStockMinimoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCATEGORIA = MyBase.Columns("CATEGORIA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnMARCA = MyBase.Columns("MARCA")
            Me.columnSTOCKMINIMO = MyBase.Columns("STOCKMINIMO")
            Me.columnSTOCKMAXIMO = MyBase.Columns("STOCKMAXIMO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnSTOCKACTUAL = MyBase.Columns("STOCKACTUAL")
            Me.columnMEDIDA = MyBase.Columns("MEDIDA")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnCODPRODUCTO1 = MyBase.Columns("CODPRODUCTO1")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCATEGORIA = New Global.System.Data.DataColumn("CATEGORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnMARCA = New Global.System.Data.DataColumn("MARCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARCA)
            Me.columnSTOCKMINIMO = New Global.System.Data.DataColumn("STOCKMINIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMINIMO)
            Me.columnSTOCKMAXIMO = New Global.System.Data.DataColumn("STOCKMAXIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMAXIMO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnSTOCKACTUAL = New Global.System.Data.DataColumn("STOCKACTUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKACTUAL)
            Me.columnMEDIDA = New Global.System.Data.DataColumn("MEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDIDA)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnCODPRODUCTO1 = New Global.System.Data.DataColumn("CODPRODUCTO1", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO1)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCODIGO}, false))
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 80
            Me.columnCATEGORIA.MaxLength = 50
            Me.columnLINEA.MaxLength = 100
            Me.columnMARCA.MaxLength = 100
            Me.columnSTOCKMINIMO.ReadOnly = true
            Me.columnSTOCKMAXIMO.ReadOnly = true
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODCODIGO.Unique = true
            Me.columnSTOCKACTUAL.ReadOnly = true
            Me.columnMEDIDA.MaxLength = 50
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnCODIGO.MaxLength = 150
            Me.columnCODPRODUCTO1.Caption = "CODPRODUCTO"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIStockMinimoRow() As RIStockMinimoRow
            Return CType(Me.NewRow,RIStockMinimoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIStockMinimoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIStockMinimoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIStockMinimoRowChangedEvent) Is Nothing) Then
                RaiseEvent RIStockMinimoRowChanged(Me, New RIStockMinimoRowChangeEvent(CType(e.Row,RIStockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIStockMinimoRowChangingEvent) Is Nothing) Then
                RaiseEvent RIStockMinimoRowChanging(Me, New RIStockMinimoRowChangeEvent(CType(e.Row,RIStockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIStockMinimoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIStockMinimoRowDeleted(Me, New RIStockMinimoRowChangeEvent(CType(e.Row,RIStockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIStockMinimoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIStockMinimoRowDeleting(Me, New RIStockMinimoRowChangeEvent(CType(e.Row,RIStockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIStockMinimoRow(ByVal row As RIStockMinimoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIStockMinimoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIOrdenPorCategoriaDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIOrdenPorCategoriaRow)
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnMARCA As Global.System.Data.DataColumn
        
        Private columnMEDIDA As Global.System.Data.DataColumn
        
        Private columnSERVICIO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIOrdenPorCategoria"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIOrdenPorCategoriaRow
            Get
                Return CType(Me.Rows(index),RIOrdenPorCategoriaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIOrdenPorCategoriaRowChanging As RIOrdenPorCategoriaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIOrdenPorCategoriaRowChanged As RIOrdenPorCategoriaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIOrdenPorCategoriaRowDeleting As RIOrdenPorCategoriaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIOrdenPorCategoriaRowDeleted As RIOrdenPorCategoriaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIOrdenPorCategoriaRow(ByVal row As RIOrdenPorCategoriaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIOrdenPorCategoriaRow(ByVal PRODUCTO As String, ByVal CATEGORIA As String, ByVal LINEA As String, ByVal MARCA As String, ByVal MEDIDA As String, ByVal SERVICIO As Byte, ByVal DESSUCURSAL As String) As RIOrdenPorCategoriaRow
            Dim rowRIOrdenPorCategoriaRow As RIOrdenPorCategoriaRow = CType(Me.NewRow,RIOrdenPorCategoriaRow)
            Dim columnValuesArray() As Object = New Object() {PRODUCTO, CATEGORIA, LINEA, MARCA, MEDIDA, SERVICIO, DESSUCURSAL}
            rowRIOrdenPorCategoriaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIOrdenPorCategoriaRow)
            Return rowRIOrdenPorCategoriaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIOrdenPorCategoriaDataTable = CType(MyBase.Clone,RIOrdenPorCategoriaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIOrdenPorCategoriaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCATEGORIA = MyBase.Columns("CATEGORIA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnMARCA = MyBase.Columns("MARCA")
            Me.columnMEDIDA = MyBase.Columns("MEDIDA")
            Me.columnSERVICIO = MyBase.Columns("SERVICIO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCATEGORIA = New Global.System.Data.DataColumn("CATEGORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnMARCA = New Global.System.Data.DataColumn("MARCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARCA)
            Me.columnMEDIDA = New Global.System.Data.DataColumn("MEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDIDA)
            Me.columnSERVICIO = New Global.System.Data.DataColumn("SERVICIO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICIO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 80
            Me.columnCATEGORIA.ReadOnly = true
            Me.columnCATEGORIA.MaxLength = 50
            Me.columnLINEA.ReadOnly = true
            Me.columnLINEA.MaxLength = 100
            Me.columnMARCA.ReadOnly = true
            Me.columnMARCA.MaxLength = 100
            Me.columnMEDIDA.MaxLength = 50
            Me.columnDESSUCURSAL.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIOrdenPorCategoriaRow() As RIOrdenPorCategoriaRow
            Return CType(Me.NewRow,RIOrdenPorCategoriaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIOrdenPorCategoriaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIOrdenPorCategoriaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIOrdenPorCategoriaRowChangedEvent) Is Nothing) Then
                RaiseEvent RIOrdenPorCategoriaRowChanged(Me, New RIOrdenPorCategoriaRowChangeEvent(CType(e.Row,RIOrdenPorCategoriaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIOrdenPorCategoriaRowChangingEvent) Is Nothing) Then
                RaiseEvent RIOrdenPorCategoriaRowChanging(Me, New RIOrdenPorCategoriaRowChangeEvent(CType(e.Row,RIOrdenPorCategoriaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIOrdenPorCategoriaRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIOrdenPorCategoriaRowDeleted(Me, New RIOrdenPorCategoriaRowChangeEvent(CType(e.Row,RIOrdenPorCategoriaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIOrdenPorCategoriaRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIOrdenPorCategoriaRowDeleting(Me, New RIOrdenPorCategoriaRowChangeEvent(CType(e.Row,RIOrdenPorCategoriaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIOrdenPorCategoriaRow(ByVal row As RIOrdenPorCategoriaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIOrdenPorCategoriaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RICostoPromedioDataTable
        Inherits Global.System.Data.TypedTableBase(Of RICostoPromedioRow)
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnTotalUni As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RICostoPromedio"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalUniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalUni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RICostoPromedioRow
            Get
                Return CType(Me.Rows(index),RICostoPromedioRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RICostoPromedioRowChanging As RICostoPromedioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RICostoPromedioRowChanged As RICostoPromedioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RICostoPromedioRowDeleting As RICostoPromedioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RICostoPromedioRowDeleted As RICostoPromedioRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRICostoPromedioRow(ByVal row As RICostoPromedioRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRICostoPromedioRow(ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal DESRUBRO As String, ByVal DESMEDIDA As String, ByVal CODIGO As String, ByVal DESSUCURSAL As String, ByVal PRODUCTO As String, ByVal Cantidad As Decimal, ByVal TotalUni As Decimal) As RICostoPromedioRow
            Dim rowRICostoPromedioRow As RICostoPromedioRow = CType(Me.NewRow,RICostoPromedioRow)
            Dim columnValuesArray() As Object = New Object() {DESFAMILIA, DESLINEA, DESRUBRO, DESMEDIDA, CODIGO, DESSUCURSAL, PRODUCTO, Cantidad, TotalUni}
            rowRICostoPromedioRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRICostoPromedioRow)
            Return rowRICostoPromedioRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RICostoPromedioDataTable = CType(MyBase.Clone,RICostoPromedioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RICostoPromedioDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnTotalUni = MyBase.Columns("TotalUni")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnTotalUni = New Global.System.Data.DataColumn("TotalUni", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalUni)
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 181
            Me.columnCantidad.ReadOnly = true
            Me.columnTotalUni.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRICostoPromedioRow() As RICostoPromedioRow
            Return CType(Me.NewRow,RICostoPromedioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RICostoPromedioRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RICostoPromedioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RICostoPromedioRowChangedEvent) Is Nothing) Then
                RaiseEvent RICostoPromedioRowChanged(Me, New RICostoPromedioRowChangeEvent(CType(e.Row,RICostoPromedioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RICostoPromedioRowChangingEvent) Is Nothing) Then
                RaiseEvent RICostoPromedioRowChanging(Me, New RICostoPromedioRowChangeEvent(CType(e.Row,RICostoPromedioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RICostoPromedioRowDeletedEvent) Is Nothing) Then
                RaiseEvent RICostoPromedioRowDeleted(Me, New RICostoPromedioRowChangeEvent(CType(e.Row,RICostoPromedioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RICostoPromedioRowDeletingEvent) Is Nothing) Then
                RaiseEvent RICostoPromedioRowDeleting(Me, New RICostoPromedioRowChangeEvent(CType(e.Row,RICostoPromedioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRICostoPromedioRow(ByVal row As RICostoPromedioRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RICostoPromedioDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIPrecioDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIPrecioRow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTA As Global.System.Data.DataColumn
        
        Private columnCODTIPOCLIENTE As Global.System.Data.DataColumn
        
        Private columnDESTIPOCLIENTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIPrecio"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESTIPOCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTIPOCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIPrecioRow
            Get
                Return CType(Me.Rows(index),RIPrecioRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIPrecioRowChanging As RIPrecioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIPrecioRowChanged As RIPrecioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIPrecioRowDeleting As RIPrecioRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIPrecioRowDeleted As RIPrecioRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIPrecioRow(ByVal row As RIPrecioRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIPrecioRow(ByVal CODIGO As String, ByVal PRECIOVENTA As Decimal, ByVal CODTIPOCLIENTE As Integer, ByVal DESTIPOCLIENTE As String) As RIPrecioRow
            Dim rowRIPrecioRow As RIPrecioRow = CType(Me.NewRow,RIPrecioRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRECIOVENTA, CODTIPOCLIENTE, DESTIPOCLIENTE}
            rowRIPrecioRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIPrecioRow)
            Return rowRIPrecioRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIPrecioDataTable = CType(MyBase.Clone,RIPrecioDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIPrecioDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRECIOVENTA = MyBase.Columns("PRECIOVENTA")
            Me.columnCODTIPOCLIENTE = MyBase.Columns("CODTIPOCLIENTE")
            Me.columnDESTIPOCLIENTE = MyBase.Columns("DESTIPOCLIENTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRECIOVENTA = New Global.System.Data.DataColumn("PRECIOVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTA)
            Me.columnCODTIPOCLIENTE = New Global.System.Data.DataColumn("CODTIPOCLIENTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOCLIENTE)
            Me.columnDESTIPOCLIENTE = New Global.System.Data.DataColumn("DESTIPOCLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTIPOCLIENTE)
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESTIPOCLIENTE.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIPrecioRow() As RIPrecioRow
            Return CType(Me.NewRow,RIPrecioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIPrecioRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIPrecioRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIPrecioRowChangedEvent) Is Nothing) Then
                RaiseEvent RIPrecioRowChanged(Me, New RIPrecioRowChangeEvent(CType(e.Row,RIPrecioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIPrecioRowChangingEvent) Is Nothing) Then
                RaiseEvent RIPrecioRowChanging(Me, New RIPrecioRowChangeEvent(CType(e.Row,RIPrecioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIPrecioRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIPrecioRowDeleted(Me, New RIPrecioRowChangeEvent(CType(e.Row,RIPrecioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIPrecioRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIPrecioRowDeleting(Me, New RIPrecioRowChangeEvent(CType(e.Row,RIPrecioRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIPrecioRow(ByVal row As RIPrecioRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIPrecioDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIStockDepositoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIStockDepositoRow)
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIStockDeposito"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIStockDepositoRow
            Get
                Return CType(Me.Rows(index),RIStockDepositoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockDepositoRowChanging As RIStockDepositoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockDepositoRowChanged As RIStockDepositoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockDepositoRowDeleting As RIStockDepositoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIStockDepositoRowDeleted As RIStockDepositoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIStockDepositoRow(ByVal row As RIStockDepositoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIStockDepositoRow(ByVal Expr1 As Decimal, ByVal CODIGO As String) As RIStockDepositoRow
            Dim rowRIStockDepositoRow As RIStockDepositoRow = CType(Me.NewRow,RIStockDepositoRow)
            Dim columnValuesArray() As Object = New Object() {Expr1, CODIGO}
            rowRIStockDepositoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIStockDepositoRow)
            Return rowRIStockDepositoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIStockDepositoDataTable = CType(MyBase.Clone,RIStockDepositoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIStockDepositoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnExpr1.ReadOnly = true
            Me.columnCODIGO.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIStockDepositoRow() As RIStockDepositoRow
            Return CType(Me.NewRow,RIStockDepositoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIStockDepositoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIStockDepositoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIStockDepositoRowChangedEvent) Is Nothing) Then
                RaiseEvent RIStockDepositoRowChanged(Me, New RIStockDepositoRowChangeEvent(CType(e.Row,RIStockDepositoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIStockDepositoRowChangingEvent) Is Nothing) Then
                RaiseEvent RIStockDepositoRowChanging(Me, New RIStockDepositoRowChangeEvent(CType(e.Row,RIStockDepositoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIStockDepositoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIStockDepositoRowDeleted(Me, New RIStockDepositoRowChangeEvent(CType(e.Row,RIStockDepositoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIStockDepositoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIStockDepositoRowDeleting(Me, New RIStockDepositoRowChangeEvent(CType(e.Row,RIStockDepositoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIStockDepositoRow(ByVal row As RIStockDepositoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIStockDepositoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RIListadoCostoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RIListadoCostoRow)
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCOSTO As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RIListadoCosto"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RIListadoCostoRow
            Get
                Return CType(Me.Rows(index),RIListadoCostoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIListadoCostoRowChanging As RIListadoCostoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIListadoCostoRowChanged As RIListadoCostoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIListadoCostoRowDeleting As RIListadoCostoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RIListadoCostoRowDeleted As RIListadoCostoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRIListadoCostoRow(ByVal row As RIListadoCostoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRIListadoCostoRow(ByVal CODIGO As String, ByVal DESPRODUCTO As String, ByVal COSTO As Decimal, ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal DESRUBRO As String) As RIListadoCostoRow
            Dim rowRIListadoCostoRow As RIListadoCostoRow = CType(Me.NewRow,RIListadoCostoRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODIGO, DESPRODUCTO, COSTO, DESFAMILIA, DESLINEA, DESRUBRO}
            rowRIListadoCostoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRIListadoCostoRow)
            Return rowRIListadoCostoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCODIGO(ByVal CODCODIGO As Integer) As RIListadoCostoRow
            Return CType(Me.Rows.Find(New Object() {CODCODIGO}),RIListadoCostoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RIListadoCostoDataTable = CType(MyBase.Clone,RIListadoCostoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RIListadoCostoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnCOSTO = MyBase.Columns("COSTO")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnCOSTO = New Global.System.Data.DataColumn("COSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTO)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCODIGO}, true))
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODCODIGO.Unique = true
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRIListadoCostoRow() As RIListadoCostoRow
            Return CType(Me.NewRow,RIListadoCostoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RIListadoCostoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RIListadoCostoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RIListadoCostoRowChangedEvent) Is Nothing) Then
                RaiseEvent RIListadoCostoRowChanged(Me, New RIListadoCostoRowChangeEvent(CType(e.Row,RIListadoCostoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RIListadoCostoRowChangingEvent) Is Nothing) Then
                RaiseEvent RIListadoCostoRowChanging(Me, New RIListadoCostoRowChangeEvent(CType(e.Row,RIListadoCostoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RIListadoCostoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RIListadoCostoRowDeleted(Me, New RIListadoCostoRowChangeEvent(CType(e.Row,RIListadoCostoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RIListadoCostoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RIListadoCostoRowDeleting(Me, New RIListadoCostoRowChangeEvent(CType(e.Row,RIListadoCostoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRIListadoCostoRow(ByVal row As RIListadoCostoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As dsRVFiltroInventario = New dsRVFiltroInventario()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RIListadoCostoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVFISTOCKAUNAFECHARow
        Inherits Global.System.Data.DataRow
        
        Private tableRVFISTOCKAUNAFECHA As RVFISTOCKAUNAFECHADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVFISTOCKAUNAFECHA = CType(Me.Table,RVFISTOCKAUNAFECHADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.CODCODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKFECHA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.STOCKFECHAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKFECHA' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.STOCKFECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.CODSUCURSALColumn),Integer)
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVFISTOCKAUNAFECHA.PRECIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIO' in table 'RVFISTOCKAUNAFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVFISTOCKAUNAFECHA.PRECIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRVFISTOCKAUNAFECHA.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableRVFISTOCKAUNAFECHA.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRVFISTOCKAUNAFECHA.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableRVFISTOCKAUNAFECHA.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKFECHANull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.STOCKFECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKFECHANull()
            Me(Me.tableRVFISTOCKAUNAFECHA.STOCKFECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRVFISTOCKAUNAFECHA.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIONull() As Boolean
            Return Me.IsNull(Me.tableRVFISTOCKAUNAFECHA.PRECIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIONull()
            Me(Me.tableRVFISTOCKAUNAFECHA.PRECIOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIMOVPRODUCTOXRANGOFECHARow
        Inherits Global.System.Data.DataRow
        
        Private tableRIMOVPRODUCTOXRANGOFECHA As RIMOVPRODUCTOXRANGOFECHADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIMOVPRODUCTOXRANGOFECHA = CType(Me.Table,RIMOVPRODUCTOXRANGOFECHADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.STOCKINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKINICIAL' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.STOCKINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.COMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPRA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVOLUCIONCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVOLUCIONCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVOLUCIONCLIENTE' in table 'RIMOVPRODUCTOXRANGOFECHA' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVOLUCIONCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIAENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIAENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIAENTRADA' in table 'RIMOVPRODUCTOXRANGOFECHA' i"& _ 
                            "s DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIAENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTEENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTEENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTEENTRADA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTEENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVCOMP' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.VENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENTA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENTRPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ENTRPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRPROD' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ENTRPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULVTA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.SALPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALPROD' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.SALPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVCOMP' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULCOMP' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIASALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIASALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIASALIDA' in table 'RIMOVPRODUCTOXRANGOFECHA' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIASALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTESALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTESALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTESALIDA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTESALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVVTA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODSUCURSALColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODRUBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODRUBRO' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RIMOVPRODUCTOXRANGOFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKINICIALNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.STOCKINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKINICIALNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.STOCKINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.COMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPRANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.COMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVOLUCIONCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVOLUCIONCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVOLUCIONCLIENTENull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVOLUCIONCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIAENTRADANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIAENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIAENTRADANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIAENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTEENTRADANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTEENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTEENTRADANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTEENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVCOMPNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENTANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENTANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.VENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENTRPRODNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.ENTRPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENTRPRODNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ENTRPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULVTANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULVTANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALPRODNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.SALPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALPRODNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.SALPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVCOMPNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULCOMPNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULCOMPNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIASALIDANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIASALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIASALIDANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.TRANSFERENCIASALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTESALIDANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTESALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTESALIDANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.AJUSTESALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVVTANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVVTANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.ANULDEVVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODRUBRONull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.CODRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRIMOVPRODUCTOXRANGOFECHA.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIMOVPRODUCTOPORFECHARow
        Inherits Global.System.Data.DataRow
        
        Private tableRIMOVPRODUCTOPORFECHA As RIMOVPRODUCTOPORFECHADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIMOVPRODUCTOPORFECHA = CType(Me.Table,RIMOVPRODUCTOPORFECHADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.STOCKINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKINICIAL' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.STOCKINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.COMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPRA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVOLUCIONCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.DEVOLUCIONCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVOLUCIONCLIENTE' in table 'RIMOVPRODUCTOPORFECHA' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.DEVOLUCIONCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIAENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIAENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIAENTRADA' in table 'RIMOVPRODUCTOPORFECHA' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIAENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTEENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTEENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTEENTRADA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTEENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVCOMP' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.VENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENTA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENTRPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.ENTRPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRPROD' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.ENTRPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULVTA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.SALPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALPROD' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.SALPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.DEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVCOMP' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.DEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULCOMP' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIASALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIASALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIASALIDA' in table 'RIMOVPRODUCTOPORFECHA' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIASALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTESALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTESALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTESALIDA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTESALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVVTA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.CODSUCURSALColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.CODRUBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODRUBRO' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.FECHAMTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAMTO' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.FECHAMTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIMOVPRODUCTOPORFECHA.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RIMOVPRODUCTOPORFECHA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIMOVPRODUCTOPORFECHA.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKINICIALNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.STOCKINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKINICIALNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.STOCKINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.COMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPRANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.COMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVOLUCIONCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.DEVOLUCIONCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVOLUCIONCLIENTENull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.DEVOLUCIONCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIAENTRADANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIAENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIAENTRADANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIAENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTEENTRADANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTEENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTEENTRADANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTEENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVCOMPNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENTANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENTANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.VENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENTRPRODNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.ENTRPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENTRPRODNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.ENTRPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULVTANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.ANULVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULVTANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALPRODNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.SALPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALPRODNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.SALPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.DEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVCOMPNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.DEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULCOMPNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.ANULCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULCOMPNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIASALIDANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIASALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIASALIDANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.TRANSFERENCIASALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTESALIDANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTESALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTESALIDANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.AJUSTESALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVVTANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVVTANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.ANULDEVVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.CODRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODRUBRONull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.CODRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAMTONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.FECHAMTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAMTONull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.FECHAMTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIMOVPRODUCTOPORFECHA.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRIMOVPRODUCTOPORFECHA.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIProductosRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIProductos As RIProductosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIProductos = CType(Me.Table,RIProductosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Descripcion() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIProductos.DescripcionColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Descripcion' in table 'RIProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIProductos.DescripcionColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIProductos.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RIProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIProductos.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIProductos.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RIProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIProductos.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Return CType(Me(Me.tableRIProductos.CODPRODUCTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRIProductos.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIProductos.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RIProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIProductos.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIProductos.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIProductos.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Return CType(Me(Me.tableRIProductos.CODCODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableRIProductos.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDescripcionNull() As Boolean
            Return Me.IsNull(Me.tableRIProductos.DescripcionColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDescripcionNull()
            Me(Me.tableRIProductos.DescripcionColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIProductos.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRIProductos.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIProductos.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRIProductos.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRIProductos.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRIProductos.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIProductos.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIProductos.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIStockActualRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIStockActual As RIStockActualDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIStockActual = CType(Me.Table,RIStockActualDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKACTUAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.STOCKACTUALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKACTUAL' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.STOCKACTUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockActual.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RIStockActual' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockActual.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Return CType(Me(Me.tableRIStockActual.CODCODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableRIStockActual.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableRIStockActual.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRIStockActual.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRIStockActual.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIStockActual.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKACTUALNull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.STOCKACTUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKACTUALNull()
            Me(Me.tableRIStockActual.STOCKACTUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRIStockActual.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRIStockActual.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIStockActual.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRIStockActual.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIStockMinimoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIStockMinimo As RIStockMinimoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIStockMinimo = CType(Me.Table,RIStockMinimoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.CATEGORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORIA' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.CATEGORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.LINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINEA' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARCA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.MARCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARCA' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMINIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.STOCKMINIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMINIMO' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.STOCKMINIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMAXIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.STOCKMAXIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMAXIMO' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.STOCKMAXIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.CODPRODUCTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPRODUCTO' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKACTUAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.STOCKACTUALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKACTUAL' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.STOCKACTUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.MEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDIDA' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO1() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIStockMinimo.CODPRODUCTO1Column),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPRODUCTO1' in table 'RIStockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockMinimo.CODPRODUCTO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRIStockMinimo.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORIANull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.CATEGORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORIANull()
            Me(Me.tableRIStockMinimo.CATEGORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.LINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINEANull()
            Me(Me.tableRIStockMinimo.LINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARCANull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.MARCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARCANull()
            Me(Me.tableRIStockMinimo.MARCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMINIMONull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.STOCKMINIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMINIMONull()
            Me(Me.tableRIStockMinimo.STOCKMINIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMAXIMONull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.STOCKMAXIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMAXIMONull()
            Me(Me.tableRIStockMinimo.STOCKMAXIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableRIStockMinimo.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.CODPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPRODUCTONull()
            Me(Me.tableRIStockMinimo.CODPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKACTUALNull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.STOCKACTUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKACTUALNull()
            Me(Me.tableRIStockMinimo.STOCKACTUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.MEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDIDANull()
            Me(Me.tableRIStockMinimo.MEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRIStockMinimo.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIStockMinimo.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPRODUCTO1Null() As Boolean
            Return Me.IsNull(Me.tableRIStockMinimo.CODPRODUCTO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPRODUCTO1Null()
            Me(Me.tableRIStockMinimo.CODPRODUCTO1Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIOrdenPorCategoriaRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIOrdenPorCategoria As RIOrdenPorCategoriaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIOrdenPorCategoria = CType(Me.Table,RIOrdenPorCategoriaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.CATEGORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORIA' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.CATEGORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.LINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINEA' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARCA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.MARCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARCA' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.MEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDIDA' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICIO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.SERVICIOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICIO' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIOrdenPorCategoria.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RIOrdenPorCategoria' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIOrdenPorCategoria.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRIOrdenPorCategoria.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORIANull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.CATEGORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORIANull()
            Me(Me.tableRIOrdenPorCategoria.CATEGORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.LINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINEANull()
            Me(Me.tableRIOrdenPorCategoria.LINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARCANull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.MARCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARCANull()
            Me(Me.tableRIOrdenPorCategoria.MARCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.MEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDIDANull()
            Me(Me.tableRIOrdenPorCategoria.MEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICIONull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.SERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICIONull()
            Me(Me.tableRIOrdenPorCategoria.SERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRIOrdenPorCategoria.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRIOrdenPorCategoria.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RICostoPromedioRow
        Inherits Global.System.Data.DataRow
        
        Private tableRICostoPromedio As RICostoPromedioDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRICostoPromedio = CType(Me.Table,RICostoPromedioDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cantidad() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.CantidadColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cantidad' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.CantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalUni() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRICostoPromedio.TotalUniColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalUni' in table 'RICostoPromedio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRICostoPromedio.TotalUniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRICostoPromedio.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRICostoPromedio.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRICostoPromedio.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableRICostoPromedio.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRICostoPromedio.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableRICostoPromedio.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRICostoPromedio.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.CantidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCantidadNull()
            Me(Me.tableRICostoPromedio.CantidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalUniNull() As Boolean
            Return Me.IsNull(Me.tableRICostoPromedio.TotalUniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalUniNull()
            Me(Me.tableRICostoPromedio.TotalUniColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIPrecioRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIPrecio As RIPrecioDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIPrecio = CType(Me.Table,RIPrecioDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIPrecio.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIPrecio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIPrecio.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIPrecio.PRECIOVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTA' in table 'RIPrecio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIPrecio.PRECIOVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOCLIENTE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRIPrecio.CODTIPOCLIENTEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOCLIENTE' in table 'RIPrecio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIPrecio.CODTIPOCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESTIPOCLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIPrecio.DESTIPOCLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESTIPOCLIENTE' in table 'RIPrecio' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIPrecio.DESTIPOCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIPrecio.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIPrecio.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTANull() As Boolean
            Return Me.IsNull(Me.tableRIPrecio.PRECIOVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTANull()
            Me(Me.tableRIPrecio.PRECIOVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRIPrecio.CODTIPOCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOCLIENTENull()
            Me(Me.tableRIPrecio.CODTIPOCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESTIPOCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRIPrecio.DESTIPOCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESTIPOCLIENTENull()
            Me(Me.tableRIPrecio.DESTIPOCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIStockDepositoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIStockDeposito As RIStockDepositoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIStockDeposito = CType(Me.Table,RIStockDepositoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIStockDeposito.Expr1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'RIStockDeposito' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockDeposito.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIStockDeposito.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIStockDeposito' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIStockDeposito.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableRIStockDeposito.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableRIStockDeposito.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIStockDeposito.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIStockDeposito.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RIListadoCostoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRIListadoCosto As RIListadoCostoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRIListadoCosto = CType(Me.Table,RIListadoCostoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Return CType(Me(Me.tableRIListadoCosto.CODCODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableRIListadoCosto.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIListadoCosto.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RIListadoCosto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIListadoCosto.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIListadoCosto.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'RIListadoCosto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIListadoCosto.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRIListadoCosto.COSTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTO' in table 'RIListadoCosto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIListadoCosto.COSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIListadoCosto.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RIListadoCosto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIListadoCosto.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIListadoCosto.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RIListadoCosto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIListadoCosto.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRIListadoCosto.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RIListadoCosto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRIListadoCosto.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRIListadoCosto.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRIListadoCosto.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRIListadoCosto.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableRIListadoCosto.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTONull() As Boolean
            Return Me.IsNull(Me.tableRIListadoCosto.COSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTONull()
            Me(Me.tableRIListadoCosto.COSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRIListadoCosto.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRIListadoCosto.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRIListadoCosto.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRIListadoCosto.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRIListadoCosto.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRIListadoCosto.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVFISTOCKAUNAFECHARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVFISTOCKAUNAFECHARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVFISTOCKAUNAFECHARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVFISTOCKAUNAFECHARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIMOVPRODUCTOXRANGOFECHARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIMOVPRODUCTOXRANGOFECHARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIMOVPRODUCTOXRANGOFECHARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIMOVPRODUCTOXRANGOFECHARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIMOVPRODUCTOPORFECHARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIMOVPRODUCTOPORFECHARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIMOVPRODUCTOPORFECHARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIMOVPRODUCTOPORFECHARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIProductosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIProductosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIProductosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIProductosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIStockActualRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIStockActualRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIStockActualRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIStockActualRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIStockMinimoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIStockMinimoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIStockMinimoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIStockMinimoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIOrdenPorCategoriaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIOrdenPorCategoriaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIOrdenPorCategoriaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIOrdenPorCategoriaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RICostoPromedioRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RICostoPromedioRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RICostoPromedioRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RICostoPromedioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIPrecioRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIPrecioRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIPrecioRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIPrecioRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIStockDepositoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIStockDepositoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIStockDepositoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIStockDepositoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RIListadoCostoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RIListadoCostoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RIListadoCostoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RIListadoCostoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace dsRVFiltroInventarioTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVFISTOCKAUNAFECHATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVFISTOCKAUNAFECHA"
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("STOCKFECHA", "STOCKFECHA")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("PRECIO", "PRECIO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT COD.CODCODIGO, COD.CODIGO, PRODUCTOS.DESPRODUCTO,"& _ 
                " FAMILIA.DESFAMILIA, UNIDADMEDIDA.DESMEDIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        STOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            STOCKHISTORICO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               WHERE        (CODCODIGO = COD.CODCODIGO) AND (COD"& _ 
                "DEPOSITO = SD.CODDEPOSITO)) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "              ((SELECT        SUM(CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "       FROM            MOVPRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 WHERE      "& _ 
                "  (CODCODIGO = COD.CODCODIGO) AND  "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "               (CODDEPOSITO = SD.CODDEPOSITO)), 0) AS STOCKFECHA, SUCURSAL.DESSU"& _ 
                "CURSAL, SUCURSAL.CODSUCURSAL, COD.PRECIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CODIGOS AS COD INNER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON COD.CODPRODUCTO = PRODUCTOS.CODPRODUC"& _ 
                "TO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO AS SD ON COD.CODCODIGO = S"& _ 
                "D.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUCURSAL ON SD.CODDEPOSITO = SU"& _ 
                "CURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON PRO"& _ 
                "DUCTOS.CODMEDIDA = UNIDADMEDIDA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PRODUCTOS.DES"& _ 
                "PRODUCTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT COD.CODCODIGO, COD.CODIGO, PRODUCTOS.DESPRODUCTO,"& _ 
                " FAMILIA.DESFAMILIA, UNIDADMEDIDA.DESMEDIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        STOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            STOCKHISTORICO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               WHERE        (MONTH(FECHA) = @MESANT) AND (YEAR(F"& _ 
                "ECHA) = @AÑO) AND (CODCODIGO = COD.CODCODIGO) AND (CODDEPOSITO = SD.CODDEPOSITO)"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             ((SELECT    "& _ 
                "    SUM(CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 FROM            MOV"& _ 
                "PRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 WHERE        (CODCODIGO = COD.CODCODI"& _ 
                "GO) AND (FECHAMOVIMIENTO >= @FECHAMOVINI) AND (FECHAMOVIMIENTO <= @FECHAMOVHASTA"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                          (CODDEPOSITO ="& _ 
                " SD.CODDEPOSITO)), 0) AS STOCKFECHA, SUCURSAL.DESSUCURSAL, SUCURSAL.CODSUCURSAL,"& _ 
                " COD.PRECIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CODIGOS AS COD INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " PRODUCTOS ON COD.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           STOCKDEPOSITO AS SD ON COD.CODCODIGO = SD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    SUCURSAL ON SD.CODDEPOSITO = SUCURSAL.CODSUCURSAL LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDI"& _ 
                "DA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODF"& _ 
                "AMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (COD.CODCODIGO = @CODCODIGO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"AND (SU"& _ 
                "CURSAL.CODSUCURSAL IN (SELECT item FROM dbo.fnPartir(@SUC, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PRODUCTOS.DESPRODUCTO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCODIGO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MESANT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVINI", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVHASTA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (100) PERCENT COD.CODCODIGO, COD.CODIGO, PRODUCTOS.DESPRODUCTO,"& _ 
                " FAMILIA.DESFAMILIA, UNIDADMEDIDA.DESMEDIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        STOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            STOCKHISTORICO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               WHERE        (MONTH(FECHA) = @MESANT) AND (YEAR(F"& _ 
                "ECHA) = @AÑO) AND (CODCODIGO = COD.CODCODIGO) AND (CODDEPOSITO = SD.CODDEPOSITO)"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             ((SELECT    "& _ 
                "    SUM(CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 FROM            MOV"& _ 
                "PRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 WHERE        (CODCODIGO = COD.CODCODI"& _ 
                "GO) AND (FECHAMOVIMIENTO >= @FECHAMOVINI) AND (FECHAMOVIMIENTO <= @FECHAMOVHASTA"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                          (CODDEPOSITO ="& _ 
                " SD.CODDEPOSITO)), 0) AS STOCKFECHA, SUCURSAL.DESSUCURSAL, SUCURSAL.CODSUCURSAL,"& _ 
                " COD.PRECIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CODIGOS AS COD INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " PRODUCTOS ON COD.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           STOCKDEPOSITO AS SD ON COD.CODCODIGO = SD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    SUCURSAL ON SD.CODDEPOSITO = SUCURSAL.CODSUCURSAL LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDI"& _ 
                "DA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODF"& _ 
                "AMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (FAMILIA.DESFAMILIA LIKE @DESFAMILIA) "& _ 
                "AND (SD.CODDEPOSITO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                         FROM            dbo.fnPartir(@SUC, ',') AS fnPartir_1))"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PRODUCTOS.DESPRODUCTO"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MESANT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVINI", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVHASTA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        TOP (100) PERCENT COD.CODCODIGO, COD.CODIGO, PRODUCTOS.DESPRODUCTO,"& _ 
                " FAMILIA.DESFAMILIA, UNIDADMEDIDA.DESMEDIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        STOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            STOCKHISTORICO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               WHERE        (MONTH(FECHA) = @MESANT) AND (YEAR(F"& _ 
                "ECHA) = @AÑO) AND (CODCODIGO = COD.CODCODIGO) AND (CODDEPOSITO = SD.CODDEPOSITO)"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             ((SELECT    "& _ 
                "    SUM(CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 FROM            MOV"& _ 
                "PRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 WHERE        (CODCODIGO = COD.CODCODI"& _ 
                "GO) AND (FECHAMOVIMIENTO >= @FECHAMOVINI) AND (FECHAMOVIMIENTO <= @FECHAMOVHASTA"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                          (CODDEPOSITO ="& _ 
                " SD.CODDEPOSITO)), 0) AS STOCKFECHA, SUCURSAL.DESSUCURSAL, SUCURSAL.CODSUCURSAL,"& _ 
                " COD.PRECIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CODIGOS AS COD INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " PRODUCTOS ON COD.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           STOCKDEPOSITO AS SD ON COD.CODCODIGO = SD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    SUCURSAL ON SD.CODDEPOSITO = SUCURSAL.CODSUCURSAL LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDI"& _ 
                "DA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODF"& _ 
                "AMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (COD.CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "       (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.f"& _ 
                "nPartir(@LISTAPROD, ',') AS fnPartir_1)) AND (SD.CODDEPOSITO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "              (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM          "& _ 
                "  dbo.fnPartir(@SUC, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PRODUCTOS.DESPRODUCTO"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MESANT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVINI", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVHASTA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LISTAPROD", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        TOP (100) PERCENT COD.CODCODIGO, COD.CODIGO, PRODUCTOS.DESPRODUCTO,"& _ 
                " FAMILIA.DESFAMILIA, UNIDADMEDIDA.DESMEDIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        STOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            STOCKHISTORICO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               WHERE        (MONTH(FECHA) = @MESANT) AND (YEAR(F"& _ 
                "ECHA) = @AÑO) AND (CODCODIGO = COD.CODCODIGO) AND (CODDEPOSITO = SD.CODDEPOSITO)"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             ((SELECT    "& _ 
                "    SUM(CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 FROM            MOV"& _ 
                "PRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 WHERE        (CODCODIGO = COD.CODCODI"& _ 
                "GO) AND (FECHAMOVIMIENTO >= @FECHAMOVINI) AND (FECHAMOVIMIENTO <= @FECHAMOVHASTA"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                          (CODDEPOSITO ="& _ 
                " SD.CODDEPOSITO)), 0) AS STOCKFECHA, SUCURSAL.DESSUCURSAL, SUCURSAL.CODSUCURSAL,"& _ 
                " COD.PRECIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CODIGOS AS COD INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " PRODUCTOS ON COD.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           STOCKDEPOSITO AS SD ON COD.CODCODIGO = SD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    SUCURSAL ON SD.CODDEPOSITO = SUCURSAL.CODSUCURSAL LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDI"& _ 
                "DA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODF"& _ 
                "AMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (COD.CODIGO BETWEEN @codini AND @codfi"& _ 
                "n) AND (SD.CODDEPOSITO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                            FROM            dbo.fnPartir(@SUC, ',') AS fnPartir_"& _ 
                "1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PRODUCTOS.DESPRODUCTO"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codini", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codfin", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MESANT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVINI", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVHASTA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        TOP (100) PERCENT COD.CODCODIGO, COD.CODIGO, PRODUCTOS.DESPRODUCTO,"& _ 
                " FAMILIA.DESFAMILIA, UNIDADMEDIDA.DESMEDIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        STOCK"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            STOCKHISTORICO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                               WHERE        (MONTH(FECHA) = @MESANT) AND (YEAR(F"& _ 
                "ECHA) = @AÑO) AND (CODCODIGO = COD.CODCODIGO) AND (CODDEPOSITO = SD.CODDEPOSITO)"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ISNULL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             ((SELECT    "& _ 
                "    SUM(CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 FROM            MOV"& _ 
                "PRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 WHERE        (CODCODIGO = COD.CODCODI"& _ 
                "GO) AND (FECHAMOVIMIENTO >= @FECHAMOVINI) AND (FECHAMOVIMIENTO <= @FECHAMOVHASTA"& _ 
                ") AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                          (CODDEPOSITO ="& _ 
                " SD.CODDEPOSITO)), 0) AS STOCKFECHA, SUCURSAL.DESSUCURSAL, SUCURSAL.CODSUCURSAL,"& _ 
                " COD.PRECIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CODIGOS AS COD INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " PRODUCTOS ON COD.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           STOCKDEPOSITO AS SD ON COD.CODCODIGO = SD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    SUCURSAL ON SD.CODDEPOSITO = SUCURSAL.CODSUCURSAL LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDI"& _ 
                "DA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODF"& _ 
                "AMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (SD.CODDEPOSITO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "           (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            d"& _ 
                "bo.fnPartir(@SUC, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY PRODUCTOS.DESPRODUCTO"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MESANT", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@AÑO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVINI", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVHASTA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable = New dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1Prod(ByVal dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable, ByVal CODCODIGO As Integer, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CODCODIGO,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1Prod(ByVal CODCODIGO As Integer, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(CODCODIGO,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable = New dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFamilia(ByVal dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable, ByVal DESFAMILIA As String, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DESFAMILIA,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFamilia(ByVal DESFAMILIA As String, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(DESFAMILIA,String)
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable = New dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByListaProd(ByVal dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal LISTAPROD As String, ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LISTAPROD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LISTAPROD")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(LISTAPROD,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByListaProd(ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal LISTAPROD As String, ByVal SUC As String) As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (LISTAPROD Is Nothing) Then
                Throw New Global.System.ArgumentNullException("LISTAPROD")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(LISTAPROD,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable = New dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByProdDH(ByVal dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable, ByVal codini As String, ByVal codfin As String, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (codini Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(codini,String)
            End If
            If (codfin Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(codfin,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByProdDH(ByVal codini As String, ByVal codfin As String, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (codini Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(codini,String)
            End If
            If (codfin Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(codfin,String)
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(5).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(6).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable = New dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTP(ByVal dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable, ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTP(ByVal MESANT As Decimal, ByVal AÑO As Decimal, ByVal FECHAMOVINI As Global.System.Nullable(Of Date), ByVal FECHAMOVHASTA As Global.System.Nullable(Of Date), ByVal SUC As String) As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(MESANT,Decimal)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(AÑO,Decimal)
            If (FECHAMOVINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(FECHAMOVINI.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(FECHAMOVHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable = New dsRVFiltroInventario.RVFISTOCKAUNAFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIMOVPRODUCTOXRANGOFECHATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIMOVPRODUCTOXRANGOFECHA"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("STOCKINICIAL", "STOCKINICIAL")
            tableMapping.ColumnMappings.Add("COMPRA", "COMPRA")
            tableMapping.ColumnMappings.Add("DEVOLUCIONCLIENTE", "DEVOLUCIONCLIENTE")
            tableMapping.ColumnMappings.Add("TRANSFERENCIAENTRADA", "TRANSFERENCIAENTRADA")
            tableMapping.ColumnMappings.Add("AJUSTEENTRADA", "AJUSTEENTRADA")
            tableMapping.ColumnMappings.Add("ANULDEVCOMP", "ANULDEVCOMP")
            tableMapping.ColumnMappings.Add("VENTA", "VENTA")
            tableMapping.ColumnMappings.Add("ENTRPROD", "ENTRPROD")
            tableMapping.ColumnMappings.Add("ANULVTA", "ANULVTA")
            tableMapping.ColumnMappings.Add("SALPROD", "SALPROD")
            tableMapping.ColumnMappings.Add("DEVCOMP", "DEVCOMP")
            tableMapping.ColumnMappings.Add("ANULCOMP", "ANULCOMP")
            tableMapping.ColumnMappings.Add("TRANSFERENCIASALIDA", "TRANSFERENCIASALIDA")
            tableMapping.ColumnMappings.Add("AJUSTESALIDA", "AJUSTESALIDA")
            tableMapping.ColumnMappings.Add("ANULDEVVTA", "ANULDEVVTA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(9) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL IN (SELECT        item FROM            "& _ 
                "dbo.fnPartir(@SUC, ',') AS fnPartir_1)) AND (CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(1"& _ 
                "1)), 103) <= CONVERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                     GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINE"& _ 
                "A, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                      ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subconsulta2"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, DESSU"& _ 
                "CURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINI"& _ 
                "CIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A"& _ 
                "S DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUS"& _ 
                "TEENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANUL"& _ 
                "DEVCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA"& _ 
                ", SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, S"& _ 
                "UM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(A"& _ 
                "JUSTESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANUL"& _ 
                "DEVVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DES"& _ 
                "RUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(ST"& _ 
                "OCKINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 AS DEVOLUCIONCLIENTE, SUM(TRANS"& _ 
                "FERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(ANULDEVCOMP) AS ANULDEV"& _ 
                "COMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, S"& _ 
                "UM(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SU"& _ 
                "M(DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TR"& _ 
                "ANSFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMIL"& _ 
                "IA, DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP "& _ 
                "(100) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(C"& _ 
                "D.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD,"& _ 
                " M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                                                        dbo.FAMILIA.DESFAMILIA, "& _ 
                "dbo.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 10"& _ 
                "3) AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "                CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND"& _ 
                " M.MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "                THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                      "& _ 
                "                        THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTI"& _ 
                "DAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                "                           THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE"& _ 
                " WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                                               M.MODULO = 13) TH"& _ 
                "EN M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                                                                              M."& _ 
                "MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CAN"& _ 
                "TIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "                                   CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 A"& _ 
                "ND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                                                  CASE WHEN (M.C"& _ 
                "ANTIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN ("& _ 
                "M.CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CAS"& _ 
                "E WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                     "& _ 
                "                                         THEN M.CANTIDAD * - 1 ELSE 0 END AS VEN"& _ 
                "TA, CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       M.MODULO "& _ 
                "= 13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                 "& _ 
                "             UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                                                   M.MODULO = 28"& _ 
                ")) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 A"& _ 
                "ND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                         "& _ 
                "                     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS "& _ 
                "SALPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      THEN M.CANTIDAD * - 1 ELSE"& _ 
                " 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                                               THEN M.CANTIDAD *"& _ 
                " - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                                                          THEN M"& _ 
                ".CANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, "& _ 
                "dbo.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM    "& _ 
                "        dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       dbo.CODIGOS AS CD ON M.CODCODIGO = CD.COD"& _ 
                "CODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                         "& _ 
                "     dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                         dbo.LIN"& _ 
                "EA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                                                     dbo.SUCURSAL ON M.CODDEPOSI"& _ 
                "TO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 "& _ 
                "                                             dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO"& _ 
                ".CODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                 WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), "& _ 
                "103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                        CAST(FECHAMTO AS VARCHAR(11)), 103) <= C"& _ 
                "ONVERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "       GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, "& _ 
                "CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "                             DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "        ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY COD"& _ 
                "IGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUB"& _ 
                "RO, DESRUBRO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL IN (SELECT        item FROM            "& _ 
                "dbo.fnPartir(@SUC, ',') AS fnPartir_1)) AND (CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(1"& _ 
                "1)), 103) <= CONVERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD) And DE"& _ 
                "SFAMILIA like @DESFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, "& _ 
                "CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS"& _ 
                " VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    DESSU"& _ 
                "CURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUC"& _ 
                "URSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAM"& _ 
                "ILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINI"& _ 
                "CIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A"& _ 
                "S DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUS"& _ 
                "TEENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANUL"& _ 
                "DEVCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA"& _ 
                ", SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, S"& _ 
                "UM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(A"& _ 
                "JUSTESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANUL"& _ 
                "DEVVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DES"& _ 
                "RUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(ST"& _ 
                "OCKINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 AS DEVOLUCIONCLIENTE, SUM(TRANS"& _ 
                "FERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(ANULDEVCOMP) AS ANULDEV"& _ 
                "COMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, S"& _ 
                "UM(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SU"& _ 
                "M(DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TR"& _ 
                "ANSFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMIL"& _ 
                "IA, DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP "& _ 
                "(100) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(C"& _ 
                "D.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD,"& _ 
                " M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                                                        dbo.FAMILIA.DESFAMILIA, "& _ 
                "dbo.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 10"& _ 
                "3) AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "                CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND"& _ 
                " M.MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "                THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                      "& _ 
                "                        THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTI"& _ 
                "DAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                "                           THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE"& _ 
                " WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                                               M.MODULO = 13) TH"& _ 
                "EN M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                                                                              M."& _ 
                "MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CAN"& _ 
                "TIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "                                   CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 A"& _ 
                "ND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                                                  CASE WHEN (M.C"& _ 
                "ANTIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN ("& _ 
                "M.CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CAS"& _ 
                "E WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                     "& _ 
                "                                         THEN M.CANTIDAD * - 1 ELSE 0 END AS VEN"& _ 
                "TA, CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       M.MODULO "& _ 
                "= 13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                 "& _ 
                "             UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                                                   M.MODULO = 28"& _ 
                ")) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 A"& _ 
                "ND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                         "& _ 
                "                     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS "& _ 
                "SALPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      THEN M.CANTIDAD * - 1 ELSE"& _ 
                " 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                                               THEN M.CANTIDAD *"& _ 
                " - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                                                          THEN M"& _ 
                ".CANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, "& _ 
                "dbo.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM    "& _ 
                "        dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       dbo.CODIGOS AS CD ON M.CODCODIGO = CD.COD"& _ 
                "CODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                         "& _ 
                "     dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                         dbo.LIN"& _ 
                "EA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                                                     dbo.SUCURSAL ON M.CODDEPOSI"& _ 
                "TO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 "& _ 
                "                                             dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO"& _ 
                ".CODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                 WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), "& _ 
                "103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                        CAST(FECHAMTO AS VARCHAR(11)), 103) <= C"& _ 
                "ONVERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD) And DESFAMILIA like "& _ 
                "@DESFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, D"& _ 
                "ESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)),"& _ 
                " 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    DESSUCURSAL, CODRUB"& _ 
                "RO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUCURSAL, FECHAMT"& _ 
                "O) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA"& _ 
                ", CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINI"& _ 
                "CIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A"& _ 
                "S DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUS"& _ 
                "TEENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANUL"& _ 
                "DEVCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA"& _ 
                ", SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, S"& _ 
                "UM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(A"& _ 
                "JUSTESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANUL"& _ 
                "DEVVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DES"& _ 
                "RUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(ST"& _ 
                "OCKINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 AS DEVOLUCIONCLIENTE, SUM(TRANS"& _ 
                "FERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(ANULDEVCOMP) AS ANULDEV"& _ 
                "COMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, S"& _ 
                "UM(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SU"& _ 
                "M(DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TR"& _ 
                "ANSFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMIL"& _ 
                "IA, DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP "& _ 
                "(100) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(C"& _ 
                "D.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD,"& _ 
                " M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                                                        dbo.FAMILIA.DESFAMILIA, "& _ 
                "dbo.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 10"& _ 
                "3) AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "                CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND"& _ 
                " M.MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                              "& _ 
                "                THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                      "& _ 
                "                        THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTI"& _ 
                "DAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                "                           THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE"& _ 
                " WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                                               M.MODULO = 13) TH"& _ 
                "EN M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                                                                              M."& _ 
                "MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CAN"& _ 
                "TIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "                                   CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 A"& _ 
                "ND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                                                  CASE WHEN (M.C"& _ 
                "ANTIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN ("& _ 
                "M.CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CAS"& _ 
                "E WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                     "& _ 
                "                                         THEN M.CANTIDAD * - 1 ELSE 0 END AS VEN"& _ 
                "TA, CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       M.MODULO "& _ 
                "= 13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                 "& _ 
                "             UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                                                   M.MODULO = 28"& _ 
                ")) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 A"& _ 
                "ND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                         "& _ 
                "                     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS "& _ 
                "SALPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      THEN M.CANTIDAD * - 1 ELSE"& _ 
                " 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                                               THEN M.CANTIDAD *"& _ 
                " - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                                                          THEN M"& _ 
                ".CANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, "& _ 
                "dbo.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM    "& _ 
                "        dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       dbo.CODIGOS AS CD ON M.CODCODIGO = CD.COD"& _ 
                "CODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                         "& _ 
                "     dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                         dbo.LIN"& _ 
                "EA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                                                     dbo.SUCURSAL ON M.CODDEPOSI"& _ 
                "TO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                 "& _ 
                "                                             dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO"& _ 
                ".CODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                 WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), "& _ 
                "103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "                                        CAST(FECHAMTO AS VARCHAR(11)), 103) <= C"& _ 
                "ONVERT(DATETIME, @FechaFin, 103)) AND (DESFAMILIA like @DesFamilia)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, COD"& _ 
                "CODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                     DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROU"& _ 
                "P BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL"& _ 
                ", CODRUBRO, DESRUBRO"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DesFamilia", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL IN (SELECT        item FROM            "& _ 
                "dbo.fnPartir(@SUC, ',') AS fnPartir_1)) AND (CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(1"& _ 
                "1)), 103) <= CONVERT(DATETIME, @FechaFin, 103)) AND (DESFAMILIA like @DESFAMILIA"& _ 
                ")"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA,"& _ 
                " DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   DESSUCURSAL, CODRUBRO, DESRUB"& _ 
                "RO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subc"& _ 
                "onsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIG"& _ 
                "O, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                      CAST(FECHAMTO AS VARCHAR(11)), 103) <= CON"& _ 
                "VERT(DATETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                "& _ 
                "                        (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                       FROM            dbo.fnPartir(@Plan, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, D"& _ 
                "ESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 DESSUCURSAL, CODRUBRO, DESRUBRO"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subcon"& _ 
                "sulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO,"& _ 
                " DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL IN (SELECT        item FROM            "& _ 
                "dbo.fnPartir(@SUC, ',') AS fnPartir_1)) AND (CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(1"& _ 
                "1)), 103) <= CONVERT(DATETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "                                        (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "                                       FROM            dbo.fnPartir(@Plan, ',') "& _ 
                "AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, CODSUCURSA"& _ 
                "L, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(1"& _ 
                "1)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    DESSUCURSAL, CO"& _ 
                "DRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUCURSAL, FEC"& _ 
                "HAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESL"& _ 
                "INEA, CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                      CAST(FECHAMTO AS VARCHAR(11)), 103) <= CON"& _ 
                "VERT(DATETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PROD"& _ 
                "UCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHA"& _ 
                "MTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                " DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, "& _ 
                "CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, "& _ 
                "DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL IN (SELECT        item FROM            "& _ 
                "dbo.fnPartir(@SUC, ',') AS fnPartir_1)) AND (CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(1"& _ 
                "1)), 103) <= CONVERT(DATETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP"& _ 
                " BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATE"& _ 
                "TIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                 DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDE"& _ 
                "R BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCT"& _ 
                "O, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"& _ 
                ""
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill1PSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData1PSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1PSinSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1PSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFPS(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal DESFAMILIA As String, ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DESFAMILIA,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFPS(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal DESFAMILIA As String, ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DESFAMILIA,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFPSinS(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal DESFAMILIA As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DESFAMILIA,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFPSinS(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal DESFAMILIA As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(DESFAMILIA,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFSinPyS(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal DesFamilia As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (DesFamilia Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DesFamilia,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFSinPyS(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal DesFamilia As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (DesFamilia Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DesFamilia,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByFSsinP(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal DESFAMILIA As String, ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DESFAMILIA,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByFSsinP(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal DESFAMILIA As String, ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(DESFAMILIA,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSinSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal SUC As String, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SUC,String)
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal SUC As String, ByVal Plan As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SUC,String)
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSinSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOXRANGOFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIMOVPRODUCTOPORFECHATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIMOVPRODUCTOPORFECHA"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("STOCKINICIAL", "STOCKINICIAL")
            tableMapping.ColumnMappings.Add("COMPRA", "COMPRA")
            tableMapping.ColumnMappings.Add("DEVOLUCIONCLIENTE", "DEVOLUCIONCLIENTE")
            tableMapping.ColumnMappings.Add("TRANSFERENCIAENTRADA", "TRANSFERENCIAENTRADA")
            tableMapping.ColumnMappings.Add("AJUSTEENTRADA", "AJUSTEENTRADA")
            tableMapping.ColumnMappings.Add("ANULDEVCOMP", "ANULDEVCOMP")
            tableMapping.ColumnMappings.Add("VENTA", "VENTA")
            tableMapping.ColumnMappings.Add("ENTRPROD", "ENTRPROD")
            tableMapping.ColumnMappings.Add("ANULVTA", "ANULVTA")
            tableMapping.ColumnMappings.Add("SALPROD", "SALPROD")
            tableMapping.ColumnMappings.Add("DEVCOMP", "DEVCOMP")
            tableMapping.ColumnMappings.Add("ANULCOMP", "ANULCOMP")
            tableMapping.ColumnMappings.Add("TRANSFERENCIASALIDA", "TRANSFERENCIASALIDA")
            tableMapping.ColumnMappings.Add("AJUSTESALIDA", "AJUSTESALIDA")
            tableMapping.ColumnMappings.Add("ANULDEVVTA", "ANULDEVVTA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("FECHAMTO", "FECHAMTO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CODSUCURSAL IN (SELECT        i"& _ 
                "tem FROM            dbo.fnPartir(@SUC, ',') AS fnPartir_1)) AND (CONVERT(DATETIM"& _ 
                "E, CAST(FECHAMTO AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3) <= CONVERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY COD"& _ 
                "IGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, C"& _ 
                "AST(FECHAMTO AS VARCHAR(11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODR"& _ 
                "UBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT   "& _ 
                "     item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',"& _ 
                "') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA"& _ 
                ", CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), DESSUCURSAL,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODIGO, CODSUCURSAL,"& _ 
                " FECHAMTO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT   "& _ 
                "     item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',"& _ 
                "') AS fnPartir_1)) AND (CODSUCURSAL IN (SELECT        item FROM            dbo.f"& _ 
                "nPartir(@SUC, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESF"& _ 
                "AMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODI"& _ 
                "GO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, C"& _ 
                "ODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DE"& _ 
                "SLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), DESSUC"& _ 
                "URSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODIGO, CODSUC"& _ 
                "URSAL, FECHAMTO"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINI"& _ 
                "CIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         A"& _ 
                "S DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUS"& _ 
                "TEENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANUL"& _ 
                "DEVCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA"& _ 
                ", SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, S"& _ 
                "UM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(A"& _ 
                "JUSTESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANUL"& _ 
                "DEVVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME"& _ 
                ", CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DE"& _ 
                "SSUCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO,"& _ 
                " RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + L"& _ 
                "TRIM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                " '')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCU"& _ 
                "RSAL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "                        CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11))"& _ 
                ", 103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                     = 'STOCK INICIAL' AND M.MODULO = 13) THEN M"& _ 
                ".CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3"& _ 
                ") "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "                                 THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE"& _ 
                ", CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           M.MODULO = 13) THEN M.CANTIDAD ELSE 0"& _ 
                " END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "                                M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CO"& _ 
                "NCEPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           CASE WHEN (M.CANTIDAD > 0 AND M.MODUL"& _ 
                "O = 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                                CASE WHEN (M.CANTIDAD > 0 AND M."& _ 
                "MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND"& _ 
                " M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CAN"& _ 
                "TIDAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THE"& _ 
                "N M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "              CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND"& _ 
                " M.MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CAN"& _ 
                "TIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPP"& _ 
                "ER(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                            "& _ 
                "        (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M"& _ 
                ".MODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CA"& _ 
                "NTIDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                      "& _ 
                "              THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD"& _ 
                " < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THE"& _ 
                "N M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODUL"& _ 
                "O = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * "& _ 
                "- 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DE"& _ 
                "SRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CO"& _ 
                "DCODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 dbo.FAMILIA ON P.CODFAMILIA = d"& _ 
                "bo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "           dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                             dbo.SUCURSAL ON M.CODDEPOSITO = dbo"& _ 
                ".SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA ="& _ 
                " dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAM"& _ 
                "TO AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATE"& _ 
                "TIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT("& _ 
                "DATETIME, @FechaFin, 103)) AND (CODSUCURSAL IN (SELECT        item FROM         "& _ 
                "   dbo.fnPartir(@SUC, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURS"& _ 
                "AL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR("& _ 
                "11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY"& _ 
                " CODCODIGO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SUC", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillBySuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataBySuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer), ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSinSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String, ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String, ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySinSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSinSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date) As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSuc(ByVal dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal SUC As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SUC,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal SUC As String) As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (SUC Is Nothing) Then
                Throw New Global.System.ArgumentNullException("SUC")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(SUC,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable = New dsRVFiltroInventario.RIMOVPRODUCTOPORFECHADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIProductosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIProductos"
            tableMapping.ColumnMappings.Add("Descripcion", "Descripcion")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT PRODUCTOS.DESPRODUCTO + ' ' + CODIGOS.DESCODIGO1 "& _ 
                "AS Descripcion, RUBRO.DESRUBRO, LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODU"& _ 
                "CTOS.CODPRODUCTO, FAMILIA.DESFAMILIA, CODIGOS.CODIGO, CODIGOS.CODCODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM   "& _ 
                "         PRODUCTOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON PRODUCTOS.COD"& _ 
                "PRODUCTO = CODIGOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO O"& _ 
                "N PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY Descripcio"& _ 
                "n"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RIProductosDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RIProductosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RIProductosDataTable = New dsRVFiltroInventario.RIProductosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIStockActualTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIStockActual"
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("STOCKACTUAL", "STOCKACTUAL")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        UNIDADMEDIDA.DESMEDIDA, FAMILIA.DESFAMILIA, LINEA.DESLINEA, CODIGOS"& _ 
                ".CODIGO, STOCKDEPOSITO.STOCKACTUAL, SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     RUBRO.DESRUBRO, RTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(CODIGOS.DESCODIG"& _ 
                "O1) AS PRODUCTO, CODIGOS.CODCODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       CODIGOS ON STOCKDEPOSITO.CODCODIGO = CODIGOS.CODCODIGO LE"& _ 
                "FT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON PRODUCTOS.CODPRODUCTO = COD"& _ 
                "IGOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUCURSAL ON STOCKDEPO"& _ 
                "SITO.CODDEPOSITO = SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  FAMILIA ON FAMILIA.CODFAMILIA = PRODUCTOS.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA AND FAMILIA"& _ 
                ".CODFAMILIA = PRODUCTOS.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNI"& _ 
                "DADMEDIDA ON UNIDADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillTP(ByVal dataTable As dsRVFiltroInventario.RIStockActualDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataTP() As dsRVFiltroInventario.RIStockActualDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RIStockActualDataTable = New dsRVFiltroInventario.RIStockActualDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIStockMinimoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIStockMinimo"
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CATEGORIA", "CATEGORIA")
            tableMapping.ColumnMappings.Add("LINEA", "LINEA")
            tableMapping.ColumnMappings.Add("MARCA", "MARCA")
            tableMapping.ColumnMappings.Add("STOCKMINIMO", "STOCKMINIMO")
            tableMapping.ColumnMappings.Add("STOCKMAXIMO", "STOCKMAXIMO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("STOCKACTUAL", "STOCKACTUAL")
            tableMapping.ColumnMappings.Add("MEDIDA", "MEDIDA")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, FAMILIA.DESFAMILIA AS CAT"& _ 
                "EGORIA, LINEA.DESLINEA AS LINEA, RUBRO.DESRUBRO AS MARCA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     ISNULL(PRODUCTOS.STOCKMINIMO, 0) AS STOCKMINIMO, ISNULL(PRODUCTOS.STOCKMAXI"& _ 
                "MO, 0) AS STOCKMAXIMO, CODIGOS.CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.COD"& _ 
                "PRODUCTO, ISNULL(STOCKDEPOSITO.STOCKACTUAL, 0) AS STOCKACTUAL, UNIDADMEDIDA.DESM"& _ 
                "EDIDA AS MEDIDA, SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.CODIGO"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUCURSAL ON"& _ 
                " SUCURSAL.CODSUCURSAL = STOCKDEPOSITO.CODDEPOSITO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            PRODUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODU"& _ 
                "CTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         L"& _ 
                "INEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODFA"& _ 
                "MILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RU"& _ 
                "BRO.CODRUBRO AND LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOSI"& _ 
                "TO.CODCODIGO = CODIGOS.CODCODIGO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO.ST"& _ 
                "OCKACTUAL <= PRODUCTOS.STOCKMINIMO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNI"& _ 
                "DADMEDIDA ON UNIDADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCT"& _ 
                "OS.ESTADO = 0) AND (PRODUCTOS.SERVICIO = 0) AND (SUCURSAL.CODSUCURSAL IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                       (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM "& _ 
                "           dbo.fnPartir(@suc, ',') AS fnPartir_1))"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suc", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, FAMILIA.DESFAMILIA AS CAT"& _ 
                "EGORIA, LINEA.DESLINEA AS LINEA, RUBRO.DESRUBRO AS MARCA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     ISNULL(PRODUCTOS.STOCKMINIMO, 0) AS STOCKMINIMO, ISNULL(PRODUCTOS.STOCKMAXI"& _ 
                "MO, 0) AS STOCKMAXIMO, CODIGOS.CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.COD"& _ 
                "PRODUCTO, ISNULL(STOCKDEPOSITO.STOCKACTUAL, 0) AS STOCKACTUAL, UNIDADMEDIDA.DESM"& _ 
                "EDIDA AS MEDIDA, SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.CODIGO"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUCURSAL ON"& _ 
                " SUCURSAL.CODSUCURSAL = STOCKDEPOSITO.CODDEPOSITO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            PRODUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODU"& _ 
                "CTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         L"& _ 
                "INEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODFA"& _ 
                "MILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RU"& _ 
                "BRO.CODRUBRO AND LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOSI"& _ 
                "TO.CODCODIGO = CODIGOS.CODCODIGO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO.ST"& _ 
                "OCKACTUAL <= PRODUCTOS.STOCKMINIMO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNI"& _ 
                "DADMEDIDA ON UNIDADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCT"& _ 
                "OS.ESTADO = 0) AND (PRODUCTOS.SERVICIO = 0)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillBySuc(ByVal dataTable As dsRVFiltroInventario.RIStockMinimoDataTable, ByVal suc As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (suc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("suc")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataBySuc(ByVal suc As String) As dsRVFiltroInventario.RIStockMinimoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (suc Is Nothing) Then
                Throw New Global.System.ArgumentNullException("suc")
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIStockMinimoDataTable = New dsRVFiltroInventario.RIStockMinimoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RIStockMinimoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RIStockMinimoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As dsRVFiltroInventario.RIStockMinimoDataTable = New dsRVFiltroInventario.RIStockMinimoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIOrdenPorCategoriaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIOrdenPorCategoria"
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CATEGORIA", "CATEGORIA")
            tableMapping.ColumnMappings.Add("LINEA", "LINEA")
            tableMapping.ColumnMappings.Add("MARCA", "MARCA")
            tableMapping.ColumnMappings.Add("MEDIDA", "MEDIDA")
            tableMapping.ColumnMappings.Add("SERVICIO", "SERVICIO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, ISNULL(FAMILIA.DESFAMILIA"& _ 
                ", 'Sin Familia') AS CATEGORIA, ISNULL(LINEA.DESLINEA, 'Sin Linea') AS LINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        ISNULL(RUBRO.DESRUBRO, 'Sin Marca') AS MARCA, UNIDADMEDI"& _ 
                "DA.DESMEDIDA AS MEDIDA, PRODUCTOS.SERVICIO, SUCURSAL.DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  SUCURSAL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON SUCURSAL.CODSUC"& _ 
                "URSAL = STOCKDEPOSITO.CODDEPOSITO RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRO"& _ 
                "DUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODFAMILIA"& _ 
                " = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCT"& _ 
                "OS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODFAMILIA LEFT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO AN"& _ 
                "D LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODI"& _ 
                "GOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOSITO.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO  LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON UNI"& _ 
                "DADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) A"& _ 
                "ND (PRODUCTOS.SERVICIO <> 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO"& _ 
                ".DESRUBRO, PRODUCTOS.DESPRODUCTO, CODIGOS.DESCODIGO1, CODIGOS.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     UNIDADMEDIDA.DESMEDIDA, PRODUCTOS.SERVICIO, SUCURSAL.DESSUC"& _ 
                "URSAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, ISNULL(FAMILIA.DESFAMILIA"& _ 
                ", 'Sin Familia') AS CATEGORIA, ISNULL(LINEA.DESLINEA, 'Sin Linea') AS LINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        ISNULL(RUBRO.DESRUBRO, 'Sin Marca') AS MARCA, UNIDADMEDI"& _ 
                "DA.DESMEDIDA AS MEDIDA, PRODUCTOS.SERVICIO, SUCURSAL.DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  SUCURSAL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON SUCURSAL.CODSUC"& _ 
                "URSAL = STOCKDEPOSITO.CODDEPOSITO RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRO"& _ 
                "DUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODFAMILIA"& _ 
                " = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCT"& _ 
                "OS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODFAMILIA LEFT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO AN"& _ 
                "D LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODI"& _ 
                "GOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOSITO.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON UNID"& _ 
                "ADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AN"& _ 
                "D (PRODUCTOS.SERVICIO <> 1) AND SUCURSAL.DESSUCURSAL = @suc"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY FAMILIA.DE"& _ 
                "SFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, PRODUCTOS.DESPRODUCTO, CODIGOS.DESCODI"& _ 
                "GO1, CODIGOS.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA.DESMEDIDA, PROD"& _ 
                "UCTOS.SERVICIO, SUCURSAL.DESSUCURSAL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suc", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RIOrdenPorCategoriaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RIOrdenPorCategoriaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RIOrdenPorCategoriaDataTable = New dsRVFiltroInventario.RIOrdenPorCategoriaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySucursal(ByVal dataTable As dsRVFiltroInventario.RIOrdenPorCategoriaDataTable, ByVal suc As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (suc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySucursal(ByVal suc As String) As dsRVFiltroInventario.RIOrdenPorCategoriaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (suc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc,String)
            End If
            Dim dataTable As dsRVFiltroInventario.RIOrdenPorCategoriaDataTable = New dsRVFiltroInventario.RIOrdenPorCategoriaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RICostoPromedioTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RICostoPromedio"
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad")
            tableMapping.ColumnMappings.Add("TotalUni", "TotalUni")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DESFAMILIA, DESLINEA, DESRUBRO, DESMEDIDA, CODIGO, DESSUCURSAL, PRO"& _ 
                "DUCTO, CASE WHEN SUM(Cantidad) IS NULL THEN 0 ELSE SUM(Cantidad) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            END AS Cantidad, CASE WHEN SUM(TotalUni) IS NULL THEN 0 ELSE SUM(Tot"& _ 
                "alUni) END AS TotalUni"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        dbo.FAMILIA.DESFAMILIA, d"& _ 
                "bo.LINEA.DESLINEA, dbo.RUBRO.DESRUBRO, dbo.UNIDADMEDIDA.DESMEDIDA, dbo.CODIGOS.C"& _ 
                "ODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.SUCURSAL.DESSUC"& _ 
                "URSAL, RTRIM(dbo.PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(dbo.CODIGOS.DESCODIGO1) AS"& _ 
                " PRODUCTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.COMPRASDETA"& _ 
                "LLE.CANTIDADCOMPRA AS Cantidad, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      dbo.COMPRASDETALLE.CANTIDADCOMPRA * dbo.COMPRASDETALLE.COSTOUNITARIO AS To"& _ 
                "talUni"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.PRODUCTOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                                dbo.CODIGOS ON dbo.PRODUCTOS.COD"& _ 
                "PRODUCTO = dbo.CODIGOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "                        dbo.SUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                          dbo.COMPRAS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                           dbo.COMPRASDETALLE ON dbo.COMPRAS.CODCOMPRA = dbo.COM"& _ 
                "PRASDETALLE.CODCOMPRA ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    d"& _ 
                "bo.SUCURSAL.CODSUCURSAL = dbo.COMPRAS.CODSUCURSAL ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                           dbo.CODIGOS.CODCODIGO = dbo.COMPRASDETALLE.CODCODIGO "& _ 
                "LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.UNIDADM"& _ 
                "EDIDA ON dbo.PRODUCTOS.CODMEDIDA = dbo.UNIDADMEDIDA.CODMEDIDA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   dbo.RUBRO ON dbo.PRODUCTOS.CO"& _ 
                "DRUBRO = dbo.RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                 dbo.LINEA ON dbo.PRODUCTOS.CODLINEA = dbo.LINEA.CODLINEA LEFT O"& _ 
                "UTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.FAMILIA ON db"& _ 
                "o.PRODUCTOS.CODFAMILIA = dbo.FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          WHERE"& _ 
                "        (dbo.PRODUCTOS.SERVICIO <> 1) AND (dbo.PRODUCTOS.ESTADO = 0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                GROUP BY dbo.CODIGOS.CODIGO, RTRIM(dbo.PRODUCTOS.DESPRODUCTO) + "& _ 
                "' ' + LTRIM(dbo.CODIGOS.DESCODIGO1), dbo.SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "                                     dbo.RUBRO.DESRUBRO, dbo.FAMILIA.DESFAMILIA,"& _ 
                " dbo.LINEA.DESLINEA, dbo.UNIDADMEDIDA.DESMEDIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             "& _ 
                "                       dbo.COMPRASDETALLE.CANTIDADCOMPRA, dbo.COMPRASDETALLE.COS"& _ 
                "TOUNITARIO) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, DESSUCURSAL, DESRUBRO, DE"& _ 
                "SFAMILIA, DESLINEA, DESMEDIDA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RICostoPromedioDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RICostoPromedioDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RICostoPromedioDataTable = New dsRVFiltroInventario.RICostoPromedioDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIPrecioTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIPrecio"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRECIOVENTA", "PRECIOVENTA")
            tableMapping.ColumnMappings.Add("CODTIPOCLIENTE", "CODTIPOCLIENTE")
            tableMapping.ColumnMappings.Add("DESTIPOCLIENTE", "DESTIPOCLIENTE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGOS.CODIGO, PRECIO.PRECIOVENTA, PRECIO.CODTIPOCLIENTE, TIPOCLIE"& _ 
                "NTE.DESTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            PRODUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        PRECIO ON PRECIO.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO INNER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TIPOCLIENTE ON PRECIO.CODTIPOCLIENTE = TIPOCLIENTE"& _ 
                ".CODTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODIGO, PRECIO.PRECIOVENTA, PRECIO.CODTIPOCLIE"& _ 
                "NTE, TIPOCLIENTE.DESTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODIGOS.CODIGO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RIPrecioDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RIPrecioDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RIPrecioDataTable = New dsRVFiltroInventario.RIPrecioDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIStockDepositoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIStockDeposito"
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(STOCKDEPOSITO.STOCKACTUAL) AS Expr1, CODIGOS.CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      "& _ 
                "      STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON STOCKDEPOSIT"& _ 
                "O.CODCODIGO = CODIGOS.CODCODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODIGO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RIStockDepositoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RIStockDepositoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RIStockDepositoDataTable = New dsRVFiltroInventario.RIStockDepositoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RIListadoCostoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RIListadoCosto"
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("COSTO", "COSTO")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT dbo.CODIGOS.CODCODIGO, dbo.CODIGOS.CODIGO, dbo.PR"& _ 
                "ODUCTOS.DESPRODUCTO, dbo.CODIGOS.PRECIO AS COSTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo"& _ 
                ".FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, dbo.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo"& _ 
                ".CODIGOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS ON dbo.CODIGOS.CODPR"& _ 
                "ODUCTO = dbo.PRODUCTOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo"& _ 
                ".RUBRO ON dbo.PRODUCTOS.CODRUBRO = dbo.RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                dbo.LINEA ON dbo.PRODUCTOS.CODLINEA = dbo.LINEA.CODLINEA LEFT OU"& _ 
                "TER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.FAMILIA ON dbo.PRODUCTOS.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As dsRVFiltroInventario.RIListadoCostoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As dsRVFiltroInventario.RIListadoCostoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As dsRVFiltroInventario.RIListadoCostoDataTable = New dsRVFiltroInventario.RIListadoCostoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As dsRVFiltroInventario, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As dsRVFiltroInventario, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As dsRVFiltroInventario, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As dsRVFiltroInventario) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
