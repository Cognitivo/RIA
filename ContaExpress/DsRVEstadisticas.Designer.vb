'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DsRVEstadisticas"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DsRVEstadisticas
    Inherits Global.System.Data.DataSet
    
    Private tableRVRankingClientes As RVRankingClientesDataTable
    
    Private tableRVRankingProductos As RVRankingProductosDataTable
    
    Private tableRVVentasCompleto As RVVentasCompletoDataTable
    
    Private tableRVVentasPorProductoComparativoMesAnho As RVVentasPorProductoComparativoMesAnhoDataTable
    
    Private tableRVVentasPorClienteComparativoMesAnho As RVVentasPorClienteComparativoMesAnhoDataTable
    
    Private tableRVVentasPrecioVentaVsCostoPorProducto As RVVentasPrecioVentaVsCostoPorProductoDataTable
    
    Private tableRVINCIDENCIANCSOBREVTA As RVINCIDENCIANCSOBREVTADataTable
    
    Private tableRVUtilidadVentas As RVUtilidadVentasDataTable
    
    Private tableNumVenta As NumVentaDataTable
    
    Private tableVentasDetXCliente As VentasDetXClienteDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("RVRankingClientes")) Is Nothing) Then
                MyBase.Tables.Add(New RVRankingClientesDataTable(ds.Tables("RVRankingClientes")))
            End If
            If (Not (ds.Tables("RVRankingProductos")) Is Nothing) Then
                MyBase.Tables.Add(New RVRankingProductosDataTable(ds.Tables("RVRankingProductos")))
            End If
            If (Not (ds.Tables("RVVentasCompleto")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasCompletoDataTable(ds.Tables("RVVentasCompleto")))
            End If
            If (Not (ds.Tables("RVVentasPorProductoComparativoMesAnho")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasPorProductoComparativoMesAnhoDataTable(ds.Tables("RVVentasPorProductoComparativoMesAnho")))
            End If
            If (Not (ds.Tables("RVVentasPorClienteComparativoMesAnho")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasPorClienteComparativoMesAnhoDataTable(ds.Tables("RVVentasPorClienteComparativoMesAnho")))
            End If
            If (Not (ds.Tables("RVVentasPrecioVentaVsCostoPorProducto")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasPrecioVentaVsCostoPorProductoDataTable(ds.Tables("RVVentasPrecioVentaVsCostoPorProducto")))
            End If
            If (Not (ds.Tables("RVINCIDENCIANCSOBREVTA")) Is Nothing) Then
                MyBase.Tables.Add(New RVINCIDENCIANCSOBREVTADataTable(ds.Tables("RVINCIDENCIANCSOBREVTA")))
            End If
            If (Not (ds.Tables("RVUtilidadVentas")) Is Nothing) Then
                MyBase.Tables.Add(New RVUtilidadVentasDataTable(ds.Tables("RVUtilidadVentas")))
            End If
            If (Not (ds.Tables("NumVenta")) Is Nothing) Then
                MyBase.Tables.Add(New NumVentaDataTable(ds.Tables("NumVenta")))
            End If
            If (Not (ds.Tables("VentasDetXCliente")) Is Nothing) Then
                MyBase.Tables.Add(New VentasDetXClienteDataTable(ds.Tables("VentasDetXCliente")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVRankingClientes() As RVRankingClientesDataTable
        Get
            Return Me.tableRVRankingClientes
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVRankingProductos() As RVRankingProductosDataTable
        Get
            Return Me.tableRVRankingProductos
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVVentasCompleto() As RVVentasCompletoDataTable
        Get
            Return Me.tableRVVentasCompleto
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVVentasPorProductoComparativoMesAnho() As RVVentasPorProductoComparativoMesAnhoDataTable
        Get
            Return Me.tableRVVentasPorProductoComparativoMesAnho
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVVentasPorClienteComparativoMesAnho() As RVVentasPorClienteComparativoMesAnhoDataTable
        Get
            Return Me.tableRVVentasPorClienteComparativoMesAnho
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVVentasPrecioVentaVsCostoPorProducto() As RVVentasPrecioVentaVsCostoPorProductoDataTable
        Get
            Return Me.tableRVVentasPrecioVentaVsCostoPorProducto
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVINCIDENCIANCSOBREVTA() As RVINCIDENCIANCSOBREVTADataTable
        Get
            Return Me.tableRVINCIDENCIANCSOBREVTA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RVUtilidadVentas() As RVUtilidadVentasDataTable
        Get
            Return Me.tableRVUtilidadVentas
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property NumVenta() As NumVentaDataTable
        Get
            Return Me.tableNumVenta
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property VentasDetXCliente() As VentasDetXClienteDataTable
        Get
            Return Me.tableVentasDetXCliente
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DsRVEstadisticas = CType(MyBase.Clone,DsRVEstadisticas)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("RVRankingClientes")) Is Nothing) Then
                MyBase.Tables.Add(New RVRankingClientesDataTable(ds.Tables("RVRankingClientes")))
            End If
            If (Not (ds.Tables("RVRankingProductos")) Is Nothing) Then
                MyBase.Tables.Add(New RVRankingProductosDataTable(ds.Tables("RVRankingProductos")))
            End If
            If (Not (ds.Tables("RVVentasCompleto")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasCompletoDataTable(ds.Tables("RVVentasCompleto")))
            End If
            If (Not (ds.Tables("RVVentasPorProductoComparativoMesAnho")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasPorProductoComparativoMesAnhoDataTable(ds.Tables("RVVentasPorProductoComparativoMesAnho")))
            End If
            If (Not (ds.Tables("RVVentasPorClienteComparativoMesAnho")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasPorClienteComparativoMesAnhoDataTable(ds.Tables("RVVentasPorClienteComparativoMesAnho")))
            End If
            If (Not (ds.Tables("RVVentasPrecioVentaVsCostoPorProducto")) Is Nothing) Then
                MyBase.Tables.Add(New RVVentasPrecioVentaVsCostoPorProductoDataTable(ds.Tables("RVVentasPrecioVentaVsCostoPorProducto")))
            End If
            If (Not (ds.Tables("RVINCIDENCIANCSOBREVTA")) Is Nothing) Then
                MyBase.Tables.Add(New RVINCIDENCIANCSOBREVTADataTable(ds.Tables("RVINCIDENCIANCSOBREVTA")))
            End If
            If (Not (ds.Tables("RVUtilidadVentas")) Is Nothing) Then
                MyBase.Tables.Add(New RVUtilidadVentasDataTable(ds.Tables("RVUtilidadVentas")))
            End If
            If (Not (ds.Tables("NumVenta")) Is Nothing) Then
                MyBase.Tables.Add(New NumVentaDataTable(ds.Tables("NumVenta")))
            End If
            If (Not (ds.Tables("VentasDetXCliente")) Is Nothing) Then
                MyBase.Tables.Add(New VentasDetXClienteDataTable(ds.Tables("VentasDetXCliente")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableRVRankingClientes = CType(MyBase.Tables("RVRankingClientes"),RVRankingClientesDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVRankingClientes) Is Nothing) Then
                Me.tableRVRankingClientes.InitVars
            End If
        End If
        Me.tableRVRankingProductos = CType(MyBase.Tables("RVRankingProductos"),RVRankingProductosDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVRankingProductos) Is Nothing) Then
                Me.tableRVRankingProductos.InitVars
            End If
        End If
        Me.tableRVVentasCompleto = CType(MyBase.Tables("RVVentasCompleto"),RVVentasCompletoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVVentasCompleto) Is Nothing) Then
                Me.tableRVVentasCompleto.InitVars
            End If
        End If
        Me.tableRVVentasPorProductoComparativoMesAnho = CType(MyBase.Tables("RVVentasPorProductoComparativoMesAnho"),RVVentasPorProductoComparativoMesAnhoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVVentasPorProductoComparativoMesAnho) Is Nothing) Then
                Me.tableRVVentasPorProductoComparativoMesAnho.InitVars
            End If
        End If
        Me.tableRVVentasPorClienteComparativoMesAnho = CType(MyBase.Tables("RVVentasPorClienteComparativoMesAnho"),RVVentasPorClienteComparativoMesAnhoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVVentasPorClienteComparativoMesAnho) Is Nothing) Then
                Me.tableRVVentasPorClienteComparativoMesAnho.InitVars
            End If
        End If
        Me.tableRVVentasPrecioVentaVsCostoPorProducto = CType(MyBase.Tables("RVVentasPrecioVentaVsCostoPorProducto"),RVVentasPrecioVentaVsCostoPorProductoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVVentasPrecioVentaVsCostoPorProducto) Is Nothing) Then
                Me.tableRVVentasPrecioVentaVsCostoPorProducto.InitVars
            End If
        End If
        Me.tableRVINCIDENCIANCSOBREVTA = CType(MyBase.Tables("RVINCIDENCIANCSOBREVTA"),RVINCIDENCIANCSOBREVTADataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVINCIDENCIANCSOBREVTA) Is Nothing) Then
                Me.tableRVINCIDENCIANCSOBREVTA.InitVars
            End If
        End If
        Me.tableRVUtilidadVentas = CType(MyBase.Tables("RVUtilidadVentas"),RVUtilidadVentasDataTable)
        If (initTable = true) Then
            If (Not (Me.tableRVUtilidadVentas) Is Nothing) Then
                Me.tableRVUtilidadVentas.InitVars
            End If
        End If
        Me.tableNumVenta = CType(MyBase.Tables("NumVenta"),NumVentaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableNumVenta) Is Nothing) Then
                Me.tableNumVenta.InitVars
            End If
        End If
        Me.tableVentasDetXCliente = CType(MyBase.Tables("VentasDetXCliente"),VentasDetXClienteDataTable)
        If (initTable = true) Then
            If (Not (Me.tableVentasDetXCliente) Is Nothing) Then
                Me.tableVentasDetXCliente.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DsRVEstadisticas"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DsRVEstadisticas.xsd"
        Me.EnforceConstraints = false
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableRVRankingClientes = New RVRankingClientesDataTable()
        MyBase.Tables.Add(Me.tableRVRankingClientes)
        Me.tableRVRankingProductos = New RVRankingProductosDataTable()
        MyBase.Tables.Add(Me.tableRVRankingProductos)
        Me.tableRVVentasCompleto = New RVVentasCompletoDataTable()
        MyBase.Tables.Add(Me.tableRVVentasCompleto)
        Me.tableRVVentasPorProductoComparativoMesAnho = New RVVentasPorProductoComparativoMesAnhoDataTable()
        MyBase.Tables.Add(Me.tableRVVentasPorProductoComparativoMesAnho)
        Me.tableRVVentasPorClienteComparativoMesAnho = New RVVentasPorClienteComparativoMesAnhoDataTable()
        MyBase.Tables.Add(Me.tableRVVentasPorClienteComparativoMesAnho)
        Me.tableRVVentasPrecioVentaVsCostoPorProducto = New RVVentasPrecioVentaVsCostoPorProductoDataTable()
        MyBase.Tables.Add(Me.tableRVVentasPrecioVentaVsCostoPorProducto)
        Me.tableRVINCIDENCIANCSOBREVTA = New RVINCIDENCIANCSOBREVTADataTable()
        MyBase.Tables.Add(Me.tableRVINCIDENCIANCSOBREVTA)
        Me.tableRVUtilidadVentas = New RVUtilidadVentasDataTable()
        MyBase.Tables.Add(Me.tableRVUtilidadVentas)
        Me.tableNumVenta = New NumVentaDataTable()
        MyBase.Tables.Add(Me.tableNumVenta)
        Me.tableVentasDetXCliente = New VentasDetXClienteDataTable()
        MyBase.Tables.Add(Me.tableVentasDetXCliente)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVRankingClientes() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVRankingProductos() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVVentasCompleto() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVVentasPorProductoComparativoMesAnho() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVVentasPorClienteComparativoMesAnho() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVVentasPrecioVentaVsCostoPorProducto() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVINCIDENCIANCSOBREVTA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRVUtilidadVentas() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeNumVenta() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeVentasDetXCliente() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVRankingClientesRowChangeEventHandler(ByVal sender As Object, ByVal e As RVRankingClientesRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVRankingProductosRowChangeEventHandler(ByVal sender As Object, ByVal e As RVRankingProductosRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVVentasCompletoRowChangeEventHandler(ByVal sender As Object, ByVal e As RVVentasCompletoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVVentasPorProductoComparativoMesAnhoRowChangeEventHandler(ByVal sender As Object, ByVal e As RVVentasPorProductoComparativoMesAnhoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVVentasPorClienteComparativoMesAnhoRowChangeEventHandler(ByVal sender As Object, ByVal e As RVVentasPorClienteComparativoMesAnhoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVVentasPrecioVentaVsCostoPorProductoRowChangeEventHandler(ByVal sender As Object, ByVal e As RVVentasPrecioVentaVsCostoPorProductoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVINCIDENCIANCSOBREVTARowChangeEventHandler(ByVal sender As Object, ByVal e As RVINCIDENCIANCSOBREVTARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RVUtilidadVentasRowChangeEventHandler(ByVal sender As Object, ByVal e As RVUtilidadVentasRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub NumVentaRowChangeEventHandler(ByVal sender As Object, ByVal e As NumVentaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub VentasDetXClienteRowChangeEventHandler(ByVal sender As Object, ByVal e As VentasDetXClienteRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVRankingClientesDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVRankingClientesRow)
        
        Private columnNUMCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnTOTALCANTIDAD As Global.System.Data.DataColumn
        
        Private columnTOTALCOSTO As Global.System.Data.DataColumn
        
        Private columnNUMNOMCLIENTE As Global.System.Data.DataColumn
        
        Private columnTOTALCONIVA As Global.System.Data.DataColumn
        
        Private columnIVA10 As Global.System.Data.DataColumn
        
        Private columnIVA5 As Global.System.Data.DataColumn
        
        Private columnNOMBREFANTASIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVRankingClientes"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCOSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMNOMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMNOMCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCONIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREFANTASIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREFANTASIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVRankingClientesRow
            Get
                Return CType(Me.Rows(index),RVRankingClientesRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingClientesRowChanging As RVRankingClientesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingClientesRowChanged As RVRankingClientesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingClientesRowDeleting As RVRankingClientesRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingClientesRowDeleted As RVRankingClientesRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVRankingClientesRow(ByVal row As RVRankingClientesRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVRankingClientesRow(ByVal NUMCLIENTE As Decimal, ByVal NOMBRE As String, ByVal CODCLIENTE As Decimal, ByVal TOTALCANTIDAD As Decimal, ByVal TOTALCOSTO As Decimal, ByVal NUMNOMCLIENTE As String, ByVal TOTALCONIVA As Decimal, ByVal IVA10 As Decimal, ByVal IVA5 As Decimal, ByVal NOMBREFANTASIA As String) As RVRankingClientesRow
            Dim rowRVRankingClientesRow As RVRankingClientesRow = CType(Me.NewRow,RVRankingClientesRow)
            Dim columnValuesArray() As Object = New Object() {NUMCLIENTE, NOMBRE, CODCLIENTE, TOTALCANTIDAD, TOTALCOSTO, NUMNOMCLIENTE, TOTALCONIVA, IVA10, IVA5, NOMBREFANTASIA}
            rowRVRankingClientesRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVRankingClientesRow)
            Return rowRVRankingClientesRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCLIENTE(ByVal CODCLIENTE As Decimal) As RVRankingClientesRow
            Return CType(Me.Rows.Find(New Object() {CODCLIENTE}),RVRankingClientesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVRankingClientesDataTable = CType(MyBase.Clone,RVRankingClientesDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVRankingClientesDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnTOTALCANTIDAD = MyBase.Columns("TOTALCANTIDAD")
            Me.columnTOTALCOSTO = MyBase.Columns("TOTALCOSTO")
            Me.columnNUMNOMCLIENTE = MyBase.Columns("NUMNOMCLIENTE")
            Me.columnTOTALCONIVA = MyBase.Columns("TOTALCONIVA")
            Me.columnIVA10 = MyBase.Columns("IVA10")
            Me.columnIVA5 = MyBase.Columns("IVA5")
            Me.columnNOMBREFANTASIA = MyBase.Columns("NOMBREFANTASIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnTOTALCANTIDAD = New Global.System.Data.DataColumn("TOTALCANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCANTIDAD)
            Me.columnTOTALCOSTO = New Global.System.Data.DataColumn("TOTALCOSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCOSTO)
            Me.columnNUMNOMCLIENTE = New Global.System.Data.DataColumn("NUMNOMCLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMNOMCLIENTE)
            Me.columnTOTALCONIVA = New Global.System.Data.DataColumn("TOTALCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCONIVA)
            Me.columnIVA10 = New Global.System.Data.DataColumn("IVA10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA10)
            Me.columnIVA5 = New Global.System.Data.DataColumn("IVA5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA5)
            Me.columnNOMBREFANTASIA = New Global.System.Data.DataColumn("NOMBREFANTASIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREFANTASIA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCLIENTE}, true))
            Me.columnNOMBRE.MaxLength = 50
            Me.columnCODCLIENTE.AllowDBNull = false
            Me.columnCODCLIENTE.Unique = true
            Me.columnTOTALCANTIDAD.ReadOnly = true
            Me.columnTOTALCOSTO.ReadOnly = true
            Me.columnNUMNOMCLIENTE.ReadOnly = true
            Me.columnNUMNOMCLIENTE.MaxLength = 83
            Me.columnTOTALCONIVA.ReadOnly = true
            Me.columnIVA10.ReadOnly = true
            Me.columnIVA5.ReadOnly = true
            Me.columnNOMBREFANTASIA.MaxLength = 80
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVRankingClientesRow() As RVRankingClientesRow
            Return CType(Me.NewRow,RVRankingClientesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVRankingClientesRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVRankingClientesRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVRankingClientesRowChangedEvent) Is Nothing) Then
                RaiseEvent RVRankingClientesRowChanged(Me, New RVRankingClientesRowChangeEvent(CType(e.Row,RVRankingClientesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVRankingClientesRowChangingEvent) Is Nothing) Then
                RaiseEvent RVRankingClientesRowChanging(Me, New RVRankingClientesRowChangeEvent(CType(e.Row,RVRankingClientesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVRankingClientesRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVRankingClientesRowDeleted(Me, New RVRankingClientesRowChangeEvent(CType(e.Row,RVRankingClientesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVRankingClientesRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVRankingClientesRowDeleting(Me, New RVRankingClientesRowChangeEvent(CType(e.Row,RVRankingClientesRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVRankingClientesRow(ByVal row As RVRankingClientesRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVRankingClientesDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVRankingProductosDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVRankingProductosRow)
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnTOTALCOSTO As Global.System.Data.DataColumn
        
        Private columnDESCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnTOTALCONIVA As Global.System.Data.DataColumn
        
        Private columnIVA10 As Global.System.Data.DataColumn
        
        Private columnIVA5 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVRankingProductos"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCOSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCONIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVRankingProductosRow
            Get
                Return CType(Me.Rows(index),RVRankingProductosRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingProductosRowChanging As RVRankingProductosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingProductosRowChanged As RVRankingProductosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingProductosRowDeleting As RVRankingProductosRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVRankingProductosRowDeleted As RVRankingProductosRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVRankingProductosRow(ByVal row As RVRankingProductosRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVRankingProductosRow(ByVal CANTIDAD As Decimal, ByVal CODIGO As String, ByVal PRODUCTO As String, ByVal TOTALCOSTO As Decimal, ByVal DESCODPRODUCTO As String, ByVal TOTALCONIVA As Decimal, ByVal IVA10 As Decimal, ByVal IVA5 As Decimal) As RVRankingProductosRow
            Dim rowRVRankingProductosRow As RVRankingProductosRow = CType(Me.NewRow,RVRankingProductosRow)
            Dim columnValuesArray() As Object = New Object() {CANTIDAD, CODIGO, PRODUCTO, TOTALCOSTO, DESCODPRODUCTO, TOTALCONIVA, IVA10, IVA5}
            rowRVRankingProductosRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVRankingProductosRow)
            Return rowRVRankingProductosRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVRankingProductosDataTable = CType(MyBase.Clone,RVRankingProductosDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVRankingProductosDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnTOTALCOSTO = MyBase.Columns("TOTALCOSTO")
            Me.columnDESCODPRODUCTO = MyBase.Columns("DESCODPRODUCTO")
            Me.columnTOTALCONIVA = MyBase.Columns("TOTALCONIVA")
            Me.columnIVA10 = MyBase.Columns("IVA10")
            Me.columnIVA5 = MyBase.Columns("IVA5")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnTOTALCOSTO = New Global.System.Data.DataColumn("TOTALCOSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCOSTO)
            Me.columnDESCODPRODUCTO = New Global.System.Data.DataColumn("DESCODPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCODPRODUCTO)
            Me.columnTOTALCONIVA = New Global.System.Data.DataColumn("TOTALCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCONIVA)
            Me.columnIVA10 = New Global.System.Data.DataColumn("IVA10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA10)
            Me.columnIVA5 = New Global.System.Data.DataColumn("IVA5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA5)
            Me.columnCANTIDAD.ReadOnly = true
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 282
            Me.columnTOTALCOSTO.ReadOnly = true
            Me.columnDESCODPRODUCTO.ReadOnly = true
            Me.columnDESCODPRODUCTO.MaxLength = 233
            Me.columnTOTALCONIVA.ReadOnly = true
            Me.columnIVA10.ReadOnly = true
            Me.columnIVA5.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVRankingProductosRow() As RVRankingProductosRow
            Return CType(Me.NewRow,RVRankingProductosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVRankingProductosRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVRankingProductosRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVRankingProductosRowChangedEvent) Is Nothing) Then
                RaiseEvent RVRankingProductosRowChanged(Me, New RVRankingProductosRowChangeEvent(CType(e.Row,RVRankingProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVRankingProductosRowChangingEvent) Is Nothing) Then
                RaiseEvent RVRankingProductosRowChanging(Me, New RVRankingProductosRowChangeEvent(CType(e.Row,RVRankingProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVRankingProductosRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVRankingProductosRowDeleted(Me, New RVRankingProductosRowChangeEvent(CType(e.Row,RVRankingProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVRankingProductosRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVRankingProductosRowDeleting(Me, New RVRankingProductosRowChangeEvent(CType(e.Row,RVRankingProductosRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVRankingProductosRow(ByVal row As RVRankingProductosRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVRankingProductosDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVVentasCompletoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVVentasCompletoRow)
        
        Private columnNUMCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnCANTIDADVENTA As Global.System.Data.DataColumn
        
        Private columnCOSTOFIFO As Global.System.Data.DataColumn
        
        Private columnTOTALUTILIDAD As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnFECHAVENTA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnDESCATEGORIACLIENTE As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTABRUTO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTALISTA As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVVentasCompleto"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDADVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOFIFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOFIFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALUTILIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALUTILIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCATEGORIACLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCATEGORIACLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTABRUTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTABRUTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTALISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTALISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVVentasCompletoRow
            Get
                Return CType(Me.Rows(index),RVVentasCompletoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasCompletoRowChanging As RVVentasCompletoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasCompletoRowChanged As RVVentasCompletoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasCompletoRowDeleting As RVVentasCompletoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasCompletoRowDeleted As RVVentasCompletoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVVentasCompletoRow(ByVal row As RVVentasCompletoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVVentasCompletoRow(ByVal NUMCLIENTE As Decimal, ByVal NOMBRE As String, ByVal CANTIDADVENTA As Decimal, ByVal COSTOFIFO As Decimal, ByVal TOTALUTILIDAD As Decimal, ByVal CODIGO As String, ByVal PRODUCTO As String, ByVal FECHAVENTA As Date, ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal DESRUBRO As String, ByVal DESCATEGORIACLIENTE As String, ByVal PRECIOVENTABRUTO As Decimal, ByVal PRECIOVENTALISTA As Decimal, ByVal CODCLIENTE As Integer) As RVVentasCompletoRow
            Dim rowRVVentasCompletoRow As RVVentasCompletoRow = CType(Me.NewRow,RVVentasCompletoRow)
            Dim columnValuesArray() As Object = New Object() {NUMCLIENTE, NOMBRE, CANTIDADVENTA, COSTOFIFO, TOTALUTILIDAD, CODIGO, PRODUCTO, FECHAVENTA, DESFAMILIA, DESLINEA, DESRUBRO, DESCATEGORIACLIENTE, Nothing, PRECIOVENTABRUTO, PRECIOVENTALISTA, CODCLIENTE}
            rowRVVentasCompletoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVVentasCompletoRow)
            Return rowRVVentasCompletoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVVentasCompletoDataTable = CType(MyBase.Clone,RVVentasCompletoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVVentasCompletoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnCANTIDADVENTA = MyBase.Columns("CANTIDADVENTA")
            Me.columnCOSTOFIFO = MyBase.Columns("COSTOFIFO")
            Me.columnTOTALUTILIDAD = MyBase.Columns("TOTALUTILIDAD")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnFECHAVENTA = MyBase.Columns("FECHAVENTA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnDESCATEGORIACLIENTE = MyBase.Columns("DESCATEGORIACLIENTE")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnPRECIOVENTABRUTO = MyBase.Columns("PRECIOVENTABRUTO")
            Me.columnPRECIOVENTALISTA = MyBase.Columns("PRECIOVENTALISTA")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnCANTIDADVENTA = New Global.System.Data.DataColumn("CANTIDADVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDADVENTA)
            Me.columnCOSTOFIFO = New Global.System.Data.DataColumn("COSTOFIFO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOFIFO)
            Me.columnTOTALUTILIDAD = New Global.System.Data.DataColumn("TOTALUTILIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALUTILIDAD)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnFECHAVENTA = New Global.System.Data.DataColumn("FECHAVENTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAVENTA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnDESCATEGORIACLIENTE = New Global.System.Data.DataColumn("DESCATEGORIACLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCATEGORIACLIENTE)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnPRECIOVENTABRUTO = New Global.System.Data.DataColumn("PRECIOVENTABRUTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTABRUTO)
            Me.columnPRECIOVENTALISTA = New Global.System.Data.DataColumn("PRECIOVENTALISTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTALISTA)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCODIGO}, false))
            Me.columnNOMBRE.MaxLength = 50
            Me.columnCOSTOFIFO.ReadOnly = true
            Me.columnTOTALUTILIDAD.ReadOnly = true
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 282
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnDESCATEGORIACLIENTE.MaxLength = 40
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODCODIGO.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVVentasCompletoRow() As RVVentasCompletoRow
            Return CType(Me.NewRow,RVVentasCompletoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVVentasCompletoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVVentasCompletoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVVentasCompletoRowChangedEvent) Is Nothing) Then
                RaiseEvent RVVentasCompletoRowChanged(Me, New RVVentasCompletoRowChangeEvent(CType(e.Row,RVVentasCompletoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVVentasCompletoRowChangingEvent) Is Nothing) Then
                RaiseEvent RVVentasCompletoRowChanging(Me, New RVVentasCompletoRowChangeEvent(CType(e.Row,RVVentasCompletoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVVentasCompletoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVVentasCompletoRowDeleted(Me, New RVVentasCompletoRowChangeEvent(CType(e.Row,RVVentasCompletoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVVentasCompletoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVVentasCompletoRowDeleting(Me, New RVVentasCompletoRowChangeEvent(CType(e.Row,RVVentasCompletoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVVentasCompletoRow(ByVal row As RVVentasCompletoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVVentasCompletoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVVentasPorProductoComparativoMesAnhoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVVentasPorProductoComparativoMesAnhoRow)
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnTOTALVENTA As Global.System.Data.DataColumn
        
        Private columnCOSTOFIFO As Global.System.Data.DataColumn
        
        Private columnTOTALUTILIDAD As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnAÑO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVVentasPorProductoComparativoMesAnho"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOFIFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOFIFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALUTILIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALUTILIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVVentasPorProductoComparativoMesAnhoRow
            Get
                Return CType(Me.Rows(index),RVVentasPorProductoComparativoMesAnhoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorProductoComparativoMesAnhoRowChanging As RVVentasPorProductoComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorProductoComparativoMesAnhoRowChanged As RVVentasPorProductoComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorProductoComparativoMesAnhoRowDeleting As RVVentasPorProductoComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorProductoComparativoMesAnhoRowDeleted As RVVentasPorProductoComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVVentasPorProductoComparativoMesAnhoRow(ByVal row As RVVentasPorProductoComparativoMesAnhoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVVentasPorProductoComparativoMesAnhoRow(ByVal CODCODIGO As Decimal, ByVal CODIGO As String, ByVal PRODUCTO As String, ByVal CANTIDAD As Decimal, ByVal TOTALVENTA As Decimal, ByVal COSTOFIFO As Decimal, ByVal TOTALUTILIDAD As Decimal, ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal DESRUBRO As String, ByVal MES As String, ByVal AÑO As String) As RVVentasPorProductoComparativoMesAnhoRow
            Dim rowRVVentasPorProductoComparativoMesAnhoRow As RVVentasPorProductoComparativoMesAnhoRow = CType(Me.NewRow,RVVentasPorProductoComparativoMesAnhoRow)
            Dim columnValuesArray() As Object = New Object() {CODCODIGO, CODIGO, PRODUCTO, CANTIDAD, TOTALVENTA, COSTOFIFO, TOTALUTILIDAD, DESFAMILIA, DESLINEA, DESRUBRO, MES, AÑO}
            rowRVVentasPorProductoComparativoMesAnhoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVVentasPorProductoComparativoMesAnhoRow)
            Return rowRVVentasPorProductoComparativoMesAnhoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVVentasPorProductoComparativoMesAnhoDataTable = CType(MyBase.Clone,RVVentasPorProductoComparativoMesAnhoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVVentasPorProductoComparativoMesAnhoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnTOTALVENTA = MyBase.Columns("TOTALVENTA")
            Me.columnCOSTOFIFO = MyBase.Columns("COSTOFIFO")
            Me.columnTOTALUTILIDAD = MyBase.Columns("TOTALUTILIDAD")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnAÑO = MyBase.Columns("AÑO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnTOTALVENTA = New Global.System.Data.DataColumn("TOTALVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALVENTA)
            Me.columnCOSTOFIFO = New Global.System.Data.DataColumn("COSTOFIFO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOFIFO)
            Me.columnTOTALUTILIDAD = New Global.System.Data.DataColumn("TOTALUTILIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALUTILIDAD)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnAÑO = New Global.System.Data.DataColumn("AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAÑO)
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.MaxLength = 282
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnMES.MaxLength = 30
            Me.columnAÑO.MaxLength = 30
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVVentasPorProductoComparativoMesAnhoRow() As RVVentasPorProductoComparativoMesAnhoRow
            Return CType(Me.NewRow,RVVentasPorProductoComparativoMesAnhoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVVentasPorProductoComparativoMesAnhoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVVentasPorProductoComparativoMesAnhoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVVentasPorProductoComparativoMesAnhoRowChangedEvent) Is Nothing) Then
                RaiseEvent RVVentasPorProductoComparativoMesAnhoRowChanged(Me, New RVVentasPorProductoComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorProductoComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVVentasPorProductoComparativoMesAnhoRowChangingEvent) Is Nothing) Then
                RaiseEvent RVVentasPorProductoComparativoMesAnhoRowChanging(Me, New RVVentasPorProductoComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorProductoComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVVentasPorProductoComparativoMesAnhoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVVentasPorProductoComparativoMesAnhoRowDeleted(Me, New RVVentasPorProductoComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorProductoComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVVentasPorProductoComparativoMesAnhoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVVentasPorProductoComparativoMesAnhoRowDeleting(Me, New RVVentasPorProductoComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorProductoComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVVentasPorProductoComparativoMesAnhoRow(ByVal row As RVVentasPorProductoComparativoMesAnhoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVVentasPorProductoComparativoMesAnhoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVVentasPorClienteComparativoMesAnhoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVVentasPorClienteComparativoMesAnhoRow)
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnCOSTOFIFO As Global.System.Data.DataColumn
        
        Private columnTOTALUTILIDAD As Global.System.Data.DataColumn
        
        Private columnMES As Global.System.Data.DataColumn
        
        Private columnAÑO As Global.System.Data.DataColumn
        
        Private columnCANTIDADVENTA As Global.System.Data.DataColumn
        
        Private columnTOTALVENTA As Global.System.Data.DataColumn
        
        Private columnCLIENTE As Global.System.Data.DataColumn
        
        Private columnDESCATEGORIACLIENTE As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVVentasPorClienteComparativoMesAnho"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOFIFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOFIFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALUTILIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALUTILIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AÑOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAÑO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDADVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCATEGORIACLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCATEGORIACLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVVentasPorClienteComparativoMesAnhoRow
            Get
                Return CType(Me.Rows(index),RVVentasPorClienteComparativoMesAnhoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorClienteComparativoMesAnhoRowChanging As RVVentasPorClienteComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorClienteComparativoMesAnhoRowChanged As RVVentasPorClienteComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorClienteComparativoMesAnhoRowDeleting As RVVentasPorClienteComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPorClienteComparativoMesAnhoRowDeleted As RVVentasPorClienteComparativoMesAnhoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVVentasPorClienteComparativoMesAnhoRow(ByVal row As RVVentasPorClienteComparativoMesAnhoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVVentasPorClienteComparativoMesAnhoRow(ByVal CODCLIENTE As Decimal, ByVal COSTOFIFO As Decimal, ByVal TOTALUTILIDAD As Decimal, ByVal MES As String, ByVal AÑO As String, ByVal CANTIDADVENTA As Decimal, ByVal TOTALVENTA As Decimal, ByVal CLIENTE As String, ByVal DESCATEGORIACLIENTE As String) As RVVentasPorClienteComparativoMesAnhoRow
            Dim rowRVVentasPorClienteComparativoMesAnhoRow As RVVentasPorClienteComparativoMesAnhoRow = CType(Me.NewRow,RVVentasPorClienteComparativoMesAnhoRow)
            Dim columnValuesArray() As Object = New Object() {CODCLIENTE, COSTOFIFO, TOTALUTILIDAD, MES, AÑO, CANTIDADVENTA, TOTALVENTA, CLIENTE, DESCATEGORIACLIENTE}
            rowRVVentasPorClienteComparativoMesAnhoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVVentasPorClienteComparativoMesAnhoRow)
            Return rowRVVentasPorClienteComparativoMesAnhoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCLIENTE(ByVal CODCLIENTE As Decimal) As RVVentasPorClienteComparativoMesAnhoRow
            Return CType(Me.Rows.Find(New Object() {CODCLIENTE}),RVVentasPorClienteComparativoMesAnhoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVVentasPorClienteComparativoMesAnhoDataTable = CType(MyBase.Clone,RVVentasPorClienteComparativoMesAnhoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVVentasPorClienteComparativoMesAnhoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnCOSTOFIFO = MyBase.Columns("COSTOFIFO")
            Me.columnTOTALUTILIDAD = MyBase.Columns("TOTALUTILIDAD")
            Me.columnMES = MyBase.Columns("MES")
            Me.columnAÑO = MyBase.Columns("AÑO")
            Me.columnCANTIDADVENTA = MyBase.Columns("CANTIDADVENTA")
            Me.columnTOTALVENTA = MyBase.Columns("TOTALVENTA")
            Me.columnCLIENTE = MyBase.Columns("CLIENTE")
            Me.columnDESCATEGORIACLIENTE = MyBase.Columns("DESCATEGORIACLIENTE")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnCOSTOFIFO = New Global.System.Data.DataColumn("COSTOFIFO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOFIFO)
            Me.columnTOTALUTILIDAD = New Global.System.Data.DataColumn("TOTALUTILIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALUTILIDAD)
            Me.columnMES = New Global.System.Data.DataColumn("MES", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMES)
            Me.columnAÑO = New Global.System.Data.DataColumn("AÑO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAÑO)
            Me.columnCANTIDADVENTA = New Global.System.Data.DataColumn("CANTIDADVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDADVENTA)
            Me.columnTOTALVENTA = New Global.System.Data.DataColumn("TOTALVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALVENTA)
            Me.columnCLIENTE = New Global.System.Data.DataColumn("CLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLIENTE)
            Me.columnDESCATEGORIACLIENTE = New Global.System.Data.DataColumn("DESCATEGORIACLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCATEGORIACLIENTE)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCLIENTE}, true))
            Me.columnCODCLIENTE.AllowDBNull = false
            Me.columnCODCLIENTE.Unique = true
            Me.columnCOSTOFIFO.ReadOnly = true
            Me.columnTOTALUTILIDAD.ReadOnly = true
            Me.columnMES.ReadOnly = true
            Me.columnMES.MaxLength = 30
            Me.columnAÑO.ReadOnly = true
            Me.columnAÑO.MaxLength = 30
            Me.columnCANTIDADVENTA.ReadOnly = true
            Me.columnTOTALVENTA.ReadOnly = true
            Me.columnCLIENTE.ReadOnly = true
            Me.columnCLIENTE.MaxLength = 83
            Me.columnDESCATEGORIACLIENTE.MaxLength = 40
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVVentasPorClienteComparativoMesAnhoRow() As RVVentasPorClienteComparativoMesAnhoRow
            Return CType(Me.NewRow,RVVentasPorClienteComparativoMesAnhoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVVentasPorClienteComparativoMesAnhoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVVentasPorClienteComparativoMesAnhoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVVentasPorClienteComparativoMesAnhoRowChangedEvent) Is Nothing) Then
                RaiseEvent RVVentasPorClienteComparativoMesAnhoRowChanged(Me, New RVVentasPorClienteComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorClienteComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVVentasPorClienteComparativoMesAnhoRowChangingEvent) Is Nothing) Then
                RaiseEvent RVVentasPorClienteComparativoMesAnhoRowChanging(Me, New RVVentasPorClienteComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorClienteComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVVentasPorClienteComparativoMesAnhoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVVentasPorClienteComparativoMesAnhoRowDeleted(Me, New RVVentasPorClienteComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorClienteComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVVentasPorClienteComparativoMesAnhoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVVentasPorClienteComparativoMesAnhoRowDeleting(Me, New RVVentasPorClienteComparativoMesAnhoRowChangeEvent(CType(e.Row,RVVentasPorClienteComparativoMesAnhoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVVentasPorClienteComparativoMesAnhoRow(ByVal row As RVVentasPorClienteComparativoMesAnhoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVVentasPorClienteComparativoMesAnhoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVVentasPrecioVentaVsCostoPorProductoDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVVentasPrecioVentaVsCostoPorProductoRow)
        
        Private columnFECHAVENTA As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCANTIDADVENTA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnNUMCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTABRUTO As Global.System.Data.DataColumn
        
        Private columnCOSTOFIFO As Global.System.Data.DataColumn
        
        Private columnTOTALUTILIDAD As Global.System.Data.DataColumn
        
        Private columnDESCATEGORIACLIENTE As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTANETO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTALISTA As Global.System.Data.DataColumn
        
        Private columnPRODPROMOCION As Global.System.Data.DataColumn
        
        Private columnPRECIOCOSTOBRUTO As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE1 As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTABRUTO1 As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTANETO1 As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTALISTA1 As Global.System.Data.DataColumn
        
        Private columnCODIVA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVVentasPrecioVentaVsCostoPorProducto"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDADVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTABRUTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTABRUTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOFIFOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOFIFO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALUTILIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALUTILIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCATEGORIACLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCATEGORIACLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTANETOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTANETO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTALISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTALISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODPROMOCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODPROMOCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOCOSTOBRUTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOCOSTOBRUTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTE1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTABRUTO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTABRUTO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTANETO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTANETO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTALISTA1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTALISTA1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVVentasPrecioVentaVsCostoPorProductoRow
            Get
                Return CType(Me.Rows(index),RVVentasPrecioVentaVsCostoPorProductoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPrecioVentaVsCostoPorProductoRowChanging As RVVentasPrecioVentaVsCostoPorProductoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPrecioVentaVsCostoPorProductoRowChanged As RVVentasPrecioVentaVsCostoPorProductoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPrecioVentaVsCostoPorProductoRowDeleting As RVVentasPrecioVentaVsCostoPorProductoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVVentasPrecioVentaVsCostoPorProductoRowDeleted As RVVentasPrecioVentaVsCostoPorProductoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVVentasPrecioVentaVsCostoPorProductoRow(ByVal row As RVVentasPrecioVentaVsCostoPorProductoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVVentasPrecioVentaVsCostoPorProductoRow( _
                    ByVal FECHAVENTA As Date,  _
                    ByVal CODCODIGO As Integer,  _
                    ByVal CANTIDADVENTA As Decimal,  _
                    ByVal CODIGO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CODCLIENTE As Integer,  _
                    ByVal NUMCLIENTE As Decimal,  _
                    ByVal NOMBRE As String,  _
                    ByVal PRECIOVENTABRUTO As Long,  _
                    ByVal COSTOFIFO As Decimal,  _
                    ByVal TOTALUTILIDAD As Decimal,  _
                    ByVal DESCATEGORIACLIENTE As String,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal DESRUBRO As String,  _
                    ByVal PRECIOVENTANETO As Long,  _
                    ByVal PRECIOVENTALISTA As Long,  _
                    ByVal PRODPROMOCION As Boolean,  _
                    ByVal PRECIOCOSTOBRUTO As Decimal,  _
                    ByVal PRECIOVENTABRUTO1 As Decimal,  _
                    ByVal PRECIOVENTANETO1 As Decimal,  _
                    ByVal PRECIOVENTALISTA1 As Decimal,  _
                    ByVal CODIVA As Decimal) As RVVentasPrecioVentaVsCostoPorProductoRow
            Dim rowRVVentasPrecioVentaVsCostoPorProductoRow As RVVentasPrecioVentaVsCostoPorProductoRow = CType(Me.NewRow,RVVentasPrecioVentaVsCostoPorProductoRow)
            Dim columnValuesArray() As Object = New Object() {FECHAVENTA, CODCODIGO, CANTIDADVENTA, CODIGO, PRODUCTO, CODCLIENTE, NUMCLIENTE, NOMBRE, PRECIOVENTABRUTO, COSTOFIFO, TOTALUTILIDAD, DESCATEGORIACLIENTE, DESFAMILIA, DESLINEA, DESRUBRO, PRECIOVENTANETO, PRECIOVENTALISTA, PRODPROMOCION, PRECIOCOSTOBRUTO, Nothing, PRECIOVENTABRUTO1, PRECIOVENTANETO1, PRECIOVENTALISTA1, CODIVA}
            rowRVVentasPrecioVentaVsCostoPorProductoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVVentasPrecioVentaVsCostoPorProductoRow)
            Return rowRVVentasPrecioVentaVsCostoPorProductoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVVentasPrecioVentaVsCostoPorProductoDataTable = CType(MyBase.Clone,RVVentasPrecioVentaVsCostoPorProductoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVVentasPrecioVentaVsCostoPorProductoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFECHAVENTA = MyBase.Columns("FECHAVENTA")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCANTIDADVENTA = MyBase.Columns("CANTIDADVENTA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnPRECIOVENTABRUTO = MyBase.Columns("PRECIOVENTABRUTO")
            Me.columnCOSTOFIFO = MyBase.Columns("COSTOFIFO")
            Me.columnTOTALUTILIDAD = MyBase.Columns("TOTALUTILIDAD")
            Me.columnDESCATEGORIACLIENTE = MyBase.Columns("DESCATEGORIACLIENTE")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnPRECIOVENTANETO = MyBase.Columns("PRECIOVENTANETO")
            Me.columnPRECIOVENTALISTA = MyBase.Columns("PRECIOVENTALISTA")
            Me.columnPRODPROMOCION = MyBase.Columns("PRODPROMOCION")
            Me.columnPRECIOCOSTOBRUTO = MyBase.Columns("PRECIOCOSTOBRUTO")
            Me.columnCODCLIENTE1 = MyBase.Columns("CODCLIENTE1")
            Me.columnPRECIOVENTABRUTO1 = MyBase.Columns("PRECIOVENTABRUTO1")
            Me.columnPRECIOVENTANETO1 = MyBase.Columns("PRECIOVENTANETO1")
            Me.columnPRECIOVENTALISTA1 = MyBase.Columns("PRECIOVENTALISTA1")
            Me.columnCODIVA = MyBase.Columns("CODIVA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFECHAVENTA = New Global.System.Data.DataColumn("FECHAVENTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAVENTA)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCANTIDADVENTA = New Global.System.Data.DataColumn("CANTIDADVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDADVENTA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnPRECIOVENTABRUTO = New Global.System.Data.DataColumn("PRECIOVENTABRUTO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTABRUTO)
            Me.columnCOSTOFIFO = New Global.System.Data.DataColumn("COSTOFIFO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOFIFO)
            Me.columnTOTALUTILIDAD = New Global.System.Data.DataColumn("TOTALUTILIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALUTILIDAD)
            Me.columnDESCATEGORIACLIENTE = New Global.System.Data.DataColumn("DESCATEGORIACLIENTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCATEGORIACLIENTE)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnPRECIOVENTANETO = New Global.System.Data.DataColumn("PRECIOVENTANETO", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTANETO)
            Me.columnPRECIOVENTALISTA = New Global.System.Data.DataColumn("PRECIOVENTALISTA", GetType(Long), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTALISTA)
            Me.columnPRODPROMOCION = New Global.System.Data.DataColumn("PRODPROMOCION", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODPROMOCION)
            Me.columnPRECIOCOSTOBRUTO = New Global.System.Data.DataColumn("PRECIOCOSTOBRUTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOCOSTOBRUTO)
            Me.columnCODCLIENTE1 = New Global.System.Data.DataColumn("CODCLIENTE1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE1)
            Me.columnPRECIOVENTABRUTO1 = New Global.System.Data.DataColumn("PRECIOVENTABRUTO1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTABRUTO1)
            Me.columnPRECIOVENTANETO1 = New Global.System.Data.DataColumn("PRECIOVENTANETO1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTANETO1)
            Me.columnPRECIOVENTALISTA1 = New Global.System.Data.DataColumn("PRECIOVENTALISTA1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTALISTA1)
            Me.columnCODIVA = New Global.System.Data.DataColumn("CODIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIVA)
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 282
            Me.columnNOMBRE.MaxLength = 50
            Me.columnCOSTOFIFO.ReadOnly = true
            Me.columnTOTALUTILIDAD.ReadOnly = true
            Me.columnDESCATEGORIACLIENTE.MaxLength = 40
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnPRECIOCOSTOBRUTO.ReadOnly = true
            Me.columnCODCLIENTE1.AutoIncrement = true
            Me.columnCODCLIENTE1.AutoIncrementSeed = -1
            Me.columnCODCLIENTE1.AutoIncrementStep = -1
            Me.columnCODCLIENTE1.ReadOnly = true
            Me.columnCODCLIENTE1.Caption = "CODCLIENTE"
            Me.columnPRECIOVENTABRUTO1.Caption = "PRECIOVENTABRUTO"
            Me.columnPRECIOVENTANETO1.Caption = "PRECIOVENTANETO"
            Me.columnPRECIOVENTALISTA1.Caption = "PRECIOVENTALISTA"
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVVentasPrecioVentaVsCostoPorProductoRow() As RVVentasPrecioVentaVsCostoPorProductoRow
            Return CType(Me.NewRow,RVVentasPrecioVentaVsCostoPorProductoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVVentasPrecioVentaVsCostoPorProductoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVVentasPrecioVentaVsCostoPorProductoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVVentasPrecioVentaVsCostoPorProductoRowChangedEvent) Is Nothing) Then
                RaiseEvent RVVentasPrecioVentaVsCostoPorProductoRowChanged(Me, New RVVentasPrecioVentaVsCostoPorProductoRowChangeEvent(CType(e.Row,RVVentasPrecioVentaVsCostoPorProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVVentasPrecioVentaVsCostoPorProductoRowChangingEvent) Is Nothing) Then
                RaiseEvent RVVentasPrecioVentaVsCostoPorProductoRowChanging(Me, New RVVentasPrecioVentaVsCostoPorProductoRowChangeEvent(CType(e.Row,RVVentasPrecioVentaVsCostoPorProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVVentasPrecioVentaVsCostoPorProductoRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVVentasPrecioVentaVsCostoPorProductoRowDeleted(Me, New RVVentasPrecioVentaVsCostoPorProductoRowChangeEvent(CType(e.Row,RVVentasPrecioVentaVsCostoPorProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVVentasPrecioVentaVsCostoPorProductoRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVVentasPrecioVentaVsCostoPorProductoRowDeleting(Me, New RVVentasPrecioVentaVsCostoPorProductoRowChangeEvent(CType(e.Row,RVVentasPrecioVentaVsCostoPorProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVVentasPrecioVentaVsCostoPorProductoRow(ByVal row As RVVentasPrecioVentaVsCostoPorProductoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVVentasPrecioVentaVsCostoPorProductoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVINCIDENCIANCSOBREVTADataTable
        Inherits Global.System.Data.TypedTableBase(Of RVINCIDENCIANCSOBREVTARow)
        
        Private columnCANTVTA As Global.System.Data.DataColumn
        
        Private columnCANTNC As Global.System.Data.DataColumn
        
        Private columnTOTCIVAVTA As Global.System.Data.DataColumn
        
        Private columnTOTCIVANC As Global.System.Data.DataColumn
        
        Private columnCOSTOVTA As Global.System.Data.DataColumn
        
        Private columnCOSTONC As Global.System.Data.DataColumn
        
        Private columnIVA10VTA As Global.System.Data.DataColumn
        
        Private columnIVA10NC As Global.System.Data.DataColumn
        
        Private columnIVA5VTA As Global.System.Data.DataColumn
        
        Private columnIVA5NC As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnNUMCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnNOMBREFANTASIA As Global.System.Data.DataColumn
        
        Private columnFECHA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVINCIDENCIANCSOBREVTA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTNCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTNC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTCIVAVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTCIVAVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTCIVANCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTCIVANC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTONCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTONC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA10VTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA10VTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA10NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA10NC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA5VTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA5VTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVA5NCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA5NC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREFANTASIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREFANTASIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVINCIDENCIANCSOBREVTARow
            Get
                Return CType(Me.Rows(index),RVINCIDENCIANCSOBREVTARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVINCIDENCIANCSOBREVTARowChanging As RVINCIDENCIANCSOBREVTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVINCIDENCIANCSOBREVTARowChanged As RVINCIDENCIANCSOBREVTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVINCIDENCIANCSOBREVTARowDeleting As RVINCIDENCIANCSOBREVTARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVINCIDENCIANCSOBREVTARowDeleted As RVINCIDENCIANCSOBREVTARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVINCIDENCIANCSOBREVTARow(ByVal row As RVINCIDENCIANCSOBREVTARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVINCIDENCIANCSOBREVTARow(ByVal CANTVTA As Decimal, ByVal CANTNC As Decimal, ByVal TOTCIVAVTA As Decimal, ByVal TOTCIVANC As Decimal, ByVal COSTOVTA As Decimal, ByVal COSTONC As Decimal, ByVal IVA10VTA As Decimal, ByVal IVA10NC As Decimal, ByVal IVA5VTA As Decimal, ByVal IVA5NC As Decimal, ByVal CODCLIENTE As Decimal, ByVal NUMCLIENTE As Decimal, ByVal NOMBRE As String, ByVal NOMBREFANTASIA As String, ByVal FECHA As Date) As RVINCIDENCIANCSOBREVTARow
            Dim rowRVINCIDENCIANCSOBREVTARow As RVINCIDENCIANCSOBREVTARow = CType(Me.NewRow,RVINCIDENCIANCSOBREVTARow)
            Dim columnValuesArray() As Object = New Object() {CANTVTA, CANTNC, TOTCIVAVTA, TOTCIVANC, COSTOVTA, COSTONC, IVA10VTA, IVA10NC, IVA5VTA, IVA5NC, CODCLIENTE, NUMCLIENTE, NOMBRE, NOMBREFANTASIA, FECHA}
            rowRVINCIDENCIANCSOBREVTARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVINCIDENCIANCSOBREVTARow)
            Return rowRVINCIDENCIANCSOBREVTARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVINCIDENCIANCSOBREVTADataTable = CType(MyBase.Clone,RVINCIDENCIANCSOBREVTADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVINCIDENCIANCSOBREVTADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCANTVTA = MyBase.Columns("CANTVTA")
            Me.columnCANTNC = MyBase.Columns("CANTNC")
            Me.columnTOTCIVAVTA = MyBase.Columns("TOTCIVAVTA")
            Me.columnTOTCIVANC = MyBase.Columns("TOTCIVANC")
            Me.columnCOSTOVTA = MyBase.Columns("COSTOVTA")
            Me.columnCOSTONC = MyBase.Columns("COSTONC")
            Me.columnIVA10VTA = MyBase.Columns("IVA10VTA")
            Me.columnIVA10NC = MyBase.Columns("IVA10NC")
            Me.columnIVA5VTA = MyBase.Columns("IVA5VTA")
            Me.columnIVA5NC = MyBase.Columns("IVA5NC")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnNOMBREFANTASIA = MyBase.Columns("NOMBREFANTASIA")
            Me.columnFECHA = MyBase.Columns("FECHA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCANTVTA = New Global.System.Data.DataColumn("CANTVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTVTA)
            Me.columnCANTNC = New Global.System.Data.DataColumn("CANTNC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTNC)
            Me.columnTOTCIVAVTA = New Global.System.Data.DataColumn("TOTCIVAVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTCIVAVTA)
            Me.columnTOTCIVANC = New Global.System.Data.DataColumn("TOTCIVANC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTCIVANC)
            Me.columnCOSTOVTA = New Global.System.Data.DataColumn("COSTOVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOVTA)
            Me.columnCOSTONC = New Global.System.Data.DataColumn("COSTONC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTONC)
            Me.columnIVA10VTA = New Global.System.Data.DataColumn("IVA10VTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA10VTA)
            Me.columnIVA10NC = New Global.System.Data.DataColumn("IVA10NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA10NC)
            Me.columnIVA5VTA = New Global.System.Data.DataColumn("IVA5VTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA5VTA)
            Me.columnIVA5NC = New Global.System.Data.DataColumn("IVA5NC", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA5NC)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnNOMBREFANTASIA = New Global.System.Data.DataColumn("NOMBREFANTASIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREFANTASIA)
            Me.columnFECHA = New Global.System.Data.DataColumn("FECHA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHA)
            Me.columnCANTVTA.ReadOnly = true
            Me.columnCANTNC.ReadOnly = true
            Me.columnTOTCIVAVTA.ReadOnly = true
            Me.columnTOTCIVANC.ReadOnly = true
            Me.columnCOSTOVTA.ReadOnly = true
            Me.columnCOSTONC.ReadOnly = true
            Me.columnIVA10VTA.ReadOnly = true
            Me.columnIVA10NC.ReadOnly = true
            Me.columnIVA5VTA.ReadOnly = true
            Me.columnIVA5NC.ReadOnly = true
            Me.columnCODCLIENTE.ReadOnly = true
            Me.columnNUMCLIENTE.ReadOnly = true
            Me.columnNOMBRE.ReadOnly = true
            Me.columnNOMBRE.MaxLength = 50
            Me.columnNOMBREFANTASIA.ReadOnly = true
            Me.columnNOMBREFANTASIA.MaxLength = 80
            Me.columnFECHA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVINCIDENCIANCSOBREVTARow() As RVINCIDENCIANCSOBREVTARow
            Return CType(Me.NewRow,RVINCIDENCIANCSOBREVTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVINCIDENCIANCSOBREVTARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVINCIDENCIANCSOBREVTARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVINCIDENCIANCSOBREVTARowChangedEvent) Is Nothing) Then
                RaiseEvent RVINCIDENCIANCSOBREVTARowChanged(Me, New RVINCIDENCIANCSOBREVTARowChangeEvent(CType(e.Row,RVINCIDENCIANCSOBREVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVINCIDENCIANCSOBREVTARowChangingEvent) Is Nothing) Then
                RaiseEvent RVINCIDENCIANCSOBREVTARowChanging(Me, New RVINCIDENCIANCSOBREVTARowChangeEvent(CType(e.Row,RVINCIDENCIANCSOBREVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVINCIDENCIANCSOBREVTARowDeletedEvent) Is Nothing) Then
                RaiseEvent RVINCIDENCIANCSOBREVTARowDeleted(Me, New RVINCIDENCIANCSOBREVTARowChangeEvent(CType(e.Row,RVINCIDENCIANCSOBREVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVINCIDENCIANCSOBREVTARowDeletingEvent) Is Nothing) Then
                RaiseEvent RVINCIDENCIANCSOBREVTARowDeleting(Me, New RVINCIDENCIANCSOBREVTARowChangeEvent(CType(e.Row,RVINCIDENCIANCSOBREVTARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVINCIDENCIANCSOBREVTARow(ByVal row As RVINCIDENCIANCSOBREVTARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVINCIDENCIANCSOBREVTADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RVUtilidadVentasDataTable
        Inherits Global.System.Data.TypedTableBase(Of RVUtilidadVentasRow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnNUMVENTA As Global.System.Data.DataColumn
        
        Private columnFECHAVENTA As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnPRECIO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTALISTA As Global.System.Data.DataColumn
        
        Private columnDIFERENCIA As Global.System.Data.DataColumn
        
        Private columnUTILIDAD As Global.System.Data.DataColumn
        
        Private columnCANTIDADVENTA As Global.System.Data.DataColumn
        
        Private columnRUC As Global.System.Data.DataColumn
        
        Private columnTIPOVENTA As Global.System.Data.DataColumn
        
        Private columnTOTALVENTA As Global.System.Data.DataColumn
        
        Private columnTOTAL5 As Global.System.Data.DataColumn
        
        Private columnTOTAL10 As Global.System.Data.DataColumn
        
        Private columnTOTALIVA As Global.System.Data.DataColumn
        
        Private columnDESVENDEDOR As Global.System.Data.DataColumn
        
        Private columnMOTIVODESCUENTO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTANETO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RVUtilidadVentas"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTALISTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTALISTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIFERENCIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIFERENCIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property UTILIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUTILIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDADVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RUCColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRUC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOTIVODESCUENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVODESCUENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTANETOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTANETO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RVUtilidadVentasRow
            Get
                Return CType(Me.Rows(index),RVUtilidadVentasRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVUtilidadVentasRowChanging As RVUtilidadVentasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVUtilidadVentasRowChanged As RVUtilidadVentasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVUtilidadVentasRowDeleting As RVUtilidadVentasRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RVUtilidadVentasRowDeleted As RVUtilidadVentasRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRVUtilidadVentasRow(ByVal row As RVUtilidadVentasRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRVUtilidadVentasRow( _
                    ByVal CODIGO As String,  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal NUMVENTA As String,  _
                    ByVal FECHAVENTA As Date,  _
                    ByVal NOMBRE As String,  _
                    ByVal PRECIO As Decimal,  _
                    ByVal PRECIOVENTALISTA As Decimal,  _
                    ByVal DIFERENCIA As Decimal,  _
                    ByVal UTILIDAD As Decimal,  _
                    ByVal CANTIDADVENTA As Decimal,  _
                    ByVal RUC As String,  _
                    ByVal TIPOVENTA As Byte,  _
                    ByVal TOTALVENTA As Decimal,  _
                    ByVal TOTAL5 As Decimal,  _
                    ByVal TOTAL10 As Decimal,  _
                    ByVal TOTALIVA As Decimal,  _
                    ByVal DESVENDEDOR As String,  _
                    ByVal MOTIVODESCUENTO As String,  _
                    ByVal PRECIOVENTANETO As Decimal) As RVUtilidadVentasRow
            Dim rowRVUtilidadVentasRow As RVUtilidadVentasRow = CType(Me.NewRow,RVUtilidadVentasRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, DESPRODUCTO, NUMVENTA, FECHAVENTA, NOMBRE, PRECIO, PRECIOVENTALISTA, DIFERENCIA, UTILIDAD, CANTIDADVENTA, RUC, TIPOVENTA, TOTALVENTA, TOTAL5, TOTAL10, TOTALIVA, DESVENDEDOR, MOTIVODESCUENTO, PRECIOVENTANETO}
            rowRVUtilidadVentasRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRVUtilidadVentasRow)
            Return rowRVUtilidadVentasRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RVUtilidadVentasDataTable = CType(MyBase.Clone,RVUtilidadVentasDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RVUtilidadVentasDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
            Me.columnFECHAVENTA = MyBase.Columns("FECHAVENTA")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnPRECIO = MyBase.Columns("PRECIO")
            Me.columnPRECIOVENTALISTA = MyBase.Columns("PRECIOVENTALISTA")
            Me.columnDIFERENCIA = MyBase.Columns("DIFERENCIA")
            Me.columnUTILIDAD = MyBase.Columns("UTILIDAD")
            Me.columnCANTIDADVENTA = MyBase.Columns("CANTIDADVENTA")
            Me.columnRUC = MyBase.Columns("RUC")
            Me.columnTIPOVENTA = MyBase.Columns("TIPOVENTA")
            Me.columnTOTALVENTA = MyBase.Columns("TOTALVENTA")
            Me.columnTOTAL5 = MyBase.Columns("TOTAL5")
            Me.columnTOTAL10 = MyBase.Columns("TOTAL10")
            Me.columnTOTALIVA = MyBase.Columns("TOTALIVA")
            Me.columnDESVENDEDOR = MyBase.Columns("DESVENDEDOR")
            Me.columnMOTIVODESCUENTO = MyBase.Columns("MOTIVODESCUENTO")
            Me.columnPRECIOVENTANETO = MyBase.Columns("PRECIOVENTANETO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnFECHAVENTA = New Global.System.Data.DataColumn("FECHAVENTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAVENTA)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnPRECIO = New Global.System.Data.DataColumn("PRECIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO)
            Me.columnPRECIOVENTALISTA = New Global.System.Data.DataColumn("PRECIOVENTALISTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTALISTA)
            Me.columnDIFERENCIA = New Global.System.Data.DataColumn("DIFERENCIA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIFERENCIA)
            Me.columnUTILIDAD = New Global.System.Data.DataColumn("UTILIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUTILIDAD)
            Me.columnCANTIDADVENTA = New Global.System.Data.DataColumn("CANTIDADVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDADVENTA)
            Me.columnRUC = New Global.System.Data.DataColumn("RUC", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRUC)
            Me.columnTIPOVENTA = New Global.System.Data.DataColumn("TIPOVENTA", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOVENTA)
            Me.columnTOTALVENTA = New Global.System.Data.DataColumn("TOTALVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALVENTA)
            Me.columnTOTAL5 = New Global.System.Data.DataColumn("TOTAL5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL5)
            Me.columnTOTAL10 = New Global.System.Data.DataColumn("TOTAL10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL10)
            Me.columnTOTALIVA = New Global.System.Data.DataColumn("TOTALIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIVA)
            Me.columnDESVENDEDOR = New Global.System.Data.DataColumn("DESVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESVENDEDOR)
            Me.columnMOTIVODESCUENTO = New Global.System.Data.DataColumn("MOTIVODESCUENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVODESCUENTO)
            Me.columnPRECIOVENTANETO = New Global.System.Data.DataColumn("PRECIOVENTANETO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTANETO)
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnNUMVENTA.MaxLength = 20
            Me.columnNOMBRE.MaxLength = 50
            Me.columnDIFERENCIA.ReadOnly = true
            Me.columnUTILIDAD.ReadOnly = true
            Me.columnRUC.MaxLength = 50
            Me.columnDESVENDEDOR.MaxLength = 150
            Me.columnMOTIVODESCUENTO.MaxLength = 100
            Me.CaseSensitive = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRVUtilidadVentasRow() As RVUtilidadVentasRow
            Return CType(Me.NewRow,RVUtilidadVentasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RVUtilidadVentasRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RVUtilidadVentasRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RVUtilidadVentasRowChangedEvent) Is Nothing) Then
                RaiseEvent RVUtilidadVentasRowChanged(Me, New RVUtilidadVentasRowChangeEvent(CType(e.Row,RVUtilidadVentasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RVUtilidadVentasRowChangingEvent) Is Nothing) Then
                RaiseEvent RVUtilidadVentasRowChanging(Me, New RVUtilidadVentasRowChangeEvent(CType(e.Row,RVUtilidadVentasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RVUtilidadVentasRowDeletedEvent) Is Nothing) Then
                RaiseEvent RVUtilidadVentasRowDeleted(Me, New RVUtilidadVentasRowChangeEvent(CType(e.Row,RVUtilidadVentasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RVUtilidadVentasRowDeletingEvent) Is Nothing) Then
                RaiseEvent RVUtilidadVentasRowDeleting(Me, New RVUtilidadVentasRowChangeEvent(CType(e.Row,RVUtilidadVentasRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRVUtilidadVentasRow(ByVal row As RVUtilidadVentasRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RVUtilidadVentasDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class NumVentaDataTable
        Inherits Global.System.Data.TypedTableBase(Of NumVentaRow)
        
        Private columnNUMVENTA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "NumVenta"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As NumVentaRow
            Get
                Return CType(Me.Rows(index),NumVentaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NumVentaRowChanging As NumVentaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NumVentaRowChanged As NumVentaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NumVentaRowDeleting As NumVentaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event NumVentaRowDeleted As NumVentaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddNumVentaRow(ByVal row As NumVentaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddNumVentaRow(ByVal NUMVENTA As String) As NumVentaRow
            Dim rowNumVentaRow As NumVentaRow = CType(Me.NewRow,NumVentaRow)
            Dim columnValuesArray() As Object = New Object() {NUMVENTA}
            rowNumVentaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowNumVentaRow)
            Return rowNumVentaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As NumVentaDataTable = CType(MyBase.Clone,NumVentaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New NumVentaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnNUMVENTA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewNumVentaRow() As NumVentaRow
            Return CType(Me.NewRow,NumVentaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New NumVentaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(NumVentaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.NumVentaRowChangedEvent) Is Nothing) Then
                RaiseEvent NumVentaRowChanged(Me, New NumVentaRowChangeEvent(CType(e.Row,NumVentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.NumVentaRowChangingEvent) Is Nothing) Then
                RaiseEvent NumVentaRowChanging(Me, New NumVentaRowChangeEvent(CType(e.Row,NumVentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.NumVentaRowDeletedEvent) Is Nothing) Then
                RaiseEvent NumVentaRowDeleted(Me, New NumVentaRowChangeEvent(CType(e.Row,NumVentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.NumVentaRowDeletingEvent) Is Nothing) Then
                RaiseEvent NumVentaRowDeleting(Me, New NumVentaRowChangeEvent(CType(e.Row,NumVentaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveNumVentaRow(ByVal row As NumVentaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "NumVentaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class VentasDetXClienteDataTable
        Inherits Global.System.Data.TypedTableBase(Of VentasDetXClienteRow)
        
        Private columnFECHAVENTA As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnTOTALEXENTA As Global.System.Data.DataColumn
        
        Private columnTOTALIVA As Global.System.Data.DataColumn
        
        Private columnTOTALVENTA As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnTOTAL5 As Global.System.Data.DataColumn
        
        Private columnTOTAL10 As Global.System.Data.DataColumn
        
        Private columnNUMVENTA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "VentasDetXCliente"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALEXENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALEXENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTAL10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTAL10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As VentasDetXClienteRow
            Get
                Return CType(Me.Rows(index),VentasDetXClienteRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasDetXClienteRowChanging As VentasDetXClienteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasDetXClienteRowChanged As VentasDetXClienteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasDetXClienteRowDeleting As VentasDetXClienteRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event VentasDetXClienteRowDeleted As VentasDetXClienteRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddVentasDetXClienteRow(ByVal row As VentasDetXClienteRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddVentasDetXClienteRow(ByVal FECHAVENTA As Date, ByVal NOMBRE As String, ByVal TOTALEXENTA As Decimal, ByVal TOTALIVA As Decimal, ByVal TOTALVENTA As Decimal, ByVal CODCLIENTE As Decimal, ByVal TOTAL5 As Decimal, ByVal TOTAL10 As Decimal, ByVal NUMVENTA As String) As VentasDetXClienteRow
            Dim rowVentasDetXClienteRow As VentasDetXClienteRow = CType(Me.NewRow,VentasDetXClienteRow)
            Dim columnValuesArray() As Object = New Object() {FECHAVENTA, NOMBRE, TOTALEXENTA, TOTALIVA, TOTALVENTA, CODCLIENTE, TOTAL5, TOTAL10, NUMVENTA}
            rowVentasDetXClienteRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowVentasDetXClienteRow)
            Return rowVentasDetXClienteRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As VentasDetXClienteDataTable = CType(MyBase.Clone,VentasDetXClienteDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New VentasDetXClienteDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFECHAVENTA = MyBase.Columns("FECHAVENTA")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnTOTALEXENTA = MyBase.Columns("TOTALEXENTA")
            Me.columnTOTALIVA = MyBase.Columns("TOTALIVA")
            Me.columnTOTALVENTA = MyBase.Columns("TOTALVENTA")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnTOTAL5 = MyBase.Columns("TOTAL5")
            Me.columnTOTAL10 = MyBase.Columns("TOTAL10")
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFECHAVENTA = New Global.System.Data.DataColumn("FECHAVENTA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAVENTA)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnTOTALEXENTA = New Global.System.Data.DataColumn("TOTALEXENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALEXENTA)
            Me.columnTOTALIVA = New Global.System.Data.DataColumn("TOTALIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIVA)
            Me.columnTOTALVENTA = New Global.System.Data.DataColumn("TOTALVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALVENTA)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnTOTAL5 = New Global.System.Data.DataColumn("TOTAL5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL5)
            Me.columnTOTAL10 = New Global.System.Data.DataColumn("TOTAL10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTAL10)
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnNOMBRE.MaxLength = 50
            Me.columnNUMVENTA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewVentasDetXClienteRow() As VentasDetXClienteRow
            Return CType(Me.NewRow,VentasDetXClienteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New VentasDetXClienteRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(VentasDetXClienteRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.VentasDetXClienteRowChangedEvent) Is Nothing) Then
                RaiseEvent VentasDetXClienteRowChanged(Me, New VentasDetXClienteRowChangeEvent(CType(e.Row,VentasDetXClienteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.VentasDetXClienteRowChangingEvent) Is Nothing) Then
                RaiseEvent VentasDetXClienteRowChanging(Me, New VentasDetXClienteRowChangeEvent(CType(e.Row,VentasDetXClienteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.VentasDetXClienteRowDeletedEvent) Is Nothing) Then
                RaiseEvent VentasDetXClienteRowDeleted(Me, New VentasDetXClienteRowChangeEvent(CType(e.Row,VentasDetXClienteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.VentasDetXClienteRowDeletingEvent) Is Nothing) Then
                RaiseEvent VentasDetXClienteRowDeleting(Me, New VentasDetXClienteRowChangeEvent(CType(e.Row,VentasDetXClienteRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveVentasDetXClienteRow(ByVal row As VentasDetXClienteRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVEstadisticas = New DsRVEstadisticas()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "VentasDetXClienteDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVRankingClientesRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVRankingClientes As RVRankingClientesDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVRankingClientes = CType(Me.Table,RVRankingClientesDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.NUMCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.NUMCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE() As Decimal
            Get
                Return CType(Me(Me.tableRVRankingClientes.CODCLIENTEColumn),Decimal)
            End Get
            Set
                Me(Me.tableRVRankingClientes.CODCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALCANTIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.TOTALCANTIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCANTIDAD' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.TOTALCANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALCOSTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.TOTALCOSTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCOSTO' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.TOTALCOSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMNOMCLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.NUMNOMCLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMNOMCLIENTE' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.NUMNOMCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALCONIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.TOTALCONIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCONIVA' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.TOTALCONIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.IVA10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA10' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.IVA10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.IVA5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA5' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.IVA5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBREFANTASIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingClientes.NOMBREFANTASIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBREFANTASIA' in table 'RVRankingClientes' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingClientes.NOMBREFANTASIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.NUMCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableRVRankingClientes.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableRVRankingClientes.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.TOTALCANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALCANTIDADNull()
            Me(Me.tableRVRankingClientes.TOTALCANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALCOSTONull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.TOTALCOSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALCOSTONull()
            Me(Me.tableRVRankingClientes.TOTALCOSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMNOMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.NUMNOMCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMNOMCLIENTENull()
            Me(Me.tableRVRankingClientes.NUMNOMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALCONIVANull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.TOTALCONIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALCONIVANull()
            Me(Me.tableRVRankingClientes.TOTALCONIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA10Null() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.IVA10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA10Null()
            Me(Me.tableRVRankingClientes.IVA10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA5Null() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.IVA5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA5Null()
            Me(Me.tableRVRankingClientes.IVA5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBREFANTASIANull() As Boolean
            Return Me.IsNull(Me.tableRVRankingClientes.NOMBREFANTASIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBREFANTASIANull()
            Me(Me.tableRVRankingClientes.NOMBREFANTASIAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVRankingProductosRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVRankingProductos As RVRankingProductosDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVRankingProductos = CType(Me.Table,RVRankingProductosDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.CANTIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDAD' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALCOSTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.TOTALCOSTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCOSTO' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.TOTALCOSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCODPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.DESCODPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCODPRODUCTO' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.DESCODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALCONIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.TOTALCONIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCONIVA' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.TOTALCONIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.IVA10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA10' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.IVA10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVRankingProductos.IVA5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA5' in table 'RVRankingProductos' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVRankingProductos.IVA5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tableRVRankingProductos.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRVRankingProductos.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRVRankingProductos.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALCOSTONull() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.TOTALCOSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALCOSTONull()
            Me(Me.tableRVRankingProductos.TOTALCOSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCODPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.DESCODPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCODPRODUCTONull()
            Me(Me.tableRVRankingProductos.DESCODPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALCONIVANull() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.TOTALCONIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALCONIVANull()
            Me(Me.tableRVRankingProductos.TOTALCONIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA10Null() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.IVA10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA10Null()
            Me(Me.tableRVRankingProductos.IVA10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA5Null() As Boolean
            Return Me.IsNull(Me.tableRVRankingProductos.IVA5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA5Null()
            Me(Me.tableRVRankingProductos.IVA5Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVVentasCompletoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVVentasCompleto As RVVentasCompletoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVVentasCompleto = CType(Me.Table,RVVentasCompletoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.NUMCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.NUMCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDADVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.CANTIDADVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDADVENTA' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.CANTIDADVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOFIFO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.COSTOFIFOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOFIFO' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.COSTOFIFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALUTILIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.TOTALUTILIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALUTILIDAD' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.TOTALUTILIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAVENTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.FECHAVENTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAVENTA' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.FECHAVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCATEGORIACLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.DESCATEGORIACLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCATEGORIACLIENTE' in table 'RVVentasCompleto' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.DESCATEGORIACLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTABRUTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.PRECIOVENTABRUTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTABRUTO' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.PRECIOVENTABRUTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTALISTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.PRECIOVENTALISTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTALISTA' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.PRECIOVENTALISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasCompleto.CODCLIENTEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'RVVentasCompleto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasCompleto.CODCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.NUMCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableRVVentasCompleto.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableRVVentasCompleto.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.CANTIDADVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADVENTANull()
            Me(Me.tableRVVentasCompleto.CANTIDADVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOFIFONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.COSTOFIFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOFIFONull()
            Me(Me.tableRVVentasCompleto.COSTOFIFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALUTILIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.TOTALUTILIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALUTILIDADNull()
            Me(Me.tableRVVentasCompleto.TOTALUTILIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRVVentasCompleto.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRVVentasCompleto.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.FECHAVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAVENTANull()
            Me(Me.tableRVVentasCompleto.FECHAVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRVVentasCompleto.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRVVentasCompleto.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRVVentasCompleto.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCATEGORIACLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.DESCATEGORIACLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCATEGORIACLIENTENull()
            Me(Me.tableRVVentasCompleto.DESCATEGORIACLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableRVVentasCompleto.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTABRUTONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.PRECIOVENTABRUTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTABRUTONull()
            Me(Me.tableRVVentasCompleto.PRECIOVENTABRUTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTALISTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.PRECIOVENTALISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTALISTANull()
            Me(Me.tableRVVentasCompleto.PRECIOVENTALISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasCompleto.CODCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableRVVentasCompleto.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVVentasPorProductoComparativoMesAnhoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVVentasPorProductoComparativoMesAnho As RVVentasPorProductoComparativoMesAnhoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVVentasPorProductoComparativoMesAnho = CType(Me.Table,RVVentasPorProductoComparativoMesAnhoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Decimal
            Get
                Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.CODCODIGOColumn),Decimal)
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RVVentasPorProductoComparativoMesAnho' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RVVentasPorProductoComparativoMesAnho' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.CANTIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDAD' in table 'RVVentasPorProductoComparativoMesAnho' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALVENTA' in table 'RVVentasPorProductoComparativoMesAnho"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOFIFO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.COSTOFIFOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOFIFO' in table 'RVVentasPorProductoComparativoMesAnho'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.COSTOFIFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALUTILIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALUTILIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALUTILIDAD' in table 'RVVentasPorProductoComparativoMesA"& _ 
                            "nho' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALUTILIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RVVentasPorProductoComparativoMesAnho"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RVVentasPorProductoComparativoMesAnho' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RVVentasPorProductoComparativoMesAnho' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MES() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.MESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MES' in table 'RVVentasPorProductoComparativoMesAnho' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AÑO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorProductoComparativoMesAnho.AÑOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AÑO' in table 'RVVentasPorProductoComparativoMesAnho' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorProductoComparativoMesAnho.AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALVENTANull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOFIFONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.COSTOFIFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOFIFONull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.COSTOFIFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALUTILIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALUTILIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALUTILIDADNull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.TOTALUTILIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMESNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.MESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMESNull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.MESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAÑONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorProductoComparativoMesAnho.AÑOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAÑONull()
            Me(Me.tableRVVentasPorProductoComparativoMesAnho.AÑOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVVentasPorClienteComparativoMesAnhoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVVentasPorClienteComparativoMesAnho As RVVentasPorClienteComparativoMesAnhoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVVentasPorClienteComparativoMesAnho = CType(Me.Table,RVVentasPorClienteComparativoMesAnhoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE() As Decimal
            Get
                Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.CODCLIENTEColumn),Decimal)
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.CODCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOFIFO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.COSTOFIFOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOFIFO' in table 'RVVentasPorClienteComparativoMesAnho' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.COSTOFIFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALUTILIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALUTILIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALUTILIDAD' in table 'RVVentasPorClienteComparativoMesAn"& _ 
                            "ho' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALUTILIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MES() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.MESColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MES' in table 'RVVentasPorClienteComparativoMesAnho' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.MESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AÑO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.AÑOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AÑO' in table 'RVVentasPorClienteComparativoMesAnho' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.AÑOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDADVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.CANTIDADVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDADVENTA' in table 'RVVentasPorClienteComparativoMesAn"& _ 
                            "ho' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.CANTIDADVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALVENTA' in table 'RVVentasPorClienteComparativoMesAnho'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.CLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLIENTE' in table 'RVVentasPorClienteComparativoMesAnho' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.CLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCATEGORIACLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPorClienteComparativoMesAnho.DESCATEGORIACLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCATEGORIACLIENTE' in table 'RVVentasPorClienteComparativ"& _ 
                            "oMesAnho' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPorClienteComparativoMesAnho.DESCATEGORIACLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOFIFONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.COSTOFIFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOFIFONull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.COSTOFIFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALUTILIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALUTILIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALUTILIDADNull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALUTILIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMESNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.MESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMESNull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.MESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAÑONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.AÑOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAÑONull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.AÑOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.CANTIDADVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADVENTANull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.CANTIDADVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALVENTANull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.TOTALVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.CLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLIENTENull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.CLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCATEGORIACLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPorClienteComparativoMesAnho.DESCATEGORIACLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCATEGORIACLIENTENull()
            Me(Me.tableRVVentasPorClienteComparativoMesAnho.DESCATEGORIACLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVVentasPrecioVentaVsCostoPorProductoRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVVentasPrecioVentaVsCostoPorProducto As RVVentasPrecioVentaVsCostoPorProductoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVVentasPrecioVentaVsCostoPorProducto = CType(Me.Table,RVVentasPrecioVentaVsCostoPorProductoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAVENTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.FECHAVENTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAVENTA' in table 'RVVentasPrecioVentaVsCostoPorProducto"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.FECHAVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'RVVentasPrecioVentaVsCostoPorProducto'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDADVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CANTIDADVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDADVENTA' in table 'RVVentasPrecioVentaVsCostoPorProdu"& _ 
                            "cto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CANTIDADVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RVVentasPrecioVentaVsCostoPorProducto' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'RVVentasPrecioVentaVsCostoPorProducto' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTEColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'RVVentasPrecioVentaVsCostoPorProducto"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NUMCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'RVVentasPrecioVentaVsCostoPorProducto"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NUMCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'RVVentasPrecioVentaVsCostoPorProducto' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTABRUTO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTABRUTO' in table 'RVVentasPrecioVentaVsCostoPorPr"& _ 
                            "oducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOFIFO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.COSTOFIFOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOFIFO' in table 'RVVentasPrecioVentaVsCostoPorProducto'"& _ 
                            " is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.COSTOFIFOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALUTILIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.TOTALUTILIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALUTILIDAD' in table 'RVVentasPrecioVentaVsCostoPorProdu"& _ 
                            "cto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.TOTALUTILIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCATEGORIACLIENTE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESCATEGORIACLIENTEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCATEGORIACLIENTE' in table 'RVVentasPrecioVentaVsCostoPo"& _ 
                            "rProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESCATEGORIACLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'RVVentasPrecioVentaVsCostoPorProducto"& _ 
                            "' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RVVentasPrecioVentaVsCostoPorProducto' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RVVentasPrecioVentaVsCostoPorProducto' "& _ 
                            "is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTANETO() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETOColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTANETO' in table 'RVVentasPrecioVentaVsCostoPorPro"& _ 
                            "ducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTALISTA() As Long
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTAColumn),Long)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTALISTA' in table 'RVVentasPrecioVentaVsCostoPorPr"& _ 
                            "oducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODPROMOCION() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODPROMOCIONColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODPROMOCION' in table 'RVVentasPrecioVentaVsCostoPorProdu"& _ 
                            "cto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODPROMOCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOCOSTOBRUTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOCOSTOBRUTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOCOSTOBRUTO' in table 'RVVentasPrecioVentaVsCostoPorPr"& _ 
                            "oducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOCOSTOBRUTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTE1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE1' in table 'RVVentasPrecioVentaVsCostoPorProduct"& _ 
                            "o' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTE1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTABRUTO1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTO1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTABRUTO1' in table 'RVVentasPrecioVentaVsCostoPorP"& _ 
                            "roducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTANETO1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETO1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTANETO1' in table 'RVVentasPrecioVentaVsCostoPorPr"& _ 
                            "oducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTALISTA1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTA1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTALISTA1' in table 'RVVentasPrecioVentaVsCostoPorP"& _ 
                            "roducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTA1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIVA' in table 'RVVentasPrecioVentaVsCostoPorProducto' is"& _ 
                            " DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.FECHAVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAVENTANull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.FECHAVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CANTIDADVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADVENTANull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CANTIDADVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NUMCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTABRUTONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTABRUTONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOFIFONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.COSTOFIFOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOFIFONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.COSTOFIFOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALUTILIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.TOTALUTILIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALUTILIDADNull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.TOTALUTILIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCATEGORIACLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESCATEGORIACLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCATEGORIACLIENTENull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESCATEGORIACLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTANETONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTANETONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTALISTANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTALISTANull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODPROMOCIONNull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODPROMOCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODPROMOCIONNull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRODPROMOCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOCOSTOBRUTONull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOCOSTOBRUTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOCOSTOBRUTONull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOCOSTOBRUTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCLIENTE1Null() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTE1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCLIENTE1Null()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODCLIENTE1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTABRUTO1Null() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTABRUTO1Null()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTABRUTO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTANETO1Null() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTANETO1Null()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTANETO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTALISTA1Null() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTA1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTALISTA1Null()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.PRECIOVENTALISTA1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIVANull() As Boolean
            Return Me.IsNull(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIVANull()
            Me(Me.tableRVVentasPrecioVentaVsCostoPorProducto.CODIVAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVINCIDENCIANCSOBREVTARow
        Inherits Global.System.Data.DataRow
        
        Private tableRVINCIDENCIANCSOBREVTA As RVINCIDENCIANCSOBREVTADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVINCIDENCIANCSOBREVTA = CType(Me.Table,RVINCIDENCIANCSOBREVTADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.CANTVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTVTA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.CANTVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTNC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.CANTNCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTNC' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.CANTNCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTCIVAVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVAVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTCIVAVTA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVAVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTCIVANC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVANCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTCIVANC' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVANCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.COSTOVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOVTA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.COSTOVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTONC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.COSTONCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTONC' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.COSTONCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA10VTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA10VTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA10VTA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA10VTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA10NC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA10NCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA10NC' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA10NCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA5VTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA5VTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA5VTA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA5VTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA5NC() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA5NCColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA5NC' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA5NCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.CODCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.CODCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.NUMCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.NUMCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBREFANTASIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREFANTASIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBREFANTASIA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREFANTASIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRVINCIDENCIANCSOBREVTA.FECHAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHA' in table 'RVINCIDENCIANCSOBREVTA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVINCIDENCIANCSOBREVTA.FECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTVTANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.CANTVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTVTANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.CANTVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTNCNull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.CANTNCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTNCNull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.CANTNCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTCIVAVTANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVAVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTCIVAVTANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVAVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTCIVANCNull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVANCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTCIVANCNull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.TOTCIVANCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOVTANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.COSTOVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOVTANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.COSTOVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTONCNull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.COSTONCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTONCNull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.COSTONCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA10VTANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.IVA10VTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA10VTANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA10VTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA10NCNull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.IVA10NCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA10NCNull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA10NCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA5VTANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.IVA5VTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA5VTANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA5VTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVA5NCNull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.IVA5NCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVA5NCNull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.IVA5NCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.CODCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.NUMCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBREFANTASIANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREFANTASIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBREFANTASIANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.NOMBREFANTASIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHANull() As Boolean
            Return Me.IsNull(Me.tableRVINCIDENCIANCSOBREVTA.FECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHANull()
            Me(Me.tableRVINCIDENCIANCSOBREVTA.FECHAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RVUtilidadVentasRow
        Inherits Global.System.Data.DataRow
        
        Private tableRVUtilidadVentas As RVUtilidadVentasDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRVUtilidadVentas = CType(Me.Table,RVUtilidadVentasDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMVENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.NUMVENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.NUMVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAVENTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.FECHAVENTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAVENTA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.FECHAVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.PRECIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIO' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.PRECIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTALISTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.PRECIOVENTALISTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTALISTA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.PRECIOVENTALISTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIFERENCIA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.DIFERENCIAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIFERENCIA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.DIFERENCIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UTILIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.UTILIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'UTILIDAD' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.UTILIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDADVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.CANTIDADVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDADVENTA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.CANTIDADVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RUC() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.RUCColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RUC' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.RUCColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOVENTA() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.TIPOVENTAColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOVENTA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.TIPOVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.TOTALVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALVENTA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.TOTALVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.TOTAL5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL5' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.TOTAL5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.TOTAL10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL10' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.TOTAL10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.TOTALIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALIVA' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.TOTALIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESVENDEDOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.DESVENDEDORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESVENDEDOR' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.DESVENDEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOTIVODESCUENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.MOTIVODESCUENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOTIVODESCUENTO' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.MOTIVODESCUENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTANETO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRVUtilidadVentas.PRECIOVENTANETOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTANETO' in table 'RVUtilidadVentas' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRVUtilidadVentas.PRECIOVENTANETOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableRVUtilidadVentas.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableRVUtilidadVentas.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.NUMVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMVENTANull()
            Me(Me.tableRVUtilidadVentas.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.FECHAVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAVENTANull()
            Me(Me.tableRVUtilidadVentas.FECHAVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableRVUtilidadVentas.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIONull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.PRECIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIONull()
            Me(Me.tableRVUtilidadVentas.PRECIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTALISTANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.PRECIOVENTALISTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTALISTANull()
            Me(Me.tableRVUtilidadVentas.PRECIOVENTALISTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIFERENCIANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.DIFERENCIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIFERENCIANull()
            Me(Me.tableRVUtilidadVentas.DIFERENCIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUTILIDADNull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.UTILIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUTILIDADNull()
            Me(Me.tableRVUtilidadVentas.UTILIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.CANTIDADVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADVENTANull()
            Me(Me.tableRVUtilidadVentas.CANTIDADVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRUCNull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.RUCColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRUCNull()
            Me(Me.tableRVUtilidadVentas.RUCColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.TIPOVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOVENTANull()
            Me(Me.tableRVUtilidadVentas.TIPOVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALVENTANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.TOTALVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALVENTANull()
            Me(Me.tableRVUtilidadVentas.TOTALVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL5Null() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.TOTAL5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL5Null()
            Me(Me.tableRVUtilidadVentas.TOTAL5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL10Null() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.TOTAL10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL10Null()
            Me(Me.tableRVUtilidadVentas.TOTAL10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALIVANull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.TOTALIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALIVANull()
            Me(Me.tableRVUtilidadVentas.TOTALIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.DESVENDEDORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESVENDEDORNull()
            Me(Me.tableRVUtilidadVentas.DESVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOTIVODESCUENTONull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.MOTIVODESCUENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOTIVODESCUENTONull()
            Me(Me.tableRVUtilidadVentas.MOTIVODESCUENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTANETONull() As Boolean
            Return Me.IsNull(Me.tableRVUtilidadVentas.PRECIOVENTANETOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTANETONull()
            Me(Me.tableRVUtilidadVentas.PRECIOVENTANETOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class NumVentaRow
        Inherits Global.System.Data.DataRow
        
        Private tableNumVenta As NumVentaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableNumVenta = CType(Me.Table,NumVentaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMVENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableNumVenta.NUMVENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'NumVenta' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableNumVenta.NUMVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableNumVenta.NUMVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMVENTANull()
            Me(Me.tableNumVenta.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class VentasDetXClienteRow
        Inherits Global.System.Data.DataRow
        
        Private tableVentasDetXCliente As VentasDetXClienteDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableVentasDetXCliente = CType(Me.Table,VentasDetXClienteDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAVENTA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.FECHAVENTAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAVENTA' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.FECHAVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALEXENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.TOTALEXENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALEXENTA' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.TOTALEXENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.TOTALIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALIVA' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.TOTALIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.TOTALVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALVENTA' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.TOTALVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.CODCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.CODCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.TOTAL5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL5' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.TOTAL5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTAL10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.TOTAL10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTAL10' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.TOTAL10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMVENTA() As String
            Get
                Try 
                    Return CType(Me(Me.tableVentasDetXCliente.NUMVENTAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'VentasDetXCliente' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableVentasDetXCliente.NUMVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAVENTANull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.FECHAVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAVENTANull()
            Me(Me.tableVentasDetXCliente.FECHAVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableVentasDetXCliente.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALEXENTANull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.TOTALEXENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALEXENTANull()
            Me(Me.tableVentasDetXCliente.TOTALEXENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALIVANull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.TOTALIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALIVANull()
            Me(Me.tableVentasDetXCliente.TOTALIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALVENTANull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.TOTALVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALVENTANull()
            Me(Me.tableVentasDetXCliente.TOTALVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.CODCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableVentasDetXCliente.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL5Null() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.TOTAL5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL5Null()
            Me(Me.tableVentasDetXCliente.TOTAL5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTAL10Null() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.TOTAL10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTAL10Null()
            Me(Me.tableVentasDetXCliente.TOTAL10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableVentasDetXCliente.NUMVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMVENTANull()
            Me(Me.tableVentasDetXCliente.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVRankingClientesRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVRankingClientesRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVRankingClientesRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVRankingClientesRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVRankingProductosRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVRankingProductosRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVRankingProductosRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVRankingProductosRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVVentasCompletoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVVentasCompletoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVVentasCompletoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVVentasCompletoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVVentasPorProductoComparativoMesAnhoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVVentasPorProductoComparativoMesAnhoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVVentasPorProductoComparativoMesAnhoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVVentasPorProductoComparativoMesAnhoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVVentasPorClienteComparativoMesAnhoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVVentasPorClienteComparativoMesAnhoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVVentasPorClienteComparativoMesAnhoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVVentasPorClienteComparativoMesAnhoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVVentasPrecioVentaVsCostoPorProductoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVVentasPrecioVentaVsCostoPorProductoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVVentasPrecioVentaVsCostoPorProductoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVVentasPrecioVentaVsCostoPorProductoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVINCIDENCIANCSOBREVTARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVINCIDENCIANCSOBREVTARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVINCIDENCIANCSOBREVTARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVINCIDENCIANCSOBREVTARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RVUtilidadVentasRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RVUtilidadVentasRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RVUtilidadVentasRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RVUtilidadVentasRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class NumVentaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As NumVentaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As NumVentaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As NumVentaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class VentasDetXClienteRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As VentasDetXClienteRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As VentasDetXClienteRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As VentasDetXClienteRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DsRVEstadisticasTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVRankingClientesTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVRankingClientes"
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("TOTALCANTIDAD", "TOTALCANTIDAD")
            tableMapping.ColumnMappings.Add("TOTALCOSTO", "TOTALCOSTO")
            tableMapping.ColumnMappings.Add("NUMNOMCLIENTE", "NUMNOMCLIENTE")
            tableMapping.ColumnMappings.Add("TOTALCONIVA", "TOTALCONIVA")
            tableMapping.ColumnMappings.Add("IVA10", "IVA10")
            tableMapping.ColumnMappings.Add("IVA5", "IVA5")
            tableMapping.ColumnMappings.Add("NOMBREFANTASIA", "NOMBREFANTASIA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT CLIENTES.CODCLIENTE, CLIENTES.NUMCLIENTE, CLIENTE"& _ 
                "S.NOMBRE, SUM(VENTASDETALLE.CANTIDADVENTA) AS TOTALCANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALCONIVA, SUM(ISNULL(VENTASDET"& _ 
                "ALLE.COSTOPROMEDIO, 0) * VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " AS TOTALCOSTO, SUM(VENTASDETALLE.IMPORTEGRABADODIEZ) / 11 AS IVA10, SUM(VENTASD"& _ 
                "ETALLE.IMPORTEGRABADOCINCO) / 21 AS IVA5, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RTRIM(CLIEN"& _ 
                "TES.NOMBRE) + ' (' + ISNULL(CONVERT(VARCHAR, CLIENTES.NUMCLIENTE), '') + ')' AS "& _ 
                "NUMNOMCLIENTE, CLIENTES.NOMBREFANTASIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                    VENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA IN"& _ 
                "NER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODC"& _ 
                "LIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS.FECHAVENTA <= @ha"& _ 
                "sta) AND (VENTAS.ESTADO = 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.NOMBRE, CLIENTES.NUMCLIENTE, CLI"& _ 
                "ENTES.CODCLIENTE, CLIENTES.NOMBREFANTASIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TOTALCONIVA DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVRankingClientesDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.RVRankingClientesDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVRankingClientesDataTable = New DsRVEstadisticas.RVRankingClientesDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVRankingProductosTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVRankingProductos"
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("TOTALCOSTO", "TOTALCOSTO")
            tableMapping.ColumnMappings.Add("DESCODPRODUCTO", "DESCODPRODUCTO")
            tableMapping.ColumnMappings.Add("TOTALCONIVA", "TOTALCONIVA")
            tableMapping.ColumnMappings.Add("IVA10", "IVA10")
            tableMapping.ColumnMappings.Add("IVA5", "IVA5")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT dbo.CODIGOS.CODIGO, LTRIM(dbo.PRODUCTOS.DESPRODUC"& _ 
                "TO) + ' ' + LTRIM(ISNULL(dbo.CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " + ' ' + LTRIM(ISNULL(dbo.CODIGOS.DESCODIGO2, '')) AS PRODUCTO, SUM(dbo.VENTASDE"& _ 
                "TALLE.CANTIDADVENTA) AS CANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(dbo.VENTASDETAL"& _ 
                "LE.PRECIOVENTABRUTO) AS TOTALCONIVA, SUM(ISNULL(dbo.VENTASDETALLE.COSTOPROMEDIO,"& _ 
                " 0) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         * dbo.VENTASDETALLE.CANTIDADVENTA) AS TOTALCOSTO,"& _ 
                " SUM(dbo.VENTASDETALLE.IMPORTEGRABADODIEZ) / 11 AS IVA10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     SUM(dbo.VENTASDETALLE.IMPORTEGRABADOCINCO) / 21 AS IVA5, RTRIM(dbo.PRODUCTO"& _ 
                "S.DESPRODUCTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' (' + dbo.CODIGOS.CODIGO + ')' AS D"& _ 
                "ESCODPRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.VENTASDETALLE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      dbo.PRODUCTOS ON dbo.PRODUCTOS.CODPRODUCTO = dbo.VENTASDETALLE.CODPRODUCTO"& _ 
                " INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS ON dbo.PRODUCTOS.CODPRODUCTO ="& _ 
                " dbo.CODIGOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.VENTAS ON dbo."& _ 
                "VENTASDETALLE.CODVENTA = dbo.VENTAS.CODVENTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (dbo.VENTAS.FECHAVENT"& _ 
                "A >= @desde) AND (dbo.VENTAS.FECHAVENTA <= @hasta) AND (dbo.VENTAS.ESTADO = 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "GROUP BY dbo.CODIGOS.CODIGO, LTRIM(dbo.PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(ISNU"& _ 
                "LL(dbo.CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(ISNULL("& _ 
                "dbo.CODIGOS.DESCODIGO2, '')), RTRIM(dbo.PRODUCTOS.DESPRODUCTO) + ' (' + dbo.CODI"& _ 
                "GOS.CODIGO + ')'"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY TOTALCONIVA DESC"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVRankingProductosDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.RVRankingProductosDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVRankingProductosDataTable = New DsRVEstadisticas.RVRankingProductosDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVVentasCompletoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVVentasCompleto"
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("CANTIDADVENTA", "CANTIDADVENTA")
            tableMapping.ColumnMappings.Add("COSTOFIFO", "COSTOFIFO")
            tableMapping.ColumnMappings.Add("TOTALUTILIDAD", "TOTALUTILIDAD")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("FECHAVENTA", "FECHAVENTA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("DESCATEGORIACLIENTE", "DESCATEGORIACLIENTE")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("PRECIOVENTABRUTO", "PRECIOVENTABRUTO")
            tableMapping.ColumnMappings.Add("PRECIOVENTALISTA", "PRECIOVENTALISTA")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(10) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(ISNULL(C"& _ 
                "ODIGOS.DESCODIGO1, '')) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 AS PRODUCTO, CLIENTES.NUMCLIENTE, CLIENTES.NOMBRE, VENTASDETALL"& _ 
                "E.CANTIDADVENTA, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   AS COSTOFIFO, CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTAB"& _ 
                "RUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDAD,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "           VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACLIENTE, FAMILIA.DESF"& _ 
                "AMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CODIGOS.CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      VENTASDETALLE.PRECIOVENTABRUTO, VENTASDETALLE.PRECIOVENTALISTA, VENTAS.COD"& _ 
                "CLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETAL"& _ 
                "LE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODI"& _ 
                "GO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PROD"& _ 
                "UCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENT"& _ 
                "E.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS.FE"& _ 
                "CHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      dbo.VENTASDETALLE.PRECIOVENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                      VENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA "& _ 
                "LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE = CLIENT"& _ 
                "ES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON VENTASDETAL"& _ 
                "LE.CODPRODUCTO = PRODUCTOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                " CODIGOS ON VENTASDETALLE.CODCODIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LE"& _ 
                "FT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODR"& _ 
                "UBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CATEGORIACLIENTE ON CLIENTES.CODC"& _ 
                "ATEGORIACLIENTE = CATEGORIACLIENTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FEC"& _ 
                "HAVENTA >= @desde) AND (VENTAS.FECHAVENTA <= @hasta)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND (CODIGOS.CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                   (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM     "& _ 
                "       dbo.fnPartir(@Plan, ',') AS fnPartir_1)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (LE"& _ 
                "N(ISNULL(@Plan, '')) = 0)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND (CLIENTES.NUMCLIENTE IN (@Numc"& _ 
                "liente))"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Numcliente", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CA"& _ 
                "TEGORIACLIENTE.CODCATEGORIACLIENTE IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT     "& _ 
                "   item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',')"& _ 
                " AS fnPartir_1)) AND (CLIENTES.NUMCLIENTE IN (@Numcliente))"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Numcliente", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND CLIENTES.NUMCLIENTE BETWEEN @N"& _ 
                "UMDESDE AND @NUMHASTA"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMDESDE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMHASTA", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND (CATEGORIACLIENTE.CODCATEGORIA"& _ 
                "CLIENTE IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "             FROM            dbo.fnPartir(@Plan, ',') AS fnPartir_1)) AND CLIENT"& _ 
                "ES.NUMCLIENTE BETWEEN @NUMDESDE AND @NUMHASTA"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMDESDE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMHASTA", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(7).Connection = Me.Connection
            Me._commandCollection(7).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND (CODIGOS.CODIGO BETWEEN @CODDE"& _ 
                "SDE AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         @CODHASTA)"
            Me._commandCollection(7).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDESDE", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(7).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODHASTA", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(8).Connection = Me.Connection
            Me._commandCollection(8).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND (CATEGORIACLIENTE.CODCATEGORIA"& _ 
                "CLIENTE IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "             FROM            dbo.fnPartir(@Plan, ',') AS fnPartir_1))"
            Me._commandCollection(8).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(8).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(9).Connection = Me.Connection
            Me._commandCollection(9).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND CLIENTES.CODCLIENTE=@CODCLIENT"& _ 
                "E"
            Me._commandCollection(9).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(9).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCLIENTE", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(10).Connection = Me.Connection
            Me._commandCollection(10).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LT"& _ 
                "RIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.CANTIDADVEN"& _ 
                "TA, VENTASDETALLE.PRECIOVENTABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) AS CO"& _ 
                "STOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT"& _ 
                " NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASD"& _ 
                "ETALLE.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDA"& _ 
                "D, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA, CATEGORIACLIENTE.DESCATEGORIACL"& _ 
                "IENTE, FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOV"& _ 
                "ENTALISTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDET"& _ 
                "ALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODP"& _ 
                "RODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCO"& _ 
                "DIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PR"& _ 
                "ODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIE"& _ 
                "NTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= @desde) AND (VENTAS."& _ 
                "FECHAVENTA <= @hasta) AND (VENTAS.ESTADO = 1) AND PRODUCTOS.CODPRODUCTO=@CODPROD"& _ 
                "UCTO"
            Me._commandCollection(10).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(10).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByListaProd(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByListaProd(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNumCliente(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Numcliente As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Numcliente,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNumCliente(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Numcliente As Decimal) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Numcliente,Decimal)
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNumClienteCateg(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Numcliente As Decimal, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Numcliente,Decimal)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNumClienteCateg(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Numcliente As Decimal, ByVal Plan As String) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(Numcliente,Decimal)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNumClienteDH(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal NUMDESDE As Global.System.Nullable(Of Decimal), ByVal NUMHASTA As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (NUMDESDE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(NUMDESDE.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NUMHASTA.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNumClienteDH(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal NUMDESDE As Global.System.Nullable(Of Decimal), ByVal NUMHASTA As Global.System.Nullable(Of Decimal)) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (NUMDESDE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(NUMDESDE.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NUMHASTA.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNumClienteDHCateg(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal NUMDESDE As Global.System.Nullable(Of Decimal), ByVal NUMHASTA As Global.System.Nullable(Of Decimal), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (NUMDESDE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(NUMDESDE.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NUMHASTA.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNumClienteDHCateg(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal NUMDESDE As Global.System.Nullable(Of Decimal), ByVal NUMHASTA As Global.System.Nullable(Of Decimal), ByVal Plan As String) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (NUMDESDE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(NUMDESDE.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(NUMHASTA.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByPRODDH(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODDESDE As String, ByVal CODHASTA As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODDESDE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODDESDE,String)
            End If
            If (CODHASTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODHASTA,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByPRODDH(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODDESDE As String, ByVal CODHASTA As String) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(7)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODDESDE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODDESDE,String)
            End If
            If (CODHASTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODHASTA,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySCateg(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySCateg(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(8)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByUnCliente(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODCLIENTE As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCLIENTE,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByUnCliente(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODCLIENTE As Integer) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(9)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCLIENTE,Integer)
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByUnProd(ByVal dataTable As DsRVEstadisticas.RVVentasCompletoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODPRODUCTO As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODPRODUCTO,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByUnProd(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODPRODUCTO As Decimal) As DsRVEstadisticas.RVVentasCompletoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(10)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODPRODUCTO,Decimal)
            Dim dataTable As DsRVEstadisticas.RVVentasCompletoDataTable = New DsRVEstadisticas.RVVentasCompletoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVVentasPorProductoComparativoMesAnhoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVVentasPorProductoComparativoMesAnho"
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("TOTALVENTA", "TOTALVENTA")
            tableMapping.ColumnMappings.Add("COSTOFIFO", "COSTOFIFO")
            tableMapping.ColumnMappings.Add("TOTALUTILIDAD", "TOTALUTILIDAD")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("MES", "MES")
            tableMapping.ColumnMappings.Add("AÑO", "AÑO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO + ' - ' + LTRIM(PRODUCTOS.DESPROD"& _ 
                "UCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         +"& _ 
                " ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, SUM(VENTASDETALLE.CANT"& _ 
                "IDADVENTA) AS CANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(VENTASDETALLE.PRECIOVENTA"& _ 
                "BRUTO) AS TOTALVENTA, SUM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL"& _ 
                " OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALL"& _ 
                "E.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CO"& _ 
                "NVERT(varchar, DATENAME(month, VENTAS.FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       YEAR(VENTAS.FECHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS I"& _ 
                "NNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE ON VENTAS.CODVENTA = VENTASDET"& _ 
                "ALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE"& _ 
                " = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON VENTASD"& _ 
                "ETALLE.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CODIGOS ON VENTASDETALLE.CODCODIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEF"& _ 
                "T OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRU"& _ 
                "BRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TIPOCLIENTE ON CLIENTES.CODTIPOCLI"& _ 
                "ENTE = TIPOCLIENTE.CODTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS."& _ 
                "FECHAVENTA >= @desde) AND (VENTAS.FECHAVENTA <= @hasta)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODCOD"& _ 
                "IGO, CODIGOS.CODIGO + ' - ' + LTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(ISNULL("& _ 
                "CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(ISNULL(CODIGOS"& _ 
                ".DESCODIGO2, '')), FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CONVERT(v"& _ 
                "archar, DATENAME(month, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA)), CONVERT("& _ 
                "varchar, YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO + ' - ' + LTRIM(PRODUCTOS.DESPROD"& _ 
                "UCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         +"& _ 
                " ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, SUM(VENTASDETALLE.CANT"& _ 
                "IDADVENTA) AS CANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(VENTASDETALLE.PRECIOVENTA"& _ 
                "BRUTO) AS TOTALVENTA, SUM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL"& _ 
                " OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALL"& _ 
                "E.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CO"& _ 
                "NVERT(varchar, DATENAME(month, VENTAS.FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       YEAR(VENTAS.FECHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS I"& _ 
                "NNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE ON VENTAS.CODVENTA = VENTASDET"& _ 
                "ALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE"& _ 
                " = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON VENTASD"& _ 
                "ETALLE.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CODIGOS ON VENTASDETALLE.CODCODIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEF"& _ 
                "T OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRU"& _ 
                "BRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TIPOCLIENTE ON CLIENTES.CODTIPOCLI"& _ 
                "ENTE = TIPOCLIENTE.CODTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS."& _ 
                "FECHAVENTA >= @desde) AND (VENTAS.FECHAVENTA <= @hasta) AND (CODIGOS.CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                             (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                " FROM            dbo.fnPartir(@Plan, ',') AS fnPartir_1)) OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       (LEN(ISNULL(@Plan, '')) = 0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODCODIGO, CODIGOS.CODIGO "& _ 
                "+ ' - ' + LTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, "& _ 
                "'')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')), F"& _ 
                "AMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CONVERT(varchar, DATENAME(mon"& _ 
                "th, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.FECHAVENTA)), CONVERT(varchar, YEAR(VENTAS"& _ 
                ".FECHAVENTA))"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO + ' - ' + LTRIM(PRODUCTOS.DESPROD"& _ 
                "UCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         +"& _ 
                " ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, SUM(VENTASDETALLE.CANT"& _ 
                "IDADVENTA) AS CANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(VENTASDETALLE.PRECIOVENTA"& _ 
                "BRUTO) AS TOTALVENTA, SUM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL"& _ 
                " OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALL"& _ 
                "E.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CO"& _ 
                "NVERT(varchar, DATENAME(month, VENTAS.FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       YEAR(VENTAS.FECHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS I"& _ 
                "NNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE ON VENTAS.CODVENTA = VENTASDET"& _ 
                "ALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE"& _ 
                " = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON VENTASD"& _ 
                "ETALLE.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CODIGOS ON VENTASDETALLE.CODCODIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEF"& _ 
                "T OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRU"& _ 
                "BRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TIPOCLIENTE ON CLIENTES.CODTIPOCLI"& _ 
                "ENTE = TIPOCLIENTE.CODTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS."& _ 
                "FECHAVENTA >= @desde) AND (VENTAS.FECHAVENTA <= @hasta) AND (CODIGOS.CODIGO BETW"& _ 
                "EEN @CODDESDE AND @CODHASTA)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODCODIGO, CODIGOS.CODIGO + ' - '"& _ 
                " + LTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')), FAMILIA."& _ 
                "DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CONVERT(varchar, DATENAME(month, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        VENTAS.FECHAVENTA)), CONVERT(varchar, YEAR(VENTAS.FECHAV"& _ 
                "ENTA))"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDESDE", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODHASTA", Global.System.Data.SqlDbType.VarChar, 150, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO + ' - ' + LTRIM(PRODUCTOS.DESPROD"& _ 
                "UCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         +"& _ 
                " ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')) AS PRODUCTO, SUM(VENTASDETALLE.CANT"& _ 
                "IDADVENTA) AS CANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(VENTASDETALLE.PRECIOVENTA"& _ 
                "BRUTO) AS TOTALVENTA, SUM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL"& _ 
                " OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALL"& _ 
                "E.PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, CO"& _ 
                "NVERT(varchar, DATENAME(month, VENTAS.FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       YEAR(VENTAS.FECHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS I"& _ 
                "NNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE ON VENTAS.CODVENTA = VENTASDET"& _ 
                "ALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE"& _ 
                " = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON VENTASD"& _ 
                "ETALLE.CODPRODUCTO = PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "CODIGOS ON VENTASDETALLE.CODCODIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER"& _ 
                " JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEF"& _ 
                "T OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRU"& _ 
                "BRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TIPOCLIENTE ON CLIENTES.CODTIPOCLI"& _ 
                "ENTE = TIPOCLIENTE.CODTIPOCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS."& _ 
                "FECHAVENTA >= @desde) AND (VENTAS.FECHAVENTA <= @hasta) AND PRODUCTOS.CODPRODUCT"& _ 
                "O=@CODPRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODCODIGO, CODIGOS.CODIGO + ' - ' + LTRIM(PRODU"& _ 
                "CTOS.DESPRODUCTO) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIGO2, '')), FAMILIA.DESFAMILIA, LI"& _ 
                "NEA.DESLINEA, RUBRO.DESRUBRO, CONVERT(varchar, DATENAME(month, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          VENTAS.FECHAVENTA)), CONVERT(varchar, YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByListaProd(ByVal dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByListaProd(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByProdDH(ByVal dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODDESDE As String, ByVal CODHASTA As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODDESDE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODDESDE,String)
            End If
            If (CODHASTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODHASTA,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByProdDH(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODDESDE As String, ByVal CODHASTA As String) As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODDESDE Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODDESDE,String)
            End If
            If (CODHASTA Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODHASTA,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByUnProducto(ByVal dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODPRODUCTO As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODPRODUCTO,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByUnProducto(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODPRODUCTO As Decimal) As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODPRODUCTO,Decimal)
            Dim dataTable As DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorProductoComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVVentasPorClienteComparativoMesAnhoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVVentasPorClienteComparativoMesAnho"
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("COSTOFIFO", "COSTOFIFO")
            tableMapping.ColumnMappings.Add("TOTALUTILIDAD", "TOTALUTILIDAD")
            tableMapping.ColumnMappings.Add("MES", "MES")
            tableMapping.ColumnMappings.Add("AÑO", "AÑO")
            tableMapping.ColumnMappings.Add("CANTIDADVENTA", "CANTIDADVENTA")
            tableMapping.ColumnMappings.Add("TOTALVENTA", "TOTALVENTA")
            tableMapping.ColumnMappings.Add("CLIENTE", "CLIENTE")
            tableMapping.ColumnMappings.Add("DESCATEGORIACLIENTE", "DESCATEGORIACLIENTE")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(6) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS TOTALUTILIDA"& _ 
                "D, CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONVERT(varchar, YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CATEGORIA"& _ 
                "CLIENTE.CODCATEGORIACLIENTE IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',') AS fnP"& _ 
                "artir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) +"& _ 
                " ' - ' + CLIENTES.NOMBRE, CATEGORIACLIENTE.DESCATEGORIACLIENTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CONVERT(varchar, DATENAME(month, VENTAS.FECHAVENTA)), CONVERT(varchar"& _ 
                ", YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.CODCLIENTE, CONVERT(v"& _ 
                "archar, CLIENTES.NUMCLIENTE) + ' - ' + CLIENTES.NOMBRE, CATEGORIACLIENTE.DESCATE"& _ 
                "GORIACLIENTE, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)), CONVERT(varchar, YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) AND (CLIENTES.NUMCLIENTE IN (@listanum))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' + C"& _ 
                "LIENTES.NOMBRE, CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                  DATENAME(month, VENTAS.FECHAVENTA)), CONVERT(varchar, YEAR(VEN"& _ 
                "TAS.FECHAVENTA))"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@listanum", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS TOTALUTILIDA"& _ 
                "D, CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONVERT(varchar, YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CATEGORIA"& _ 
                "CLIENTE.CODCATEGORIACLIENTE IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',') AS fnP"& _ 
                "artir_1)) AND (CLIENTES.NUMCLIENTE IN (@listanum))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.CODCLIENTE"& _ 
                ", CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' + CLIENTES.NOMBRE, CATEGORIACLIE"& _ 
                "NTE.DESCATEGORIACLIENTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CONVERT(varchar, DATENAME(mo"& _ 
                "nth, VENTAS.FECHAVENTA)), CONVERT(varchar, YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@listanum", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) AND (CLIENTES.NUMCLIENTE BETWEEN @CODINI "& _ 
                "AND @CODFIN)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE"& _ 
                ") + ' - ' + CLIENTES.NOMBRE, CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varch"& _ 
                "ar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DATENAME(month, VENTAS.FECHAVENTA)), CONVERT(varc"& _ 
                "har, YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINI", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFIN", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) AND (CATEGORIACLIENTE.CODCATEGORIACLIENTE"& _ 
                " IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "      FROM            dbo.fnPartir(@Plan, ',') AS fnPartir_1)) AND (CLIENTES.NUM"& _ 
                "CLIENTE BETWEEN @CODINI AND @CODFIN)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CLIENTES.CODCLIENTE, CONVERT(varc"& _ 
                "har, CLIENTES.NUMCLIENTE) + ' - ' + CLIENTES.NOMBRE, CATEGORIACLIENTE.DESCATEGOR"& _ 
                "IACLIENTE, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         DATENAME(month, VENTAS.FE"& _ 
                "CHAVENTA)), CONVERT(varchar, YEAR(VENTAS.FECHAVENTA))"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINI", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFIN", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(6).Connection = Me.Connection
            Me._commandCollection(6).CommandText = "SELECT        CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' "& _ 
                "+ CLIENTES.NOMBRE AS CLIENTE, SUM(VENTASDETALLE.CANTIDADVENTA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          AS CANTIDADVENTA, SUM(VENTASDETALLE.PRECIOVENTABRUTO) AS TOTALVENTA, S"& _ 
                "UM(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0)) AS COSTOFIFO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    SUM(CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE.PRECIOVENTABRUTO - VE"& _ 
                "NTASDETALLE.COSTOPROMEDIO ELSE 0 END) AS TOTALUTILIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, DATENAME(month, VENTAS"& _ 
                ".FECHAVENTA)) AS MES, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         YEAR(VENTAS.FE"& _ 
                "CHAVENTA)) AS AÑO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         V"& _ 
                "ENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       PRODUCTOS ON VENTASDETALLE.CODPRODUCTO = PRODUCTOS.CODPRO"& _ 
                "DUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON VENTASDETALLE.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS"& _ 
                ".CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA"& _ 
                " ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIENTE = CATEGORIACLIENTE.COD"& _ 
                "CATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @de"& _ 
                "sde) AND (VENTAS.FECHAVENTA <= @hasta) AND (CLIENTES.CODCLIENTE =@CODCLIENTE)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"G"& _ 
                "ROUP BY CLIENTES.CODCLIENTE, CONVERT(varchar, CLIENTES.NUMCLIENTE) + ' - ' + CLI"& _ 
                "ENTES.NOMBRE, CATEGORIACLIENTE.DESCATEGORIACLIENTE, CONVERT(varchar, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                DATENAME(month, VENTAS.FECHAVENTA)), CONVERT(varchar, YEAR(VENTA"& _ 
                "S.FECHAVENTA))"
            Me._commandCollection(6).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@hasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(6).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCLIENTE", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillBySCateg(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataBySCateg(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal Plan As String) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByListaCliente(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal listanum As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(listanum,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByListaCliente(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal listanum As Decimal) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(listanum,Decimal)
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByListaClienteCateg(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal listanum As Decimal, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(listanum,Decimal)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByListaClienteCateg(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal listanum As Decimal, ByVal Plan As String) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(listanum,Decimal)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNumClienteDH(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODINI As Global.System.Nullable(Of Decimal), ByVal CODFIN As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODINI.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODFIN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODFIN.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNumClienteDH(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODINI As Global.System.Nullable(Of Decimal), ByVal CODFIN As Global.System.Nullable(Of Decimal)) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODINI.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODFIN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODFIN.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByNumClienteDHCateg(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODINI As Global.System.Nullable(Of Decimal), ByVal CODFIN As Global.System.Nullable(Of Decimal), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODINI.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODFIN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODFIN.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByNumClienteDHCateg(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODINI As Global.System.Nullable(Of Decimal), ByVal CODFIN As Global.System.Nullable(Of Decimal), ByVal Plan As String) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODINI.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODINI.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODFIN.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODFIN.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(Plan,String)
            End If
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByUnCliente(ByVal dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable, ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODCLIENTE As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCLIENTE,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByUnCliente(ByVal desde As Global.System.Nullable(Of Date), ByVal hasta As Global.System.Nullable(Of Date), ByVal CODCLIENTE As Decimal) As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(6)
            If (desde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (hasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(hasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCLIENTE,Decimal)
            Dim dataTable As DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable = New DsRVEstadisticas.RVVentasPorClienteComparativoMesAnhoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVVentasPrecioVentaVsCostoPorProductoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVVentasPrecioVentaVsCostoPorProducto"
            tableMapping.ColumnMappings.Add("FECHAVENTA", "FECHAVENTA")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CANTIDADVENTA", "CANTIDADVENTA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("COSTOFIFO", "COSTOFIFO")
            tableMapping.ColumnMappings.Add("TOTALUTILIDAD", "TOTALUTILIDAD")
            tableMapping.ColumnMappings.Add("DESCATEGORIACLIENTE", "DESCATEGORIACLIENTE")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("PRODPROMOCION", "PRODPROMOCION")
            tableMapping.ColumnMappings.Add("PRECIOCOSTOBRUTO", "PRECIOCOSTOBRUTO")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE1")
            tableMapping.ColumnMappings.Add("PRECIOVENTABRUTO", "PRECIOVENTABRUTO1")
            tableMapping.ColumnMappings.Add("PRECIOVENTANETO", "PRECIOVENTANETO1")
            tableMapping.ColumnMappings.Add("PRECIOVENTALISTA", "PRECIOVENTALISTA1")
            tableMapping.ColumnMappings.Add("CODIVA", "CODIVA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGOS.CODCODIGO, CODIGOS.CODIGO, LTRIM(PRODUCTOS.DESPRODUCTO) + '"& _ 
                " ' + LTRIM(ISNULL(CODIGOS.DESCODIGO1, '')) + ' ' + LTRIM(ISNULL(CODIGOS.DESCODIG"& _ 
                "O2, '')) AS PRODUCTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES.CODCLIENTE, CLIENTES.N"& _ 
                "UMCLIENTE, CLIENTES.NOMBRE, VENTASDETALLE.CANTIDADVENTA, VENTASDETALLE.PRECIOVEN"& _ 
                "TABRUTO, ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS CO"& _ 
                "STOFIFO, ISNULL(ISNULL(VENTASDETALLE.COSTOPROMEDIO, 0) * VENTASDETALLE.CANTIDADV"& _ 
                "ENTA, 0) AS PRECIOCOSTOBRUTO, CASE WHEN VENTASDETALLE.COSTOPROMEDIO IS NOT NULL "& _ 
                "OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.COSTOPROMEDIO <> 0 THEN VENTASDETALLE"& _ 
                ".PRECIOVENTABRUTO - VENTASDETALLE.COSTOPROMEDIO ELSE 0 END AS TOTALUTILIDAD, VEN"& _ 
                "TAS.FECHAVENTA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CATEGORIACLIENTE.DESCATEGORIACLIENTE,"& _ 
                " FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, VENTASDETALLE.PRECIOVENTANE"& _ 
                "TO, VENTASDETALLE.PRECIOVENTALISTA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.PRO"& _ 
                "DPROMOCION, PRODUCTOS.CODIVA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          VENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENT"& _ 
                "E LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON VENTASDETALLE.CODPRODUC"& _ 
                "TO = PRODUCTOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON "& _ 
                "VENTASDETALLE.CODCODIGO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OU"& _ 
                "TER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CATEGORIACLIENTE ON CLIENTES.CODCATEGORIACLIE"& _ 
                "NTE = CATEGORIACLIENTE.CODCATEGORIACLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVVentasPrecioVentaVsCostoPorProductoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsRVEstadisticas.RVVentasPrecioVentaVsCostoPorProductoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsRVEstadisticas.RVVentasPrecioVentaVsCostoPorProductoDataTable = New DsRVEstadisticas.RVVentasPrecioVentaVsCostoPorProductoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVINCIDENCIANCSOBREVTATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVINCIDENCIANCSOBREVTA"
            tableMapping.ColumnMappings.Add("CANTVTA", "CANTVTA")
            tableMapping.ColumnMappings.Add("CANTNC", "CANTNC")
            tableMapping.ColumnMappings.Add("TOTCIVAVTA", "TOTCIVAVTA")
            tableMapping.ColumnMappings.Add("TOTCIVANC", "TOTCIVANC")
            tableMapping.ColumnMappings.Add("COSTOVTA", "COSTOVTA")
            tableMapping.ColumnMappings.Add("COSTONC", "COSTONC")
            tableMapping.ColumnMappings.Add("IVA10VTA", "IVA10VTA")
            tableMapping.ColumnMappings.Add("IVA10NC", "IVA10NC")
            tableMapping.ColumnMappings.Add("IVA5VTA", "IVA5VTA")
            tableMapping.ColumnMappings.Add("IVA5NC", "IVA5NC")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("NOMBREFANTASIA", "NOMBREFANTASIA")
            tableMapping.ColumnMappings.Add("FECHA", "FECHA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        FECHA, CANTVTA, CANTNC, TOTCIVAVTA, TOTCIVANC, COSTOVTA, COSTONC, I"& _ 
                "VA10VTA, IVA10NC, IVA5VTA, IVA5NC, CODCLIENTE, NUMCLIENTE, NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              NOMBREFANTASIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT V"& _ 
                "ENTAS.FECHAVENTA AS FECHA, VENTASDETALLE.CANTIDADVENTA AS CANTVTA, 0 AS CANTNC, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    VENTASDETALLE.PRECIOVENTAB"& _ 
                "RUTO AS TOTCIVAVTA, 0 AS TOTCIVANC, VENTASDETALLE.CANTIDADVENTA * CODIGOS.PRECIO"& _ 
                " AS COSTOVTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     0 AS COSTONC"& _ 
                ", CASE iva WHEN 10 THEN dbo.VENTASDETALLE.PRECIOVENTABRUTO / 11 ELSE 0 END AS IV"& _ 
                "A10VTA, 0 AS IVA10NC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    CASE"& _ 
                " IVA WHEN 5 THEN dbo.VENTASDETALLE.PRECIOVENTABRUTO / 21 ELSE 0 END AS IVA5VTA, "& _ 
                "0 AS IVA5NC, CLIENTES.CODCLIENTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                            "& _ 
                "        CLIENTES.NUMCLIENTE, CLIENTES.NOMBRE, CLIENTES.NOMBREFANTASIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                 FROM            VENTAS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                            "& _ 
                "                        VENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENT"& _ 
                "A LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    CLIENTES "& _ 
                "ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "                                CODIGOS ON VENTASDETALLE.CODCODIGO = CODIGOS.COD"& _ 
                "CODIGO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    VENTASDETALLE.C"& _ 
                "ODPRODUCTO = CODIGOS.CODPRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          WHERE        (VENTAS"& _ 
                ".ESTADO = 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          UNION ALL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          SEL"& _ 
                "ECT        TOP (100) PERCENT FECHA, 0 AS CANTVTA, - CANTIDAD AS CANTNC, 0 AS TOT"& _ 
                "CIVAVTA, - TOTAL AS TOTCIVANC, 0 AS COSTOVTA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                "& _ 
                "                   - COSTO AS COSTONC, 0 AS IVA10VTA, IVA10 AS IVA10NC, 0 AS IVA"& _ 
                "5VTA, IVA5 AS Expr1, CODCLIENTE, NUMCLIENTE, NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                          NOMBREFANTASIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM        "& _ 
                "    (SELECT        TOP (100) PERCENT DEVOLUCION.FECHADEVOLUCION AS FECHA, DEVOLU"& _ 
                "CIONDETALLE.CANTIDADDEVUELTA AS CANTIDAD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    "& _ 
                "                                          DEVOLUCIONDETALLE.PRECIONETO * DEVOLUC"& _ 
                "IONDETALLE.CANTIDADDEVUELTA AS TOTAL, CODIGOS_1.CODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                                                        LTRIM(DEVOLUCIONDETALLE."& _ 
                "DESCRIPCION) AS PRODUCTO, CASE WHEN CODIGO IS NULL "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   THEN dbo.DEVOLUCIONDETALLE.PR"& _ 
                "ECIONETO * dbo.DEVOLUCIONDETALLE.CANTIDADDEVUELTA ELSE dbo.DEVOLUCIONDETALLE.CAN"& _ 
                "TIDADDEVUELTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                 "& _ 
                "              * CODIGOS_1.PRECIO END AS COSTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               "& _ 
                "                                               CASE IVA WHEN 10 THEN ((dbo.DEVOL"& _ 
                "UCIONDETALLE.PRECIONETO * dbo.DEVOLUCIONDETALLE.CANTIDADDEVUELTA)  / 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                         ELSE 0 "& _ 
                "END AS IVA10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE IVA WHEN 5 THEN ((dbo.DEVOLUCIONDETALLE.PRECIONETO * dbo.DEVO"& _ 
                "LUCIONDETALLE.CANTIDADDEVUELTA)  / 21) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       ELSE 0 END AS IVA5, FAMILIA.CODFAMILIA, F"& _ 
                "AMILIA.DESFAMILIA, DEVOLUCION.CODCLIENTE, CLIENTES_1.NOMBRE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             CLIENTES_1.NUMCLIEN"& _ 
                "TE, CLIENTES_1.NOMBREFANTASIA, DEVOLUCION.ESTADO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      FROM            DEVOLUCIONDETALLE LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       PRODUCTOS"& _ 
                " ON PRODUCTOS.CODPRODUCTO = DEVOLUCIONDETALLE.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                         CODIGOS"& _ 
                " AS CODIGOS_1 ON PRODUCTOS.CODPRODUCTO = CODIGOS_1.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                         DEVOLUC"& _ 
                "ION ON DEVOLUCIONDETALLE.CODDEVOLUCION = DEVOLUCION.CODDEVOLUCION INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            CLIE"& _ 
                "NTES AS CLIENTES_1 ON CLIENTES_1.CODCLIENTE = DEVOLUCION.CODCLIENTE LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "                             WHERE        (DEVOLUCION.ESTADO = 1)) AS SUBCONSULT"& _ 
                "A) AS UNIONTABLAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVINCIDENCIANCSOBREVTADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsRVEstadisticas.RVINCIDENCIANCSOBREVTADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsRVEstadisticas.RVINCIDENCIANCSOBREVTADataTable = New DsRVEstadisticas.RVINCIDENCIANCSOBREVTADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RVUtilidadVentasTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RVUtilidadVentas"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            tableMapping.ColumnMappings.Add("FECHAVENTA", "FECHAVENTA")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("PRECIO", "PRECIO")
            tableMapping.ColumnMappings.Add("PRECIOVENTALISTA", "PRECIOVENTALISTA")
            tableMapping.ColumnMappings.Add("DIFERENCIA", "DIFERENCIA")
            tableMapping.ColumnMappings.Add("UTILIDAD", "UTILIDAD")
            tableMapping.ColumnMappings.Add("CANTIDADVENTA", "CANTIDADVENTA")
            tableMapping.ColumnMappings.Add("RUC", "RUC")
            tableMapping.ColumnMappings.Add("TIPOVENTA", "TIPOVENTA")
            tableMapping.ColumnMappings.Add("TOTALVENTA", "TOTALVENTA")
            tableMapping.ColumnMappings.Add("TOTAL5", "TOTAL5")
            tableMapping.ColumnMappings.Add("TOTAL10", "TOTAL10")
            tableMapping.ColumnMappings.Add("TOTALIVA", "TOTALIVA")
            tableMapping.ColumnMappings.Add("DESVENDEDOR", "DESVENDEDOR")
            tableMapping.ColumnMappings.Add("MOTIVODESCUENTO", "MOTIVODESCUENTO")
            tableMapping.ColumnMappings.Add("PRECIOVENTANETO", "PRECIOVENTANETO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGOS.CODIGO, PRODUCTOS.DESPRODUCTO, VENTAS.NUMVENTA, VENTAS.FECH"& _ 
                "AVENTA, CLIENTES.NOMBRE, MAX(VENTASDETALLE.COSTOPROMEDIO) AS PRECIO, VENTASDETAL"& _ 
                "LE.PRECIOVENTALISTA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.PRECIOVENTALISTA -"& _ 
                " CODIGOS.PRECIO AS DIFERENCIA, CASE dbo.CODIGOS.PRECIO WHEN 0 THEN 1 ELSE ((dbo."& _ 
                "VENTASDETALLE.PRECIOVENTANETO / ISNULL(dbo.CODIGOS.PRECIO, 1)) - 1) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "               * 100 END AS UTILIDAD, VENTASDETALLE.CANTIDADVENTA, CLIENTES.RUC,"& _ 
                " VENTAS.TIPOVENTA, VENTAS.TOTALVENTA, VENTAS.TOTAL5, VENTAS.TOTAL10, VENTAS.TOTA"& _ 
                "LIVA, VENDEDOR.DESVENDEDOR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.MOTIVODESCUENTO, V"& _ 
                "ENTASDETALLE.PRECIOVENTANETO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CLIENTES INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            VENTAS ON CLIENTES.CODCLIENTE = VENTAS.CODCLIENTE INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   VENTASDETALLE ON VENTAS.CODVENTA = VENTASDETALLE.CODVENTA INN"& _ 
                "ER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         P"& _ 
                "RODUCTOS ON CODIGOS.CODPRODUCTO = PRODUCTOS.CODPRODUCTO ON VENTASDETALLE.CODCODI"& _ 
                "GO = CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENDEDOR ON VEN"& _ 
                "TAS.CODVENDEDOR = VENDEDOR.CODVENDEDOR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.FECHAVENTA >= CONVE"& _ 
                "RT(DATETIME, '2014/06/04 00:00:00', 121)) AND (VENTAS.FECHAVENTA <= CONVERT(DATE"& _ 
                "TIME, '2014/07/05 23:59:00', 121)) AND (VENTAS.ESTADO = 1) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          (VENTAS.CODPRESUPUESTO = 0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY VENTAS.FECHAVENTA, VENTAS.NUMVEN"& _ 
                "TA, CODIGOS.CODIGO, PRODUCTOS.DESPRODUCTO, CLIENTES.NOMBRE, VENTASDETALLE.PRECIO"& _ 
                "VENTANETO, CODIGOS.PRECIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTASDETALLE.PRECIOVENTAN"& _ 
                "ETO / VENTASDETALLE.CANTIDADVENTA, VENTASDETALLE.PRECIOVENTALISTA, VENTASDETALLE"& _ 
                ".CANTIDADVENTA, CLIENTES.RUC, VENTAS.TIPOVENTA, VENTAS.TOTALVENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "              VENTAS.TOTAL5, VENTAS.TOTAL10, VENTAS.TOTALIVA, VENDEDOR.DESVENDED"& _ 
                "OR, VENTAS.MOTIVODESCUENTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.RVUtilidadVentasDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsRVEstadisticas.RVUtilidadVentasDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsRVEstadisticas.RVUtilidadVentasDataTable = New DsRVEstadisticas.RVUtilidadVentasDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class NumVentaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "NumVenta"
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT DISTINCT NUMVENTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.VENTAS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.NumVentaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsRVEstadisticas.NumVentaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsRVEstadisticas.NumVentaDataTable = New DsRVEstadisticas.NumVentaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class VentasDetXClienteTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "VentasDetXCliente"
            tableMapping.ColumnMappings.Add("FECHAVENTA", "FECHAVENTA")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("TOTALEXENTA", "TOTALEXENTA")
            tableMapping.ColumnMappings.Add("TOTALIVA", "TOTALIVA")
            tableMapping.ColumnMappings.Add("TOTALVENTA", "TOTALVENTA")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("TOTAL5", "TOTAL5")
            tableMapping.ColumnMappings.Add("TOTAL10", "TOTAL10")
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT VENTAS.FECHAVENTA, CLIENTES.NOMBRE, VENTAS.TOTALE"& _ 
                "XENTA, VENTAS.TOTALIVA, VENTAS.TOTALVENTA, VENTAS.CODCLIENTE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         VENTAS.TOTAL5, VENTAS.TOTAL10, VENTAS.NUMVENTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS "& _ 
                "INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CO"& _ 
                "DCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @fechadesde"& _ 
                ") AND (VENTAS.FECHAVENTA <= @fechahasta)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechadesde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechahasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT VENTAS.FECHAVENTA, CLIENTES.NOMBRE, VENTAS.TOTALE"& _ 
                "XENTA, VENTAS.TOTALIVA, VENTAS.TOTALVENTA, VENTAS.CODCLIENTE, VENTAS.TOTAL5, VEN"& _ 
                "TAS.TOTAL10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.NUMVENTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS "& _ 
                "INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CO"& _ 
                "DCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (CLIENTES.NUMCLIENTE BETWEEN @cli"& _ 
                "ente1 AND @cliente2) AND (VENTAS.FECHAVENTA >= @fechadesde) AND (VENTAS.FECHAVEN"& _ 
                "TA <= @fechahasta)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cliente1", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@cliente2", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechadesde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechahasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (100) PERCENT VENTAS.FECHAVENTA, CLIENTES.NOMBRE, VENTAS.TOTALE"& _ 
                "XENTA, VENTAS.TOTALIVA, VENTAS.TOTALVENTA, VENTAS.CODCLIENTE, VENTAS.TOTAL5, VEN"& _ 
                "TAS.TOTAL10, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         VENTAS.NUMVENTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            VENTAS "& _ 
                "INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CO"& _ 
                "DCLIENTE"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (VENTAS.ESTADO = 1) AND (VENTAS.FECHAVENTA >= @fechadesde"& _ 
                ") AND (VENTAS.FECHAVENTA <= @fechahasta) AND (VENTAS.CODCLIENTE = @Cliente)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechadesde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechahasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Cliente", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCLIENTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsRVEstadisticas.VentasDetXClienteDataTable, ByVal fechadesde As Global.System.Nullable(Of Date), ByVal fechahasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechadesde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechadesde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechahasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechahasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal fechadesde As Global.System.Nullable(Of Date), ByVal fechahasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.VentasDetXClienteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechadesde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechadesde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechahasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechahasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.VentasDetXClienteDataTable = New DsRVEstadisticas.VentasDetXClienteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByC(ByVal dataTable As DsRVEstadisticas.VentasDetXClienteDataTable, ByVal cliente1 As Global.System.Nullable(Of Decimal), ByVal cliente2 As Global.System.Nullable(Of Decimal), ByVal fechadesde As Global.System.Nullable(Of Date), ByVal fechahasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (cliente1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(cliente1.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (cliente2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(cliente2.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (fechadesde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(fechadesde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (fechahasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(fechahasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByC(ByVal cliente1 As Global.System.Nullable(Of Decimal), ByVal cliente2 As Global.System.Nullable(Of Decimal), ByVal fechadesde As Global.System.Nullable(Of Date), ByVal fechahasta As Global.System.Nullable(Of Date)) As DsRVEstadisticas.VentasDetXClienteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (cliente1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(cliente1.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (cliente2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(cliente2.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (fechadesde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(fechadesde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (fechahasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(fechahasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.VentasDetXClienteDataTable = New DsRVEstadisticas.VentasDetXClienteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByUC(ByVal dataTable As DsRVEstadisticas.VentasDetXClienteDataTable, ByVal fechadesde As Global.System.Nullable(Of Date), ByVal fechahasta As Global.System.Nullable(Of Date), ByVal Cliente As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (fechadesde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechadesde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechahasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechahasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Cliente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Cliente.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByUC(ByVal fechadesde As Global.System.Nullable(Of Date), ByVal fechahasta As Global.System.Nullable(Of Date), ByVal Cliente As Global.System.Nullable(Of Decimal)) As DsRVEstadisticas.VentasDetXClienteDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (fechadesde.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechadesde.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechahasta.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechahasta.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Cliente.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Cliente.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVEstadisticas.VentasDetXClienteDataTable = New DsRVEstadisticas.VentasDetXClienteDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DsRVEstadisticas, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DsRVEstadisticas, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DsRVEstadisticas, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DsRVEstadisticas) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
