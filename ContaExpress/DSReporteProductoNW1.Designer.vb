'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DSReporteProductoNW"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DSReporteProductoNW
    Inherits Global.System.Data.DataSet
    
    Private tableCODIGOS As CODIGOSDataTable
    
    Private tableCOMPRAS As COMPRASDataTable
    
    Private tableCOMPRASDETALLE As COMPRASDETALLEDataTable
    
    Private tableFAMILIA As FAMILIADataTable
    
    Private tablePRODUCTOS As PRODUCTOSDataTable
    
    Private tableRUBRO As RUBRODataTable
    
    Private tableSTOCKDEPOSITO As STOCKDEPOSITODataTable
    
    Private tableUNIDADMEDIDA As UNIDADMEDIDADataTable
    
    Private tableCOSTOPROMEDIONW As COSTOPROMEDIONWDataTable
    
    Private tableSTOCKACTUALNW As STOCKACTUALNWDataTable
    
    Private tablePRECIONW As PRECIONWDataTable
    
    Private tableOrdenPorCategoriaNW As OrdenPorCategoriaNWDataTable
    
    Private tableLinea As LineaDataTable
    
    Private tableProductoCodigosNW As ProductoCodigosNWDataTable
    
    Private tableMovDetallado As MovDetalladoDataTable
    
    Private tableMovProductoPorFecha As MovProductoPorFechaDataTable
    
    Private tableStockXFecha As StockXFechaDataTable
    
    Private tableMovProductoXRangoFecha As MovProductoXRangoFechaDataTable
    
    Private tablePROVEEDOR As PROVEEDORDataTable
    
    Private tableStockMinimo As StockMinimoDataTable
    
    Private tableStockProducto As StockProductoDataTable
    
    Private tableMOVIMIENTOPRODUCTODET As MOVIMIENTOPRODUCTODETDataTable
    
    Private tableCOSTOPROMEDIONWSUC As COSTOPROMEDIONWSUCDataTable
    
    Private tableSUCURSAL As SUCURSALDataTable
    
    Private relationFK_CODIGOS_PRODUCTOS As Global.System.Data.DataRelation
    
    Private relationFK_COMPRASD_RELATIONS_COMPRAS As Global.System.Data.DataRelation
    
    Private relationFK_COMPRASDETALLE_CODIGOPRODUCTO As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTO_RELATIONS_FAMILIA As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTO_RELATIONS_UNIDADME As Global.System.Data.DataRelation
    
    Private relationFK_MOVIMIENTOS_RELATIONS_CODIGOS As Global.System.Data.DataRelation
    
    Private relationFK_COMPRAS_RELATIONS_PROVEEDO As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTOS_PROVEEDOR As Global.System.Data.DataRelation
    
    Private relationFK_COMPRASDETALLE_CODIGOPRODUCTO4 As Global.System.Data.DataRelation
    
    Private relationFK_CODIGOS_PRODUCTOS4 As Global.System.Data.DataRelation
    
    Private relationFK_CODIGOS_PRODUCTOS5 As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTO_RELATIONS_FAMILIA1 As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTO_RELATIONS_UNIDADME1 As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTOS_PROVEEDOR1 As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTO_RELATIONS_LINEA As Global.System.Data.DataRelation
    
    Private relationFK_PRODUCTO_RELATIONS_FAMILIA2 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CODIGOS")) Is Nothing) Then
                MyBase.Tables.Add(New CODIGOSDataTable(ds.Tables("CODIGOS")))
            End If
            If (Not (ds.Tables("COMPRAS")) Is Nothing) Then
                MyBase.Tables.Add(New COMPRASDataTable(ds.Tables("COMPRAS")))
            End If
            If (Not (ds.Tables("COMPRASDETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New COMPRASDETALLEDataTable(ds.Tables("COMPRASDETALLE")))
            End If
            If (Not (ds.Tables("FAMILIA")) Is Nothing) Then
                MyBase.Tables.Add(New FAMILIADataTable(ds.Tables("FAMILIA")))
            End If
            If (Not (ds.Tables("PRODUCTOS")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTOSDataTable(ds.Tables("PRODUCTOS")))
            End If
            If (Not (ds.Tables("RUBRO")) Is Nothing) Then
                MyBase.Tables.Add(New RUBRODataTable(ds.Tables("RUBRO")))
            End If
            If (Not (ds.Tables("STOCKDEPOSITO")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKDEPOSITODataTable(ds.Tables("STOCKDEPOSITO")))
            End If
            If (Not (ds.Tables("UNIDADMEDIDA")) Is Nothing) Then
                MyBase.Tables.Add(New UNIDADMEDIDADataTable(ds.Tables("UNIDADMEDIDA")))
            End If
            If (Not (ds.Tables("COSTOPROMEDIONW")) Is Nothing) Then
                MyBase.Tables.Add(New COSTOPROMEDIONWDataTable(ds.Tables("COSTOPROMEDIONW")))
            End If
            If (Not (ds.Tables("STOCKACTUALNW")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKACTUALNWDataTable(ds.Tables("STOCKACTUALNW")))
            End If
            If (Not (ds.Tables("PRECIONW")) Is Nothing) Then
                MyBase.Tables.Add(New PRECIONWDataTable(ds.Tables("PRECIONW")))
            End If
            If (Not (ds.Tables("OrdenPorCategoriaNW")) Is Nothing) Then
                MyBase.Tables.Add(New OrdenPorCategoriaNWDataTable(ds.Tables("OrdenPorCategoriaNW")))
            End If
            If (Not (ds.Tables("Linea")) Is Nothing) Then
                MyBase.Tables.Add(New LineaDataTable(ds.Tables("Linea")))
            End If
            If (Not (ds.Tables("ProductoCodigosNW")) Is Nothing) Then
                MyBase.Tables.Add(New ProductoCodigosNWDataTable(ds.Tables("ProductoCodigosNW")))
            End If
            If (Not (ds.Tables("MovDetallado")) Is Nothing) Then
                MyBase.Tables.Add(New MovDetalladoDataTable(ds.Tables("MovDetallado")))
            End If
            If (Not (ds.Tables("MovProductoPorFecha")) Is Nothing) Then
                MyBase.Tables.Add(New MovProductoPorFechaDataTable(ds.Tables("MovProductoPorFecha")))
            End If
            If (Not (ds.Tables("StockXFecha")) Is Nothing) Then
                MyBase.Tables.Add(New StockXFechaDataTable(ds.Tables("StockXFecha")))
            End If
            If (Not (ds.Tables("MovProductoXRangoFecha")) Is Nothing) Then
                MyBase.Tables.Add(New MovProductoXRangoFechaDataTable(ds.Tables("MovProductoXRangoFecha")))
            End If
            If (Not (ds.Tables("PROVEEDOR")) Is Nothing) Then
                MyBase.Tables.Add(New PROVEEDORDataTable(ds.Tables("PROVEEDOR")))
            End If
            If (Not (ds.Tables("StockMinimo")) Is Nothing) Then
                MyBase.Tables.Add(New StockMinimoDataTable(ds.Tables("StockMinimo")))
            End If
            If (Not (ds.Tables("StockProducto")) Is Nothing) Then
                MyBase.Tables.Add(New StockProductoDataTable(ds.Tables("StockProducto")))
            End If
            If (Not (ds.Tables("MOVIMIENTOPRODUCTODET")) Is Nothing) Then
                MyBase.Tables.Add(New MOVIMIENTOPRODUCTODETDataTable(ds.Tables("MOVIMIENTOPRODUCTODET")))
            End If
            If (Not (ds.Tables("COSTOPROMEDIONWSUC")) Is Nothing) Then
                MyBase.Tables.Add(New COSTOPROMEDIONWSUCDataTable(ds.Tables("COSTOPROMEDIONWSUC")))
            End If
            If (Not (ds.Tables("SUCURSAL")) Is Nothing) Then
                MyBase.Tables.Add(New SUCURSALDataTable(ds.Tables("SUCURSAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CODIGOS() As CODIGOSDataTable
        Get
            Return Me.tableCODIGOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COMPRAS() As COMPRASDataTable
        Get
            Return Me.tableCOMPRAS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COMPRASDETALLE() As COMPRASDETALLEDataTable
        Get
            Return Me.tableCOMPRASDETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property FAMILIA() As FAMILIADataTable
        Get
            Return Me.tableFAMILIA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRODUCTOS() As PRODUCTOSDataTable
        Get
            Return Me.tablePRODUCTOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property RUBRO() As RUBRODataTable
        Get
            Return Me.tableRUBRO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property STOCKDEPOSITO() As STOCKDEPOSITODataTable
        Get
            Return Me.tableSTOCKDEPOSITO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property UNIDADMEDIDA() As UNIDADMEDIDADataTable
        Get
            Return Me.tableUNIDADMEDIDA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COSTOPROMEDIONW() As COSTOPROMEDIONWDataTable
        Get
            Return Me.tableCOSTOPROMEDIONW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property STOCKACTUALNW() As STOCKACTUALNWDataTable
        Get
            Return Me.tableSTOCKACTUALNW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PRECIONW() As PRECIONWDataTable
        Get
            Return Me.tablePRECIONW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property OrdenPorCategoriaNW() As OrdenPorCategoriaNWDataTable
        Get
            Return Me.tableOrdenPorCategoriaNW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property Linea() As LineaDataTable
        Get
            Return Me.tableLinea
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ProductoCodigosNW() As ProductoCodigosNWDataTable
        Get
            Return Me.tableProductoCodigosNW
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MovDetallado() As MovDetalladoDataTable
        Get
            Return Me.tableMovDetallado
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MovProductoPorFecha() As MovProductoPorFechaDataTable
        Get
            Return Me.tableMovProductoPorFecha
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property StockXFecha() As StockXFechaDataTable
        Get
            Return Me.tableStockXFecha
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MovProductoXRangoFecha() As MovProductoXRangoFechaDataTable
        Get
            Return Me.tableMovProductoXRangoFecha
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property PROVEEDOR() As PROVEEDORDataTable
        Get
            Return Me.tablePROVEEDOR
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property StockMinimo() As StockMinimoDataTable
        Get
            Return Me.tableStockMinimo
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property StockProducto() As StockProductoDataTable
        Get
            Return Me.tableStockProducto
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MOVIMIENTOPRODUCTODET() As MOVIMIENTOPRODUCTODETDataTable
        Get
            Return Me.tableMOVIMIENTOPRODUCTODET
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COSTOPROMEDIONWSUC() As COSTOPROMEDIONWSUCDataTable
        Get
            Return Me.tableCOSTOPROMEDIONWSUC
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property SUCURSAL() As SUCURSALDataTable
        Get
            Return Me.tableSUCURSAL
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DSReporteProductoNW = CType(MyBase.Clone,DSReporteProductoNW)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CODIGOS")) Is Nothing) Then
                MyBase.Tables.Add(New CODIGOSDataTable(ds.Tables("CODIGOS")))
            End If
            If (Not (ds.Tables("COMPRAS")) Is Nothing) Then
                MyBase.Tables.Add(New COMPRASDataTable(ds.Tables("COMPRAS")))
            End If
            If (Not (ds.Tables("COMPRASDETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New COMPRASDETALLEDataTable(ds.Tables("COMPRASDETALLE")))
            End If
            If (Not (ds.Tables("FAMILIA")) Is Nothing) Then
                MyBase.Tables.Add(New FAMILIADataTable(ds.Tables("FAMILIA")))
            End If
            If (Not (ds.Tables("PRODUCTOS")) Is Nothing) Then
                MyBase.Tables.Add(New PRODUCTOSDataTable(ds.Tables("PRODUCTOS")))
            End If
            If (Not (ds.Tables("RUBRO")) Is Nothing) Then
                MyBase.Tables.Add(New RUBRODataTable(ds.Tables("RUBRO")))
            End If
            If (Not (ds.Tables("STOCKDEPOSITO")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKDEPOSITODataTable(ds.Tables("STOCKDEPOSITO")))
            End If
            If (Not (ds.Tables("UNIDADMEDIDA")) Is Nothing) Then
                MyBase.Tables.Add(New UNIDADMEDIDADataTable(ds.Tables("UNIDADMEDIDA")))
            End If
            If (Not (ds.Tables("COSTOPROMEDIONW")) Is Nothing) Then
                MyBase.Tables.Add(New COSTOPROMEDIONWDataTable(ds.Tables("COSTOPROMEDIONW")))
            End If
            If (Not (ds.Tables("STOCKACTUALNW")) Is Nothing) Then
                MyBase.Tables.Add(New STOCKACTUALNWDataTable(ds.Tables("STOCKACTUALNW")))
            End If
            If (Not (ds.Tables("PRECIONW")) Is Nothing) Then
                MyBase.Tables.Add(New PRECIONWDataTable(ds.Tables("PRECIONW")))
            End If
            If (Not (ds.Tables("OrdenPorCategoriaNW")) Is Nothing) Then
                MyBase.Tables.Add(New OrdenPorCategoriaNWDataTable(ds.Tables("OrdenPorCategoriaNW")))
            End If
            If (Not (ds.Tables("Linea")) Is Nothing) Then
                MyBase.Tables.Add(New LineaDataTable(ds.Tables("Linea")))
            End If
            If (Not (ds.Tables("ProductoCodigosNW")) Is Nothing) Then
                MyBase.Tables.Add(New ProductoCodigosNWDataTable(ds.Tables("ProductoCodigosNW")))
            End If
            If (Not (ds.Tables("MovDetallado")) Is Nothing) Then
                MyBase.Tables.Add(New MovDetalladoDataTable(ds.Tables("MovDetallado")))
            End If
            If (Not (ds.Tables("MovProductoPorFecha")) Is Nothing) Then
                MyBase.Tables.Add(New MovProductoPorFechaDataTable(ds.Tables("MovProductoPorFecha")))
            End If
            If (Not (ds.Tables("StockXFecha")) Is Nothing) Then
                MyBase.Tables.Add(New StockXFechaDataTable(ds.Tables("StockXFecha")))
            End If
            If (Not (ds.Tables("MovProductoXRangoFecha")) Is Nothing) Then
                MyBase.Tables.Add(New MovProductoXRangoFechaDataTable(ds.Tables("MovProductoXRangoFecha")))
            End If
            If (Not (ds.Tables("PROVEEDOR")) Is Nothing) Then
                MyBase.Tables.Add(New PROVEEDORDataTable(ds.Tables("PROVEEDOR")))
            End If
            If (Not (ds.Tables("StockMinimo")) Is Nothing) Then
                MyBase.Tables.Add(New StockMinimoDataTable(ds.Tables("StockMinimo")))
            End If
            If (Not (ds.Tables("StockProducto")) Is Nothing) Then
                MyBase.Tables.Add(New StockProductoDataTable(ds.Tables("StockProducto")))
            End If
            If (Not (ds.Tables("MOVIMIENTOPRODUCTODET")) Is Nothing) Then
                MyBase.Tables.Add(New MOVIMIENTOPRODUCTODETDataTable(ds.Tables("MOVIMIENTOPRODUCTODET")))
            End If
            If (Not (ds.Tables("COSTOPROMEDIONWSUC")) Is Nothing) Then
                MyBase.Tables.Add(New COSTOPROMEDIONWSUCDataTable(ds.Tables("COSTOPROMEDIONWSUC")))
            End If
            If (Not (ds.Tables("SUCURSAL")) Is Nothing) Then
                MyBase.Tables.Add(New SUCURSALDataTable(ds.Tables("SUCURSAL")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCODIGOS = CType(MyBase.Tables("CODIGOS"),CODIGOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCODIGOS) Is Nothing) Then
                Me.tableCODIGOS.InitVars
            End If
        End If
        Me.tableCOMPRAS = CType(MyBase.Tables("COMPRAS"),COMPRASDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOMPRAS) Is Nothing) Then
                Me.tableCOMPRAS.InitVars
            End If
        End If
        Me.tableCOMPRASDETALLE = CType(MyBase.Tables("COMPRASDETALLE"),COMPRASDETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOMPRASDETALLE) Is Nothing) Then
                Me.tableCOMPRASDETALLE.InitVars
            End If
        End If
        Me.tableFAMILIA = CType(MyBase.Tables("FAMILIA"),FAMILIADataTable)
        If (initTable = true) Then
            If (Not (Me.tableFAMILIA) Is Nothing) Then
                Me.tableFAMILIA.InitVars
            End If
        End If
        Me.tablePRODUCTOS = CType(MyBase.Tables("PRODUCTOS"),PRODUCTOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRODUCTOS) Is Nothing) Then
                Me.tablePRODUCTOS.InitVars
            End If
        End If
        Me.tableRUBRO = CType(MyBase.Tables("RUBRO"),RUBRODataTable)
        If (initTable = true) Then
            If (Not (Me.tableRUBRO) Is Nothing) Then
                Me.tableRUBRO.InitVars
            End If
        End If
        Me.tableSTOCKDEPOSITO = CType(MyBase.Tables("STOCKDEPOSITO"),STOCKDEPOSITODataTable)
        If (initTable = true) Then
            If (Not (Me.tableSTOCKDEPOSITO) Is Nothing) Then
                Me.tableSTOCKDEPOSITO.InitVars
            End If
        End If
        Me.tableUNIDADMEDIDA = CType(MyBase.Tables("UNIDADMEDIDA"),UNIDADMEDIDADataTable)
        If (initTable = true) Then
            If (Not (Me.tableUNIDADMEDIDA) Is Nothing) Then
                Me.tableUNIDADMEDIDA.InitVars
            End If
        End If
        Me.tableCOSTOPROMEDIONW = CType(MyBase.Tables("COSTOPROMEDIONW"),COSTOPROMEDIONWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOSTOPROMEDIONW) Is Nothing) Then
                Me.tableCOSTOPROMEDIONW.InitVars
            End If
        End If
        Me.tableSTOCKACTUALNW = CType(MyBase.Tables("STOCKACTUALNW"),STOCKACTUALNWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSTOCKACTUALNW) Is Nothing) Then
                Me.tableSTOCKACTUALNW.InitVars
            End If
        End If
        Me.tablePRECIONW = CType(MyBase.Tables("PRECIONW"),PRECIONWDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePRECIONW) Is Nothing) Then
                Me.tablePRECIONW.InitVars
            End If
        End If
        Me.tableOrdenPorCategoriaNW = CType(MyBase.Tables("OrdenPorCategoriaNW"),OrdenPorCategoriaNWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableOrdenPorCategoriaNW) Is Nothing) Then
                Me.tableOrdenPorCategoriaNW.InitVars
            End If
        End If
        Me.tableLinea = CType(MyBase.Tables("Linea"),LineaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableLinea) Is Nothing) Then
                Me.tableLinea.InitVars
            End If
        End If
        Me.tableProductoCodigosNW = CType(MyBase.Tables("ProductoCodigosNW"),ProductoCodigosNWDataTable)
        If (initTable = true) Then
            If (Not (Me.tableProductoCodigosNW) Is Nothing) Then
                Me.tableProductoCodigosNW.InitVars
            End If
        End If
        Me.tableMovDetallado = CType(MyBase.Tables("MovDetallado"),MovDetalladoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMovDetallado) Is Nothing) Then
                Me.tableMovDetallado.InitVars
            End If
        End If
        Me.tableMovProductoPorFecha = CType(MyBase.Tables("MovProductoPorFecha"),MovProductoPorFechaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMovProductoPorFecha) Is Nothing) Then
                Me.tableMovProductoPorFecha.InitVars
            End If
        End If
        Me.tableStockXFecha = CType(MyBase.Tables("StockXFecha"),StockXFechaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStockXFecha) Is Nothing) Then
                Me.tableStockXFecha.InitVars
            End If
        End If
        Me.tableMovProductoXRangoFecha = CType(MyBase.Tables("MovProductoXRangoFecha"),MovProductoXRangoFechaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMovProductoXRangoFecha) Is Nothing) Then
                Me.tableMovProductoXRangoFecha.InitVars
            End If
        End If
        Me.tablePROVEEDOR = CType(MyBase.Tables("PROVEEDOR"),PROVEEDORDataTable)
        If (initTable = true) Then
            If (Not (Me.tablePROVEEDOR) Is Nothing) Then
                Me.tablePROVEEDOR.InitVars
            End If
        End If
        Me.tableStockMinimo = CType(MyBase.Tables("StockMinimo"),StockMinimoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStockMinimo) Is Nothing) Then
                Me.tableStockMinimo.InitVars
            End If
        End If
        Me.tableStockProducto = CType(MyBase.Tables("StockProducto"),StockProductoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableStockProducto) Is Nothing) Then
                Me.tableStockProducto.InitVars
            End If
        End If
        Me.tableMOVIMIENTOPRODUCTODET = CType(MyBase.Tables("MOVIMIENTOPRODUCTODET"),MOVIMIENTOPRODUCTODETDataTable)
        If (initTable = true) Then
            If (Not (Me.tableMOVIMIENTOPRODUCTODET) Is Nothing) Then
                Me.tableMOVIMIENTOPRODUCTODET.InitVars
            End If
        End If
        Me.tableCOSTOPROMEDIONWSUC = CType(MyBase.Tables("COSTOPROMEDIONWSUC"),COSTOPROMEDIONWSUCDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOSTOPROMEDIONWSUC) Is Nothing) Then
                Me.tableCOSTOPROMEDIONWSUC.InitVars
            End If
        End If
        Me.tableSUCURSAL = CType(MyBase.Tables("SUCURSAL"),SUCURSALDataTable)
        If (initTable = true) Then
            If (Not (Me.tableSUCURSAL) Is Nothing) Then
                Me.tableSUCURSAL.InitVars
            End If
        End If
        Me.relationFK_CODIGOS_PRODUCTOS = Me.Relations("FK_CODIGOS_PRODUCTOS")
        Me.relationFK_COMPRASD_RELATIONS_COMPRAS = Me.Relations("FK_COMPRASD_RELATIONS_COMPRAS")
        Me.relationFK_COMPRASDETALLE_CODIGOPRODUCTO = Me.Relations("FK_COMPRASDETALLE_CODIGOPRODUCTO")
        Me.relationFK_PRODUCTO_RELATIONS_FAMILIA = Me.Relations("FK_PRODUCTO_RELATIONS_FAMILIA")
        Me.relationFK_PRODUCTO_RELATIONS_UNIDADME = Me.Relations("FK_PRODUCTO_RELATIONS_UNIDADME")
        Me.relationFK_MOVIMIENTOS_RELATIONS_CODIGOS = Me.Relations("FK_MOVIMIENTOS_RELATIONS_CODIGOS")
        Me.relationFK_COMPRAS_RELATIONS_PROVEEDO = Me.Relations("FK_COMPRAS_RELATIONS_PROVEEDO")
        Me.relationFK_PRODUCTOS_PROVEEDOR = Me.Relations("FK_PRODUCTOS_PROVEEDOR")
        Me.relationFK_COMPRASDETALLE_CODIGOPRODUCTO4 = Me.Relations("FK_COMPRASDETALLE_CODIGOPRODUCTO4")
        Me.relationFK_CODIGOS_PRODUCTOS4 = Me.Relations("FK_CODIGOS_PRODUCTOS4")
        Me.relationFK_CODIGOS_PRODUCTOS5 = Me.Relations("FK_CODIGOS_PRODUCTOS5")
        Me.relationFK_PRODUCTO_RELATIONS_FAMILIA1 = Me.Relations("FK_PRODUCTO_RELATIONS_FAMILIA1")
        Me.relationFK_PRODUCTO_RELATIONS_UNIDADME1 = Me.Relations("FK_PRODUCTO_RELATIONS_UNIDADME1")
        Me.relationFK_PRODUCTOS_PROVEEDOR1 = Me.Relations("FK_PRODUCTOS_PROVEEDOR1")
        Me.relationFK_PRODUCTO_RELATIONS_LINEA = Me.Relations("FK_PRODUCTO_RELATIONS_LINEA")
        Me.relationFK_PRODUCTO_RELATIONS_FAMILIA2 = Me.Relations("FK_PRODUCTO_RELATIONS_FAMILIA2")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DSReporteProductoNW"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DSReporteProductoNW.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCODIGOS = New CODIGOSDataTable()
        MyBase.Tables.Add(Me.tableCODIGOS)
        Me.tableCOMPRAS = New COMPRASDataTable()
        MyBase.Tables.Add(Me.tableCOMPRAS)
        Me.tableCOMPRASDETALLE = New COMPRASDETALLEDataTable()
        MyBase.Tables.Add(Me.tableCOMPRASDETALLE)
        Me.tableFAMILIA = New FAMILIADataTable()
        MyBase.Tables.Add(Me.tableFAMILIA)
        Me.tablePRODUCTOS = New PRODUCTOSDataTable()
        MyBase.Tables.Add(Me.tablePRODUCTOS)
        Me.tableRUBRO = New RUBRODataTable()
        MyBase.Tables.Add(Me.tableRUBRO)
        Me.tableSTOCKDEPOSITO = New STOCKDEPOSITODataTable()
        MyBase.Tables.Add(Me.tableSTOCKDEPOSITO)
        Me.tableUNIDADMEDIDA = New UNIDADMEDIDADataTable()
        MyBase.Tables.Add(Me.tableUNIDADMEDIDA)
        Me.tableCOSTOPROMEDIONW = New COSTOPROMEDIONWDataTable()
        MyBase.Tables.Add(Me.tableCOSTOPROMEDIONW)
        Me.tableSTOCKACTUALNW = New STOCKACTUALNWDataTable()
        MyBase.Tables.Add(Me.tableSTOCKACTUALNW)
        Me.tablePRECIONW = New PRECIONWDataTable()
        MyBase.Tables.Add(Me.tablePRECIONW)
        Me.tableOrdenPorCategoriaNW = New OrdenPorCategoriaNWDataTable()
        MyBase.Tables.Add(Me.tableOrdenPorCategoriaNW)
        Me.tableLinea = New LineaDataTable()
        MyBase.Tables.Add(Me.tableLinea)
        Me.tableProductoCodigosNW = New ProductoCodigosNWDataTable()
        MyBase.Tables.Add(Me.tableProductoCodigosNW)
        Me.tableMovDetallado = New MovDetalladoDataTable()
        MyBase.Tables.Add(Me.tableMovDetallado)
        Me.tableMovProductoPorFecha = New MovProductoPorFechaDataTable()
        MyBase.Tables.Add(Me.tableMovProductoPorFecha)
        Me.tableStockXFecha = New StockXFechaDataTable()
        MyBase.Tables.Add(Me.tableStockXFecha)
        Me.tableMovProductoXRangoFecha = New MovProductoXRangoFechaDataTable()
        MyBase.Tables.Add(Me.tableMovProductoXRangoFecha)
        Me.tablePROVEEDOR = New PROVEEDORDataTable()
        MyBase.Tables.Add(Me.tablePROVEEDOR)
        Me.tableStockMinimo = New StockMinimoDataTable()
        MyBase.Tables.Add(Me.tableStockMinimo)
        Me.tableStockProducto = New StockProductoDataTable()
        MyBase.Tables.Add(Me.tableStockProducto)
        Me.tableMOVIMIENTOPRODUCTODET = New MOVIMIENTOPRODUCTODETDataTable()
        MyBase.Tables.Add(Me.tableMOVIMIENTOPRODUCTODET)
        Me.tableCOSTOPROMEDIONWSUC = New COSTOPROMEDIONWSUCDataTable()
        MyBase.Tables.Add(Me.tableCOSTOPROMEDIONWSUC)
        Me.tableSUCURSAL = New SUCURSALDataTable()
        MyBase.Tables.Add(Me.tableSUCURSAL)
        Me.relationFK_CODIGOS_PRODUCTOS = New Global.System.Data.DataRelation("FK_CODIGOS_PRODUCTOS", New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODPRODUCTOColumn}, New Global.System.Data.DataColumn() {Me.tableCODIGOS.CODPRODUCTOColumn}, false)
        Me.Relations.Add(Me.relationFK_CODIGOS_PRODUCTOS)
        Me.relationFK_COMPRASD_RELATIONS_COMPRAS = New Global.System.Data.DataRelation("FK_COMPRASD_RELATIONS_COMPRAS", New Global.System.Data.DataColumn() {Me.tableCOMPRAS.CODCOMPRAColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPRASDETALLE.CODCOMPRAColumn}, false)
        Me.Relations.Add(Me.relationFK_COMPRASD_RELATIONS_COMPRAS)
        Me.relationFK_COMPRASDETALLE_CODIGOPRODUCTO = New Global.System.Data.DataRelation("FK_COMPRASDETALLE_CODIGOPRODUCTO", New Global.System.Data.DataColumn() {Me.tableCODIGOS.CODCODIGOColumn, Me.tableCODIGOS.CODPRODUCTOColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPRASDETALLE.CODCODIGOColumn, Me.tableCOMPRASDETALLE.CODPRODUCTOColumn}, false)
        Me.Relations.Add(Me.relationFK_COMPRASDETALLE_CODIGOPRODUCTO)
        Me.relationFK_PRODUCTO_RELATIONS_FAMILIA = New Global.System.Data.DataRelation("FK_PRODUCTO_RELATIONS_FAMILIA", New Global.System.Data.DataColumn() {Me.tableFAMILIA.CODFAMILIAColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODFAMILIAColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTO_RELATIONS_FAMILIA)
        Me.relationFK_PRODUCTO_RELATIONS_UNIDADME = New Global.System.Data.DataRelation("FK_PRODUCTO_RELATIONS_UNIDADME", New Global.System.Data.DataColumn() {Me.tableUNIDADMEDIDA.CODMEDIDAColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODMEDIDAColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTO_RELATIONS_UNIDADME)
        Me.relationFK_MOVIMIENTOS_RELATIONS_CODIGOS = New Global.System.Data.DataRelation("FK_MOVIMIENTOS_RELATIONS_CODIGOS", New Global.System.Data.DataColumn() {Me.tableCODIGOS.CODCODIGOColumn, Me.tableCODIGOS.CODPRODUCTOColumn}, New Global.System.Data.DataColumn() {Me.tableMovDetallado.CODCODIGOColumn, Me.tableMovDetallado.CODPRODUCTOColumn}, false)
        Me.Relations.Add(Me.relationFK_MOVIMIENTOS_RELATIONS_CODIGOS)
        Me.relationFK_COMPRAS_RELATIONS_PROVEEDO = New Global.System.Data.DataRelation("FK_COMPRAS_RELATIONS_PROVEEDO", New Global.System.Data.DataColumn() {Me.tablePROVEEDOR.CODPROVEEDORColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPRAS.CODPROVEEDORColumn}, false)
        Me.Relations.Add(Me.relationFK_COMPRAS_RELATIONS_PROVEEDO)
        Me.relationFK_PRODUCTOS_PROVEEDOR = New Global.System.Data.DataRelation("FK_PRODUCTOS_PROVEEDOR", New Global.System.Data.DataColumn() {Me.tablePROVEEDOR.CODPROVEEDORColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODPROVEEDORColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTOS_PROVEEDOR)
        Me.relationFK_COMPRASDETALLE_CODIGOPRODUCTO4 = New Global.System.Data.DataRelation("FK_COMPRASDETALLE_CODIGOPRODUCTO4", New Global.System.Data.DataColumn() {Me.tableStockMinimo.CODCODIGOColumn, Me.tableStockMinimo.CODPRODUCTOColumn}, New Global.System.Data.DataColumn() {Me.tableCOMPRASDETALLE.CODCODIGOColumn, Me.tableCOMPRASDETALLE.CODPRODUCTOColumn}, false)
        Me.Relations.Add(Me.relationFK_COMPRASDETALLE_CODIGOPRODUCTO4)
        Me.relationFK_CODIGOS_PRODUCTOS4 = New Global.System.Data.DataRelation("FK_CODIGOS_PRODUCTOS4", New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODPRODUCTOColumn}, New Global.System.Data.DataColumn() {Me.tableStockMinimo.CODPRODUCTOColumn}, false)
        Me.Relations.Add(Me.relationFK_CODIGOS_PRODUCTOS4)
        Me.relationFK_CODIGOS_PRODUCTOS5 = New Global.System.Data.DataRelation("FK_CODIGOS_PRODUCTOS5", New Global.System.Data.DataColumn() {Me.tableStockProducto.CODPRODUCTOColumn}, New Global.System.Data.DataColumn() {Me.tableCODIGOS.CODPRODUCTOColumn}, false)
        Me.Relations.Add(Me.relationFK_CODIGOS_PRODUCTOS5)
        Me.relationFK_PRODUCTO_RELATIONS_FAMILIA1 = New Global.System.Data.DataRelation("FK_PRODUCTO_RELATIONS_FAMILIA1", New Global.System.Data.DataColumn() {Me.tableFAMILIA.CODFAMILIAColumn}, New Global.System.Data.DataColumn() {Me.tableStockProducto.CODFAMILIAColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTO_RELATIONS_FAMILIA1)
        Me.relationFK_PRODUCTO_RELATIONS_UNIDADME1 = New Global.System.Data.DataRelation("FK_PRODUCTO_RELATIONS_UNIDADME1", New Global.System.Data.DataColumn() {Me.tableUNIDADMEDIDA.CODMEDIDAColumn}, New Global.System.Data.DataColumn() {Me.tableStockProducto.CODMEDIDAColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTO_RELATIONS_UNIDADME1)
        Me.relationFK_PRODUCTOS_PROVEEDOR1 = New Global.System.Data.DataRelation("FK_PRODUCTOS_PROVEEDOR1", New Global.System.Data.DataColumn() {Me.tablePROVEEDOR.CODPROVEEDORColumn}, New Global.System.Data.DataColumn() {Me.tableStockProducto.CODPROVEEDORColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTOS_PROVEEDOR1)
        Me.relationFK_PRODUCTO_RELATIONS_LINEA = New Global.System.Data.DataRelation("FK_PRODUCTO_RELATIONS_LINEA", New Global.System.Data.DataColumn() {Me.tableRUBRO.CODLINEAColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODLINEAColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTO_RELATIONS_LINEA)
        Me.relationFK_PRODUCTO_RELATIONS_FAMILIA2 = New Global.System.Data.DataRelation("FK_PRODUCTO_RELATIONS_FAMILIA2", New Global.System.Data.DataColumn() {Me.tableLinea.CODFAMILIAColumn}, New Global.System.Data.DataColumn() {Me.tablePRODUCTOS.CODFAMILIAColumn}, false)
        Me.Relations.Add(Me.relationFK_PRODUCTO_RELATIONS_FAMILIA2)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCODIGOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCOMPRAS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCOMPRASDETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeFAMILIA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRODUCTOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeRUBRO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSTOCKDEPOSITO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeUNIDADMEDIDA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCOSTOPROMEDIONW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSTOCKACTUALNW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePRECIONW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeOrdenPorCategoriaNW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeLinea() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeProductoCodigosNW() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMovDetallado() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMovProductoPorFecha() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeStockXFecha() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMovProductoXRangoFecha() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializePROVEEDOR() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeStockMinimo() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeStockProducto() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMOVIMIENTOPRODUCTODET() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCOSTOPROMEDIONWSUC() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeSUCURSAL() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CODIGOSRowChangeEventHandler(ByVal sender As Object, ByVal e As CODIGOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub COMPRASRowChangeEventHandler(ByVal sender As Object, ByVal e As COMPRASRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub COMPRASDETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As COMPRASDETALLERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub FAMILIARowChangeEventHandler(ByVal sender As Object, ByVal e As FAMILIARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRODUCTOSRowChangeEventHandler(ByVal sender As Object, ByVal e As PRODUCTOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub RUBRORowChangeEventHandler(ByVal sender As Object, ByVal e As RUBRORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub STOCKDEPOSITORowChangeEventHandler(ByVal sender As Object, ByVal e As STOCKDEPOSITORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub UNIDADMEDIDARowChangeEventHandler(ByVal sender As Object, ByVal e As UNIDADMEDIDARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub COSTOPROMEDIONWRowChangeEventHandler(ByVal sender As Object, ByVal e As COSTOPROMEDIONWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub STOCKACTUALNWRowChangeEventHandler(ByVal sender As Object, ByVal e As STOCKACTUALNWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PRECIONWRowChangeEventHandler(ByVal sender As Object, ByVal e As PRECIONWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub OrdenPorCategoriaNWRowChangeEventHandler(ByVal sender As Object, ByVal e As OrdenPorCategoriaNWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub LineaRowChangeEventHandler(ByVal sender As Object, ByVal e As LineaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ProductoCodigosNWRowChangeEventHandler(ByVal sender As Object, ByVal e As ProductoCodigosNWRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MovDetalladoRowChangeEventHandler(ByVal sender As Object, ByVal e As MovDetalladoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MovProductoPorFechaRowChangeEventHandler(ByVal sender As Object, ByVal e As MovProductoPorFechaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub StockXFechaRowChangeEventHandler(ByVal sender As Object, ByVal e As StockXFechaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MovProductoXRangoFechaRowChangeEventHandler(ByVal sender As Object, ByVal e As MovProductoXRangoFechaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub PROVEEDORRowChangeEventHandler(ByVal sender As Object, ByVal e As PROVEEDORRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub StockMinimoRowChangeEventHandler(ByVal sender As Object, ByVal e As StockMinimoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub StockProductoRowChangeEventHandler(ByVal sender As Object, ByVal e As StockProductoRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MOVIMIENTOPRODUCTODETRowChangeEventHandler(ByVal sender As Object, ByVal e As MOVIMIENTOPRODUCTODETRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub COSTOPROMEDIONWSUCRowChangeEventHandler(ByVal sender As Object, ByVal e As COSTOPROMEDIONWSUCRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub SUCURSALRowChangeEventHandler(ByVal sender As Object, ByVal e As SUCURSALRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CODIGOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CODIGOSRow)
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESCODIGO1 As Global.System.Data.DataColumn
        
        Private columnDESCODIGO2 As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRECIO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnPESABLE As Global.System.Data.DataColumn
        
        Private columnVENCIMIENTO As Global.System.Data.DataColumn
        
        Private columnBALANZA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CODIGOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCODIGO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCODIGO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCODIGO2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCODIGO2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENCIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENCIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BALANZAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBALANZA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CODIGOSRow
            Get
                Return CType(Me.Rows(index),CODIGOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CODIGOSRowChanging As CODIGOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CODIGOSRowChanged As CODIGOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CODIGOSRowDeleting As CODIGOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CODIGOSRowDeleted As CODIGOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCODIGOSRow(ByVal row As CODIGOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCODIGOSRow(ByVal parentPRODUCTOSRowByFK_CODIGOS_PRODUCTOS As PRODUCTOSRow, ByVal DESCODIGO1 As String, ByVal DESCODIGO2 As String, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal FECGRA As Date, ByVal CODIGO As String, ByVal PRECIO As Decimal, ByVal CODMONEDA As Decimal, ByVal PESABLE As Byte, ByVal VENCIMIENTO As Byte, ByVal BALANZA As Byte) As CODIGOSRow
            Dim rowCODIGOSRow As CODIGOSRow = CType(Me.NewRow,CODIGOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, DESCODIGO1, DESCODIGO2, CODUSUARIO, CODEMPRESA, FECGRA, CODIGO, PRECIO, CODMONEDA, PESABLE, VENCIMIENTO, BALANZA}
            If (Not (parentPRODUCTOSRowByFK_CODIGOS_PRODUCTOS) Is Nothing) Then
                columnValuesArray(1) = parentPRODUCTOSRowByFK_CODIGOS_PRODUCTOS(0)
            End If
            rowCODIGOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCODIGOSRow)
            Return rowCODIGOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCODIGOCODPRODUCTO(ByVal CODCODIGO As Decimal, ByVal CODPRODUCTO As Decimal) As CODIGOSRow
            Return CType(Me.Rows.Find(New Object() {CODCODIGO, CODPRODUCTO}),CODIGOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CODIGOSDataTable = CType(MyBase.Clone,CODIGOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CODIGOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnDESCODIGO1 = MyBase.Columns("DESCODIGO1")
            Me.columnDESCODIGO2 = MyBase.Columns("DESCODIGO2")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRECIO = MyBase.Columns("PRECIO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnPESABLE = MyBase.Columns("PESABLE")
            Me.columnVENCIMIENTO = MyBase.Columns("VENCIMIENTO")
            Me.columnBALANZA = MyBase.Columns("BALANZA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnDESCODIGO1 = New Global.System.Data.DataColumn("DESCODIGO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCODIGO1)
            Me.columnDESCODIGO2 = New Global.System.Data.DataColumn("DESCODIGO2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCODIGO2)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRECIO = New Global.System.Data.DataColumn("PRECIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnPESABLE = New Global.System.Data.DataColumn("PESABLE", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESABLE)
            Me.columnVENCIMIENTO = New Global.System.Data.DataColumn("VENCIMIENTO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENCIMIENTO)
            Me.columnBALANZA = New Global.System.Data.DataColumn("BALANZA", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBALANZA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCODIGO, Me.columnCODPRODUCTO}, true))
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODPRODUCTO.AllowDBNull = false
            Me.columnDESCODIGO1.MaxLength = 100
            Me.columnDESCODIGO2.MaxLength = 100
            Me.columnCODIGO.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCODIGOSRow() As CODIGOSRow
            Return CType(Me.NewRow,CODIGOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CODIGOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CODIGOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CODIGOSRowChangedEvent) Is Nothing) Then
                RaiseEvent CODIGOSRowChanged(Me, New CODIGOSRowChangeEvent(CType(e.Row,CODIGOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CODIGOSRowChangingEvent) Is Nothing) Then
                RaiseEvent CODIGOSRowChanging(Me, New CODIGOSRowChangeEvent(CType(e.Row,CODIGOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CODIGOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CODIGOSRowDeleted(Me, New CODIGOSRowChangeEvent(CType(e.Row,CODIGOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CODIGOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CODIGOSRowDeleting(Me, New CODIGOSRowChangeEvent(CType(e.Row,CODIGOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCODIGOSRow(ByVal row As CODIGOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CODIGOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COMPRASDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMPRASRow)
        
        Private columnCODCOMPRA As Global.System.Data.DataColumn
        
        Private columnNUMRESPONSABLE As Global.System.Data.DataColumn
        
        Private columnRES_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODDEPOSITO As Global.System.Data.DataColumn
        
        Private columnCODCOMPROBANTE As Global.System.Data.DataColumn
        
        Private columnCODPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnNUMCOMPRA As Global.System.Data.DataColumn
        
        Private columnFECHACOMPRA As Global.System.Data.DataColumn
        
        Private columnTOTALEXENTA As Global.System.Data.DataColumn
        
        Private columnTOTALGRAVADA As Global.System.Data.DataColumn
        
        Private columnTOTALIVA As Global.System.Data.DataColumn
        
        Private columnTOTALCOMPRA As Global.System.Data.DataColumn
        
        Private columnTOTALDESCUENTO As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnCODTIPOGASTODET As Global.System.Data.DataColumn
        
        Private columnMODALIDADPAGO As Global.System.Data.DataColumn
        
        Private columnCODCENTRO As Global.System.Data.DataColumn
        
        Private columnBASEIMPONIBLE As Global.System.Data.DataColumn
        
        Private columnTOTALIVA5 As Global.System.Data.DataColumn
        
        Private columnIVAINCLUIDO As Global.System.Data.DataColumn
        
        Private columnCOMPRASIMPLE As Global.System.Data.DataColumn
        
        Private columnMETODO As Global.System.Data.DataColumn
        
        Private columnTOTALGRAVADO10 As Global.System.Data.DataColumn
        
        Private columnTOTALIVA10 As Global.System.Data.DataColumn
        
        Private columnTOTALGRAVADO5 As Global.System.Data.DataColumn
        
        Private columnASENTADO As Global.System.Data.DataColumn
        
        Private columnCODEVENTO As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnMOTIVOANULADO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COMPRAS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMRESPONSABLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMRESPONSABLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property RES_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnRES_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODDEPOSITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODDEPOSITO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOMPROBANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOMPROBANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHACOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALEXENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALEXENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALGRAVADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALGRAVADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALDESCUENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALDESCUENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOGASTODETColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOGASTODET
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MODALIDADPAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODALIDADPAGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCENTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCENTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property BASEIMPONIBLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnBASEIMPONIBLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALIVA5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIVA5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVAINCLUIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAINCLUIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPRASIMPLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRASIMPLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property METODOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMETODO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALGRAVADO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALGRAVADO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALIVA10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALIVA10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALGRAVADO5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALGRAVADO5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ASENTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnASENTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEVENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEVENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MOTIVOANULADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMOTIVOANULADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COMPRASRow
            Get
                Return CType(Me.Rows(index),COMPRASRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASRowChanging As COMPRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASRowChanged As COMPRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASRowDeleting As COMPRASRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASRowDeleted As COMPRASRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCOMPRASRow(ByVal row As COMPRASRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCOMPRASRow( _
                    ByVal NUMRESPONSABLE As String,  _
                    ByVal RES_CODEMPRESA As Decimal,  _
                    ByVal CODMONEDA As Decimal,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal CODSUCURSAL As Decimal,  _
                    ByVal CODDEPOSITO As Decimal,  _
                    ByVal CODCOMPROBANTE As Decimal,  _
                    ByVal parentPROVEEDORRowByFK_COMPRAS_RELATIONS_PROVEEDO As PROVEEDORRow,  _
                    ByVal NUMCOMPRA As String,  _
                    ByVal FECHACOMPRA As Date,  _
                    ByVal TOTALEXENTA As Decimal,  _
                    ByVal TOTALGRAVADA As Decimal,  _
                    ByVal TOTALIVA As Decimal,  _
                    ByVal TOTALCOMPRA As Decimal,  _
                    ByVal TOTALDESCUENTO As Decimal,  _
                    ByVal COTIZACION1 As Decimal,  _
                    ByVal COTIZACION2 As Decimal,  _
                    ByVal FECGRA As Date,  _
                    ByVal ESTADO As Byte,  _
                    ByVal CODTIPOGASTODET As Decimal,  _
                    ByVal MODALIDADPAGO As Byte,  _
                    ByVal CODCENTRO As Decimal,  _
                    ByVal BASEIMPONIBLE As Decimal,  _
                    ByVal TOTALIVA5 As Decimal,  _
                    ByVal IVAINCLUIDO As Decimal,  _
                    ByVal COMPRASIMPLE As Byte,  _
                    ByVal METODO As String,  _
                    ByVal TOTALGRAVADO10 As Decimal,  _
                    ByVal TOTALIVA10 As Decimal,  _
                    ByVal TOTALGRAVADO5 As Decimal,  _
                    ByVal ASENTADO As Byte,  _
                    ByVal CODEVENTO As Decimal,  _
                    ByVal CONCEPTO As String,  _
                    ByVal MOTIVOANULADO As String) As COMPRASRow
            Dim rowCOMPRASRow As COMPRASRow = CType(Me.NewRow,COMPRASRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NUMRESPONSABLE, RES_CODEMPRESA, CODMONEDA, CODUSUARIO, CODEMPRESA, CODSUCURSAL, CODDEPOSITO, CODCOMPROBANTE, Nothing, NUMCOMPRA, FECHACOMPRA, TOTALEXENTA, TOTALGRAVADA, TOTALIVA, TOTALCOMPRA, TOTALDESCUENTO, COTIZACION1, COTIZACION2, FECGRA, ESTADO, CODTIPOGASTODET, MODALIDADPAGO, CODCENTRO, BASEIMPONIBLE, TOTALIVA5, IVAINCLUIDO, COMPRASIMPLE, METODO, TOTALGRAVADO10, TOTALIVA10, TOTALGRAVADO5, ASENTADO, CODEVENTO, CONCEPTO, MOTIVOANULADO}
            If (Not (parentPROVEEDORRowByFK_COMPRAS_RELATIONS_PROVEEDO) Is Nothing) Then
                columnValuesArray(9) = parentPROVEEDORRowByFK_COMPRAS_RELATIONS_PROVEEDO(0)
            End If
            rowCOMPRASRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMPRASRow)
            Return rowCOMPRASRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCOMPRA(ByVal CODCOMPRA As Decimal) As COMPRASRow
            Return CType(Me.Rows.Find(New Object() {CODCOMPRA}),COMPRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMPRASDataTable = CType(MyBase.Clone,COMPRASDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMPRASDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCOMPRA = MyBase.Columns("CODCOMPRA")
            Me.columnNUMRESPONSABLE = MyBase.Columns("NUMRESPONSABLE")
            Me.columnRES_CODEMPRESA = MyBase.Columns("RES_CODEMPRESA")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnCODDEPOSITO = MyBase.Columns("CODDEPOSITO")
            Me.columnCODCOMPROBANTE = MyBase.Columns("CODCOMPROBANTE")
            Me.columnCODPROVEEDOR = MyBase.Columns("CODPROVEEDOR")
            Me.columnNUMCOMPRA = MyBase.Columns("NUMCOMPRA")
            Me.columnFECHACOMPRA = MyBase.Columns("FECHACOMPRA")
            Me.columnTOTALEXENTA = MyBase.Columns("TOTALEXENTA")
            Me.columnTOTALGRAVADA = MyBase.Columns("TOTALGRAVADA")
            Me.columnTOTALIVA = MyBase.Columns("TOTALIVA")
            Me.columnTOTALCOMPRA = MyBase.Columns("TOTALCOMPRA")
            Me.columnTOTALDESCUENTO = MyBase.Columns("TOTALDESCUENTO")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnCODTIPOGASTODET = MyBase.Columns("CODTIPOGASTODET")
            Me.columnMODALIDADPAGO = MyBase.Columns("MODALIDADPAGO")
            Me.columnCODCENTRO = MyBase.Columns("CODCENTRO")
            Me.columnBASEIMPONIBLE = MyBase.Columns("BASEIMPONIBLE")
            Me.columnTOTALIVA5 = MyBase.Columns("TOTALIVA5")
            Me.columnIVAINCLUIDO = MyBase.Columns("IVAINCLUIDO")
            Me.columnCOMPRASIMPLE = MyBase.Columns("COMPRASIMPLE")
            Me.columnMETODO = MyBase.Columns("METODO")
            Me.columnTOTALGRAVADO10 = MyBase.Columns("TOTALGRAVADO10")
            Me.columnTOTALIVA10 = MyBase.Columns("TOTALIVA10")
            Me.columnTOTALGRAVADO5 = MyBase.Columns("TOTALGRAVADO5")
            Me.columnASENTADO = MyBase.Columns("ASENTADO")
            Me.columnCODEVENTO = MyBase.Columns("CODEVENTO")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnMOTIVOANULADO = MyBase.Columns("MOTIVOANULADO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCOMPRA = New Global.System.Data.DataColumn("CODCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOMPRA)
            Me.columnNUMRESPONSABLE = New Global.System.Data.DataColumn("NUMRESPONSABLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMRESPONSABLE)
            Me.columnRES_CODEMPRESA = New Global.System.Data.DataColumn("RES_CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnRES_CODEMPRESA)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnCODDEPOSITO = New Global.System.Data.DataColumn("CODDEPOSITO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODDEPOSITO)
            Me.columnCODCOMPROBANTE = New Global.System.Data.DataColumn("CODCOMPROBANTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOMPROBANTE)
            Me.columnCODPROVEEDOR = New Global.System.Data.DataColumn("CODPROVEEDOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPROVEEDOR)
            Me.columnNUMCOMPRA = New Global.System.Data.DataColumn("NUMCOMPRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCOMPRA)
            Me.columnFECHACOMPRA = New Global.System.Data.DataColumn("FECHACOMPRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACOMPRA)
            Me.columnTOTALEXENTA = New Global.System.Data.DataColumn("TOTALEXENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALEXENTA)
            Me.columnTOTALGRAVADA = New Global.System.Data.DataColumn("TOTALGRAVADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALGRAVADA)
            Me.columnTOTALIVA = New Global.System.Data.DataColumn("TOTALIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIVA)
            Me.columnTOTALCOMPRA = New Global.System.Data.DataColumn("TOTALCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCOMPRA)
            Me.columnTOTALDESCUENTO = New Global.System.Data.DataColumn("TOTALDESCUENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALDESCUENTO)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnCODTIPOGASTODET = New Global.System.Data.DataColumn("CODTIPOGASTODET", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOGASTODET)
            Me.columnMODALIDADPAGO = New Global.System.Data.DataColumn("MODALIDADPAGO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODALIDADPAGO)
            Me.columnCODCENTRO = New Global.System.Data.DataColumn("CODCENTRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCENTRO)
            Me.columnBASEIMPONIBLE = New Global.System.Data.DataColumn("BASEIMPONIBLE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnBASEIMPONIBLE)
            Me.columnTOTALIVA5 = New Global.System.Data.DataColumn("TOTALIVA5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIVA5)
            Me.columnIVAINCLUIDO = New Global.System.Data.DataColumn("IVAINCLUIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAINCLUIDO)
            Me.columnCOMPRASIMPLE = New Global.System.Data.DataColumn("COMPRASIMPLE", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRASIMPLE)
            Me.columnMETODO = New Global.System.Data.DataColumn("METODO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMETODO)
            Me.columnTOTALGRAVADO10 = New Global.System.Data.DataColumn("TOTALGRAVADO10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALGRAVADO10)
            Me.columnTOTALIVA10 = New Global.System.Data.DataColumn("TOTALIVA10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALIVA10)
            Me.columnTOTALGRAVADO5 = New Global.System.Data.DataColumn("TOTALGRAVADO5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALGRAVADO5)
            Me.columnASENTADO = New Global.System.Data.DataColumn("ASENTADO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnASENTADO)
            Me.columnCODEVENTO = New Global.System.Data.DataColumn("CODEVENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEVENTO)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnMOTIVOANULADO = New Global.System.Data.DataColumn("MOTIVOANULADO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMOTIVOANULADO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCOMPRA}, true))
            Me.columnCODCOMPRA.AutoIncrement = true
            Me.columnCODCOMPRA.AutoIncrementSeed = -1
            Me.columnCODCOMPRA.AutoIncrementStep = -1
            Me.columnCODCOMPRA.AllowDBNull = false
            Me.columnCODCOMPRA.ReadOnly = true
            Me.columnCODCOMPRA.Unique = true
            Me.columnNUMRESPONSABLE.MaxLength = 50
            Me.columnNUMCOMPRA.MaxLength = 200
            Me.columnMETODO.MaxLength = 100
            Me.columnCONCEPTO.MaxLength = 300
            Me.columnMOTIVOANULADO.MaxLength = 300
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCOMPRASRow() As COMPRASRow
            Return CType(Me.NewRow,COMPRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMPRASRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMPRASRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMPRASRowChangedEvent) Is Nothing) Then
                RaiseEvent COMPRASRowChanged(Me, New COMPRASRowChangeEvent(CType(e.Row,COMPRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMPRASRowChangingEvent) Is Nothing) Then
                RaiseEvent COMPRASRowChanging(Me, New COMPRASRowChangeEvent(CType(e.Row,COMPRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMPRASRowDeletedEvent) Is Nothing) Then
                RaiseEvent COMPRASRowDeleted(Me, New COMPRASRowChangeEvent(CType(e.Row,COMPRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMPRASRowDeletingEvent) Is Nothing) Then
                RaiseEvent COMPRASRowDeleting(Me, New COMPRASRowChangeEvent(CType(e.Row,COMPRASRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCOMPRASRow(ByVal row As COMPRASRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMPRASDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COMPRASDETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of COMPRASDETALLERow)
        
        Private columnComprasDetalleID As Global.System.Data.DataColumn
        
        Private columnCODCOMPRA As Global.System.Data.DataColumn
        
        Private columnLINEANROCOMPRA As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCANTIDADCOMPRA As Global.System.Data.DataColumn
        
        Private columnCOSTOPROMEDIO As Global.System.Data.DataColumn
        
        Private columnCOSTOUNITARIO As Global.System.Data.DataColumn
        
        Private columnIVA As Global.System.Data.DataColumn
        
        Private columnFACTORPROMEDIO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnCOSTOBRUTO As Global.System.Data.DataColumn
        
        Private columnORDENFABRICACION As Global.System.Data.DataColumn
        
        Private columnCOSTOPROMEDIOMAESTRO As Global.System.Data.DataColumn
        
        Private columnCOSTOPPMAESTRO As Global.System.Data.DataColumn
        
        Private columnPRECIOMAY As Global.System.Data.DataColumn
        
        Private columnPRECIOMIN As Global.System.Data.DataColumn
        
        Private columnLINEANUMERO As Global.System.Data.DataColumn
        
        Private columnCODCENTRO As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnIMPORTEGRAVADO10 As Global.System.Data.DataColumn
        
        Private columnIMPORTEGRAVADO5 As Global.System.Data.DataColumn
        
        Private columnIMPORTEEXENTO As Global.System.Data.DataColumn
        
        Private columnINTEGRADO As Global.System.Data.DataColumn
        
        Private columnTIPOIVA As Global.System.Data.DataColumn
        
        Private columnCODMATERIAPRIMA As Global.System.Data.DataColumn
        
        Private columnVIDAUTIL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COMPRASDETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ComprasDetalleIDColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnComprasDetalleID
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEANROCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEANROCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDADCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOPROMEDIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOPROMEDIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOUNITARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOUNITARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FACTORPROMEDIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTORPROMEDIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOBRUTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOBRUTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDENFABRICACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDENFABRICACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOPROMEDIOMAESTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOPROMEDIOMAESTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOPPMAESTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOPPMAESTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOMAYColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOMAY
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOMIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEANUMEROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEANUMERO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCENTROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCENTRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEGRAVADO10Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTEGRAVADO10
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEGRAVADO5Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTEGRAVADO5
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEEXENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTEEXENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INTEGRADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINTEGRADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMATERIAPRIMAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMATERIAPRIMA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VIDAUTILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVIDAUTIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COMPRASDETALLERow
            Get
                Return CType(Me.Rows(index),COMPRASDETALLERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASDETALLERowChanging As COMPRASDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASDETALLERowChanged As COMPRASDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASDETALLERowDeleting As COMPRASDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COMPRASDETALLERowDeleted As COMPRASDETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCOMPRASDETALLERow(ByVal row As COMPRASDETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCOMPRASDETALLERow( _
                    ByVal parentCOMPRASRowByFK_COMPRASD_RELATIONS_COMPRAS As COMPRASRow,  _
                    ByVal LINEANROCOMPRA As Decimal,  _
                    ByVal CODPRODUCTO As Decimal,  _
                    ByVal CODCODIGO As Decimal,  _
                    ByVal CANTIDADCOMPRA As Decimal,  _
                    ByVal COSTOPROMEDIO As Decimal,  _
                    ByVal COSTOUNITARIO As Decimal,  _
                    ByVal IVA As Decimal,  _
                    ByVal FACTORPROMEDIO As Decimal,  _
                    ByVal FECGRA As Date,  _
                    ByVal COSTOBRUTO As Decimal,  _
                    ByVal ORDENFABRICACION As String,  _
                    ByVal COSTOPROMEDIOMAESTRO As Decimal,  _
                    ByVal COSTOPPMAESTRO As Decimal,  _
                    ByVal PRECIOMAY As Decimal,  _
                    ByVal PRECIOMIN As Decimal,  _
                    ByVal LINEANUMERO As Decimal,  _
                    ByVal CODCENTRO As Decimal,  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODSUCURSAL As Decimal,  _
                    ByVal IMPORTEGRAVADO10 As Decimal,  _
                    ByVal IMPORTEGRAVADO5 As Decimal,  _
                    ByVal IMPORTEEXENTO As Decimal,  _
                    ByVal INTEGRADO As Decimal,  _
                    ByVal TIPOIVA As String,  _
                    ByVal CODMATERIAPRIMA As Decimal,  _
                    ByVal VIDAUTIL As Date) As COMPRASDETALLERow
            Dim rowCOMPRASDETALLERow As COMPRASDETALLERow = CType(Me.NewRow,COMPRASDETALLERow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, LINEANROCOMPRA, CODPRODUCTO, CODCODIGO, CANTIDADCOMPRA, COSTOPROMEDIO, COSTOUNITARIO, IVA, FACTORPROMEDIO, FECGRA, COSTOBRUTO, ORDENFABRICACION, COSTOPROMEDIOMAESTRO, COSTOPPMAESTRO, PRECIOMAY, PRECIOMIN, LINEANUMERO, CODCENTRO, DESPRODUCTO, CODSUCURSAL, IMPORTEGRAVADO10, IMPORTEGRAVADO5, IMPORTEEXENTO, INTEGRADO, TIPOIVA, CODMATERIAPRIMA, VIDAUTIL}
            If (Not (parentCOMPRASRowByFK_COMPRASD_RELATIONS_COMPRAS) Is Nothing) Then
                columnValuesArray(1) = parentCOMPRASRowByFK_COMPRASD_RELATIONS_COMPRAS(0)
            End If
            rowCOMPRASDETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOMPRASDETALLERow)
            Return rowCOMPRASDETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByComprasDetalleID(ByVal ComprasDetalleID As Decimal) As COMPRASDETALLERow
            Return CType(Me.Rows.Find(New Object() {ComprasDetalleID}),COMPRASDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COMPRASDETALLEDataTable = CType(MyBase.Clone,COMPRASDETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COMPRASDETALLEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnComprasDetalleID = MyBase.Columns("ComprasDetalleID")
            Me.columnCODCOMPRA = MyBase.Columns("CODCOMPRA")
            Me.columnLINEANROCOMPRA = MyBase.Columns("LINEANROCOMPRA")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCANTIDADCOMPRA = MyBase.Columns("CANTIDADCOMPRA")
            Me.columnCOSTOPROMEDIO = MyBase.Columns("COSTOPROMEDIO")
            Me.columnCOSTOUNITARIO = MyBase.Columns("COSTOUNITARIO")
            Me.columnIVA = MyBase.Columns("IVA")
            Me.columnFACTORPROMEDIO = MyBase.Columns("FACTORPROMEDIO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnCOSTOBRUTO = MyBase.Columns("COSTOBRUTO")
            Me.columnORDENFABRICACION = MyBase.Columns("ORDENFABRICACION")
            Me.columnCOSTOPROMEDIOMAESTRO = MyBase.Columns("COSTOPROMEDIOMAESTRO")
            Me.columnCOSTOPPMAESTRO = MyBase.Columns("COSTOPPMAESTRO")
            Me.columnPRECIOMAY = MyBase.Columns("PRECIOMAY")
            Me.columnPRECIOMIN = MyBase.Columns("PRECIOMIN")
            Me.columnLINEANUMERO = MyBase.Columns("LINEANUMERO")
            Me.columnCODCENTRO = MyBase.Columns("CODCENTRO")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnIMPORTEGRAVADO10 = MyBase.Columns("IMPORTEGRAVADO10")
            Me.columnIMPORTEGRAVADO5 = MyBase.Columns("IMPORTEGRAVADO5")
            Me.columnIMPORTEEXENTO = MyBase.Columns("IMPORTEEXENTO")
            Me.columnINTEGRADO = MyBase.Columns("INTEGRADO")
            Me.columnTIPOIVA = MyBase.Columns("TIPOIVA")
            Me.columnCODMATERIAPRIMA = MyBase.Columns("CODMATERIAPRIMA")
            Me.columnVIDAUTIL = MyBase.Columns("VIDAUTIL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnComprasDetalleID = New Global.System.Data.DataColumn("ComprasDetalleID", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnComprasDetalleID)
            Me.columnCODCOMPRA = New Global.System.Data.DataColumn("CODCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOMPRA)
            Me.columnLINEANROCOMPRA = New Global.System.Data.DataColumn("LINEANROCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEANROCOMPRA)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCANTIDADCOMPRA = New Global.System.Data.DataColumn("CANTIDADCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDADCOMPRA)
            Me.columnCOSTOPROMEDIO = New Global.System.Data.DataColumn("COSTOPROMEDIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOPROMEDIO)
            Me.columnCOSTOUNITARIO = New Global.System.Data.DataColumn("COSTOUNITARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOUNITARIO)
            Me.columnIVA = New Global.System.Data.DataColumn("IVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVA)
            Me.columnFACTORPROMEDIO = New Global.System.Data.DataColumn("FACTORPROMEDIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTORPROMEDIO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnCOSTOBRUTO = New Global.System.Data.DataColumn("COSTOBRUTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOBRUTO)
            Me.columnORDENFABRICACION = New Global.System.Data.DataColumn("ORDENFABRICACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDENFABRICACION)
            Me.columnCOSTOPROMEDIOMAESTRO = New Global.System.Data.DataColumn("COSTOPROMEDIOMAESTRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOPROMEDIOMAESTRO)
            Me.columnCOSTOPPMAESTRO = New Global.System.Data.DataColumn("COSTOPPMAESTRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOPPMAESTRO)
            Me.columnPRECIOMAY = New Global.System.Data.DataColumn("PRECIOMAY", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOMAY)
            Me.columnPRECIOMIN = New Global.System.Data.DataColumn("PRECIOMIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOMIN)
            Me.columnLINEANUMERO = New Global.System.Data.DataColumn("LINEANUMERO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEANUMERO)
            Me.columnCODCENTRO = New Global.System.Data.DataColumn("CODCENTRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCENTRO)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnIMPORTEGRAVADO10 = New Global.System.Data.DataColumn("IMPORTEGRAVADO10", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTEGRAVADO10)
            Me.columnIMPORTEGRAVADO5 = New Global.System.Data.DataColumn("IMPORTEGRAVADO5", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTEGRAVADO5)
            Me.columnIMPORTEEXENTO = New Global.System.Data.DataColumn("IMPORTEEXENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTEEXENTO)
            Me.columnINTEGRADO = New Global.System.Data.DataColumn("INTEGRADO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINTEGRADO)
            Me.columnTIPOIVA = New Global.System.Data.DataColumn("TIPOIVA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOIVA)
            Me.columnCODMATERIAPRIMA = New Global.System.Data.DataColumn("CODMATERIAPRIMA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMATERIAPRIMA)
            Me.columnVIDAUTIL = New Global.System.Data.DataColumn("VIDAUTIL", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVIDAUTIL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnComprasDetalleID}, true))
            Me.columnComprasDetalleID.AutoIncrement = true
            Me.columnComprasDetalleID.AutoIncrementSeed = -1
            Me.columnComprasDetalleID.AutoIncrementStep = -1
            Me.columnComprasDetalleID.AllowDBNull = false
            Me.columnComprasDetalleID.ReadOnly = true
            Me.columnComprasDetalleID.Unique = true
            Me.columnCODCOMPRA.AllowDBNull = false
            Me.columnORDENFABRICACION.MaxLength = 13
            Me.columnDESPRODUCTO.MaxLength = 200
            Me.columnTIPOIVA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCOMPRASDETALLERow() As COMPRASDETALLERow
            Return CType(Me.NewRow,COMPRASDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COMPRASDETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COMPRASDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COMPRASDETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent COMPRASDETALLERowChanged(Me, New COMPRASDETALLERowChangeEvent(CType(e.Row,COMPRASDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COMPRASDETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent COMPRASDETALLERowChanging(Me, New COMPRASDETALLERowChangeEvent(CType(e.Row,COMPRASDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COMPRASDETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent COMPRASDETALLERowDeleted(Me, New COMPRASDETALLERowChangeEvent(CType(e.Row,COMPRASDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COMPRASDETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent COMPRASDETALLERowDeleting(Me, New COMPRASDETALLERowChangeEvent(CType(e.Row,COMPRASDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCOMPRASDETALLERow(ByVal row As COMPRASDETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COMPRASDETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class FAMILIADataTable
        Inherits Global.System.Data.TypedTableBase(Of FAMILIARow)
        
        Private columnCODFAMILIA As Global.System.Data.DataColumn
        
        Private columnNUMFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "FAMILIA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As FAMILIARow
            Get
                Return CType(Me.Rows(index),FAMILIARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMILIARowChanging As FAMILIARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMILIARowChanged As FAMILIARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMILIARowDeleting As FAMILIARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event FAMILIARowDeleted As FAMILIARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddFAMILIARow(ByVal row As FAMILIARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddFAMILIARow(ByVal CODFAMILIA As Decimal, ByVal NUMFAMILIA As String, ByVal DESFAMILIA As String) As FAMILIARow
            Dim rowFAMILIARow As FAMILIARow = CType(Me.NewRow,FAMILIARow)
            Dim columnValuesArray() As Object = New Object() {CODFAMILIA, NUMFAMILIA, DESFAMILIA}
            rowFAMILIARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowFAMILIARow)
            Return rowFAMILIARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODFAMILIA(ByVal CODFAMILIA As Decimal) As FAMILIARow
            Return CType(Me.Rows.Find(New Object() {CODFAMILIA}),FAMILIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As FAMILIADataTable = CType(MyBase.Clone,FAMILIADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New FAMILIADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODFAMILIA = MyBase.Columns("CODFAMILIA")
            Me.columnNUMFAMILIA = MyBase.Columns("NUMFAMILIA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODFAMILIA = New Global.System.Data.DataColumn("CODFAMILIA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFAMILIA)
            Me.columnNUMFAMILIA = New Global.System.Data.DataColumn("NUMFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMFAMILIA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODFAMILIA}, true))
            Me.columnCODFAMILIA.AllowDBNull = false
            Me.columnCODFAMILIA.Unique = true
            Me.columnNUMFAMILIA.MaxLength = 5
            Me.columnDESFAMILIA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewFAMILIARow() As FAMILIARow
            Return CType(Me.NewRow,FAMILIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New FAMILIARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(FAMILIARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.FAMILIARowChangedEvent) Is Nothing) Then
                RaiseEvent FAMILIARowChanged(Me, New FAMILIARowChangeEvent(CType(e.Row,FAMILIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.FAMILIARowChangingEvent) Is Nothing) Then
                RaiseEvent FAMILIARowChanging(Me, New FAMILIARowChangeEvent(CType(e.Row,FAMILIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.FAMILIARowDeletedEvent) Is Nothing) Then
                RaiseEvent FAMILIARowDeleted(Me, New FAMILIARowChangeEvent(CType(e.Row,FAMILIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.FAMILIARowDeletingEvent) Is Nothing) Then
                RaiseEvent FAMILIARowDeleting(Me, New FAMILIARowChangeEvent(CType(e.Row,FAMILIARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveFAMILIARow(ByVal row As FAMILIARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "FAMILIADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRODUCTOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of PRODUCTOSRow)
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnCODFAMILIA As Global.System.Data.DataColumn
        
        Private columnCODLINEA As Global.System.Data.DataColumn
        
        Private columnNUMCOLOR As Global.System.Data.DataColumn
        
        Private columnCOL_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMTALLE As Global.System.Data.DataColumn
        
        Private columnTAL_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODIVA As Global.System.Data.DataColumn
        
        Private columnCODMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODESTADOPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODDESCUENTO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODIGOBARRA As Global.System.Data.DataColumn
        
        Private columnCOSTOANTERIOR As Global.System.Data.DataColumn
        
        Private columnSTOCKMINIMO As Global.System.Data.DataColumn
        
        Private columnSTOCKMAXIMO As Global.System.Data.DataColumn
        
        Private columnFECHAINGRESO As Global.System.Data.DataColumn
        
        Private columnCODIGOORIGINAL As Global.System.Data.DataColumn
        
        Private columnPRODUCTOACTIVO As Global.System.Data.DataColumn
        
        Private columnULTIMOCOSTO As Global.System.Data.DataColumn
        
        Private columnPORCENCOMI As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnCOSTOPP As Global.System.Data.DataColumn
        
        Private columnFECHAPP As Global.System.Data.DataColumn
        
        Private columnUSUPP As Global.System.Data.DataColumn
        
        Private columnORDPRE As Global.System.Data.DataColumn
        
        Private columnEMPREUSUPP As Global.System.Data.DataColumn
        
        Private columnFACCAM As Global.System.Data.DataColumn
        
        Private columnFECHAULTIMACOMPRA As Global.System.Data.DataColumn
        
        Private columnNUMCLOR As Global.System.Data.DataColumn
        
        Private columnCLOR_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnPESO As Global.System.Data.DataColumn
        
        Private columnPESOESPECIFICO As Global.System.Data.DataColumn
        
        Private columnPESOPORMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODPLANTILLA As Global.System.Data.DataColumn
        
        Private columnSERVICIO As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnIVAINCLUIDO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnPRECIOSERVICIO As Global.System.Data.DataColumn
        
        Private columnPRODUCTOPRODUCIDO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRODUCTOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COL_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOL_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMTALLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMTALLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAL_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAL_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODESTADOPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODESTADOPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODDESCUENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODDESCUENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOBARRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGOBARRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMINIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMINIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMAXIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMAXIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOORIGINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGOORIGINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ULTIMOCOSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnULTIMOCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORCENCOMIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENCOMI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDPREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDPRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPREUSUPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPREUSUPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FACCAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACCAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAULTIMACOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAULTIMACOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLOR_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLOR_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOESPECIFICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESOESPECIFICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOPORMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESOPORMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPLANTILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPLANTILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVAINCLUIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAINCLUIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOSERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOSERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOPRODUCIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOPRODUCIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRODUCTOSRow
            Get
                Return CType(Me.Rows(index),PRODUCTOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTOSRowChanging As PRODUCTOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTOSRowChanged As PRODUCTOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTOSRowDeleting As PRODUCTOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRODUCTOSRowDeleted As PRODUCTOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRODUCTOSRow(ByVal row As PRODUCTOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRODUCTOSRow( _
                    ByVal CODRUBRO As Decimal,  _
                    ByVal parentFAMILIARowByFK_PRODUCTO_RELATIONS_FAMILIA As FAMILIARow,  _
                    ByVal parentRUBRORowByFK_PRODUCTO_RELATIONS_LINEA As RUBRORow,  _
                    ByVal NUMCOLOR As String,  _
                    ByVal COL_CODEMPRESA As Decimal,  _
                    ByVal NUMTALLE As String,  _
                    ByVal TAL_CODEMPRESA As Decimal,  _
                    ByVal CODIVA As Decimal,  _
                    ByVal parentUNIDADMEDIDARowByFK_PRODUCTO_RELATIONS_UNIDADME As UNIDADMEDIDARow,  _
                    ByVal CODMONEDA As Decimal,  _
                    ByVal CODESTADOPRODUCTO As Decimal,  _
                    ByVal CODDESCUENTO As Decimal,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal parentPROVEEDORRowByFK_PRODUCTOS_PROVEEDOR As PROVEEDORRow,  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODIGOBARRA As String,  _
                    ByVal COSTOANTERIOR As Decimal,  _
                    ByVal STOCKMINIMO As Decimal,  _
                    ByVal STOCKMAXIMO As Decimal,  _
                    ByVal FECHAINGRESO As Date,  _
                    ByVal CODIGOORIGINAL As String,  _
                    ByVal PRODUCTOACTIVO As Byte,  _
                    ByVal ULTIMOCOSTO As Decimal,  _
                    ByVal PORCENCOMI As Decimal,  _
                    ByVal FECGRA As Date,  _
                    ByVal COSTOPP As Decimal,  _
                    ByVal FECHAPP As Date,  _
                    ByVal USUPP As Decimal,  _
                    ByVal ORDPRE As Decimal,  _
                    ByVal EMPREUSUPP As Decimal,  _
                    ByVal FACCAM As Decimal,  _
                    ByVal FECHAULTIMACOMPRA As Date,  _
                    ByVal NUMCLOR As String,  _
                    ByVal CLOR_CODEMPRESA As Decimal,  _
                    ByVal PESO As Decimal,  _
                    ByVal PESOESPECIFICO As Decimal,  _
                    ByVal PESOPORMEDIDA As Decimal,  _
                    ByVal CODPLANTILLA As Decimal,  _
                    ByVal SERVICIO As Byte,  _
                    ByVal ESTADO As Decimal,  _
                    ByVal IVAINCLUIDO As Decimal,  _
                    ByVal PRODUCTO As Byte,  _
                    ByVal PRECIOSERVICIO As Decimal,  _
                    ByVal PRODUCTOPRODUCIDO As Byte) As PRODUCTOSRow
            Dim rowPRODUCTOSRow As PRODUCTOSRow = CType(Me.NewRow,PRODUCTOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODRUBRO, Nothing, Nothing, NUMCOLOR, COL_CODEMPRESA, NUMTALLE, TAL_CODEMPRESA, CODIVA, Nothing, CODMONEDA, CODESTADOPRODUCTO, CODDESCUENTO, CODUSUARIO, CODEMPRESA, Nothing, DESPRODUCTO, CODIGOBARRA, COSTOANTERIOR, STOCKMINIMO, STOCKMAXIMO, FECHAINGRESO, CODIGOORIGINAL, PRODUCTOACTIVO, ULTIMOCOSTO, PORCENCOMI, FECGRA, COSTOPP, FECHAPP, USUPP, ORDPRE, EMPREUSUPP, FACCAM, FECHAULTIMACOMPRA, NUMCLOR, CLOR_CODEMPRESA, PESO, PESOESPECIFICO, PESOPORMEDIDA, CODPLANTILLA, SERVICIO, ESTADO, IVAINCLUIDO, PRODUCTO, PRECIOSERVICIO, PRODUCTOPRODUCIDO}
            If (Not (parentFAMILIARowByFK_PRODUCTO_RELATIONS_FAMILIA) Is Nothing) Then
                columnValuesArray(2) = parentFAMILIARowByFK_PRODUCTO_RELATIONS_FAMILIA(0)
            End If
            If (Not (parentRUBRORowByFK_PRODUCTO_RELATIONS_LINEA) Is Nothing) Then
                columnValuesArray(3) = parentRUBRORowByFK_PRODUCTO_RELATIONS_LINEA(0)
            End If
            If (Not (parentUNIDADMEDIDARowByFK_PRODUCTO_RELATIONS_UNIDADME) Is Nothing) Then
                columnValuesArray(9) = parentUNIDADMEDIDARowByFK_PRODUCTO_RELATIONS_UNIDADME(0)
            End If
            If (Not (parentPROVEEDORRowByFK_PRODUCTOS_PROVEEDOR) Is Nothing) Then
                columnValuesArray(15) = parentPROVEEDORRowByFK_PRODUCTOS_PROVEEDOR(0)
            End If
            rowPRODUCTOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRODUCTOSRow)
            Return rowPRODUCTOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODPRODUCTO(ByVal CODPRODUCTO As Decimal) As PRODUCTOSRow
            Return CType(Me.Rows.Find(New Object() {CODPRODUCTO}),PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRODUCTOSDataTable = CType(MyBase.Clone,PRODUCTOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRODUCTOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnCODFAMILIA = MyBase.Columns("CODFAMILIA")
            Me.columnCODLINEA = MyBase.Columns("CODLINEA")
            Me.columnNUMCOLOR = MyBase.Columns("NUMCOLOR")
            Me.columnCOL_CODEMPRESA = MyBase.Columns("COL_CODEMPRESA")
            Me.columnNUMTALLE = MyBase.Columns("NUMTALLE")
            Me.columnTAL_CODEMPRESA = MyBase.Columns("TAL_CODEMPRESA")
            Me.columnCODIVA = MyBase.Columns("CODIVA")
            Me.columnCODMEDIDA = MyBase.Columns("CODMEDIDA")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODESTADOPRODUCTO = MyBase.Columns("CODESTADOPRODUCTO")
            Me.columnCODDESCUENTO = MyBase.Columns("CODDESCUENTO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnCODPROVEEDOR = MyBase.Columns("CODPROVEEDOR")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnCODIGOBARRA = MyBase.Columns("CODIGOBARRA")
            Me.columnCOSTOANTERIOR = MyBase.Columns("COSTOANTERIOR")
            Me.columnSTOCKMINIMO = MyBase.Columns("STOCKMINIMO")
            Me.columnSTOCKMAXIMO = MyBase.Columns("STOCKMAXIMO")
            Me.columnFECHAINGRESO = MyBase.Columns("FECHAINGRESO")
            Me.columnCODIGOORIGINAL = MyBase.Columns("CODIGOORIGINAL")
            Me.columnPRODUCTOACTIVO = MyBase.Columns("PRODUCTOACTIVO")
            Me.columnULTIMOCOSTO = MyBase.Columns("ULTIMOCOSTO")
            Me.columnPORCENCOMI = MyBase.Columns("PORCENCOMI")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnCOSTOPP = MyBase.Columns("COSTOPP")
            Me.columnFECHAPP = MyBase.Columns("FECHAPP")
            Me.columnUSUPP = MyBase.Columns("USUPP")
            Me.columnORDPRE = MyBase.Columns("ORDPRE")
            Me.columnEMPREUSUPP = MyBase.Columns("EMPREUSUPP")
            Me.columnFACCAM = MyBase.Columns("FACCAM")
            Me.columnFECHAULTIMACOMPRA = MyBase.Columns("FECHAULTIMACOMPRA")
            Me.columnNUMCLOR = MyBase.Columns("NUMCLOR")
            Me.columnCLOR_CODEMPRESA = MyBase.Columns("CLOR_CODEMPRESA")
            Me.columnPESO = MyBase.Columns("PESO")
            Me.columnPESOESPECIFICO = MyBase.Columns("PESOESPECIFICO")
            Me.columnPESOPORMEDIDA = MyBase.Columns("PESOPORMEDIDA")
            Me.columnCODPLANTILLA = MyBase.Columns("CODPLANTILLA")
            Me.columnSERVICIO = MyBase.Columns("SERVICIO")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnIVAINCLUIDO = MyBase.Columns("IVAINCLUIDO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnPRECIOSERVICIO = MyBase.Columns("PRECIOSERVICIO")
            Me.columnPRODUCTOPRODUCIDO = MyBase.Columns("PRODUCTOPRODUCIDO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnCODFAMILIA = New Global.System.Data.DataColumn("CODFAMILIA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFAMILIA)
            Me.columnCODLINEA = New Global.System.Data.DataColumn("CODLINEA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODLINEA)
            Me.columnNUMCOLOR = New Global.System.Data.DataColumn("NUMCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCOLOR)
            Me.columnCOL_CODEMPRESA = New Global.System.Data.DataColumn("COL_CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOL_CODEMPRESA)
            Me.columnNUMTALLE = New Global.System.Data.DataColumn("NUMTALLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMTALLE)
            Me.columnTAL_CODEMPRESA = New Global.System.Data.DataColumn("TAL_CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAL_CODEMPRESA)
            Me.columnCODIVA = New Global.System.Data.DataColumn("CODIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIVA)
            Me.columnCODMEDIDA = New Global.System.Data.DataColumn("CODMEDIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMEDIDA)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODESTADOPRODUCTO = New Global.System.Data.DataColumn("CODESTADOPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODESTADOPRODUCTO)
            Me.columnCODDESCUENTO = New Global.System.Data.DataColumn("CODDESCUENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODDESCUENTO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnCODPROVEEDOR = New Global.System.Data.DataColumn("CODPROVEEDOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPROVEEDOR)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnCODIGOBARRA = New Global.System.Data.DataColumn("CODIGOBARRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGOBARRA)
            Me.columnCOSTOANTERIOR = New Global.System.Data.DataColumn("COSTOANTERIOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOANTERIOR)
            Me.columnSTOCKMINIMO = New Global.System.Data.DataColumn("STOCKMINIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMINIMO)
            Me.columnSTOCKMAXIMO = New Global.System.Data.DataColumn("STOCKMAXIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMAXIMO)
            Me.columnFECHAINGRESO = New Global.System.Data.DataColumn("FECHAINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAINGRESO)
            Me.columnCODIGOORIGINAL = New Global.System.Data.DataColumn("CODIGOORIGINAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGOORIGINAL)
            Me.columnPRODUCTOACTIVO = New Global.System.Data.DataColumn("PRODUCTOACTIVO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOACTIVO)
            Me.columnULTIMOCOSTO = New Global.System.Data.DataColumn("ULTIMOCOSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnULTIMOCOSTO)
            Me.columnPORCENCOMI = New Global.System.Data.DataColumn("PORCENCOMI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENCOMI)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnCOSTOPP = New Global.System.Data.DataColumn("COSTOPP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOPP)
            Me.columnFECHAPP = New Global.System.Data.DataColumn("FECHAPP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAPP)
            Me.columnUSUPP = New Global.System.Data.DataColumn("USUPP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUPP)
            Me.columnORDPRE = New Global.System.Data.DataColumn("ORDPRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDPRE)
            Me.columnEMPREUSUPP = New Global.System.Data.DataColumn("EMPREUSUPP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPREUSUPP)
            Me.columnFACCAM = New Global.System.Data.DataColumn("FACCAM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACCAM)
            Me.columnFECHAULTIMACOMPRA = New Global.System.Data.DataColumn("FECHAULTIMACOMPRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAULTIMACOMPRA)
            Me.columnNUMCLOR = New Global.System.Data.DataColumn("NUMCLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLOR)
            Me.columnCLOR_CODEMPRESA = New Global.System.Data.DataColumn("CLOR_CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLOR_CODEMPRESA)
            Me.columnPESO = New Global.System.Data.DataColumn("PESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO)
            Me.columnPESOESPECIFICO = New Global.System.Data.DataColumn("PESOESPECIFICO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESOESPECIFICO)
            Me.columnPESOPORMEDIDA = New Global.System.Data.DataColumn("PESOPORMEDIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESOPORMEDIDA)
            Me.columnCODPLANTILLA = New Global.System.Data.DataColumn("CODPLANTILLA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPLANTILLA)
            Me.columnSERVICIO = New Global.System.Data.DataColumn("SERVICIO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICIO)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnIVAINCLUIDO = New Global.System.Data.DataColumn("IVAINCLUIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAINCLUIDO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnPRECIOSERVICIO = New Global.System.Data.DataColumn("PRECIOSERVICIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOSERVICIO)
            Me.columnPRODUCTOPRODUCIDO = New Global.System.Data.DataColumn("PRODUCTOPRODUCIDO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOPRODUCIDO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODPRODUCTO}, true))
            Me.columnCODPRODUCTO.AutoIncrement = true
            Me.columnCODPRODUCTO.AutoIncrementSeed = -1
            Me.columnCODPRODUCTO.AutoIncrementStep = -1
            Me.columnCODPRODUCTO.AllowDBNull = false
            Me.columnCODPRODUCTO.ReadOnly = true
            Me.columnCODPRODUCTO.Unique = true
            Me.columnNUMCOLOR.MaxLength = 50
            Me.columnNUMTALLE.MaxLength = 50
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnCODIGOBARRA.MaxLength = 25
            Me.columnCODIGOORIGINAL.MaxLength = 50
            Me.columnNUMCLOR.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRODUCTOSRow() As PRODUCTOSRow
            Return CType(Me.NewRow,PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRODUCTOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRODUCTOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRODUCTOSRowChangedEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowChanged(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRODUCTOSRowChangingEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowChanging(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRODUCTOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowDeleted(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRODUCTOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRODUCTOSRowDeleting(Me, New PRODUCTOSRowChangeEvent(CType(e.Row,PRODUCTOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRODUCTOSRow(ByVal row As PRODUCTOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRODUCTOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class RUBRODataTable
        Inherits Global.System.Data.TypedTableBase(Of RUBRORow)
        
        Private columnCODLINEA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnNUMRUBRO As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "RUBRO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As RUBRORow
            Get
                Return CType(Me.Rows(index),RUBRORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RUBRORowChanging As RUBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RUBRORowChanged As RUBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RUBRORowDeleting As RUBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event RUBRORowDeleted As RUBRORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddRUBRORow(ByVal row As RUBRORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddRUBRORow(ByVal CODLINEA As Decimal, ByVal DESLINEA As String, ByVal CODRUBRO As Decimal, ByVal NUMRUBRO As String, ByVal DESRUBRO As String) As RUBRORow
            Dim rowRUBRORow As RUBRORow = CType(Me.NewRow,RUBRORow)
            Dim columnValuesArray() As Object = New Object() {CODLINEA, DESLINEA, CODRUBRO, NUMRUBRO, DESRUBRO}
            rowRUBRORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowRUBRORow)
            Return rowRUBRORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODRUBRO(ByVal CODRUBRO As Decimal) As RUBRORow
            Return CType(Me.Rows.Find(New Object() {CODRUBRO}),RUBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As RUBRODataTable = CType(MyBase.Clone,RUBRODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New RUBRODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODLINEA = MyBase.Columns("CODLINEA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnNUMRUBRO = MyBase.Columns("NUMRUBRO")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODLINEA = New Global.System.Data.DataColumn("CODLINEA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODLINEA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnNUMRUBRO = New Global.System.Data.DataColumn("NUMRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMRUBRO)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODRUBRO}, true))
            Me.columnDESLINEA.MaxLength = 100
            Me.columnCODRUBRO.AllowDBNull = false
            Me.columnCODRUBRO.Unique = true
            Me.columnNUMRUBRO.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewRUBRORow() As RUBRORow
            Return CType(Me.NewRow,RUBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New RUBRORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(RUBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.RUBRORowChangedEvent) Is Nothing) Then
                RaiseEvent RUBRORowChanged(Me, New RUBRORowChangeEvent(CType(e.Row,RUBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.RUBRORowChangingEvent) Is Nothing) Then
                RaiseEvent RUBRORowChanging(Me, New RUBRORowChangeEvent(CType(e.Row,RUBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.RUBRORowDeletedEvent) Is Nothing) Then
                RaiseEvent RUBRORowDeleted(Me, New RUBRORowChangeEvent(CType(e.Row,RUBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.RUBRORowDeletingEvent) Is Nothing) Then
                RaiseEvent RUBRORowDeleting(Me, New RUBRORowChangeEvent(CType(e.Row,RUBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveRUBRORow(ByVal row As RUBRORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "RUBRODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class STOCKDEPOSITODataTable
        Inherits Global.System.Data.TypedTableBase(Of STOCKDEPOSITORow)
        
        Private columnCODSTOCKDEPOSTIPO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnSTOCKACTUAL As Global.System.Data.DataColumn
        
        Private columnSTOCKMIN As Global.System.Data.DataColumn
        
        Private columnSTOCKMAX As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnCODCIUDAD As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnVALOR As Global.System.Data.DataColumn
        
        Private columnCODDEPOSITO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "STOCKDEPOSITO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSTOCKDEPOSTIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSTOCKDEPOSTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKACTUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMINColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMIN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMAXColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMAX
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VALORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVALOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODDEPOSITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODDEPOSITO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As STOCKDEPOSITORow
            Get
                Return CType(Me.Rows(index),STOCKDEPOSITORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKDEPOSITORowChanging As STOCKDEPOSITORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKDEPOSITORowChanged As STOCKDEPOSITORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKDEPOSITORowDeleting As STOCKDEPOSITORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKDEPOSITORowDeleted As STOCKDEPOSITORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSTOCKDEPOSITORow(ByVal row As STOCKDEPOSITORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSTOCKDEPOSITORow(ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal STOCKACTUAL As Decimal, ByVal STOCKMIN As Decimal, ByVal STOCKMAX As Decimal, ByVal FECGRA As Date, ByVal CODCIUDAD As Decimal, ByVal CODCODIGO As Decimal, ByVal VALOR As Decimal, ByVal CODDEPOSITO As Integer) As STOCKDEPOSITORow
            Dim rowSTOCKDEPOSITORow As STOCKDEPOSITORow = CType(Me.NewRow,STOCKDEPOSITORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, CODUSUARIO, CODEMPRESA, STOCKACTUAL, STOCKMIN, STOCKMAX, FECGRA, CODCIUDAD, CODCODIGO, VALOR, CODDEPOSITO}
            rowSTOCKDEPOSITORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSTOCKDEPOSITORow)
            Return rowSTOCKDEPOSITORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODSTOCKDEPOSTIPO(ByVal CODSTOCKDEPOSTIPO As Decimal) As STOCKDEPOSITORow
            Return CType(Me.Rows.Find(New Object() {CODSTOCKDEPOSTIPO}),STOCKDEPOSITORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As STOCKDEPOSITODataTable = CType(MyBase.Clone,STOCKDEPOSITODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New STOCKDEPOSITODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODSTOCKDEPOSTIPO = MyBase.Columns("CODSTOCKDEPOSTIPO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnSTOCKACTUAL = MyBase.Columns("STOCKACTUAL")
            Me.columnSTOCKMIN = MyBase.Columns("STOCKMIN")
            Me.columnSTOCKMAX = MyBase.Columns("STOCKMAX")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnCODCIUDAD = MyBase.Columns("CODCIUDAD")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnVALOR = MyBase.Columns("VALOR")
            Me.columnCODDEPOSITO = MyBase.Columns("CODDEPOSITO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODSTOCKDEPOSTIPO = New Global.System.Data.DataColumn("CODSTOCKDEPOSTIPO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSTOCKDEPOSTIPO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnSTOCKACTUAL = New Global.System.Data.DataColumn("STOCKACTUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKACTUAL)
            Me.columnSTOCKMIN = New Global.System.Data.DataColumn("STOCKMIN", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMIN)
            Me.columnSTOCKMAX = New Global.System.Data.DataColumn("STOCKMAX", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMAX)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnCODCIUDAD = New Global.System.Data.DataColumn("CODCIUDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCIUDAD)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnVALOR = New Global.System.Data.DataColumn("VALOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVALOR)
            Me.columnCODDEPOSITO = New Global.System.Data.DataColumn("CODDEPOSITO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODDEPOSITO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODSTOCKDEPOSTIPO}, true))
            Me.columnCODSTOCKDEPOSTIPO.AutoIncrement = true
            Me.columnCODSTOCKDEPOSTIPO.AutoIncrementSeed = -1
            Me.columnCODSTOCKDEPOSTIPO.AutoIncrementStep = -1
            Me.columnCODSTOCKDEPOSTIPO.AllowDBNull = false
            Me.columnCODSTOCKDEPOSTIPO.ReadOnly = true
            Me.columnCODSTOCKDEPOSTIPO.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSTOCKDEPOSITORow() As STOCKDEPOSITORow
            Return CType(Me.NewRow,STOCKDEPOSITORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New STOCKDEPOSITORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(STOCKDEPOSITORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.STOCKDEPOSITORowChangedEvent) Is Nothing) Then
                RaiseEvent STOCKDEPOSITORowChanged(Me, New STOCKDEPOSITORowChangeEvent(CType(e.Row,STOCKDEPOSITORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.STOCKDEPOSITORowChangingEvent) Is Nothing) Then
                RaiseEvent STOCKDEPOSITORowChanging(Me, New STOCKDEPOSITORowChangeEvent(CType(e.Row,STOCKDEPOSITORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.STOCKDEPOSITORowDeletedEvent) Is Nothing) Then
                RaiseEvent STOCKDEPOSITORowDeleted(Me, New STOCKDEPOSITORowChangeEvent(CType(e.Row,STOCKDEPOSITORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.STOCKDEPOSITORowDeletingEvent) Is Nothing) Then
                RaiseEvent STOCKDEPOSITORowDeleting(Me, New STOCKDEPOSITORowChangeEvent(CType(e.Row,STOCKDEPOSITORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSTOCKDEPOSITORow(ByVal row As STOCKDEPOSITORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "STOCKDEPOSITODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class UNIDADMEDIDADataTable
        Inherits Global.System.Data.TypedTableBase(Of UNIDADMEDIDARow)
        
        Private columnCODMEDIDA As Global.System.Data.DataColumn
        
        Private columnNUMMEDIDA As Global.System.Data.DataColumn
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnSIMBOLO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "UNIDADMEDIDA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIMBOLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIMBOLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As UNIDADMEDIDARow
            Get
                Return CType(Me.Rows(index),UNIDADMEDIDARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UNIDADMEDIDARowChanging As UNIDADMEDIDARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UNIDADMEDIDARowChanged As UNIDADMEDIDARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UNIDADMEDIDARowDeleting As UNIDADMEDIDARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event UNIDADMEDIDARowDeleted As UNIDADMEDIDARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddUNIDADMEDIDARow(ByVal row As UNIDADMEDIDARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddUNIDADMEDIDARow(ByVal CODMEDIDA As Decimal, ByVal NUMMEDIDA As String, ByVal DESMEDIDA As String, ByVal SIMBOLO As String) As UNIDADMEDIDARow
            Dim rowUNIDADMEDIDARow As UNIDADMEDIDARow = CType(Me.NewRow,UNIDADMEDIDARow)
            Dim columnValuesArray() As Object = New Object() {CODMEDIDA, NUMMEDIDA, DESMEDIDA, SIMBOLO}
            rowUNIDADMEDIDARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUNIDADMEDIDARow)
            Return rowUNIDADMEDIDARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODMEDIDA(ByVal CODMEDIDA As Decimal) As UNIDADMEDIDARow
            Return CType(Me.Rows.Find(New Object() {CODMEDIDA}),UNIDADMEDIDARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As UNIDADMEDIDADataTable = CType(MyBase.Clone,UNIDADMEDIDADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New UNIDADMEDIDADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODMEDIDA = MyBase.Columns("CODMEDIDA")
            Me.columnNUMMEDIDA = MyBase.Columns("NUMMEDIDA")
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnSIMBOLO = MyBase.Columns("SIMBOLO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODMEDIDA = New Global.System.Data.DataColumn("CODMEDIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMEDIDA)
            Me.columnNUMMEDIDA = New Global.System.Data.DataColumn("NUMMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMMEDIDA)
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnSIMBOLO = New Global.System.Data.DataColumn("SIMBOLO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIMBOLO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODMEDIDA}, true))
            Me.columnCODMEDIDA.AllowDBNull = false
            Me.columnCODMEDIDA.Unique = true
            Me.columnNUMMEDIDA.MaxLength = 50
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnSIMBOLO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewUNIDADMEDIDARow() As UNIDADMEDIDARow
            Return CType(Me.NewRow,UNIDADMEDIDARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New UNIDADMEDIDARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(UNIDADMEDIDARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.UNIDADMEDIDARowChangedEvent) Is Nothing) Then
                RaiseEvent UNIDADMEDIDARowChanged(Me, New UNIDADMEDIDARowChangeEvent(CType(e.Row,UNIDADMEDIDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.UNIDADMEDIDARowChangingEvent) Is Nothing) Then
                RaiseEvent UNIDADMEDIDARowChanging(Me, New UNIDADMEDIDARowChangeEvent(CType(e.Row,UNIDADMEDIDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.UNIDADMEDIDARowDeletedEvent) Is Nothing) Then
                RaiseEvent UNIDADMEDIDARowDeleted(Me, New UNIDADMEDIDARowChangeEvent(CType(e.Row,UNIDADMEDIDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.UNIDADMEDIDARowDeletingEvent) Is Nothing) Then
                RaiseEvent UNIDADMEDIDARowDeleting(Me, New UNIDADMEDIDARowChangeEvent(CType(e.Row,UNIDADMEDIDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveUNIDADMEDIDARow(ByVal row As UNIDADMEDIDARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "UNIDADMEDIDADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COSTOPROMEDIONWDataTable
        Inherits Global.System.Data.TypedTableBase(Of COSTOPROMEDIONWRow)
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCantidad As Global.System.Data.DataColumn
        
        Private columnTotalUni As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COSTOPROMEDIONW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CantidadColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCantidad
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TotalUniColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTotalUni
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COSTOPROMEDIONWRow
            Get
                Return CType(Me.Rows(index),COSTOPROMEDIONWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWRowChanging As COSTOPROMEDIONWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWRowChanged As COSTOPROMEDIONWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWRowDeleting As COSTOPROMEDIONWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWRowDeleted As COSTOPROMEDIONWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCOSTOPROMEDIONWRow(ByVal row As COSTOPROMEDIONWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCOSTOPROMEDIONWRow(ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal DESRUBRO As String, ByVal DESMEDIDA As String, ByVal CODIGO As String, ByVal DESSUCURSAL As String, ByVal PRODUCTO As String, ByVal Cantidad As Decimal, ByVal TotalUni As Decimal) As COSTOPROMEDIONWRow
            Dim rowCOSTOPROMEDIONWRow As COSTOPROMEDIONWRow = CType(Me.NewRow,COSTOPROMEDIONWRow)
            Dim columnValuesArray() As Object = New Object() {DESFAMILIA, DESLINEA, DESRUBRO, DESMEDIDA, CODIGO, DESSUCURSAL, PRODUCTO, Cantidad, TotalUni}
            rowCOSTOPROMEDIONWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOSTOPROMEDIONWRow)
            Return rowCOSTOPROMEDIONWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COSTOPROMEDIONWDataTable = CType(MyBase.Clone,COSTOPROMEDIONWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COSTOPROMEDIONWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCantidad = MyBase.Columns("Cantidad")
            Me.columnTotalUni = MyBase.Columns("TotalUni")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCantidad = New Global.System.Data.DataColumn("Cantidad", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCantidad)
            Me.columnTotalUni = New Global.System.Data.DataColumn("TotalUni", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTotalUni)
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 181
            Me.columnCantidad.ReadOnly = true
            Me.columnTotalUni.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCOSTOPROMEDIONWRow() As COSTOPROMEDIONWRow
            Return CType(Me.NewRow,COSTOPROMEDIONWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COSTOPROMEDIONWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COSTOPROMEDIONWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COSTOPROMEDIONWRowChangedEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWRowChanged(Me, New COSTOPROMEDIONWRowChangeEvent(CType(e.Row,COSTOPROMEDIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COSTOPROMEDIONWRowChangingEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWRowChanging(Me, New COSTOPROMEDIONWRowChangeEvent(CType(e.Row,COSTOPROMEDIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COSTOPROMEDIONWRowDeletedEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWRowDeleted(Me, New COSTOPROMEDIONWRowChangeEvent(CType(e.Row,COSTOPROMEDIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COSTOPROMEDIONWRowDeletingEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWRowDeleting(Me, New COSTOPROMEDIONWRowChangeEvent(CType(e.Row,COSTOPROMEDIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCOSTOPROMEDIONWRow(ByVal row As COSTOPROMEDIONWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COSTOPROMEDIONWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class STOCKACTUALNWDataTable
        Inherits Global.System.Data.TypedTableBase(Of STOCKACTUALNWRow)
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "STOCKACTUALNW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As STOCKACTUALNWRow
            Get
                Return CType(Me.Rows(index),STOCKACTUALNWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKACTUALNWRowChanging As STOCKACTUALNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKACTUALNWRowChanged As STOCKACTUALNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKACTUALNWRowDeleting As STOCKACTUALNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event STOCKACTUALNWRowDeleted As STOCKACTUALNWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSTOCKACTUALNWRow(ByVal row As STOCKACTUALNWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSTOCKACTUALNWRow(ByVal Expr1 As Decimal, ByVal CODIGO As String) As STOCKACTUALNWRow
            Dim rowSTOCKACTUALNWRow As STOCKACTUALNWRow = CType(Me.NewRow,STOCKACTUALNWRow)
            Dim columnValuesArray() As Object = New Object() {Expr1, CODIGO}
            rowSTOCKACTUALNWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSTOCKACTUALNWRow)
            Return rowSTOCKACTUALNWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As STOCKACTUALNWDataTable = CType(MyBase.Clone,STOCKACTUALNWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New STOCKACTUALNWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnExpr1.ReadOnly = true
            Me.columnCODIGO.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSTOCKACTUALNWRow() As STOCKACTUALNWRow
            Return CType(Me.NewRow,STOCKACTUALNWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New STOCKACTUALNWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(STOCKACTUALNWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.STOCKACTUALNWRowChangedEvent) Is Nothing) Then
                RaiseEvent STOCKACTUALNWRowChanged(Me, New STOCKACTUALNWRowChangeEvent(CType(e.Row,STOCKACTUALNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.STOCKACTUALNWRowChangingEvent) Is Nothing) Then
                RaiseEvent STOCKACTUALNWRowChanging(Me, New STOCKACTUALNWRowChangeEvent(CType(e.Row,STOCKACTUALNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.STOCKACTUALNWRowDeletedEvent) Is Nothing) Then
                RaiseEvent STOCKACTUALNWRowDeleted(Me, New STOCKACTUALNWRowChangeEvent(CType(e.Row,STOCKACTUALNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.STOCKACTUALNWRowDeletingEvent) Is Nothing) Then
                RaiseEvent STOCKACTUALNWRowDeleting(Me, New STOCKACTUALNWRowChangeEvent(CType(e.Row,STOCKACTUALNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSTOCKACTUALNWRow(ByVal row As STOCKACTUALNWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "STOCKACTUALNWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PRECIONWDataTable
        Inherits Global.System.Data.TypedTableBase(Of PRECIONWRow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRECIOVENTA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PRECIONW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PRECIONWRow
            Get
                Return CType(Me.Rows(index),PRECIONWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRECIONWRowChanging As PRECIONWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRECIONWRowChanged As PRECIONWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRECIONWRowDeleting As PRECIONWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PRECIONWRowDeleted As PRECIONWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPRECIONWRow(ByVal row As PRECIONWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPRECIONWRow(ByVal CODIGO As String, ByVal PRECIOVENTA As Decimal) As PRECIONWRow
            Dim rowPRECIONWRow As PRECIONWRow = CType(Me.NewRow,PRECIONWRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRECIOVENTA}
            rowPRECIONWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPRECIONWRow)
            Return rowPRECIONWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PRECIONWDataTable = CType(MyBase.Clone,PRECIONWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PRECIONWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRECIOVENTA = MyBase.Columns("PRECIOVENTA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRECIOVENTA = New Global.System.Data.DataColumn("PRECIOVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOVENTA)
            Me.columnCODIGO.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPRECIONWRow() As PRECIONWRow
            Return CType(Me.NewRow,PRECIONWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PRECIONWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PRECIONWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PRECIONWRowChangedEvent) Is Nothing) Then
                RaiseEvent PRECIONWRowChanged(Me, New PRECIONWRowChangeEvent(CType(e.Row,PRECIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PRECIONWRowChangingEvent) Is Nothing) Then
                RaiseEvent PRECIONWRowChanging(Me, New PRECIONWRowChangeEvent(CType(e.Row,PRECIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PRECIONWRowDeletedEvent) Is Nothing) Then
                RaiseEvent PRECIONWRowDeleted(Me, New PRECIONWRowChangeEvent(CType(e.Row,PRECIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PRECIONWRowDeletingEvent) Is Nothing) Then
                RaiseEvent PRECIONWRowDeleting(Me, New PRECIONWRowChangeEvent(CType(e.Row,PRECIONWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePRECIONWRow(ByVal row As PRECIONWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PRECIONWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class OrdenPorCategoriaNWDataTable
        Inherits Global.System.Data.TypedTableBase(Of OrdenPorCategoriaNWRow)
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnMARCA As Global.System.Data.DataColumn
        
        Private columnMEDIDA As Global.System.Data.DataColumn
        
        Private columnSERVICIO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "OrdenPorCategoriaNW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As OrdenPorCategoriaNWRow
            Get
                Return CType(Me.Rows(index),OrdenPorCategoriaNWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OrdenPorCategoriaNWRowChanging As OrdenPorCategoriaNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OrdenPorCategoriaNWRowChanged As OrdenPorCategoriaNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OrdenPorCategoriaNWRowDeleting As OrdenPorCategoriaNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event OrdenPorCategoriaNWRowDeleted As OrdenPorCategoriaNWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddOrdenPorCategoriaNWRow(ByVal row As OrdenPorCategoriaNWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddOrdenPorCategoriaNWRow(ByVal PRODUCTO As String, ByVal CATEGORIA As String, ByVal LINEA As String, ByVal MARCA As String, ByVal MEDIDA As String, ByVal SERVICIO As Byte, ByVal DESSUCURSAL As String) As OrdenPorCategoriaNWRow
            Dim rowOrdenPorCategoriaNWRow As OrdenPorCategoriaNWRow = CType(Me.NewRow,OrdenPorCategoriaNWRow)
            Dim columnValuesArray() As Object = New Object() {PRODUCTO, CATEGORIA, LINEA, MARCA, MEDIDA, SERVICIO, DESSUCURSAL}
            rowOrdenPorCategoriaNWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowOrdenPorCategoriaNWRow)
            Return rowOrdenPorCategoriaNWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As OrdenPorCategoriaNWDataTable = CType(MyBase.Clone,OrdenPorCategoriaNWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New OrdenPorCategoriaNWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCATEGORIA = MyBase.Columns("CATEGORIA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnMARCA = MyBase.Columns("MARCA")
            Me.columnMEDIDA = MyBase.Columns("MEDIDA")
            Me.columnSERVICIO = MyBase.Columns("SERVICIO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCATEGORIA = New Global.System.Data.DataColumn("CATEGORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnMARCA = New Global.System.Data.DataColumn("MARCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARCA)
            Me.columnMEDIDA = New Global.System.Data.DataColumn("MEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDIDA)
            Me.columnSERVICIO = New Global.System.Data.DataColumn("SERVICIO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICIO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 80
            Me.columnCATEGORIA.ReadOnly = true
            Me.columnCATEGORIA.MaxLength = 50
            Me.columnLINEA.ReadOnly = true
            Me.columnLINEA.MaxLength = 100
            Me.columnMARCA.ReadOnly = true
            Me.columnMARCA.MaxLength = 100
            Me.columnMEDIDA.MaxLength = 50
            Me.columnDESSUCURSAL.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewOrdenPorCategoriaNWRow() As OrdenPorCategoriaNWRow
            Return CType(Me.NewRow,OrdenPorCategoriaNWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New OrdenPorCategoriaNWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(OrdenPorCategoriaNWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.OrdenPorCategoriaNWRowChangedEvent) Is Nothing) Then
                RaiseEvent OrdenPorCategoriaNWRowChanged(Me, New OrdenPorCategoriaNWRowChangeEvent(CType(e.Row,OrdenPorCategoriaNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.OrdenPorCategoriaNWRowChangingEvent) Is Nothing) Then
                RaiseEvent OrdenPorCategoriaNWRowChanging(Me, New OrdenPorCategoriaNWRowChangeEvent(CType(e.Row,OrdenPorCategoriaNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.OrdenPorCategoriaNWRowDeletedEvent) Is Nothing) Then
                RaiseEvent OrdenPorCategoriaNWRowDeleted(Me, New OrdenPorCategoriaNWRowChangeEvent(CType(e.Row,OrdenPorCategoriaNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.OrdenPorCategoriaNWRowDeletingEvent) Is Nothing) Then
                RaiseEvent OrdenPorCategoriaNWRowDeleting(Me, New OrdenPorCategoriaNWRowChangeEvent(CType(e.Row,OrdenPorCategoriaNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveOrdenPorCategoriaNWRow(ByVal row As OrdenPorCategoriaNWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "OrdenPorCategoriaNWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class LineaDataTable
        Inherits Global.System.Data.TypedTableBase(Of LineaRow)
        
        Private columnCODLINEA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODFAMILIA As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMLINEA As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "Linea"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As LineaRow
            Get
                Return CType(Me.Rows(index),LineaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LineaRowChanging As LineaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LineaRowChanged As LineaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LineaRowDeleting As LineaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event LineaRowDeleted As LineaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddLineaRow(ByVal row As LineaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddLineaRow(ByVal CODLINEA As Decimal, ByVal DESLINEA As String, ByVal CODFAMILIA As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal NUMLINEA As String, ByVal FECGRA As Date, ByVal DESFAMILIA As String) As LineaRow
            Dim rowLineaRow As LineaRow = CType(Me.NewRow,LineaRow)
            Dim columnValuesArray() As Object = New Object() {CODLINEA, DESLINEA, CODFAMILIA, CODUSUARIO, CODEMPRESA, NUMLINEA, FECGRA, DESFAMILIA}
            rowLineaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowLineaRow)
            Return rowLineaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODLINEA(ByVal CODLINEA As Decimal) As LineaRow
            Return CType(Me.Rows.Find(New Object() {CODLINEA}),LineaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As LineaDataTable = CType(MyBase.Clone,LineaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New LineaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODLINEA = MyBase.Columns("CODLINEA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODFAMILIA = MyBase.Columns("CODFAMILIA")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMLINEA = MyBase.Columns("NUMLINEA")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODLINEA = New Global.System.Data.DataColumn("CODLINEA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODLINEA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODFAMILIA = New Global.System.Data.DataColumn("CODFAMILIA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFAMILIA)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMLINEA = New Global.System.Data.DataColumn("NUMLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMLINEA)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODLINEA}, true))
            Me.columnCODLINEA.AllowDBNull = false
            Me.columnCODLINEA.Unique = true
            Me.columnDESLINEA.MaxLength = 100
            Me.columnNUMLINEA.MaxLength = 50
            Me.columnDESFAMILIA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewLineaRow() As LineaRow
            Return CType(Me.NewRow,LineaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New LineaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(LineaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.LineaRowChangedEvent) Is Nothing) Then
                RaiseEvent LineaRowChanged(Me, New LineaRowChangeEvent(CType(e.Row,LineaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.LineaRowChangingEvent) Is Nothing) Then
                RaiseEvent LineaRowChanging(Me, New LineaRowChangeEvent(CType(e.Row,LineaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.LineaRowDeletedEvent) Is Nothing) Then
                RaiseEvent LineaRowDeleted(Me, New LineaRowChangeEvent(CType(e.Row,LineaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.LineaRowDeletingEvent) Is Nothing) Then
                RaiseEvent LineaRowDeleting(Me, New LineaRowChangeEvent(CType(e.Row,LineaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveLineaRow(ByVal row As LineaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "LineaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ProductoCodigosNWDataTable
        Inherits Global.System.Data.TypedTableBase(Of ProductoCodigosNWRow)
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnDESCODIGO1 As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODLINEA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ProductoCodigosNW"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCODIGO1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCODIGO1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ProductoCodigosNWRow
            Get
                Return CType(Me.Rows(index),ProductoCodigosNWRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProductoCodigosNWRowChanging As ProductoCodigosNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProductoCodigosNWRowChanged As ProductoCodigosNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProductoCodigosNWRowDeleting As ProductoCodigosNWRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ProductoCodigosNWRowDeleted As ProductoCodigosNWRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddProductoCodigosNWRow(ByVal row As ProductoCodigosNWRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddProductoCodigosNWRow(ByVal DESPRODUCTO As String, ByVal DESCODIGO1 As String, ByVal PRODUCTO As String, ByVal CODLINEA As Decimal, ByVal DESLINEA As String, ByVal DESRUBRO As String) As ProductoCodigosNWRow
            Dim rowProductoCodigosNWRow As ProductoCodigosNWRow = CType(Me.NewRow,ProductoCodigosNWRow)
            Dim columnValuesArray() As Object = New Object() {DESPRODUCTO, DESCODIGO1, PRODUCTO, CODLINEA, DESLINEA, DESRUBRO, Nothing}
            rowProductoCodigosNWRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowProductoCodigosNWRow)
            Return rowProductoCodigosNWRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ProductoCodigosNWDataTable = CType(MyBase.Clone,ProductoCodigosNWDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ProductoCodigosNWDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnDESCODIGO1 = MyBase.Columns("DESCODIGO1")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCODLINEA = MyBase.Columns("CODLINEA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnDESCODIGO1 = New Global.System.Data.DataColumn("DESCODIGO1", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCODIGO1)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCODLINEA = New Global.System.Data.DataColumn("CODLINEA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODLINEA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint2", New Global.System.Data.DataColumn() {Me.columnCODCODIGO}, false))
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnDESCODIGO1.MaxLength = 100
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 282
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODCODIGO.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewProductoCodigosNWRow() As ProductoCodigosNWRow
            Return CType(Me.NewRow,ProductoCodigosNWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ProductoCodigosNWRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ProductoCodigosNWRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ProductoCodigosNWRowChangedEvent) Is Nothing) Then
                RaiseEvent ProductoCodigosNWRowChanged(Me, New ProductoCodigosNWRowChangeEvent(CType(e.Row,ProductoCodigosNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ProductoCodigosNWRowChangingEvent) Is Nothing) Then
                RaiseEvent ProductoCodigosNWRowChanging(Me, New ProductoCodigosNWRowChangeEvent(CType(e.Row,ProductoCodigosNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ProductoCodigosNWRowDeletedEvent) Is Nothing) Then
                RaiseEvent ProductoCodigosNWRowDeleted(Me, New ProductoCodigosNWRowChangeEvent(CType(e.Row,ProductoCodigosNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ProductoCodigosNWRowDeletingEvent) Is Nothing) Then
                RaiseEvent ProductoCodigosNWRowDeleting(Me, New ProductoCodigosNWRowChangeEvent(CType(e.Row,ProductoCodigosNWRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveProductoCodigosNWRow(ByVal row As ProductoCodigosNWRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ProductoCodigosNWDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MovDetalladoDataTable
        Inherits Global.System.Data.TypedTableBase(Of MovDetalladoRow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCANTIDAD As Global.System.Data.DataColumn
        
        Private columnTIPOMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnFECHAMTO As Global.System.Data.DataColumn
        
        Private columnSTOCKINICIAL As Global.System.Data.DataColumn
        
        Private columnCOMPRA As Global.System.Data.DataColumn
        
        Private columnDEVOLUCIONCLIENTE As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIAENTRADA As Global.System.Data.DataColumn
        
        Private columnAJUSTEENTRADA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnENVIO As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIASALIDA As Global.System.Data.DataColumn
        
        Private columnAJUSTESALIDA As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnExpr2 As Global.System.Data.DataColumn
        
        Private columnExpr3 As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnExpr4 As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MovDetallado"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CANTIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCANTIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOMOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVOLUCIONCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVOLUCIONCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIAENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIAENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTEENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTEENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIASALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIASALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTESALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTESALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MovDetalladoRow
            Get
                Return CType(Me.Rows(index),MovDetalladoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovDetalladoRowChanging As MovDetalladoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovDetalladoRowChanged As MovDetalladoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovDetalladoRowDeleting As MovDetalladoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovDetalladoRowDeleted As MovDetalladoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMovDetalladoRow(ByVal row As MovDetalladoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMovDetalladoRow( _
                    ByVal CODIGO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal CANTIDAD As Decimal,  _
                    ByVal TIPOMOVIMIENTO As String,  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODPRODUCTO As Decimal,  _
                    ByVal CODCODIGO As Decimal,  _
                    ByVal CODSUCURSAL As Decimal,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal FECHAMTO As Date,  _
                    ByVal STOCKINICIAL As Decimal,  _
                    ByVal COMPRA As Decimal,  _
                    ByVal DEVOLUCIONCLIENTE As Decimal,  _
                    ByVal TRANSFERENCIAENTRADA As Decimal,  _
                    ByVal AJUSTEENTRADA As Decimal,  _
                    ByVal VENTA As Decimal,  _
                    ByVal ENVIO As Decimal,  _
                    ByVal TRANSFERENCIASALIDA As Decimal,  _
                    ByVal AJUSTESALIDA As Decimal,  _
                    ByVal Expr1 As Decimal,  _
                    ByVal Expr2 As String,  _
                    ByVal Expr3 As String,  _
                    ByVal DESSUCURSAL As String,  _
                    ByVal Expr4 As Date) As MovDetalladoRow
            Dim rowMovDetalladoRow As MovDetalladoRow = CType(Me.NewRow,MovDetalladoRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRODUCTO, CANTIDAD, TIPOMOVIMIENTO, CONCEPTO, CODPRODUCTO, CODCODIGO, CODSUCURSAL, DESFAMILIA, DESLINEA, FECHAMTO, STOCKINICIAL, COMPRA, DEVOLUCIONCLIENTE, TRANSFERENCIAENTRADA, AJUSTEENTRADA, VENTA, ENVIO, TRANSFERENCIASALIDA, AJUSTESALIDA, Expr1, Expr2, Expr3, DESSUCURSAL, Expr4}
            rowMovDetalladoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMovDetalladoRow)
            Return rowMovDetalladoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MovDetalladoDataTable = CType(MyBase.Clone,MovDetalladoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MovDetalladoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCANTIDAD = MyBase.Columns("CANTIDAD")
            Me.columnTIPOMOVIMIENTO = MyBase.Columns("TIPOMOVIMIENTO")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnFECHAMTO = MyBase.Columns("FECHAMTO")
            Me.columnSTOCKINICIAL = MyBase.Columns("STOCKINICIAL")
            Me.columnCOMPRA = MyBase.Columns("COMPRA")
            Me.columnDEVOLUCIONCLIENTE = MyBase.Columns("DEVOLUCIONCLIENTE")
            Me.columnTRANSFERENCIAENTRADA = MyBase.Columns("TRANSFERENCIAENTRADA")
            Me.columnAJUSTEENTRADA = MyBase.Columns("AJUSTEENTRADA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnENVIO = MyBase.Columns("ENVIO")
            Me.columnTRANSFERENCIASALIDA = MyBase.Columns("TRANSFERENCIASALIDA")
            Me.columnAJUSTESALIDA = MyBase.Columns("AJUSTESALIDA")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnExpr2 = MyBase.Columns("Expr2")
            Me.columnExpr3 = MyBase.Columns("Expr3")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnExpr4 = MyBase.Columns("Expr4")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCANTIDAD = New Global.System.Data.DataColumn("CANTIDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCANTIDAD)
            Me.columnTIPOMOVIMIENTO = New Global.System.Data.DataColumn("TIPOMOVIMIENTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOMOVIMIENTO)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnFECHAMTO = New Global.System.Data.DataColumn("FECHAMTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMTO)
            Me.columnSTOCKINICIAL = New Global.System.Data.DataColumn("STOCKINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINICIAL)
            Me.columnCOMPRA = New Global.System.Data.DataColumn("COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRA)
            Me.columnDEVOLUCIONCLIENTE = New Global.System.Data.DataColumn("DEVOLUCIONCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVOLUCIONCLIENTE)
            Me.columnTRANSFERENCIAENTRADA = New Global.System.Data.DataColumn("TRANSFERENCIAENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIAENTRADA)
            Me.columnAJUSTEENTRADA = New Global.System.Data.DataColumn("AJUSTEENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTEENTRADA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnENVIO = New Global.System.Data.DataColumn("ENVIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENVIO)
            Me.columnTRANSFERENCIASALIDA = New Global.System.Data.DataColumn("TRANSFERENCIASALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIASALIDA)
            Me.columnAJUSTESALIDA = New Global.System.Data.DataColumn("AJUSTESALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTESALIDA)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnExpr2 = New Global.System.Data.DataColumn("Expr2", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.columnExpr3 = New Global.System.Data.DataColumn("Expr3", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr3)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnExpr4 = New Global.System.Data.DataColumn("Expr4", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr4)
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 281
            Me.columnTIPOMOVIMIENTO.MaxLength = 200
            Me.columnCONCEPTO.MaxLength = 200
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnSTOCKINICIAL.ReadOnly = true
            Me.columnCOMPRA.ReadOnly = true
            Me.columnDEVOLUCIONCLIENTE.ReadOnly = true
            Me.columnTRANSFERENCIAENTRADA.ReadOnly = true
            Me.columnAJUSTEENTRADA.ReadOnly = true
            Me.columnVENTA.ReadOnly = true
            Me.columnENVIO.ReadOnly = true
            Me.columnTRANSFERENCIASALIDA.ReadOnly = true
            Me.columnAJUSTESALIDA.ReadOnly = true
            Me.columnExpr2.MaxLength = 50
            Me.columnExpr3.MaxLength = 100
            Me.columnDESSUCURSAL.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMovDetalladoRow() As MovDetalladoRow
            Return CType(Me.NewRow,MovDetalladoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MovDetalladoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MovDetalladoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MovDetalladoRowChangedEvent) Is Nothing) Then
                RaiseEvent MovDetalladoRowChanged(Me, New MovDetalladoRowChangeEvent(CType(e.Row,MovDetalladoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MovDetalladoRowChangingEvent) Is Nothing) Then
                RaiseEvent MovDetalladoRowChanging(Me, New MovDetalladoRowChangeEvent(CType(e.Row,MovDetalladoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MovDetalladoRowDeletedEvent) Is Nothing) Then
                RaiseEvent MovDetalladoRowDeleted(Me, New MovDetalladoRowChangeEvent(CType(e.Row,MovDetalladoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MovDetalladoRowDeletingEvent) Is Nothing) Then
                RaiseEvent MovDetalladoRowDeleting(Me, New MovDetalladoRowChangeEvent(CType(e.Row,MovDetalladoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMovDetalladoRow(ByVal row As MovDetalladoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MovDetalladoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MovProductoPorFechaDataTable
        Inherits Global.System.Data.TypedTableBase(Of MovProductoPorFechaRow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnSTOCKINICIAL As Global.System.Data.DataColumn
        
        Private columnCOMPRA As Global.System.Data.DataColumn
        
        Private columnDEVOLUCIONCLIENTE As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIAENTRADA As Global.System.Data.DataColumn
        
        Private columnAJUSTEENTRADA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIASALIDA As Global.System.Data.DataColumn
        
        Private columnAJUSTESALIDA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnFECHAMTO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnENTRPROD As Global.System.Data.DataColumn
        
        Private columnANULVTA As Global.System.Data.DataColumn
        
        Private columnSALPROD As Global.System.Data.DataColumn
        
        Private columnDEVCOMP As Global.System.Data.DataColumn
        
        Private columnANULCOMP As Global.System.Data.DataColumn
        
        Private columnANULDEVCOMP As Global.System.Data.DataColumn
        
        Private columnANULDEVVTA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MovProductoPorFecha"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVOLUCIONCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVOLUCIONCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIAENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIAENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTEENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTEENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIASALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIASALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTESALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTESALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MovProductoPorFechaRow
            Get
                Return CType(Me.Rows(index),MovProductoPorFechaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoPorFechaRowChanging As MovProductoPorFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoPorFechaRowChanged As MovProductoPorFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoPorFechaRowDeleting As MovProductoPorFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoPorFechaRowDeleted As MovProductoPorFechaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMovProductoPorFechaRow(ByVal row As MovProductoPorFechaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMovProductoPorFechaRow( _
                    ByVal CODIGO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal STOCKINICIAL As Decimal,  _
                    ByVal COMPRA As Decimal,  _
                    ByVal DEVOLUCIONCLIENTE As Decimal,  _
                    ByVal TRANSFERENCIAENTRADA As Decimal,  _
                    ByVal AJUSTEENTRADA As Decimal,  _
                    ByVal VENTA As Decimal,  _
                    ByVal TRANSFERENCIASALIDA As Decimal,  _
                    ByVal AJUSTESALIDA As Decimal,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal FECHAMTO As Date,  _
                    ByVal DESSUCURSAL As String,  _
                    ByVal CODRUBRO As Decimal,  _
                    ByVal DESRUBRO As String,  _
                    ByVal ENTRPROD As Decimal,  _
                    ByVal ANULVTA As Decimal,  _
                    ByVal SALPROD As Decimal,  _
                    ByVal DEVCOMP As Decimal,  _
                    ByVal ANULCOMP As Decimal,  _
                    ByVal ANULDEVCOMP As Decimal,  _
                    ByVal ANULDEVVTA As Decimal,  _
                    ByVal CODSUCURSAL As Integer,  _
                    ByVal CODCODIGO As Integer) As MovProductoPorFechaRow
            Dim rowMovProductoPorFechaRow As MovProductoPorFechaRow = CType(Me.NewRow,MovProductoPorFechaRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRODUCTO, STOCKINICIAL, COMPRA, DEVOLUCIONCLIENTE, TRANSFERENCIAENTRADA, AJUSTEENTRADA, VENTA, TRANSFERENCIASALIDA, AJUSTESALIDA, DESFAMILIA, DESLINEA, FECHAMTO, DESSUCURSAL, CODRUBRO, DESRUBRO, ENTRPROD, ANULVTA, SALPROD, DEVCOMP, ANULCOMP, ANULDEVCOMP, ANULDEVVTA, CODSUCURSAL, CODCODIGO}
            rowMovProductoPorFechaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMovProductoPorFechaRow)
            Return rowMovProductoPorFechaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MovProductoPorFechaDataTable = CType(MyBase.Clone,MovProductoPorFechaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MovProductoPorFechaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnSTOCKINICIAL = MyBase.Columns("STOCKINICIAL")
            Me.columnCOMPRA = MyBase.Columns("COMPRA")
            Me.columnDEVOLUCIONCLIENTE = MyBase.Columns("DEVOLUCIONCLIENTE")
            Me.columnTRANSFERENCIAENTRADA = MyBase.Columns("TRANSFERENCIAENTRADA")
            Me.columnAJUSTEENTRADA = MyBase.Columns("AJUSTEENTRADA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnTRANSFERENCIASALIDA = MyBase.Columns("TRANSFERENCIASALIDA")
            Me.columnAJUSTESALIDA = MyBase.Columns("AJUSTESALIDA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnFECHAMTO = MyBase.Columns("FECHAMTO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnENTRPROD = MyBase.Columns("ENTRPROD")
            Me.columnANULVTA = MyBase.Columns("ANULVTA")
            Me.columnSALPROD = MyBase.Columns("SALPROD")
            Me.columnDEVCOMP = MyBase.Columns("DEVCOMP")
            Me.columnANULCOMP = MyBase.Columns("ANULCOMP")
            Me.columnANULDEVCOMP = MyBase.Columns("ANULDEVCOMP")
            Me.columnANULDEVVTA = MyBase.Columns("ANULDEVVTA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnSTOCKINICIAL = New Global.System.Data.DataColumn("STOCKINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINICIAL)
            Me.columnCOMPRA = New Global.System.Data.DataColumn("COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRA)
            Me.columnDEVOLUCIONCLIENTE = New Global.System.Data.DataColumn("DEVOLUCIONCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVOLUCIONCLIENTE)
            Me.columnTRANSFERENCIAENTRADA = New Global.System.Data.DataColumn("TRANSFERENCIAENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIAENTRADA)
            Me.columnAJUSTEENTRADA = New Global.System.Data.DataColumn("AJUSTEENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTEENTRADA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnTRANSFERENCIASALIDA = New Global.System.Data.DataColumn("TRANSFERENCIASALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIASALIDA)
            Me.columnAJUSTESALIDA = New Global.System.Data.DataColumn("AJUSTESALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTESALIDA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnFECHAMTO = New Global.System.Data.DataColumn("FECHAMTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMTO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnENTRPROD = New Global.System.Data.DataColumn("ENTRPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRPROD)
            Me.columnANULVTA = New Global.System.Data.DataColumn("ANULVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULVTA)
            Me.columnSALPROD = New Global.System.Data.DataColumn("SALPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALPROD)
            Me.columnDEVCOMP = New Global.System.Data.DataColumn("DEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVCOMP)
            Me.columnANULCOMP = New Global.System.Data.DataColumn("ANULCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULCOMP)
            Me.columnANULDEVCOMP = New Global.System.Data.DataColumn("ANULDEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVCOMP)
            Me.columnANULDEVVTA = New Global.System.Data.DataColumn("ANULDEVVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVVTA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 281
            Me.columnSTOCKINICIAL.ReadOnly = true
            Me.columnCOMPRA.ReadOnly = true
            Me.columnDEVOLUCIONCLIENTE.ReadOnly = true
            Me.columnTRANSFERENCIAENTRADA.ReadOnly = true
            Me.columnAJUSTEENTRADA.ReadOnly = true
            Me.columnVENTA.ReadOnly = true
            Me.columnTRANSFERENCIASALIDA.ReadOnly = true
            Me.columnAJUSTESALIDA.ReadOnly = true
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnENTRPROD.ReadOnly = true
            Me.columnANULVTA.ReadOnly = true
            Me.columnSALPROD.ReadOnly = true
            Me.columnDEVCOMP.ReadOnly = true
            Me.columnANULCOMP.ReadOnly = true
            Me.columnANULDEVCOMP.ReadOnly = true
            Me.columnANULDEVVTA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMovProductoPorFechaRow() As MovProductoPorFechaRow
            Return CType(Me.NewRow,MovProductoPorFechaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MovProductoPorFechaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MovProductoPorFechaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MovProductoPorFechaRowChangedEvent) Is Nothing) Then
                RaiseEvent MovProductoPorFechaRowChanged(Me, New MovProductoPorFechaRowChangeEvent(CType(e.Row,MovProductoPorFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MovProductoPorFechaRowChangingEvent) Is Nothing) Then
                RaiseEvent MovProductoPorFechaRowChanging(Me, New MovProductoPorFechaRowChangeEvent(CType(e.Row,MovProductoPorFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MovProductoPorFechaRowDeletedEvent) Is Nothing) Then
                RaiseEvent MovProductoPorFechaRowDeleted(Me, New MovProductoPorFechaRowChangeEvent(CType(e.Row,MovProductoPorFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MovProductoPorFechaRowDeletingEvent) Is Nothing) Then
                RaiseEvent MovProductoPorFechaRowDeleting(Me, New MovProductoPorFechaRowChangeEvent(CType(e.Row,MovProductoPorFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMovProductoPorFechaRow(ByVal row As MovProductoPorFechaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MovProductoPorFechaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class StockXFechaDataTable
        Inherits Global.System.Data.TypedTableBase(Of StockXFechaRow)
        
        Private columnSTOCKFECHA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "StockXFecha"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKFECHAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKFECHA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As StockXFechaRow
            Get
                Return CType(Me.Rows(index),StockXFechaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockXFechaRowChanging As StockXFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockXFechaRowChanged As StockXFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockXFechaRowDeleting As StockXFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockXFechaRowDeleted As StockXFechaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddStockXFechaRow(ByVal row As StockXFechaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddStockXFechaRow(ByVal STOCKFECHA As Decimal, ByVal CODSUCURSAL As Integer) As StockXFechaRow
            Dim rowStockXFechaRow As StockXFechaRow = CType(Me.NewRow,StockXFechaRow)
            Dim columnValuesArray() As Object = New Object() {STOCKFECHA, CODSUCURSAL}
            rowStockXFechaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStockXFechaRow)
            Return rowStockXFechaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As StockXFechaDataTable = CType(MyBase.Clone,StockXFechaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New StockXFechaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnSTOCKFECHA = MyBase.Columns("STOCKFECHA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnSTOCKFECHA = New Global.System.Data.DataColumn("STOCKFECHA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKFECHA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnSTOCKFECHA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewStockXFechaRow() As StockXFechaRow
            Return CType(Me.NewRow,StockXFechaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New StockXFechaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(StockXFechaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.StockXFechaRowChangedEvent) Is Nothing) Then
                RaiseEvent StockXFechaRowChanged(Me, New StockXFechaRowChangeEvent(CType(e.Row,StockXFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.StockXFechaRowChangingEvent) Is Nothing) Then
                RaiseEvent StockXFechaRowChanging(Me, New StockXFechaRowChangeEvent(CType(e.Row,StockXFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.StockXFechaRowDeletedEvent) Is Nothing) Then
                RaiseEvent StockXFechaRowDeleted(Me, New StockXFechaRowChangeEvent(CType(e.Row,StockXFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.StockXFechaRowDeletingEvent) Is Nothing) Then
                RaiseEvent StockXFechaRowDeleting(Me, New StockXFechaRowChangeEvent(CType(e.Row,StockXFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveStockXFechaRow(ByVal row As StockXFechaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "StockXFechaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MovProductoXRangoFechaDataTable
        Inherits Global.System.Data.TypedTableBase(Of MovProductoXRangoFechaRow)
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnSTOCKINICIAL As Global.System.Data.DataColumn
        
        Private columnCOMPRA As Global.System.Data.DataColumn
        
        Private columnDEVOLUCIONCLIENTE As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIAENTRADA As Global.System.Data.DataColumn
        
        Private columnAJUSTEENTRADA As Global.System.Data.DataColumn
        
        Private columnVENTA As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIASALIDA As Global.System.Data.DataColumn
        
        Private columnAJUSTESALIDA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnENTRPROD As Global.System.Data.DataColumn
        
        Private columnANULVTA As Global.System.Data.DataColumn
        
        Private columnSALPROD As Global.System.Data.DataColumn
        
        Private columnDEVCOMP As Global.System.Data.DataColumn
        
        Private columnANULCOMP As Global.System.Data.DataColumn
        
        Private columnANULDEVCOMP As Global.System.Data.DataColumn
        
        Private columnANULDEVVTA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MovProductoXRangoFecha"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVOLUCIONCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVOLUCIONCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIAENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIAENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTEENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTEENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIASALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIASALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTESALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTESALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALPRODColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALPROD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVCOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVCOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ANULDEVVTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnANULDEVVTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MovProductoXRangoFechaRow
            Get
                Return CType(Me.Rows(index),MovProductoXRangoFechaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoXRangoFechaRowChanging As MovProductoXRangoFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoXRangoFechaRowChanged As MovProductoXRangoFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoXRangoFechaRowDeleting As MovProductoXRangoFechaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MovProductoXRangoFechaRowDeleted As MovProductoXRangoFechaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMovProductoXRangoFechaRow(ByVal row As MovProductoXRangoFechaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMovProductoXRangoFechaRow( _
                    ByVal CODIGO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal STOCKINICIAL As Decimal,  _
                    ByVal COMPRA As Decimal,  _
                    ByVal DEVOLUCIONCLIENTE As Decimal,  _
                    ByVal TRANSFERENCIAENTRADA As Decimal,  _
                    ByVal AJUSTEENTRADA As Decimal,  _
                    ByVal VENTA As Decimal,  _
                    ByVal TRANSFERENCIASALIDA As Decimal,  _
                    ByVal AJUSTESALIDA As Decimal,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal CODRUBRO As Decimal,  _
                    ByVal DESSUCURSAL As String,  _
                    ByVal DESRUBRO As String,  _
                    ByVal ENTRPROD As Decimal,  _
                    ByVal ANULVTA As Decimal,  _
                    ByVal SALPROD As Decimal,  _
                    ByVal DEVCOMP As Decimal,  _
                    ByVal ANULCOMP As Decimal,  _
                    ByVal ANULDEVCOMP As Decimal,  _
                    ByVal ANULDEVVTA As Decimal,  _
                    ByVal CODSUCURSAL As Integer,  _
                    ByVal CODCODIGO As Integer) As MovProductoXRangoFechaRow
            Dim rowMovProductoXRangoFechaRow As MovProductoXRangoFechaRow = CType(Me.NewRow,MovProductoXRangoFechaRow)
            Dim columnValuesArray() As Object = New Object() {CODIGO, PRODUCTO, STOCKINICIAL, COMPRA, DEVOLUCIONCLIENTE, TRANSFERENCIAENTRADA, AJUSTEENTRADA, VENTA, TRANSFERENCIASALIDA, AJUSTESALIDA, DESFAMILIA, DESLINEA, CODRUBRO, DESSUCURSAL, DESRUBRO, ENTRPROD, ANULVTA, SALPROD, DEVCOMP, ANULCOMP, ANULDEVCOMP, ANULDEVVTA, CODSUCURSAL, CODCODIGO}
            rowMovProductoXRangoFechaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMovProductoXRangoFechaRow)
            Return rowMovProductoXRangoFechaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MovProductoXRangoFechaDataTable = CType(MyBase.Clone,MovProductoXRangoFechaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MovProductoXRangoFechaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnSTOCKINICIAL = MyBase.Columns("STOCKINICIAL")
            Me.columnCOMPRA = MyBase.Columns("COMPRA")
            Me.columnDEVOLUCIONCLIENTE = MyBase.Columns("DEVOLUCIONCLIENTE")
            Me.columnTRANSFERENCIAENTRADA = MyBase.Columns("TRANSFERENCIAENTRADA")
            Me.columnAJUSTEENTRADA = MyBase.Columns("AJUSTEENTRADA")
            Me.columnVENTA = MyBase.Columns("VENTA")
            Me.columnTRANSFERENCIASALIDA = MyBase.Columns("TRANSFERENCIASALIDA")
            Me.columnAJUSTESALIDA = MyBase.Columns("AJUSTESALIDA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnENTRPROD = MyBase.Columns("ENTRPROD")
            Me.columnANULVTA = MyBase.Columns("ANULVTA")
            Me.columnSALPROD = MyBase.Columns("SALPROD")
            Me.columnDEVCOMP = MyBase.Columns("DEVCOMP")
            Me.columnANULCOMP = MyBase.Columns("ANULCOMP")
            Me.columnANULDEVCOMP = MyBase.Columns("ANULDEVCOMP")
            Me.columnANULDEVVTA = MyBase.Columns("ANULDEVVTA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnSTOCKINICIAL = New Global.System.Data.DataColumn("STOCKINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINICIAL)
            Me.columnCOMPRA = New Global.System.Data.DataColumn("COMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOMPRA)
            Me.columnDEVOLUCIONCLIENTE = New Global.System.Data.DataColumn("DEVOLUCIONCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVOLUCIONCLIENTE)
            Me.columnTRANSFERENCIAENTRADA = New Global.System.Data.DataColumn("TRANSFERENCIAENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIAENTRADA)
            Me.columnAJUSTEENTRADA = New Global.System.Data.DataColumn("AJUSTEENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTEENTRADA)
            Me.columnVENTA = New Global.System.Data.DataColumn("VENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVENTA)
            Me.columnTRANSFERENCIASALIDA = New Global.System.Data.DataColumn("TRANSFERENCIASALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIASALIDA)
            Me.columnAJUSTESALIDA = New Global.System.Data.DataColumn("AJUSTESALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTESALIDA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnENTRPROD = New Global.System.Data.DataColumn("ENTRPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRPROD)
            Me.columnANULVTA = New Global.System.Data.DataColumn("ANULVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULVTA)
            Me.columnSALPROD = New Global.System.Data.DataColumn("SALPROD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALPROD)
            Me.columnDEVCOMP = New Global.System.Data.DataColumn("DEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDEVCOMP)
            Me.columnANULCOMP = New Global.System.Data.DataColumn("ANULCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULCOMP)
            Me.columnANULDEVCOMP = New Global.System.Data.DataColumn("ANULDEVCOMP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVCOMP)
            Me.columnANULDEVVTA = New Global.System.Data.DataColumn("ANULDEVVTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnANULDEVVTA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODIGO.MaxLength = 150
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 281
            Me.columnSTOCKINICIAL.ReadOnly = true
            Me.columnCOMPRA.ReadOnly = true
            Me.columnDEVOLUCIONCLIENTE.ReadOnly = true
            Me.columnTRANSFERENCIAENTRADA.ReadOnly = true
            Me.columnAJUSTEENTRADA.ReadOnly = true
            Me.columnVENTA.ReadOnly = true
            Me.columnTRANSFERENCIASALIDA.ReadOnly = true
            Me.columnAJUSTESALIDA.ReadOnly = true
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnENTRPROD.ReadOnly = true
            Me.columnANULVTA.ReadOnly = true
            Me.columnSALPROD.ReadOnly = true
            Me.columnDEVCOMP.ReadOnly = true
            Me.columnANULCOMP.ReadOnly = true
            Me.columnANULDEVCOMP.ReadOnly = true
            Me.columnANULDEVVTA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMovProductoXRangoFechaRow() As MovProductoXRangoFechaRow
            Return CType(Me.NewRow,MovProductoXRangoFechaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MovProductoXRangoFechaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MovProductoXRangoFechaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MovProductoXRangoFechaRowChangedEvent) Is Nothing) Then
                RaiseEvent MovProductoXRangoFechaRowChanged(Me, New MovProductoXRangoFechaRowChangeEvent(CType(e.Row,MovProductoXRangoFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MovProductoXRangoFechaRowChangingEvent) Is Nothing) Then
                RaiseEvent MovProductoXRangoFechaRowChanging(Me, New MovProductoXRangoFechaRowChangeEvent(CType(e.Row,MovProductoXRangoFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MovProductoXRangoFechaRowDeletedEvent) Is Nothing) Then
                RaiseEvent MovProductoXRangoFechaRowDeleted(Me, New MovProductoXRangoFechaRowChangeEvent(CType(e.Row,MovProductoXRangoFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MovProductoXRangoFechaRowDeletingEvent) Is Nothing) Then
                RaiseEvent MovProductoXRangoFechaRowDeleting(Me, New MovProductoXRangoFechaRowChangeEvent(CType(e.Row,MovProductoXRangoFechaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMovProductoXRangoFechaRow(ByVal row As MovProductoXRangoFechaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MovProductoXRangoFechaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class PROVEEDORDataTable
        Inherits Global.System.Data.TypedTableBase(Of PROVEEDORRow)
        
        Private columnCODPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnPROVEEDOR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "PROVEEDOR"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As PROVEEDORRow
            Get
                Return CType(Me.Rows(index),PROVEEDORRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROVEEDORRowChanging As PROVEEDORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROVEEDORRowChanged As PROVEEDORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROVEEDORRowDeleting As PROVEEDORRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event PROVEEDORRowDeleted As PROVEEDORRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddPROVEEDORRow(ByVal row As PROVEEDORRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddPROVEEDORRow(ByVal CODPROVEEDOR As Decimal, ByVal PROVEEDOR As String) As PROVEEDORRow
            Dim rowPROVEEDORRow As PROVEEDORRow = CType(Me.NewRow,PROVEEDORRow)
            Dim columnValuesArray() As Object = New Object() {CODPROVEEDOR, PROVEEDOR}
            rowPROVEEDORRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowPROVEEDORRow)
            Return rowPROVEEDORRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODPROVEEDOR(ByVal CODPROVEEDOR As Decimal) As PROVEEDORRow
            Return CType(Me.Rows.Find(New Object() {CODPROVEEDOR}),PROVEEDORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As PROVEEDORDataTable = CType(MyBase.Clone,PROVEEDORDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New PROVEEDORDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODPROVEEDOR = MyBase.Columns("CODPROVEEDOR")
            Me.columnPROVEEDOR = MyBase.Columns("PROVEEDOR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODPROVEEDOR = New Global.System.Data.DataColumn("CODPROVEEDOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPROVEEDOR)
            Me.columnPROVEEDOR = New Global.System.Data.DataColumn("PROVEEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPROVEEDOR)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODPROVEEDOR}, true))
            Me.columnCODPROVEEDOR.AllowDBNull = false
            Me.columnCODPROVEEDOR.Unique = true
            Me.columnPROVEEDOR.ReadOnly = true
            Me.columnPROVEEDOR.MaxLength = 101
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewPROVEEDORRow() As PROVEEDORRow
            Return CType(Me.NewRow,PROVEEDORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New PROVEEDORRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(PROVEEDORRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.PROVEEDORRowChangedEvent) Is Nothing) Then
                RaiseEvent PROVEEDORRowChanged(Me, New PROVEEDORRowChangeEvent(CType(e.Row,PROVEEDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.PROVEEDORRowChangingEvent) Is Nothing) Then
                RaiseEvent PROVEEDORRowChanging(Me, New PROVEEDORRowChangeEvent(CType(e.Row,PROVEEDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.PROVEEDORRowDeletedEvent) Is Nothing) Then
                RaiseEvent PROVEEDORRowDeleted(Me, New PROVEEDORRowChangeEvent(CType(e.Row,PROVEEDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.PROVEEDORRowDeletingEvent) Is Nothing) Then
                RaiseEvent PROVEEDORRowDeleting(Me, New PROVEEDORRowChangeEvent(CType(e.Row,PROVEEDORRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemovePROVEEDORRow(ByVal row As PROVEEDORRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "PROVEEDORDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class StockMinimoDataTable
        Inherits Global.System.Data.TypedTableBase(Of StockMinimoRow)
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCATEGORIA As Global.System.Data.DataColumn
        
        Private columnLINEA As Global.System.Data.DataColumn
        
        Private columnMARCA As Global.System.Data.DataColumn
        
        Private columnSTOCKMINIMO As Global.System.Data.DataColumn
        
        Private columnSTOCKMAXIMO As Global.System.Data.DataColumn
        
        Private columnSTOCKACTUAL As Global.System.Data.DataColumn
        
        Private columnMEDIDA As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "StockMinimo"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CATEGORIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCATEGORIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MARCAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMARCA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMINIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMINIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMAXIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMAXIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKACTUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As StockMinimoRow
            Get
                Return CType(Me.Rows(index),StockMinimoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockMinimoRowChanging As StockMinimoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockMinimoRowChanged As StockMinimoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockMinimoRowDeleting As StockMinimoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockMinimoRowDeleted As StockMinimoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddStockMinimoRow(ByVal row As StockMinimoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddStockMinimoRow(ByVal PRODUCTO As String, ByVal parentPRODUCTOSRowByFK_CODIGOS_PRODUCTOS4 As PRODUCTOSRow, ByVal CATEGORIA As String, ByVal LINEA As String, ByVal MARCA As String, ByVal STOCKMINIMO As Decimal, ByVal STOCKMAXIMO As Decimal, ByVal STOCKACTUAL As Decimal, ByVal MEDIDA As String, ByVal DESSUCURSAL As String, ByVal CODIGO As String) As StockMinimoRow
            Dim rowStockMinimoRow As StockMinimoRow = CType(Me.NewRow,StockMinimoRow)
            Dim columnValuesArray() As Object = New Object() {PRODUCTO, Nothing, Nothing, CATEGORIA, LINEA, MARCA, STOCKMINIMO, STOCKMAXIMO, STOCKACTUAL, MEDIDA, DESSUCURSAL, CODIGO}
            If (Not (parentPRODUCTOSRowByFK_CODIGOS_PRODUCTOS4) Is Nothing) Then
                columnValuesArray(2) = parentPRODUCTOSRowByFK_CODIGOS_PRODUCTOS4(0)
            End If
            rowStockMinimoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStockMinimoRow)
            Return rowStockMinimoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCODIGOCODPRODUCTO(ByVal CODCODIGO As Decimal, ByVal CODPRODUCTO As Decimal) As StockMinimoRow
            Return CType(Me.Rows.Find(New Object() {CODCODIGO, CODPRODUCTO}),StockMinimoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As StockMinimoDataTable = CType(MyBase.Clone,StockMinimoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New StockMinimoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnCATEGORIA = MyBase.Columns("CATEGORIA")
            Me.columnLINEA = MyBase.Columns("LINEA")
            Me.columnMARCA = MyBase.Columns("MARCA")
            Me.columnSTOCKMINIMO = MyBase.Columns("STOCKMINIMO")
            Me.columnSTOCKMAXIMO = MyBase.Columns("STOCKMAXIMO")
            Me.columnSTOCKACTUAL = MyBase.Columns("STOCKACTUAL")
            Me.columnMEDIDA = MyBase.Columns("MEDIDA")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnCATEGORIA = New Global.System.Data.DataColumn("CATEGORIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCATEGORIA)
            Me.columnLINEA = New Global.System.Data.DataColumn("LINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLINEA)
            Me.columnMARCA = New Global.System.Data.DataColumn("MARCA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMARCA)
            Me.columnSTOCKMINIMO = New Global.System.Data.DataColumn("STOCKMINIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMINIMO)
            Me.columnSTOCKMAXIMO = New Global.System.Data.DataColumn("STOCKMAXIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMAXIMO)
            Me.columnSTOCKACTUAL = New Global.System.Data.DataColumn("STOCKACTUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKACTUAL)
            Me.columnMEDIDA = New Global.System.Data.DataColumn("MEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMEDIDA)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCODIGO, Me.columnCODPRODUCTO}, true))
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 282
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
            Me.columnCODPRODUCTO.AllowDBNull = false
            Me.columnCATEGORIA.MaxLength = 50
            Me.columnLINEA.MaxLength = 100
            Me.columnMARCA.MaxLength = 100
            Me.columnSTOCKMINIMO.ReadOnly = true
            Me.columnSTOCKMAXIMO.ReadOnly = true
            Me.columnSTOCKACTUAL.ReadOnly = true
            Me.columnMEDIDA.MaxLength = 50
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnCODIGO.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewStockMinimoRow() As StockMinimoRow
            Return CType(Me.NewRow,StockMinimoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New StockMinimoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(StockMinimoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.StockMinimoRowChangedEvent) Is Nothing) Then
                RaiseEvent StockMinimoRowChanged(Me, New StockMinimoRowChangeEvent(CType(e.Row,StockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.StockMinimoRowChangingEvent) Is Nothing) Then
                RaiseEvent StockMinimoRowChanging(Me, New StockMinimoRowChangeEvent(CType(e.Row,StockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.StockMinimoRowDeletedEvent) Is Nothing) Then
                RaiseEvent StockMinimoRowDeleted(Me, New StockMinimoRowChangeEvent(CType(e.Row,StockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.StockMinimoRowDeletingEvent) Is Nothing) Then
                RaiseEvent StockMinimoRowDeleting(Me, New StockMinimoRowChangeEvent(CType(e.Row,StockMinimoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveStockMinimoRow(ByVal row As StockMinimoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "StockMinimoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class StockProductoDataTable
        Inherits Global.System.Data.TypedTableBase(Of StockProductoRow)
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnSTOCKACTUAL As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnExpr1 As Global.System.Data.DataColumn
        
        Private columnExpr2 As Global.System.Data.DataColumn
        
        Private columnExpr3 As Global.System.Data.DataColumn
        
        Private columnCODPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODRUBRO As Global.System.Data.DataColumn
        
        Private columnCODFAMILIA As Global.System.Data.DataColumn
        
        Private columnCODLINEA As Global.System.Data.DataColumn
        
        Private columnNUMCOLOR As Global.System.Data.DataColumn
        
        Private columnNUMTALLE As Global.System.Data.DataColumn
        
        Private columnTAL_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODIVA As Global.System.Data.DataColumn
        
        Private columnCODMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODESTADOPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODDESCUENTO As Global.System.Data.DataColumn
        
        Private columnCODPROVEEDOR As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODIGOBARRA As Global.System.Data.DataColumn
        
        Private columnCOSTOANTERIOR As Global.System.Data.DataColumn
        
        Private columnSTOCKMINIMO As Global.System.Data.DataColumn
        
        Private columnSTOCKMAXIMO As Global.System.Data.DataColumn
        
        Private columnFECHAINGRESO As Global.System.Data.DataColumn
        
        Private columnCODIGOORIGINAL As Global.System.Data.DataColumn
        
        Private columnPRODUCTOACTIVO As Global.System.Data.DataColumn
        
        Private columnULTIMOCOSTO As Global.System.Data.DataColumn
        
        Private columnPORCENCOMI As Global.System.Data.DataColumn
        
        Private columnIMAGEN As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnCOSTOPP As Global.System.Data.DataColumn
        
        Private columnFECHAPP As Global.System.Data.DataColumn
        
        Private columnORDPRE As Global.System.Data.DataColumn
        
        Private columnFACCAM As Global.System.Data.DataColumn
        
        Private columnFECHAULTIMACOMPRA As Global.System.Data.DataColumn
        
        Private columnNUMCLOR As Global.System.Data.DataColumn
        
        Private columnCLOR_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnPESO As Global.System.Data.DataColumn
        
        Private columnPESOESPECIFICO As Global.System.Data.DataColumn
        
        Private columnPESOPORMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODPLANTILLA As Global.System.Data.DataColumn
        
        Private columnSERVICIO As Global.System.Data.DataColumn
        
        Private columnESTADO As Global.System.Data.DataColumn
        
        Private columnIVAINCLUIDO As Global.System.Data.DataColumn
        
        Private columnExpr4 As Global.System.Data.DataColumn
        
        Private columnPRECIOSERVICIO As Global.System.Data.DataColumn
        
        Private columnPRODUCTOPRODUCIDO As Global.System.Data.DataColumn
        
        Private columnCODDEPOSITO As Global.System.Data.DataColumn
        
        Private columnCODCODIGO As Global.System.Data.DataColumn
        
        Private columnCOL_CODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnUSUPP As Global.System.Data.DataColumn
        
        Private columnEMPREUSUPP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "StockProducto"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKACTUALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKACTUAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr3Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr3
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCOLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCOLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMTALLEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMTALLE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TAL_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTAL_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODESTADOPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODESTADOPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODDESCUENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODDESCUENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPROVEEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPROVEEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOBARRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGOBARRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOANTERIORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOANTERIOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMINIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMINIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKMAXIMOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKMAXIMO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOORIGINALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGOORIGINAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOACTIVOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOACTIVO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ULTIMOCOSTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnULTIMOCOSTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORCENCOMIColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCENCOMI
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMAGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COSTOPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOSTOPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ORDPREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnORDPRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FACCAMColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACCAM
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAULTIMACOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAULTIMACOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CLOR_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCLOR_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOESPECIFICOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESOESPECIFICO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PESOPORMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPESOPORMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPLANTILLAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPLANTILLA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IVAINCLUIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIVAINCLUIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Expr4Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnExpr4
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRECIOSERVICIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRECIOSERVICIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOPRODUCIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTOPRODUCIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODDEPOSITOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODDEPOSITO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COL_CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOL_CODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMPREUSUPPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMPREUSUPP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As StockProductoRow
            Get
                Return CType(Me.Rows(index),StockProductoRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockProductoRowChanging As StockProductoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockProductoRowChanged As StockProductoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockProductoRowDeleting As StockProductoRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event StockProductoRowDeleted As StockProductoRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddStockProductoRow(ByVal row As StockProductoRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddStockProductoRow( _
                    ByVal DESMEDIDA As String,  _
                    ByVal DESFAMILIA As String,  _
                    ByVal DESLINEA As String,  _
                    ByVal CODIGO As String,  _
                    ByVal STOCKACTUAL As Decimal,  _
                    ByVal DESSUCURSAL As String,  _
                    ByVal DESRUBRO As String,  _
                    ByVal PRODUCTO As String,  _
                    ByVal Expr1 As Decimal,  _
                    ByVal Expr3 As Byte,  _
                    ByVal CODRUBRO As Decimal,  _
                    ByVal parentFAMILIARowByFK_PRODUCTO_RELATIONS_FAMILIA1 As FAMILIARow,  _
                    ByVal CODLINEA As Decimal,  _
                    ByVal NUMCOLOR As String,  _
                    ByVal NUMTALLE As String,  _
                    ByVal TAL_CODEMPRESA As Decimal,  _
                    ByVal CODIVA As Decimal,  _
                    ByVal parentUNIDADMEDIDARowByFK_PRODUCTO_RELATIONS_UNIDADME1 As UNIDADMEDIDARow,  _
                    ByVal CODMONEDA As Decimal,  _
                    ByVal CODESTADOPRODUCTO As Decimal,  _
                    ByVal CODDESCUENTO As Decimal,  _
                    ByVal parentPROVEEDORRowByFK_PRODUCTOS_PROVEEDOR1 As PROVEEDORRow,  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODIGOBARRA As String,  _
                    ByVal COSTOANTERIOR As Decimal,  _
                    ByVal STOCKMINIMO As Decimal,  _
                    ByVal STOCKMAXIMO As Decimal,  _
                    ByVal FECHAINGRESO As Date,  _
                    ByVal CODIGOORIGINAL As String,  _
                    ByVal PRODUCTOACTIVO As Byte,  _
                    ByVal ULTIMOCOSTO As Decimal,  _
                    ByVal PORCENCOMI As Decimal,  _
                    ByVal IMAGEN() As Byte,  _
                    ByVal FECGRA As Date,  _
                    ByVal COSTOPP As Decimal,  _
                    ByVal FECHAPP As Date,  _
                    ByVal ORDPRE As Decimal,  _
                    ByVal FACCAM As Decimal,  _
                    ByVal FECHAULTIMACOMPRA As Date,  _
                    ByVal NUMCLOR As String,  _
                    ByVal CLOR_CODEMPRESA As Decimal,  _
                    ByVal PESO As Decimal,  _
                    ByVal PESOESPECIFICO As Decimal,  _
                    ByVal PESOPORMEDIDA As Decimal,  _
                    ByVal CODPLANTILLA As Decimal,  _
                    ByVal SERVICIO As Byte,  _
                    ByVal ESTADO As Decimal,  _
                    ByVal IVAINCLUIDO As Decimal,  _
                    ByVal Expr4 As Byte,  _
                    ByVal PRECIOSERVICIO As Decimal,  _
                    ByVal PRODUCTOPRODUCIDO As Byte,  _
                    ByVal CODDEPOSITO As Integer,  _
                    ByVal COL_CODEMPRESA As Integer,  _
                    ByVal CODUSUARIO As Integer,  _
                    ByVal CODEMPRESA As Integer,  _
                    ByVal USUPP As Integer,  _
                    ByVal EMPREUSUPP As Integer) As StockProductoRow
            Dim rowStockProductoRow As StockProductoRow = CType(Me.NewRow,StockProductoRow)
            Dim columnValuesArray() As Object = New Object() {DESMEDIDA, DESFAMILIA, DESLINEA, CODIGO, STOCKACTUAL, DESSUCURSAL, DESRUBRO, PRODUCTO, Expr1, Nothing, Expr3, Nothing, CODRUBRO, Nothing, CODLINEA, NUMCOLOR, NUMTALLE, TAL_CODEMPRESA, CODIVA, Nothing, CODMONEDA, CODESTADOPRODUCTO, CODDESCUENTO, Nothing, DESPRODUCTO, CODIGOBARRA, COSTOANTERIOR, STOCKMINIMO, STOCKMAXIMO, FECHAINGRESO, CODIGOORIGINAL, PRODUCTOACTIVO, ULTIMOCOSTO, PORCENCOMI, IMAGEN, FECGRA, COSTOPP, FECHAPP, ORDPRE, FACCAM, FECHAULTIMACOMPRA, NUMCLOR, CLOR_CODEMPRESA, PESO, PESOESPECIFICO, PESOPORMEDIDA, CODPLANTILLA, SERVICIO, ESTADO, IVAINCLUIDO, Expr4, PRECIOSERVICIO, PRODUCTOPRODUCIDO, CODDEPOSITO, Nothing, COL_CODEMPRESA, CODUSUARIO, CODEMPRESA, USUPP, EMPREUSUPP}
            If (Not (parentFAMILIARowByFK_PRODUCTO_RELATIONS_FAMILIA1) Is Nothing) Then
                columnValuesArray(13) = parentFAMILIARowByFK_PRODUCTO_RELATIONS_FAMILIA1(0)
            End If
            If (Not (parentUNIDADMEDIDARowByFK_PRODUCTO_RELATIONS_UNIDADME1) Is Nothing) Then
                columnValuesArray(19) = parentUNIDADMEDIDARowByFK_PRODUCTO_RELATIONS_UNIDADME1(0)
            End If
            If (Not (parentPROVEEDORRowByFK_PRODUCTOS_PROVEEDOR1) Is Nothing) Then
                columnValuesArray(23) = parentPROVEEDORRowByFK_PRODUCTOS_PROVEEDOR1(0)
            End If
            rowStockProductoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowStockProductoRow)
            Return rowStockProductoRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As StockProductoDataTable = CType(MyBase.Clone,StockProductoDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New StockProductoDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnSTOCKACTUAL = MyBase.Columns("STOCKACTUAL")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnExpr1 = MyBase.Columns("Expr1")
            Me.columnExpr2 = MyBase.Columns("Expr2")
            Me.columnExpr3 = MyBase.Columns("Expr3")
            Me.columnCODPRODUCTO = MyBase.Columns("CODPRODUCTO")
            Me.columnCODRUBRO = MyBase.Columns("CODRUBRO")
            Me.columnCODFAMILIA = MyBase.Columns("CODFAMILIA")
            Me.columnCODLINEA = MyBase.Columns("CODLINEA")
            Me.columnNUMCOLOR = MyBase.Columns("NUMCOLOR")
            Me.columnNUMTALLE = MyBase.Columns("NUMTALLE")
            Me.columnTAL_CODEMPRESA = MyBase.Columns("TAL_CODEMPRESA")
            Me.columnCODIVA = MyBase.Columns("CODIVA")
            Me.columnCODMEDIDA = MyBase.Columns("CODMEDIDA")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODESTADOPRODUCTO = MyBase.Columns("CODESTADOPRODUCTO")
            Me.columnCODDESCUENTO = MyBase.Columns("CODDESCUENTO")
            Me.columnCODPROVEEDOR = MyBase.Columns("CODPROVEEDOR")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnCODIGOBARRA = MyBase.Columns("CODIGOBARRA")
            Me.columnCOSTOANTERIOR = MyBase.Columns("COSTOANTERIOR")
            Me.columnSTOCKMINIMO = MyBase.Columns("STOCKMINIMO")
            Me.columnSTOCKMAXIMO = MyBase.Columns("STOCKMAXIMO")
            Me.columnFECHAINGRESO = MyBase.Columns("FECHAINGRESO")
            Me.columnCODIGOORIGINAL = MyBase.Columns("CODIGOORIGINAL")
            Me.columnPRODUCTOACTIVO = MyBase.Columns("PRODUCTOACTIVO")
            Me.columnULTIMOCOSTO = MyBase.Columns("ULTIMOCOSTO")
            Me.columnPORCENCOMI = MyBase.Columns("PORCENCOMI")
            Me.columnIMAGEN = MyBase.Columns("IMAGEN")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnCOSTOPP = MyBase.Columns("COSTOPP")
            Me.columnFECHAPP = MyBase.Columns("FECHAPP")
            Me.columnORDPRE = MyBase.Columns("ORDPRE")
            Me.columnFACCAM = MyBase.Columns("FACCAM")
            Me.columnFECHAULTIMACOMPRA = MyBase.Columns("FECHAULTIMACOMPRA")
            Me.columnNUMCLOR = MyBase.Columns("NUMCLOR")
            Me.columnCLOR_CODEMPRESA = MyBase.Columns("CLOR_CODEMPRESA")
            Me.columnPESO = MyBase.Columns("PESO")
            Me.columnPESOESPECIFICO = MyBase.Columns("PESOESPECIFICO")
            Me.columnPESOPORMEDIDA = MyBase.Columns("PESOPORMEDIDA")
            Me.columnCODPLANTILLA = MyBase.Columns("CODPLANTILLA")
            Me.columnSERVICIO = MyBase.Columns("SERVICIO")
            Me.columnESTADO = MyBase.Columns("ESTADO")
            Me.columnIVAINCLUIDO = MyBase.Columns("IVAINCLUIDO")
            Me.columnExpr4 = MyBase.Columns("Expr4")
            Me.columnPRECIOSERVICIO = MyBase.Columns("PRECIOSERVICIO")
            Me.columnPRODUCTOPRODUCIDO = MyBase.Columns("PRODUCTOPRODUCIDO")
            Me.columnCODDEPOSITO = MyBase.Columns("CODDEPOSITO")
            Me.columnCODCODIGO = MyBase.Columns("CODCODIGO")
            Me.columnCOL_CODEMPRESA = MyBase.Columns("COL_CODEMPRESA")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnUSUPP = MyBase.Columns("USUPP")
            Me.columnEMPREUSUPP = MyBase.Columns("EMPREUSUPP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnSTOCKACTUAL = New Global.System.Data.DataColumn("STOCKACTUAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKACTUAL)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnExpr1 = New Global.System.Data.DataColumn("Expr1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr1)
            Me.columnExpr2 = New Global.System.Data.DataColumn("Expr2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr2)
            Me.columnExpr3 = New Global.System.Data.DataColumn("Expr3", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr3)
            Me.columnCODPRODUCTO = New Global.System.Data.DataColumn("CODPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPRODUCTO)
            Me.columnCODRUBRO = New Global.System.Data.DataColumn("CODRUBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODRUBRO)
            Me.columnCODFAMILIA = New Global.System.Data.DataColumn("CODFAMILIA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFAMILIA)
            Me.columnCODLINEA = New Global.System.Data.DataColumn("CODLINEA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODLINEA)
            Me.columnNUMCOLOR = New Global.System.Data.DataColumn("NUMCOLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCOLOR)
            Me.columnNUMTALLE = New Global.System.Data.DataColumn("NUMTALLE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMTALLE)
            Me.columnTAL_CODEMPRESA = New Global.System.Data.DataColumn("TAL_CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTAL_CODEMPRESA)
            Me.columnCODIVA = New Global.System.Data.DataColumn("CODIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIVA)
            Me.columnCODMEDIDA = New Global.System.Data.DataColumn("CODMEDIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMEDIDA)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODESTADOPRODUCTO = New Global.System.Data.DataColumn("CODESTADOPRODUCTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODESTADOPRODUCTO)
            Me.columnCODDESCUENTO = New Global.System.Data.DataColumn("CODDESCUENTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODDESCUENTO)
            Me.columnCODPROVEEDOR = New Global.System.Data.DataColumn("CODPROVEEDOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPROVEEDOR)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnCODIGOBARRA = New Global.System.Data.DataColumn("CODIGOBARRA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGOBARRA)
            Me.columnCOSTOANTERIOR = New Global.System.Data.DataColumn("COSTOANTERIOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOANTERIOR)
            Me.columnSTOCKMINIMO = New Global.System.Data.DataColumn("STOCKMINIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMINIMO)
            Me.columnSTOCKMAXIMO = New Global.System.Data.DataColumn("STOCKMAXIMO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKMAXIMO)
            Me.columnFECHAINGRESO = New Global.System.Data.DataColumn("FECHAINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAINGRESO)
            Me.columnCODIGOORIGINAL = New Global.System.Data.DataColumn("CODIGOORIGINAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGOORIGINAL)
            Me.columnPRODUCTOACTIVO = New Global.System.Data.DataColumn("PRODUCTOACTIVO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOACTIVO)
            Me.columnULTIMOCOSTO = New Global.System.Data.DataColumn("ULTIMOCOSTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnULTIMOCOSTO)
            Me.columnPORCENCOMI = New Global.System.Data.DataColumn("PORCENCOMI", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCENCOMI)
            Me.columnIMAGEN = New Global.System.Data.DataColumn("IMAGEN", GetType(Byte()), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnCOSTOPP = New Global.System.Data.DataColumn("COSTOPP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOSTOPP)
            Me.columnFECHAPP = New Global.System.Data.DataColumn("FECHAPP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAPP)
            Me.columnORDPRE = New Global.System.Data.DataColumn("ORDPRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnORDPRE)
            Me.columnFACCAM = New Global.System.Data.DataColumn("FACCAM", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACCAM)
            Me.columnFECHAULTIMACOMPRA = New Global.System.Data.DataColumn("FECHAULTIMACOMPRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAULTIMACOMPRA)
            Me.columnNUMCLOR = New Global.System.Data.DataColumn("NUMCLOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLOR)
            Me.columnCLOR_CODEMPRESA = New Global.System.Data.DataColumn("CLOR_CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCLOR_CODEMPRESA)
            Me.columnPESO = New Global.System.Data.DataColumn("PESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESO)
            Me.columnPESOESPECIFICO = New Global.System.Data.DataColumn("PESOESPECIFICO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESOESPECIFICO)
            Me.columnPESOPORMEDIDA = New Global.System.Data.DataColumn("PESOPORMEDIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPESOPORMEDIDA)
            Me.columnCODPLANTILLA = New Global.System.Data.DataColumn("CODPLANTILLA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPLANTILLA)
            Me.columnSERVICIO = New Global.System.Data.DataColumn("SERVICIO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSERVICIO)
            Me.columnESTADO = New Global.System.Data.DataColumn("ESTADO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnESTADO)
            Me.columnIVAINCLUIDO = New Global.System.Data.DataColumn("IVAINCLUIDO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIVAINCLUIDO)
            Me.columnExpr4 = New Global.System.Data.DataColumn("Expr4", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnExpr4)
            Me.columnPRECIOSERVICIO = New Global.System.Data.DataColumn("PRECIOSERVICIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRECIOSERVICIO)
            Me.columnPRODUCTOPRODUCIDO = New Global.System.Data.DataColumn("PRODUCTOPRODUCIDO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTOPRODUCIDO)
            Me.columnCODDEPOSITO = New Global.System.Data.DataColumn("CODDEPOSITO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODDEPOSITO)
            Me.columnCODCODIGO = New Global.System.Data.DataColumn("CODCODIGO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCODIGO)
            Me.columnCOL_CODEMPRESA = New Global.System.Data.DataColumn("COL_CODEMPRESA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOL_CODEMPRESA)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnUSUPP = New Global.System.Data.DataColumn("USUPP", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUPP)
            Me.columnEMPREUSUPP = New Global.System.Data.DataColumn("EMPREUSUPP", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMPREUSUPP)
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 181
            Me.columnExpr2.AutoIncrement = true
            Me.columnExpr2.AutoIncrementSeed = -1
            Me.columnExpr2.AutoIncrementStep = -1
            Me.columnExpr2.ReadOnly = true
            Me.columnCODPRODUCTO.AutoIncrement = true
            Me.columnCODPRODUCTO.AutoIncrementSeed = -1
            Me.columnCODPRODUCTO.AutoIncrementStep = -1
            Me.columnCODPRODUCTO.ReadOnly = true
            Me.columnNUMCOLOR.MaxLength = 50
            Me.columnNUMTALLE.MaxLength = 50
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnCODIGOBARRA.MaxLength = 25
            Me.columnCODIGOORIGINAL.MaxLength = 50
            Me.columnNUMCLOR.MaxLength = 50
            Me.columnCODCODIGO.AutoIncrement = true
            Me.columnCODCODIGO.AutoIncrementSeed = -1
            Me.columnCODCODIGO.AutoIncrementStep = -1
            Me.columnCODCODIGO.AllowDBNull = false
            Me.columnCODCODIGO.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewStockProductoRow() As StockProductoRow
            Return CType(Me.NewRow,StockProductoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New StockProductoRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(StockProductoRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.StockProductoRowChangedEvent) Is Nothing) Then
                RaiseEvent StockProductoRowChanged(Me, New StockProductoRowChangeEvent(CType(e.Row,StockProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.StockProductoRowChangingEvent) Is Nothing) Then
                RaiseEvent StockProductoRowChanging(Me, New StockProductoRowChangeEvent(CType(e.Row,StockProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.StockProductoRowDeletedEvent) Is Nothing) Then
                RaiseEvent StockProductoRowDeleted(Me, New StockProductoRowChangeEvent(CType(e.Row,StockProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.StockProductoRowDeletingEvent) Is Nothing) Then
                RaiseEvent StockProductoRowDeleting(Me, New StockProductoRowChangeEvent(CType(e.Row,StockProductoRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveStockProductoRow(ByVal row As StockProductoRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "StockProductoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MOVIMIENTOPRODUCTODETDataTable
        Inherits Global.System.Data.TypedTableBase(Of MOVIMIENTOPRODUCTODETRow)
        
        Private columnFECHAMTO As Global.System.Data.DataColumn
        
        Private columnSTOCKINICIAL As Global.System.Data.DataColumn
        
        Private columnENTRADAPORCOMPRA As Global.System.Data.DataColumn
        
        Private columnENTRADAPORDEVOLUCION As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIAENTRADA As Global.System.Data.DataColumn
        
        Private columnEntrada_Por_Anulacion_de_Venta As Global.System.Data.DataColumn
        
        Private columnAJUSTEENTRADA As Global.System.Data.DataColumn
        
        Private columnSALIDAPORVENTA As Global.System.Data.DataColumn
        
        Private columnENVIO As Global.System.Data.DataColumn
        
        Private columnTRANSFERENCIASALIDA As Global.System.Data.DataColumn
        
        Private columnAJUSTESALIDA As Global.System.Data.DataColumn
        
        Private columnOTROS As Global.System.Data.DataColumn
        
        Private columnDESPRODUCTO As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MOVIMIENTOPRODUCTODET"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRADAPORCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRADAPORCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENTRADAPORDEVOLUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENTRADAPORDEVOLUCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIAENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIAENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Entrada_Por_Anulacion_de_VentaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEntrada_Por_Anulacion_de_Venta
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTEENTRADAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTEENTRADA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALIDAPORVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALIDAPORVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property ENVIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnENVIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TRANSFERENCIASALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTRANSFERENCIASALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property AJUSTESALIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAJUSTESALIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OTROSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOTROS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESPRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MOVIMIENTOPRODUCTODETRow
            Get
                Return CType(Me.Rows(index),MOVIMIENTOPRODUCTODETRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOVIMIENTOPRODUCTODETRowChanging As MOVIMIENTOPRODUCTODETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOVIMIENTOPRODUCTODETRowChanged As MOVIMIENTOPRODUCTODETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOVIMIENTOPRODUCTODETRowDeleting As MOVIMIENTOPRODUCTODETRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MOVIMIENTOPRODUCTODETRowDeleted As MOVIMIENTOPRODUCTODETRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMOVIMIENTOPRODUCTODETRow(ByVal row As MOVIMIENTOPRODUCTODETRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMOVIMIENTOPRODUCTODETRow(ByVal FECHAMTO As String, ByVal STOCKINICIAL As Decimal, ByVal ENTRADAPORCOMPRA As Decimal, ByVal ENTRADAPORDEVOLUCION As Decimal, ByVal TRANSFERENCIAENTRADA As Decimal, ByVal Entrada_Por_Anulacion_de_Venta As Decimal, ByVal AJUSTEENTRADA As Decimal, ByVal SALIDAPORVENTA As Decimal, ByVal ENVIO As Decimal, ByVal TRANSFERENCIASALIDA As Decimal, ByVal AJUSTESALIDA As Decimal, ByVal OTROS As Decimal, ByVal DESPRODUCTO As String, ByVal CODIGO As String, ByVal DESSUCURSAL As String) As MOVIMIENTOPRODUCTODETRow
            Dim rowMOVIMIENTOPRODUCTODETRow As MOVIMIENTOPRODUCTODETRow = CType(Me.NewRow,MOVIMIENTOPRODUCTODETRow)
            Dim columnValuesArray() As Object = New Object() {FECHAMTO, STOCKINICIAL, ENTRADAPORCOMPRA, ENTRADAPORDEVOLUCION, TRANSFERENCIAENTRADA, Entrada_Por_Anulacion_de_Venta, AJUSTEENTRADA, SALIDAPORVENTA, ENVIO, TRANSFERENCIASALIDA, AJUSTESALIDA, OTROS, DESPRODUCTO, CODIGO, DESSUCURSAL}
            rowMOVIMIENTOPRODUCTODETRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMOVIMIENTOPRODUCTODETRow)
            Return rowMOVIMIENTOPRODUCTODETRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MOVIMIENTOPRODUCTODETDataTable = CType(MyBase.Clone,MOVIMIENTOPRODUCTODETDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MOVIMIENTOPRODUCTODETDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFECHAMTO = MyBase.Columns("FECHAMTO")
            Me.columnSTOCKINICIAL = MyBase.Columns("STOCKINICIAL")
            Me.columnENTRADAPORCOMPRA = MyBase.Columns("ENTRADAPORCOMPRA")
            Me.columnENTRADAPORDEVOLUCION = MyBase.Columns("ENTRADAPORDEVOLUCION")
            Me.columnTRANSFERENCIAENTRADA = MyBase.Columns("TRANSFERENCIAENTRADA")
            Me.columnEntrada_Por_Anulacion_de_Venta = MyBase.Columns("Entrada Por Anulacion de Venta")
            Me.columnAJUSTEENTRADA = MyBase.Columns("AJUSTEENTRADA")
            Me.columnSALIDAPORVENTA = MyBase.Columns("SALIDAPORVENTA")
            Me.columnENVIO = MyBase.Columns("ENVIO")
            Me.columnTRANSFERENCIASALIDA = MyBase.Columns("TRANSFERENCIASALIDA")
            Me.columnAJUSTESALIDA = MyBase.Columns("AJUSTESALIDA")
            Me.columnOTROS = MyBase.Columns("OTROS")
            Me.columnDESPRODUCTO = MyBase.Columns("DESPRODUCTO")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFECHAMTO = New Global.System.Data.DataColumn("FECHAMTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMTO)
            Me.columnSTOCKINICIAL = New Global.System.Data.DataColumn("STOCKINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKINICIAL)
            Me.columnENTRADAPORCOMPRA = New Global.System.Data.DataColumn("ENTRADAPORCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRADAPORCOMPRA)
            Me.columnENTRADAPORDEVOLUCION = New Global.System.Data.DataColumn("ENTRADAPORDEVOLUCION", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENTRADAPORDEVOLUCION)
            Me.columnTRANSFERENCIAENTRADA = New Global.System.Data.DataColumn("TRANSFERENCIAENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIAENTRADA)
            Me.columnEntrada_Por_Anulacion_de_Venta = New Global.System.Data.DataColumn("Entrada Por Anulacion de Venta", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEntrada_Por_Anulacion_de_Venta)
            Me.columnAJUSTEENTRADA = New Global.System.Data.DataColumn("AJUSTEENTRADA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTEENTRADA)
            Me.columnSALIDAPORVENTA = New Global.System.Data.DataColumn("SALIDAPORVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALIDAPORVENTA)
            Me.columnENVIO = New Global.System.Data.DataColumn("ENVIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnENVIO)
            Me.columnTRANSFERENCIASALIDA = New Global.System.Data.DataColumn("TRANSFERENCIASALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTRANSFERENCIASALIDA)
            Me.columnAJUSTESALIDA = New Global.System.Data.DataColumn("AJUSTESALIDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAJUSTESALIDA)
            Me.columnOTROS = New Global.System.Data.DataColumn("OTROS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOTROS)
            Me.columnDESPRODUCTO = New Global.System.Data.DataColumn("DESPRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESPRODUCTO)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnFECHAMTO.ReadOnly = true
            Me.columnFECHAMTO.MaxLength = 10
            Me.columnSTOCKINICIAL.ReadOnly = true
            Me.columnENTRADAPORCOMPRA.ReadOnly = true
            Me.columnENTRADAPORDEVOLUCION.ReadOnly = true
            Me.columnTRANSFERENCIAENTRADA.ReadOnly = true
            Me.columnEntrada_Por_Anulacion_de_Venta.ReadOnly = true
            Me.columnAJUSTEENTRADA.ReadOnly = true
            Me.columnSALIDAPORVENTA.ReadOnly = true
            Me.columnENVIO.ReadOnly = true
            Me.columnTRANSFERENCIASALIDA.ReadOnly = true
            Me.columnAJUSTESALIDA.ReadOnly = true
            Me.columnOTROS.ReadOnly = true
            Me.columnDESPRODUCTO.MaxLength = 80
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESSUCURSAL.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMOVIMIENTOPRODUCTODETRow() As MOVIMIENTOPRODUCTODETRow
            Return CType(Me.NewRow,MOVIMIENTOPRODUCTODETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MOVIMIENTOPRODUCTODETRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MOVIMIENTOPRODUCTODETRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MOVIMIENTOPRODUCTODETRowChangedEvent) Is Nothing) Then
                RaiseEvent MOVIMIENTOPRODUCTODETRowChanged(Me, New MOVIMIENTOPRODUCTODETRowChangeEvent(CType(e.Row,MOVIMIENTOPRODUCTODETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MOVIMIENTOPRODUCTODETRowChangingEvent) Is Nothing) Then
                RaiseEvent MOVIMIENTOPRODUCTODETRowChanging(Me, New MOVIMIENTOPRODUCTODETRowChangeEvent(CType(e.Row,MOVIMIENTOPRODUCTODETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MOVIMIENTOPRODUCTODETRowDeletedEvent) Is Nothing) Then
                RaiseEvent MOVIMIENTOPRODUCTODETRowDeleted(Me, New MOVIMIENTOPRODUCTODETRowChangeEvent(CType(e.Row,MOVIMIENTOPRODUCTODETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MOVIMIENTOPRODUCTODETRowDeletingEvent) Is Nothing) Then
                RaiseEvent MOVIMIENTOPRODUCTODETRowDeleting(Me, New MOVIMIENTOPRODUCTODETRowChangeEvent(CType(e.Row,MOVIMIENTOPRODUCTODETRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMOVIMIENTOPRODUCTODETRow(ByVal row As MOVIMIENTOPRODUCTODETRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MOVIMIENTOPRODUCTODETDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COSTOPROMEDIONWSUCDataTable
        Inherits Global.System.Data.TypedTableBase(Of COSTOPROMEDIONWSUCRow)
        
        Private columnDESFAMILIA As Global.System.Data.DataColumn
        
        Private columnDESLINEA As Global.System.Data.DataColumn
        
        Private columnDESRUBRO As Global.System.Data.DataColumn
        
        Private columnDESMEDIDA As Global.System.Data.DataColumn
        
        Private columnCODIGO As Global.System.Data.DataColumn
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnPRODUCTO As Global.System.Data.DataColumn
        
        Private columnSTOCKACTUALDEP As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COSTOPROMEDIONWSUC"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFAMILIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFAMILIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESLINEAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESLINEA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESRUBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESRUBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMEDIDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMEDIDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODIGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODIGO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRODUCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRODUCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property STOCKACTUALDEPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSTOCKACTUALDEP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COSTOPROMEDIONWSUCRow
            Get
                Return CType(Me.Rows(index),COSTOPROMEDIONWSUCRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWSUCRowChanging As COSTOPROMEDIONWSUCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWSUCRowChanged As COSTOPROMEDIONWSUCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWSUCRowDeleting As COSTOPROMEDIONWSUCRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COSTOPROMEDIONWSUCRowDeleted As COSTOPROMEDIONWSUCRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCOSTOPROMEDIONWSUCRow(ByVal row As COSTOPROMEDIONWSUCRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCOSTOPROMEDIONWSUCRow(ByVal DESFAMILIA As String, ByVal DESLINEA As String, ByVal DESRUBRO As String, ByVal DESMEDIDA As String, ByVal CODIGO As String, ByVal DESSUCURSAL As String, ByVal PRODUCTO As String, ByVal STOCKACTUALDEP As Decimal) As COSTOPROMEDIONWSUCRow
            Dim rowCOSTOPROMEDIONWSUCRow As COSTOPROMEDIONWSUCRow = CType(Me.NewRow,COSTOPROMEDIONWSUCRow)
            Dim columnValuesArray() As Object = New Object() {DESFAMILIA, DESLINEA, DESRUBRO, DESMEDIDA, CODIGO, DESSUCURSAL, PRODUCTO, STOCKACTUALDEP}
            rowCOSTOPROMEDIONWSUCRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOSTOPROMEDIONWSUCRow)
            Return rowCOSTOPROMEDIONWSUCRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COSTOPROMEDIONWSUCDataTable = CType(MyBase.Clone,COSTOPROMEDIONWSUCDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COSTOPROMEDIONWSUCDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESFAMILIA = MyBase.Columns("DESFAMILIA")
            Me.columnDESLINEA = MyBase.Columns("DESLINEA")
            Me.columnDESRUBRO = MyBase.Columns("DESRUBRO")
            Me.columnDESMEDIDA = MyBase.Columns("DESMEDIDA")
            Me.columnCODIGO = MyBase.Columns("CODIGO")
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnPRODUCTO = MyBase.Columns("PRODUCTO")
            Me.columnSTOCKACTUALDEP = MyBase.Columns("STOCKACTUALDEP")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESFAMILIA = New Global.System.Data.DataColumn("DESFAMILIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFAMILIA)
            Me.columnDESLINEA = New Global.System.Data.DataColumn("DESLINEA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESLINEA)
            Me.columnDESRUBRO = New Global.System.Data.DataColumn("DESRUBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESRUBRO)
            Me.columnDESMEDIDA = New Global.System.Data.DataColumn("DESMEDIDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMEDIDA)
            Me.columnCODIGO = New Global.System.Data.DataColumn("CODIGO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODIGO)
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnPRODUCTO = New Global.System.Data.DataColumn("PRODUCTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRODUCTO)
            Me.columnSTOCKACTUALDEP = New Global.System.Data.DataColumn("STOCKACTUALDEP", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSTOCKACTUALDEP)
            Me.columnDESFAMILIA.MaxLength = 50
            Me.columnDESLINEA.MaxLength = 100
            Me.columnDESRUBRO.MaxLength = 100
            Me.columnDESMEDIDA.MaxLength = 50
            Me.columnCODIGO.MaxLength = 150
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnPRODUCTO.ReadOnly = true
            Me.columnPRODUCTO.MaxLength = 181
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCOSTOPROMEDIONWSUCRow() As COSTOPROMEDIONWSUCRow
            Return CType(Me.NewRow,COSTOPROMEDIONWSUCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COSTOPROMEDIONWSUCRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COSTOPROMEDIONWSUCRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COSTOPROMEDIONWSUCRowChangedEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWSUCRowChanged(Me, New COSTOPROMEDIONWSUCRowChangeEvent(CType(e.Row,COSTOPROMEDIONWSUCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COSTOPROMEDIONWSUCRowChangingEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWSUCRowChanging(Me, New COSTOPROMEDIONWSUCRowChangeEvent(CType(e.Row,COSTOPROMEDIONWSUCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COSTOPROMEDIONWSUCRowDeletedEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWSUCRowDeleted(Me, New COSTOPROMEDIONWSUCRowChangeEvent(CType(e.Row,COSTOPROMEDIONWSUCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COSTOPROMEDIONWSUCRowDeletingEvent) Is Nothing) Then
                RaiseEvent COSTOPROMEDIONWSUCRowDeleting(Me, New COSTOPROMEDIONWSUCRowChangeEvent(CType(e.Row,COSTOPROMEDIONWSUCRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCOSTOPROMEDIONWSUCRow(ByVal row As COSTOPROMEDIONWSUCRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COSTOPROMEDIONWSUCDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class SUCURSALDataTable
        Inherits Global.System.Data.TypedTableBase(Of SUCURSALRow)
        
        Private columnDESSUCURSAL As Global.System.Data.DataColumn
        
        Private columnTIPOSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "SUCURSAL"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As SUCURSALRow
            Get
                Return CType(Me.Rows(index),SUCURSALRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SUCURSALRowChanging As SUCURSALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SUCURSALRowChanged As SUCURSALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SUCURSALRowDeleting As SUCURSALRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event SUCURSALRowDeleted As SUCURSALRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddSUCURSALRow(ByVal row As SUCURSALRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddSUCURSALRow(ByVal DESSUCURSAL As String, ByVal TIPOSUCURSAL As String, ByVal CODSUCURSAL As Integer) As SUCURSALRow
            Dim rowSUCURSALRow As SUCURSALRow = CType(Me.NewRow,SUCURSALRow)
            Dim columnValuesArray() As Object = New Object() {DESSUCURSAL, TIPOSUCURSAL, CODSUCURSAL}
            rowSUCURSALRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowSUCURSALRow)
            Return rowSUCURSALRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODSUCURSAL(ByVal CODSUCURSAL As Integer) As SUCURSALRow
            Return CType(Me.Rows.Find(New Object() {CODSUCURSAL}),SUCURSALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As SUCURSALDataTable = CType(MyBase.Clone,SUCURSALDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New SUCURSALDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESSUCURSAL = MyBase.Columns("DESSUCURSAL")
            Me.columnTIPOSUCURSAL = MyBase.Columns("TIPOSUCURSAL")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESSUCURSAL = New Global.System.Data.DataColumn("DESSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESSUCURSAL)
            Me.columnTIPOSUCURSAL = New Global.System.Data.DataColumn("TIPOSUCURSAL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOSUCURSAL)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODSUCURSAL}, true))
            Me.columnDESSUCURSAL.MaxLength = 50
            Me.columnTIPOSUCURSAL.MaxLength = 50
            Me.columnCODSUCURSAL.AllowDBNull = false
            Me.columnCODSUCURSAL.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewSUCURSALRow() As SUCURSALRow
            Return CType(Me.NewRow,SUCURSALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New SUCURSALRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(SUCURSALRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.SUCURSALRowChangedEvent) Is Nothing) Then
                RaiseEvent SUCURSALRowChanged(Me, New SUCURSALRowChangeEvent(CType(e.Row,SUCURSALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.SUCURSALRowChangingEvent) Is Nothing) Then
                RaiseEvent SUCURSALRowChanging(Me, New SUCURSALRowChangeEvent(CType(e.Row,SUCURSALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.SUCURSALRowDeletedEvent) Is Nothing) Then
                RaiseEvent SUCURSALRowDeleted(Me, New SUCURSALRowChangeEvent(CType(e.Row,SUCURSALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.SUCURSALRowDeletingEvent) Is Nothing) Then
                RaiseEvent SUCURSALRowDeleting(Me, New SUCURSALRowChangeEvent(CType(e.Row,SUCURSALRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveSUCURSALRow(ByVal row As SUCURSALRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DSReporteProductoNW = New DSReporteProductoNW()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "SUCURSALDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CODIGOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCODIGOS As CODIGOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCODIGOS = CType(Me.Table,CODIGOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Decimal
            Get
                Return CType(Me(Me.tableCODIGOS.CODCODIGOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCODIGOS.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Return CType(Me(Me.tableCODIGOS.CODPRODUCTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCODIGOS.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCODIGO1() As String
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.DESCODIGO1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCODIGO1' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.DESCODIGO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCODIGO2() As String
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.DESCODIGO2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCODIGO2' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.DESCODIGO2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.PRECIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIO' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.PRECIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESABLE() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.PESABLEColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESABLE' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.PESABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENCIMIENTO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.VENCIMIENTOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENCIMIENTO' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.VENCIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BALANZA() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCODIGOS.BALANZAColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BALANZA' in table 'CODIGOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCODIGOS.BALANZAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTOSRow() As PRODUCTOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CODIGOS_PRODUCTOS")),PRODUCTOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CODIGOS_PRODUCTOS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StockProductoRow() As StockProductoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CODIGOS_PRODUCTOS5")),StockProductoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CODIGOS_PRODUCTOS5"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCODIGO1Null() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.DESCODIGO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCODIGO1Null()
            Me(Me.tableCODIGOS.DESCODIGO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCODIGO2Null() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.DESCODIGO2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCODIGO2Null()
            Me(Me.tableCODIGOS.DESCODIGO2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCODIGOS.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCODIGOS.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCODIGOS.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableCODIGOS.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIONull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.PRECIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIONull()
            Me(Me.tableCODIGOS.PRECIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCODIGOS.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESABLENull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.PESABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESABLENull()
            Me(Me.tableCODIGOS.PESABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENCIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.VENCIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENCIMIENTONull()
            Me(Me.tableCODIGOS.VENCIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBALANZANull() As Boolean
            Return Me.IsNull(Me.tableCODIGOS.BALANZAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBALANZANull()
            Me(Me.tableCODIGOS.BALANZAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCOMPRASDETALLERows() As COMPRASDETALLERow()
            If (Me.Table.ChildRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO") Is Nothing) Then
                Return New COMPRASDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO")),COMPRASDETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMovDetalladoRows() As MovDetalladoRow()
            If (Me.Table.ChildRelations("FK_MOVIMIENTOS_RELATIONS_CODIGOS") Is Nothing) Then
                Return New MovDetalladoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MOVIMIENTOS_RELATIONS_CODIGOS")),MovDetalladoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COMPRASRow
        Inherits Global.System.Data.DataRow
        
        Private tableCOMPRAS As COMPRASDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMPRAS = CType(Me.Table,COMPRASDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOMPRA() As Decimal
            Get
                Return CType(Me(Me.tableCOMPRAS.CODCOMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOMPRAS.CODCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMRESPONSABLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.NUMRESPONSABLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMRESPONSABLE' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.NUMRESPONSABLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RES_CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.RES_CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'RES_CODEMPRESA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.RES_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODSUCURSALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODDEPOSITO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODDEPOSITOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODDEPOSITO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODDEPOSITOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOMPROBANTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODCOMPROBANTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCOMPROBANTE' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODCOMPROBANTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPROVEEDOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODPROVEEDORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPROVEEDOR' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODPROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCOMPRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.NUMCOMPRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCOMPRA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.NUMCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHACOMPRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.FECHACOMPRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACOMPRA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.FECHACOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALEXENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALEXENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALEXENTA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALEXENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALGRAVADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALGRAVADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALGRAVADA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALGRAVADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALIVA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALCOMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALCOMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCOMPRA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALDESCUENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALDESCUENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALDESCUENTO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALDESCUENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTADO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.ESTADOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTADO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOGASTODET() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODTIPOGASTODETColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOGASTODET' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODTIPOGASTODETColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MODALIDADPAGO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.MODALIDADPAGOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODALIDADPAGO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.MODALIDADPAGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCENTRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODCENTROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCENTRO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODCENTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BASEIMPONIBLE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.BASEIMPONIBLEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'BASEIMPONIBLE' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.BASEIMPONIBLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALIVA5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALIVA5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALIVA5' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALIVA5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVAINCLUIDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.IVAINCLUIDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVAINCLUIDO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.IVAINCLUIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRASIMPLE() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.COMPRASIMPLEColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPRASIMPLE' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.COMPRASIMPLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property METODO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.METODOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'METODO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.METODOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALGRAVADO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALGRAVADO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALGRAVADO10' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALGRAVADO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALIVA10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALIVA10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALIVA10' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALIVA10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TOTALGRAVADO5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.TOTALGRAVADO5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALGRAVADO5' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.TOTALGRAVADO5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ASENTADO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.ASENTADOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ASENTADO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.ASENTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEVENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CODEVENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEVENTO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CODEVENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MOTIVOANULADO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRAS.MOTIVOANULADOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MOTIVOANULADO' in table 'COMPRAS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRAS.MOTIVOANULADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROVEEDORRow() As PROVEEDORRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_COMPRAS_RELATIONS_PROVEEDO")),PROVEEDORRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_COMPRAS_RELATIONS_PROVEEDO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMRESPONSABLENull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.NUMRESPONSABLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMRESPONSABLENull()
            Me(Me.tableCOMPRAS.NUMRESPONSABLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsRES_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.RES_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetRES_CODEMPRESANull()
            Me(Me.tableCOMPRAS.RES_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCOMPRAS.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCOMPRAS.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCOMPRAS.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableCOMPRAS.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODDEPOSITONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODDEPOSITOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODDEPOSITONull()
            Me(Me.tableCOMPRAS.CODDEPOSITOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCOMPROBANTENull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODCOMPROBANTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCOMPROBANTENull()
            Me(Me.tableCOMPRAS.CODCOMPROBANTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODPROVEEDORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPROVEEDORNull()
            Me(Me.tableCOMPRAS.CODPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.NUMCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCOMPRANull()
            Me(Me.tableCOMPRAS.NUMCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHACOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.FECHACOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHACOMPRANull()
            Me(Me.tableCOMPRAS.FECHACOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALEXENTANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALEXENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALEXENTANull()
            Me(Me.tableCOMPRAS.TOTALEXENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALGRAVADANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALGRAVADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALGRAVADANull()
            Me(Me.tableCOMPRAS.TOTALGRAVADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALIVANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALIVANull()
            Me(Me.tableCOMPRAS.TOTALIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALCOMPRANull()
            Me(Me.tableCOMPRAS.TOTALCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALDESCUENTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALDESCUENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALDESCUENTONull()
            Me(Me.tableCOMPRAS.TOTALDESCUENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCOMPRAS.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCOMPRAS.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCOMPRAS.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESTADONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESTADONull()
            Me(Me.tableCOMPRAS.ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOGASTODETNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODTIPOGASTODETColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOGASTODETNull()
            Me(Me.tableCOMPRAS.CODTIPOGASTODETColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMODALIDADPAGONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.MODALIDADPAGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMODALIDADPAGONull()
            Me(Me.tableCOMPRAS.MODALIDADPAGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCENTRONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODCENTROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCENTRONull()
            Me(Me.tableCOMPRAS.CODCENTROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsBASEIMPONIBLENull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.BASEIMPONIBLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetBASEIMPONIBLENull()
            Me(Me.tableCOMPRAS.BASEIMPONIBLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALIVA5Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALIVA5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALIVA5Null()
            Me(Me.tableCOMPRAS.TOTALIVA5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVAINCLUIDONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.IVAINCLUIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVAINCLUIDONull()
            Me(Me.tableCOMPRAS.IVAINCLUIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPRASIMPLENull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.COMPRASIMPLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPRASIMPLENull()
            Me(Me.tableCOMPRAS.COMPRASIMPLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMETODONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.METODOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMETODONull()
            Me(Me.tableCOMPRAS.METODOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALGRAVADO10Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALGRAVADO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALGRAVADO10Null()
            Me(Me.tableCOMPRAS.TOTALGRAVADO10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALIVA10Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALIVA10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALIVA10Null()
            Me(Me.tableCOMPRAS.TOTALIVA10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTOTALGRAVADO5Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.TOTALGRAVADO5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTOTALGRAVADO5Null()
            Me(Me.tableCOMPRAS.TOTALGRAVADO5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsASENTADONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.ASENTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetASENTADONull()
            Me(Me.tableCOMPRAS.ASENTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEVENTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CODEVENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEVENTONull()
            Me(Me.tableCOMPRAS.CODEVENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableCOMPRAS.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMOTIVOANULADONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRAS.MOTIVOANULADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMOTIVOANULADONull()
            Me(Me.tableCOMPRAS.MOTIVOANULADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCOMPRASDETALLERows() As COMPRASDETALLERow()
            If (Me.Table.ChildRelations("FK_COMPRASD_RELATIONS_COMPRAS") Is Nothing) Then
                Return New COMPRASDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_COMPRASD_RELATIONS_COMPRAS")),COMPRASDETALLERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COMPRASDETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableCOMPRASDETALLE As COMPRASDETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOMPRASDETALLE = CType(Me.Table,COMPRASDETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ComprasDetalleID() As Decimal
            Get
                Return CType(Me(Me.tableCOMPRASDETALLE.ComprasDetalleIDColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.ComprasDetalleIDColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOMPRA() As Decimal
            Get
                Return CType(Me(Me.tableCOMPRASDETALLE.CODCOMPRAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CODCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEANROCOMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.LINEANROCOMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINEANROCOMPRA' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.LINEANROCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.CODPRODUCTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPRODUCTO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.CODCODIGOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDADCOMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.CANTIDADCOMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDADCOMPRA' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CANTIDADCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOPROMEDIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.COSTOPROMEDIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOPROMEDIO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.COSTOPROMEDIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOUNITARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.COSTOUNITARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOUNITARIO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.COSTOUNITARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.IVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVA' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.IVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FACTORPROMEDIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.FACTORPROMEDIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FACTORPROMEDIO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.FACTORPROMEDIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOBRUTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.COSTOBRUTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOBRUTO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.COSTOBRUTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDENFABRICACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.ORDENFABRICACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDENFABRICACION' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.ORDENFABRICACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOPROMEDIOMAESTRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.COSTOPROMEDIOMAESTROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOPROMEDIOMAESTRO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.COSTOPROMEDIOMAESTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOPPMAESTRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.COSTOPPMAESTROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOPPMAESTRO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.COSTOPPMAESTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOMAY() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.PRECIOMAYColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOMAY' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.PRECIOMAYColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOMIN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.PRECIOMINColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOMIN' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.PRECIOMINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEANUMERO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.LINEANUMEROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINEANUMERO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.LINEANUMEROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCENTRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.CODCENTROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCENTRO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CODCENTROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.CODSUCURSALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTEGRAVADO10() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO10Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTEGRAVADO10' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO10Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTEGRAVADO5() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO5Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTEGRAVADO5' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO5Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTEEXENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.IMPORTEEXENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTEEXENTO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.IMPORTEEXENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INTEGRADO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.INTEGRADOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INTEGRADO' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.INTEGRADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOIVA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.TIPOIVAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOIVA' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.TIPOIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMATERIAPRIMA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.CODMATERIAPRIMAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMATERIAPRIMA' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.CODMATERIAPRIMAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VIDAUTIL() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCOMPRASDETALLE.VIDAUTILColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VIDAUTIL' in table 'COMPRASDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOMPRASDETALLE.VIDAUTILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRASRow() As COMPRASRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_COMPRASD_RELATIONS_COMPRAS")),COMPRASRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_COMPRASD_RELATIONS_COMPRAS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGOSRowParent() As CODIGOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO")),CODIGOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property StockMinimoRowParent() As StockMinimoRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO4")),StockMinimoRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO4"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINEANROCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.LINEANROCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINEANROCOMPRANull()
            Me(Me.tableCOMPRASDETALLE.LINEANROCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.CODPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPRODUCTONull()
            Me(Me.tableCOMPRASDETALLE.CODPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableCOMPRASDETALLE.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.CANTIDADCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADCOMPRANull()
            Me(Me.tableCOMPRASDETALLE.CANTIDADCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOPROMEDIONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.COSTOPROMEDIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOPROMEDIONull()
            Me(Me.tableCOMPRASDETALLE.COSTOPROMEDIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOUNITARIONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.COSTOUNITARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOUNITARIONull()
            Me(Me.tableCOMPRASDETALLE.COSTOUNITARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.IVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVANull()
            Me(Me.tableCOMPRASDETALLE.IVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFACTORPROMEDIONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.FACTORPROMEDIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFACTORPROMEDIONull()
            Me(Me.tableCOMPRASDETALLE.FACTORPROMEDIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCOMPRASDETALLE.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOBRUTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.COSTOBRUTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOBRUTONull()
            Me(Me.tableCOMPRASDETALLE.COSTOBRUTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDENFABRICACIONNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.ORDENFABRICACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDENFABRICACIONNull()
            Me(Me.tableCOMPRASDETALLE.ORDENFABRICACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOPROMEDIOMAESTRONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.COSTOPROMEDIOMAESTROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOPROMEDIOMAESTRONull()
            Me(Me.tableCOMPRASDETALLE.COSTOPROMEDIOMAESTROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOPPMAESTRONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.COSTOPPMAESTROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOPPMAESTRONull()
            Me(Me.tableCOMPRASDETALLE.COSTOPPMAESTROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOMAYNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.PRECIOMAYColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOMAYNull()
            Me(Me.tableCOMPRASDETALLE.PRECIOMAYColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOMINNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.PRECIOMINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOMINNull()
            Me(Me.tableCOMPRASDETALLE.PRECIOMINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINEANUMERONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.LINEANUMEROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINEANUMERONull()
            Me(Me.tableCOMPRASDETALLE.LINEANUMEROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCENTRONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.CODCENTROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCENTRONull()
            Me(Me.tableCOMPRASDETALLE.CODCENTROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableCOMPRASDETALLE.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableCOMPRASDETALLE.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTEGRAVADO10Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO10Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTEGRAVADO10Null()
            Me(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO10Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTEGRAVADO5Null() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO5Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTEGRAVADO5Null()
            Me(Me.tableCOMPRASDETALLE.IMPORTEGRAVADO5Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTEEXENTONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.IMPORTEEXENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTEEXENTONull()
            Me(Me.tableCOMPRASDETALLE.IMPORTEEXENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINTEGRADONull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.INTEGRADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINTEGRADONull()
            Me(Me.tableCOMPRASDETALLE.INTEGRADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOIVANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.TIPOIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOIVANull()
            Me(Me.tableCOMPRASDETALLE.TIPOIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMATERIAPRIMANull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.CODMATERIAPRIMAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMATERIAPRIMANull()
            Me(Me.tableCOMPRASDETALLE.CODMATERIAPRIMAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVIDAUTILNull() As Boolean
            Return Me.IsNull(Me.tableCOMPRASDETALLE.VIDAUTILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVIDAUTILNull()
            Me(Me.tableCOMPRASDETALLE.VIDAUTILColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class FAMILIARow
        Inherits Global.System.Data.DataRow
        
        Private tableFAMILIA As FAMILIADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableFAMILIA = CType(Me.Table,FAMILIADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFAMILIA() As Decimal
            Get
                Return CType(Me(Me.tableFAMILIA.CODFAMILIAColumn),Decimal)
            End Get
            Set
                Me(Me.tableFAMILIA.CODFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMILIA.NUMFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMFAMILIA' in table 'FAMILIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMILIA.NUMFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableFAMILIA.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'FAMILIA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableFAMILIA.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableFAMILIA.NUMFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMFAMILIANull()
            Me(Me.tableFAMILIA.NUMFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableFAMILIA.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableFAMILIA.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTOSRows() As PRODUCTOSRow()
            If (Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_FAMILIA") Is Nothing) Then
                Return New PRODUCTOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_FAMILIA")),PRODUCTOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetStockProductoRows() As StockProductoRow()
            If (Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_FAMILIA1") Is Nothing) Then
                Return New StockProductoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_FAMILIA1")),StockProductoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRODUCTOSRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRODUCTOS As PRODUCTOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRODUCTOS = CType(Me.Table,PRODUCTOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Return CType(Me(Me.tablePRODUCTOS.CODPRODUCTOColumn),Decimal)
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODRUBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODRUBRO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFAMILIA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODFAMILIAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFAMILIA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODLINEA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODLINEAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODLINEA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCOLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.NUMCOLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCOLOR' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.NUMCOLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COL_CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.COL_CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COL_CODEMPRESA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.COL_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMTALLE() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.NUMTALLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMTALLE' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.NUMTALLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAL_CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.TAL_CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAL_CODEMPRESA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.TAL_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIVA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMEDIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODMEDIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMEDIDA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODESTADOPRODUCTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODESTADOPRODUCTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODESTADOPRODUCTO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODESTADOPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODDESCUENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODDESCUENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODDESCUENTO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODDESCUENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPROVEEDOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODPROVEEDORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPROVEEDOR' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODPROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGOBARRA() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODIGOBARRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGOBARRA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIGOBARRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOANTERIOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.COSTOANTERIORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOANTERIOR' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.COSTOANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMINIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.STOCKMINIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMINIMO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCKMINIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMAXIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.STOCKMAXIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMAXIMO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.STOCKMAXIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.FECHAINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAINGRESO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.FECHAINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGOORIGINAL() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODIGOORIGINALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGOORIGINAL' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODIGOORIGINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTOACTIVO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PRODUCTOACTIVOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTOACTIVO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTOACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ULTIMOCOSTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.ULTIMOCOSTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ULTIMOCOSTO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.ULTIMOCOSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PORCENCOMI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PORCENCOMIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORCENCOMI' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PORCENCOMIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOPP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.COSTOPPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOPP' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.COSTOPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAPP() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.FECHAPPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAPP' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.FECHAPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUPP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.USUPPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USUPP' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.USUPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDPRE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.ORDPREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDPRE' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.ORDPREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPREUSUPP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.EMPREUSUPPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMPREUSUPP' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.EMPREUSUPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FACCAM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.FACCAMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FACCAM' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.FACCAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAULTIMACOMPRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.FECHAULTIMACOMPRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAULTIMACOMPRA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.FECHAULTIMACOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.NUMCLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLOR' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.NUMCLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLOR_CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CLOR_CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLOR_CODEMPRESA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CLOR_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESOESPECIFICO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PESOESPECIFICOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESOESPECIFICO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PESOESPECIFICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESOPORMEDIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PESOPORMEDIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESOPORMEDIDA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PESOPORMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPLANTILLA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.CODPLANTILLAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPLANTILLA' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.CODPLANTILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICIO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.SERVICIOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICIO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTADO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.ESTADOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTADO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVAINCLUIDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.IVAINCLUIDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVAINCLUIDO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.IVAINCLUIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PRODUCTOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOSERVICIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PRECIOSERVICIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOSERVICIO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRECIOSERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTOPRODUCIDO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tablePRODUCTOS.PRODUCTOPRODUCIDOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTOPRODUCIDO' in table 'PRODUCTOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRODUCTOS.PRODUCTOPRODUCIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILIARow() As FAMILIARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_FAMILIA")),FAMILIARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_FAMILIA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIDADMEDIDARow() As UNIDADMEDIDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_UNIDADME")),UNIDADMEDIDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_UNIDADME"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROVEEDORRow() As PROVEEDORRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTOS_PROVEEDOR")),PROVEEDORRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTOS_PROVEEDOR"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property RUBRORow() As RUBRORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_LINEA")),RUBRORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_LINEA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LineaRow() As LineaRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_FAMILIA2")),LineaRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_FAMILIA2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODRUBRONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODRUBRONull()
            Me(Me.tablePRODUCTOS.CODRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFAMILIANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFAMILIANull()
            Me(Me.tablePRODUCTOS.CODFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODLINEANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODLINEANull()
            Me(Me.tablePRODUCTOS.CODLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCOLORNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.NUMCOLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCOLORNull()
            Me(Me.tablePRODUCTOS.NUMCOLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOL_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.COL_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOL_CODEMPRESANull()
            Me(Me.tablePRODUCTOS.COL_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMTALLENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.NUMTALLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMTALLENull()
            Me(Me.tablePRODUCTOS.NUMTALLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAL_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.TAL_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAL_CODEMPRESANull()
            Me(Me.tablePRODUCTOS.TAL_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIVANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIVANull()
            Me(Me.tablePRODUCTOS.CODIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMEDIDANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMEDIDANull()
            Me(Me.tablePRODUCTOS.CODMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tablePRODUCTOS.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODESTADOPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODESTADOPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODESTADOPRODUCTONull()
            Me(Me.tablePRODUCTOS.CODESTADOPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODDESCUENTONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODDESCUENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODDESCUENTONull()
            Me(Me.tablePRODUCTOS.CODDESCUENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tablePRODUCTOS.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tablePRODUCTOS.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODPROVEEDORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPROVEEDORNull()
            Me(Me.tablePRODUCTOS.CODPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tablePRODUCTOS.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGOBARRANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODIGOBARRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGOBARRANull()
            Me(Me.tablePRODUCTOS.CODIGOBARRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOANTERIORNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.COSTOANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOANTERIORNull()
            Me(Me.tablePRODUCTOS.COSTOANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMINIMONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.STOCKMINIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMINIMONull()
            Me(Me.tablePRODUCTOS.STOCKMINIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMAXIMONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.STOCKMAXIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMAXIMONull()
            Me(Me.tablePRODUCTOS.STOCKMAXIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAINGRESONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.FECHAINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAINGRESONull()
            Me(Me.tablePRODUCTOS.FECHAINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGOORIGINALNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODIGOORIGINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGOORIGINALNull()
            Me(Me.tablePRODUCTOS.CODIGOORIGINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTOACTIVONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PRODUCTOACTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTOACTIVONull()
            Me(Me.tablePRODUCTOS.PRODUCTOACTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsULTIMOCOSTONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.ULTIMOCOSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetULTIMOCOSTONull()
            Me(Me.tablePRODUCTOS.ULTIMOCOSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPORCENCOMINull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PORCENCOMIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPORCENCOMINull()
            Me(Me.tablePRODUCTOS.PORCENCOMIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tablePRODUCTOS.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOPPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.COSTOPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOPPNull()
            Me(Me.tablePRODUCTOS.COSTOPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAPPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.FECHAPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAPPNull()
            Me(Me.tablePRODUCTOS.FECHAPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSUPPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.USUPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSUPPNull()
            Me(Me.tablePRODUCTOS.USUPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDPRENull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.ORDPREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDPRENull()
            Me(Me.tablePRODUCTOS.ORDPREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMPREUSUPPNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.EMPREUSUPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMPREUSUPPNull()
            Me(Me.tablePRODUCTOS.EMPREUSUPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFACCAMNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.FACCAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFACCAMNull()
            Me(Me.tablePRODUCTOS.FACCAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAULTIMACOMPRANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.FECHAULTIMACOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAULTIMACOMPRANull()
            Me(Me.tablePRODUCTOS.FECHAULTIMACOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCLORNull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.NUMCLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCLORNull()
            Me(Me.tablePRODUCTOS.NUMCLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLOR_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CLOR_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLOR_CODEMPRESANull()
            Me(Me.tablePRODUCTOS.CLOR_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESONull()
            Me(Me.tablePRODUCTOS.PESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESOESPECIFICONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PESOESPECIFICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESOESPECIFICONull()
            Me(Me.tablePRODUCTOS.PESOESPECIFICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESOPORMEDIDANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PESOPORMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESOPORMEDIDANull()
            Me(Me.tablePRODUCTOS.PESOPORMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPLANTILLANull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.CODPLANTILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPLANTILLANull()
            Me(Me.tablePRODUCTOS.CODPLANTILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICIONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.SERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICIONull()
            Me(Me.tablePRODUCTOS.SERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESTADONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESTADONull()
            Me(Me.tablePRODUCTOS.ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVAINCLUIDONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.IVAINCLUIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVAINCLUIDONull()
            Me(Me.tablePRODUCTOS.IVAINCLUIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tablePRODUCTOS.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOSERVICIONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PRECIOSERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOSERVICIONull()
            Me(Me.tablePRODUCTOS.PRECIOSERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTOPRODUCIDONull() As Boolean
            Return Me.IsNull(Me.tablePRODUCTOS.PRODUCTOPRODUCIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTOPRODUCIDONull()
            Me(Me.tablePRODUCTOS.PRODUCTOPRODUCIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCODIGOSRows() As CODIGOSRow()
            If (Me.Table.ChildRelations("FK_CODIGOS_PRODUCTOS") Is Nothing) Then
                Return New CODIGOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CODIGOS_PRODUCTOS")),CODIGOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetStockMinimoRows() As StockMinimoRow()
            If (Me.Table.ChildRelations("FK_CODIGOS_PRODUCTOS4") Is Nothing) Then
                Return New StockMinimoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CODIGOS_PRODUCTOS4")),StockMinimoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class RUBRORow
        Inherits Global.System.Data.DataRow
        
        Private tableRUBRO As RUBRODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableRUBRO = CType(Me.Table,RUBRODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODLINEA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableRUBRO.CODLINEAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODLINEA' in table 'RUBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUBRO.CODLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUBRO.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'RUBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUBRO.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Return CType(Me(Me.tableRUBRO.CODRUBROColumn),Decimal)
            End Get
            Set
                Me(Me.tableRUBRO.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUBRO.NUMRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMRUBRO' in table 'RUBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUBRO.NUMRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableRUBRO.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'RUBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableRUBRO.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODLINEANull() As Boolean
            Return Me.IsNull(Me.tableRUBRO.CODLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODLINEANull()
            Me(Me.tableRUBRO.CODLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableRUBRO.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableRUBRO.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRUBRO.NUMRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMRUBRONull()
            Me(Me.tableRUBRO.NUMRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableRUBRO.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableRUBRO.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTOSRows() As PRODUCTOSRow()
            If (Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_LINEA") Is Nothing) Then
                Return New PRODUCTOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_LINEA")),PRODUCTOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class STOCKDEPOSITORow
        Inherits Global.System.Data.DataRow
        
        Private tableSTOCKDEPOSITO As STOCKDEPOSITODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSTOCKDEPOSITO = CType(Me.Table,STOCKDEPOSITODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSTOCKDEPOSTIPO() As Decimal
            Get
                Return CType(Me(Me.tableSTOCKDEPOSITO.CODSTOCKDEPOSTIPOColumn),Decimal)
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.CODSTOCKDEPOSTIPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKACTUAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.STOCKACTUALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKACTUAL' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.STOCKACTUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMIN() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.STOCKMINColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMIN' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.STOCKMINColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMAX() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.STOCKMAXColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMAX' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.STOCKMAXColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCIUDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.CODCIUDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCIUDAD' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.CODCIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.CODCODIGOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VALOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.VALORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VALOR' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.VALORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODDEPOSITO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKDEPOSITO.CODDEPOSITOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODDEPOSITO' in table 'STOCKDEPOSITO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKDEPOSITO.CODDEPOSITOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableSTOCKDEPOSITO.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableSTOCKDEPOSITO.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKACTUALNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.STOCKACTUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKACTUALNull()
            Me(Me.tableSTOCKDEPOSITO.STOCKACTUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMINNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.STOCKMINColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMINNull()
            Me(Me.tableSTOCKDEPOSITO.STOCKMINColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMAXNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.STOCKMAXColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMAXNull()
            Me(Me.tableSTOCKDEPOSITO.STOCKMAXColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableSTOCKDEPOSITO.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCIUDADNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.CODCIUDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCIUDADNull()
            Me(Me.tableSTOCKDEPOSITO.CODCIUDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableSTOCKDEPOSITO.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVALORNull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.VALORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVALORNull()
            Me(Me.tableSTOCKDEPOSITO.VALORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODDEPOSITONull() As Boolean
            Return Me.IsNull(Me.tableSTOCKDEPOSITO.CODDEPOSITOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODDEPOSITONull()
            Me(Me.tableSTOCKDEPOSITO.CODDEPOSITOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class UNIDADMEDIDARow
        Inherits Global.System.Data.DataRow
        
        Private tableUNIDADMEDIDA As UNIDADMEDIDADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUNIDADMEDIDA = CType(Me.Table,UNIDADMEDIDADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMEDIDA() As Decimal
            Get
                Return CType(Me(Me.tableUNIDADMEDIDA.CODMEDIDAColumn),Decimal)
            End Get
            Set
                Me(Me.tableUNIDADMEDIDA.CODMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableUNIDADMEDIDA.NUMMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMMEDIDA' in table 'UNIDADMEDIDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUNIDADMEDIDA.NUMMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableUNIDADMEDIDA.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'UNIDADMEDIDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUNIDADMEDIDA.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIMBOLO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUNIDADMEDIDA.SIMBOLOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIMBOLO' in table 'UNIDADMEDIDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUNIDADMEDIDA.SIMBOLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableUNIDADMEDIDA.NUMMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMMEDIDANull()
            Me(Me.tableUNIDADMEDIDA.NUMMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableUNIDADMEDIDA.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableUNIDADMEDIDA.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIMBOLONull() As Boolean
            Return Me.IsNull(Me.tableUNIDADMEDIDA.SIMBOLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIMBOLONull()
            Me(Me.tableUNIDADMEDIDA.SIMBOLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTOSRows() As PRODUCTOSRow()
            If (Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_UNIDADME") Is Nothing) Then
                Return New PRODUCTOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_UNIDADME")),PRODUCTOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetStockProductoRows() As StockProductoRow()
            If (Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_UNIDADME1") Is Nothing) Then
                Return New StockProductoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_UNIDADME1")),StockProductoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COSTOPROMEDIONWRow
        Inherits Global.System.Data.DataRow
        
        Private tableCOSTOPROMEDIONW As COSTOPROMEDIONWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOSTOPROMEDIONW = CType(Me.Table,COSTOPROMEDIONWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Cantidad() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.CantidadColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Cantidad' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.CantidadColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TotalUni() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONW.TotalUniColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TotalUni' in table 'COSTOPROMEDIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONW.TotalUniColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableCOSTOPROMEDIONW.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableCOSTOPROMEDIONW.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableCOSTOPROMEDIONW.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableCOSTOPROMEDIONW.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableCOSTOPROMEDIONW.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableCOSTOPROMEDIONW.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableCOSTOPROMEDIONW.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCantidadNull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.CantidadColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCantidadNull()
            Me(Me.tableCOSTOPROMEDIONW.CantidadColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTotalUniNull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONW.TotalUniColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTotalUniNull()
            Me(Me.tableCOSTOPROMEDIONW.TotalUniColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class STOCKACTUALNWRow
        Inherits Global.System.Data.DataRow
        
        Private tableSTOCKACTUALNW As STOCKACTUALNWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSTOCKACTUALNW = CType(Me.Table,STOCKACTUALNWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKACTUALNW.Expr1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'STOCKACTUALNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKACTUALNW.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableSTOCKACTUALNW.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'STOCKACTUALNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSTOCKACTUALNW.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableSTOCKACTUALNW.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableSTOCKACTUALNW.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableSTOCKACTUALNW.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableSTOCKACTUALNW.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PRECIONWRow
        Inherits Global.System.Data.DataRow
        
        Private tablePRECIONW As PRECIONWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePRECIONW = CType(Me.Table,PRECIONWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tablePRECIONW.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'PRECIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRECIONW.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tablePRECIONW.PRECIOVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOVENTA' in table 'PRECIONW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePRECIONW.PRECIOVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tablePRECIONW.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tablePRECIONW.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOVENTANull() As Boolean
            Return Me.IsNull(Me.tablePRECIONW.PRECIOVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOVENTANull()
            Me(Me.tablePRECIONW.PRECIOVENTAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class OrdenPorCategoriaNWRow
        Inherits Global.System.Data.DataRow
        
        Private tableOrdenPorCategoriaNW As OrdenPorCategoriaNWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableOrdenPorCategoriaNW = CType(Me.Table,OrdenPorCategoriaNWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.CATEGORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORIA' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.CATEGORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.LINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINEA' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARCA() As String
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.MARCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARCA' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.MEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDIDA' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICIO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.SERVICIOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICIO' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableOrdenPorCategoriaNW.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'OrdenPorCategoriaNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableOrdenPorCategoriaNW.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableOrdenPorCategoriaNW.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORIANull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.CATEGORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORIANull()
            Me(Me.tableOrdenPorCategoriaNW.CATEGORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINEANull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.LINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINEANull()
            Me(Me.tableOrdenPorCategoriaNW.LINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARCANull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.MARCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARCANull()
            Me(Me.tableOrdenPorCategoriaNW.MARCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.MEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDIDANull()
            Me(Me.tableOrdenPorCategoriaNW.MEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICIONull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.SERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICIONull()
            Me(Me.tableOrdenPorCategoriaNW.SERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableOrdenPorCategoriaNW.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableOrdenPorCategoriaNW.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class LineaRow
        Inherits Global.System.Data.DataRow
        
        Private tableLinea As LineaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableLinea = CType(Me.Table,LineaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODLINEA() As Decimal
            Get
                Return CType(Me(Me.tableLinea.CODLINEAColumn),Decimal)
            End Get
            Set
                Me(Me.tableLinea.CODLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLinea.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFAMILIA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableLinea.CODFAMILIAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFAMILIA' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.CODFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableLinea.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableLinea.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLinea.NUMLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMLINEA' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.NUMLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableLinea.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableLinea.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'Linea' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableLinea.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableLinea.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableLinea.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableLinea.CODFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFAMILIANull()
            Me(Me.tableLinea.CODFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableLinea.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableLinea.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableLinea.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableLinea.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMLINEANull() As Boolean
            Return Me.IsNull(Me.tableLinea.NUMLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMLINEANull()
            Me(Me.tableLinea.NUMLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableLinea.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableLinea.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableLinea.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableLinea.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTOSRows() As PRODUCTOSRow()
            If (Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_FAMILIA2") Is Nothing) Then
                Return New PRODUCTOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTO_RELATIONS_FAMILIA2")),PRODUCTOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ProductoCodigosNWRow
        Inherits Global.System.Data.DataRow
        
        Private tableProductoCodigosNW As ProductoCodigosNWDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableProductoCodigosNW = CType(Me.Table,ProductoCodigosNWDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableProductoCodigosNW.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'ProductoCodigosNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProductoCodigosNW.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCODIGO1() As String
            Get
                Try 
                    Return CType(Me(Me.tableProductoCodigosNW.DESCODIGO1Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCODIGO1' in table 'ProductoCodigosNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProductoCodigosNW.DESCODIGO1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableProductoCodigosNW.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'ProductoCodigosNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProductoCodigosNW.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODLINEA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableProductoCodigosNW.CODLINEAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODLINEA' in table 'ProductoCodigosNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProductoCodigosNW.CODLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableProductoCodigosNW.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'ProductoCodigosNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProductoCodigosNW.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableProductoCodigosNW.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'ProductoCodigosNW' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableProductoCodigosNW.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Return CType(Me(Me.tableProductoCodigosNW.CODCODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableProductoCodigosNW.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableProductoCodigosNW.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableProductoCodigosNW.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCODIGO1Null() As Boolean
            Return Me.IsNull(Me.tableProductoCodigosNW.DESCODIGO1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCODIGO1Null()
            Me(Me.tableProductoCodigosNW.DESCODIGO1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableProductoCodigosNW.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableProductoCodigosNW.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODLINEANull() As Boolean
            Return Me.IsNull(Me.tableProductoCodigosNW.CODLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODLINEANull()
            Me(Me.tableProductoCodigosNW.CODLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableProductoCodigosNW.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableProductoCodigosNW.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableProductoCodigosNW.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableProductoCodigosNW.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MovDetalladoRow
        Inherits Global.System.Data.DataRow
        
        Private tableMovDetallado As MovDetalladoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMovDetallado = CType(Me.Table,MovDetalladoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CANTIDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.CANTIDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CANTIDAD' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.CANTIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOMOVIMIENTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.TIPOMOVIMIENTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOMOVIMIENTO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.TIPOMOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.CODPRODUCTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPRODUCTO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.CODCODIGOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.CODSUCURSALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.FECHAMTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAMTO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.FECHAMTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.STOCKINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKINICIAL' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.STOCKINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.COMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPRA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVOLUCIONCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.DEVOLUCIONCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVOLUCIONCLIENTE' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.DEVOLUCIONCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIAENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.TRANSFERENCIAENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIAENTRADA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.TRANSFERENCIAENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTEENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.AJUSTEENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTEENTRADA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.AJUSTEENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.VENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENTA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENVIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.ENVIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENVIO' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIASALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.TRANSFERENCIASALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIASALIDA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.TRANSFERENCIASALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTESALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.AJUSTESALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTESALIDA' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.AJUSTESALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.Expr1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr2() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.Expr2Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr2' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.Expr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr3() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.Expr3Column),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr3' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.Expr3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr4() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMovDetallado.Expr4Column),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr4' in table 'MovDetallado' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovDetallado.Expr4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGOSRowParent() As CODIGOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MOVIMIENTOS_RELATIONS_CODIGOS")),CODIGOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MOVIMIENTOS_RELATIONS_CODIGOS"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableMovDetallado.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableMovDetallado.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCANTIDADNull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.CANTIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCANTIDADNull()
            Me(Me.tableMovDetallado.CANTIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOMOVIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.TIPOMOVIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOMOVIMIENTONull()
            Me(Me.tableMovDetallado.TIPOMOVIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableMovDetallado.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.CODPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPRODUCTONull()
            Me(Me.tableMovDetallado.CODPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableMovDetallado.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableMovDetallado.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableMovDetallado.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableMovDetallado.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAMTONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.FECHAMTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAMTONull()
            Me(Me.tableMovDetallado.FECHAMTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKINICIALNull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.STOCKINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKINICIALNull()
            Me(Me.tableMovDetallado.STOCKINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.COMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPRANull()
            Me(Me.tableMovDetallado.COMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVOLUCIONCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.DEVOLUCIONCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVOLUCIONCLIENTENull()
            Me(Me.tableMovDetallado.DEVOLUCIONCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIAENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.TRANSFERENCIAENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIAENTRADANull()
            Me(Me.tableMovDetallado.TRANSFERENCIAENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTEENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.AJUSTEENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTEENTRADANull()
            Me(Me.tableMovDetallado.AJUSTEENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENTANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENTANull()
            Me(Me.tableMovDetallado.VENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENVIONull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.ENVIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENVIONull()
            Me(Me.tableMovDetallado.ENVIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIASALIDANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.TRANSFERENCIASALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIASALIDANull()
            Me(Me.tableMovDetallado.TRANSFERENCIASALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTESALIDANull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.AJUSTESALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTESALIDANull()
            Me(Me.tableMovDetallado.AJUSTESALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableMovDetallado.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr2Null() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.Expr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr2Null()
            Me(Me.tableMovDetallado.Expr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr3Null() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.Expr3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr3Null()
            Me(Me.tableMovDetallado.Expr3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableMovDetallado.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr4Null() As Boolean
            Return Me.IsNull(Me.tableMovDetallado.Expr4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr4Null()
            Me(Me.tableMovDetallado.Expr4Column) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MovProductoPorFechaRow
        Inherits Global.System.Data.DataRow
        
        Private tableMovProductoPorFecha As MovProductoPorFechaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMovProductoPorFecha = CType(Me.Table,MovProductoPorFechaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.STOCKINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKINICIAL' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.STOCKINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.COMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPRA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVOLUCIONCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.DEVOLUCIONCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVOLUCIONCLIENTE' in table 'MovProductoPorFecha' is DBNull"& _ 
                            ".", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.DEVOLUCIONCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIAENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.TRANSFERENCIAENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIAENTRADA' in table 'MovProductoPorFecha' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.TRANSFERENCIAENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTEENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.AJUSTEENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTEENTRADA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.AJUSTEENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.VENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENTA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIASALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.TRANSFERENCIASALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIASALIDA' in table 'MovProductoPorFecha' is DBNu"& _ 
                            "ll.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.TRANSFERENCIASALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTESALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.AJUSTESALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTESALIDA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.AJUSTESALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.FECHAMTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAMTO' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.FECHAMTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.CODRUBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODRUBRO' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENTRPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.ENTRPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRPROD' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.ENTRPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.ANULVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULVTA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.ANULVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.SALPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALPROD' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.SALPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.DEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVCOMP' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.DEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.ANULCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULCOMP' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.ANULCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.ANULDEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVCOMP' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.ANULDEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.ANULDEVVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVVTA' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.ANULDEVVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.CODSUCURSALColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoPorFecha.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'MovProductoPorFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoPorFecha.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableMovProductoPorFecha.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableMovProductoPorFecha.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKINICIALNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.STOCKINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKINICIALNull()
            Me(Me.tableMovProductoPorFecha.STOCKINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.COMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPRANull()
            Me(Me.tableMovProductoPorFecha.COMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVOLUCIONCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.DEVOLUCIONCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVOLUCIONCLIENTENull()
            Me(Me.tableMovProductoPorFecha.DEVOLUCIONCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIAENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.TRANSFERENCIAENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIAENTRADANull()
            Me(Me.tableMovProductoPorFecha.TRANSFERENCIAENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTEENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.AJUSTEENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTEENTRADANull()
            Me(Me.tableMovProductoPorFecha.AJUSTEENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENTANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENTANull()
            Me(Me.tableMovProductoPorFecha.VENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIASALIDANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.TRANSFERENCIASALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIASALIDANull()
            Me(Me.tableMovProductoPorFecha.TRANSFERENCIASALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTESALIDANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.AJUSTESALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTESALIDANull()
            Me(Me.tableMovProductoPorFecha.AJUSTESALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableMovProductoPorFecha.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableMovProductoPorFecha.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAMTONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.FECHAMTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAMTONull()
            Me(Me.tableMovProductoPorFecha.FECHAMTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableMovProductoPorFecha.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODRUBRONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.CODRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODRUBRONull()
            Me(Me.tableMovProductoPorFecha.CODRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableMovProductoPorFecha.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENTRPRODNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.ENTRPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENTRPRODNull()
            Me(Me.tableMovProductoPorFecha.ENTRPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULVTANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.ANULVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULVTANull()
            Me(Me.tableMovProductoPorFecha.ANULVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALPRODNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.SALPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALPRODNull()
            Me(Me.tableMovProductoPorFecha.SALPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.DEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVCOMPNull()
            Me(Me.tableMovProductoPorFecha.DEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULCOMPNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.ANULCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULCOMPNull()
            Me(Me.tableMovProductoPorFecha.ANULCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.ANULDEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVCOMPNull()
            Me(Me.tableMovProductoPorFecha.ANULDEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVVTANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.ANULDEVVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVVTANull()
            Me(Me.tableMovProductoPorFecha.ANULDEVVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableMovProductoPorFecha.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoPorFecha.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableMovProductoPorFecha.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class StockXFechaRow
        Inherits Global.System.Data.DataRow
        
        Private tableStockXFecha As StockXFechaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStockXFecha = CType(Me.Table,StockXFechaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKFECHA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockXFecha.STOCKFECHAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKFECHA' in table 'StockXFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockXFecha.STOCKFECHAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockXFecha.CODSUCURSALColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'StockXFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockXFecha.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKFECHANull() As Boolean
            Return Me.IsNull(Me.tableStockXFecha.STOCKFECHAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKFECHANull()
            Me(Me.tableStockXFecha.STOCKFECHAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableStockXFecha.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableStockXFecha.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MovProductoXRangoFechaRow
        Inherits Global.System.Data.DataRow
        
        Private tableMovProductoXRangoFecha As MovProductoXRangoFechaDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMovProductoXRangoFecha = CType(Me.Table,MovProductoXRangoFechaDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.STOCKINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKINICIAL' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.STOCKINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.COMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COMPRA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.COMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVOLUCIONCLIENTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.DEVOLUCIONCLIENTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVOLUCIONCLIENTE' in table 'MovProductoXRangoFecha' is DBN"& _ 
                            "ull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.DEVOLUCIONCLIENTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIAENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.TRANSFERENCIAENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIAENTRADA' in table 'MovProductoXRangoFecha' is "& _ 
                            "DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.TRANSFERENCIAENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTEENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.AJUSTEENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTEENTRADA' in table 'MovProductoXRangoFecha' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.AJUSTEENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.VENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VENTA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.VENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIASALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.TRANSFERENCIASALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIASALIDA' in table 'MovProductoXRangoFecha' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.TRANSFERENCIASALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTESALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.AJUSTESALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTESALIDA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.AJUSTESALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.CODRUBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODRUBRO' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENTRPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.ENTRPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRPROD' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.ENTRPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.ANULVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULVTA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.ANULVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALPROD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.SALPRODColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALPROD' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.SALPRODColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.DEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DEVCOMP' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.DEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.ANULCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULCOMP' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.ANULCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVCOMP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.ANULDEVCOMPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVCOMP' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.ANULDEVCOMPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ANULDEVVTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.ANULDEVVTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ANULDEVVTA' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.ANULDEVVTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.CODSUCURSALColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableMovProductoXRangoFecha.CODCODIGOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCODIGO' in table 'MovProductoXRangoFecha' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMovProductoXRangoFecha.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableMovProductoXRangoFecha.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableMovProductoXRangoFecha.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKINICIALNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.STOCKINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKINICIALNull()
            Me(Me.tableMovProductoXRangoFecha.STOCKINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.COMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOMPRANull()
            Me(Me.tableMovProductoXRangoFecha.COMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVOLUCIONCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.DEVOLUCIONCLIENTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVOLUCIONCLIENTENull()
            Me(Me.tableMovProductoXRangoFecha.DEVOLUCIONCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIAENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.TRANSFERENCIAENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIAENTRADANull()
            Me(Me.tableMovProductoXRangoFecha.TRANSFERENCIAENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTEENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.AJUSTEENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTEENTRADANull()
            Me(Me.tableMovProductoXRangoFecha.AJUSTEENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVENTANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.VENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVENTANull()
            Me(Me.tableMovProductoXRangoFecha.VENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIASALIDANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.TRANSFERENCIASALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIASALIDANull()
            Me(Me.tableMovProductoXRangoFecha.TRANSFERENCIASALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTESALIDANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.AJUSTESALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTESALIDANull()
            Me(Me.tableMovProductoXRangoFecha.AJUSTESALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableMovProductoXRangoFecha.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableMovProductoXRangoFecha.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODRUBRONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.CODRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODRUBRONull()
            Me(Me.tableMovProductoXRangoFecha.CODRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableMovProductoXRangoFecha.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableMovProductoXRangoFecha.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENTRPRODNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.ENTRPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENTRPRODNull()
            Me(Me.tableMovProductoXRangoFecha.ENTRPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULVTANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.ANULVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULVTANull()
            Me(Me.tableMovProductoXRangoFecha.ANULVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALPRODNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.SALPRODColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALPRODNull()
            Me(Me.tableMovProductoXRangoFecha.SALPRODColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.DEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDEVCOMPNull()
            Me(Me.tableMovProductoXRangoFecha.DEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULCOMPNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.ANULCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULCOMPNull()
            Me(Me.tableMovProductoXRangoFecha.ANULCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVCOMPNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.ANULDEVCOMPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVCOMPNull()
            Me(Me.tableMovProductoXRangoFecha.ANULDEVCOMPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsANULDEVVTANull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.ANULDEVVTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetANULDEVVTANull()
            Me(Me.tableMovProductoXRangoFecha.ANULDEVVTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableMovProductoXRangoFecha.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMovProductoXRangoFecha.CODCODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCODIGONull()
            Me(Me.tableMovProductoXRangoFecha.CODCODIGOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class PROVEEDORRow
        Inherits Global.System.Data.DataRow
        
        Private tablePROVEEDOR As PROVEEDORDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tablePROVEEDOR = CType(Me.Table,PROVEEDORDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPROVEEDOR() As Decimal
            Get
                Return CType(Me(Me.tablePROVEEDOR.CODPROVEEDORColumn),Decimal)
            End Get
            Set
                Me(Me.tablePROVEEDOR.CODPROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROVEEDOR() As String
            Get
                Try 
                    Return CType(Me(Me.tablePROVEEDOR.PROVEEDORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PROVEEDOR' in table 'PROVEEDOR' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tablePROVEEDOR.PROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tablePROVEEDOR.PROVEEDORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPROVEEDORNull()
            Me(Me.tablePROVEEDOR.PROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCOMPRASRows() As COMPRASRow()
            If (Me.Table.ChildRelations("FK_COMPRAS_RELATIONS_PROVEEDO") Is Nothing) Then
                Return New COMPRASRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_COMPRAS_RELATIONS_PROVEEDO")),COMPRASRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetPRODUCTOSRows() As PRODUCTOSRow()
            If (Me.Table.ChildRelations("FK_PRODUCTOS_PROVEEDOR") Is Nothing) Then
                Return New PRODUCTOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTOS_PROVEEDOR")),PRODUCTOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetStockProductoRows() As StockProductoRow()
            If (Me.Table.ChildRelations("FK_PRODUCTOS_PROVEEDOR1") Is Nothing) Then
                Return New StockProductoRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_PRODUCTOS_PROVEEDOR1")),StockProductoRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class StockMinimoRow
        Inherits Global.System.Data.DataRow
        
        Private tableStockMinimo As StockMinimoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStockMinimo = CType(Me.Table,StockMinimoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Decimal
            Get
                Return CType(Me(Me.tableStockMinimo.CODCODIGOColumn),Decimal)
            End Get
            Set
                Me(Me.tableStockMinimo.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Return CType(Me(Me.tableStockMinimo.CODPRODUCTOColumn),Decimal)
            End Get
            Set
                Me(Me.tableStockMinimo.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CATEGORIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.CATEGORIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CATEGORIA' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.CATEGORIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.LINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LINEA' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.LINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MARCA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.MARCAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MARCA' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.MARCAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMINIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.STOCKMINIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMINIMO' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.STOCKMINIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMAXIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.STOCKMAXIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMAXIMO' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.STOCKMAXIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKACTUAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.STOCKACTUALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKACTUAL' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.STOCKACTUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.MEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MEDIDA' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.MEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockMinimo.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'StockMinimo' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockMinimo.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTOSRow() As PRODUCTOSRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CODIGOS_PRODUCTOS4")),PRODUCTOSRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CODIGOS_PRODUCTOS4"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableStockMinimo.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCATEGORIANull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.CATEGORIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCATEGORIANull()
            Me(Me.tableStockMinimo.CATEGORIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLINEANull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.LINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLINEANull()
            Me(Me.tableStockMinimo.LINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMARCANull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.MARCAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMARCANull()
            Me(Me.tableStockMinimo.MARCAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMINIMONull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.STOCKMINIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMINIMONull()
            Me(Me.tableStockMinimo.STOCKMINIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMAXIMONull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.STOCKMAXIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMAXIMONull()
            Me(Me.tableStockMinimo.STOCKMAXIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKACTUALNull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.STOCKACTUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKACTUALNull()
            Me(Me.tableStockMinimo.STOCKACTUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.MEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetMEDIDANull()
            Me(Me.tableStockMinimo.MEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableStockMinimo.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableStockMinimo.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableStockMinimo.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCOMPRASDETALLERows() As COMPRASDETALLERow()
            If (Me.Table.ChildRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO4") Is Nothing) Then
                Return New COMPRASDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_COMPRASDETALLE_CODIGOPRODUCTO4")),COMPRASDETALLERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class StockProductoRow
        Inherits Global.System.Data.DataRow
        
        Private tableStockProducto As StockProductoDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableStockProducto = CType(Me.Table,StockProductoDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKACTUAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.STOCKACTUALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKACTUAL' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.STOCKACTUALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.Expr1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr1' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.Expr1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.Expr2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr2' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.Expr2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr3() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.Expr3Column),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr3' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.Expr3Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPRODUCTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODPRODUCTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPRODUCTO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODRUBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODRUBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODRUBRO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFAMILIA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODFAMILIAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFAMILIA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODLINEA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODLINEAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODLINEA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCOLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.NUMCOLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCOLOR' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.NUMCOLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMTALLE() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.NUMTALLEColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMTALLE' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.NUMTALLEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TAL_CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.TAL_CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TAL_CODEMPRESA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.TAL_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIVA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODIVAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIVA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODIVAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMEDIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODMEDIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMEDIDA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODESTADOPRODUCTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODESTADOPRODUCTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODESTADOPRODUCTO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODESTADOPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODDESCUENTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODDESCUENTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODDESCUENTO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODDESCUENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPROVEEDOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODPROVEEDORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPROVEEDOR' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODPROVEEDORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGOBARRA() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODIGOBARRAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGOBARRA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODIGOBARRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOANTERIOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.COSTOANTERIORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOANTERIOR' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.COSTOANTERIORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMINIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.STOCKMINIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMINIMO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.STOCKMINIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKMAXIMO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.STOCKMAXIMOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKMAXIMO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.STOCKMAXIMOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.FECHAINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAINGRESO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.FECHAINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGOORIGINAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODIGOORIGINALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGOORIGINAL' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODIGOORIGINALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTOACTIVO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PRODUCTOACTIVOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTOACTIVO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PRODUCTOACTIVOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ULTIMOCOSTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.ULTIMOCOSTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ULTIMOCOSTO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.ULTIMOCOSTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PORCENCOMI() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PORCENCOMIColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORCENCOMI' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PORCENCOMIColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMAGEN() As Byte()
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.IMAGENColumn),Byte())
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.IMAGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COSTOPP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.COSTOPPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COSTOPP' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.COSTOPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAPP() As Date
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.FECHAPPColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAPP' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.FECHAPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ORDPRE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.ORDPREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ORDPRE' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.ORDPREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FACCAM() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.FACCAMColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FACCAM' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.FACCAMColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAULTIMACOMPRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.FECHAULTIMACOMPRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAULTIMACOMPRA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.FECHAULTIMACOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCLOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.NUMCLORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLOR' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.NUMCLORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CLOR_CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CLOR_CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CLOR_CODEMPRESA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CLOR_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESOESPECIFICO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PESOESPECIFICOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESOESPECIFICO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PESOESPECIFICOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PESOPORMEDIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PESOPORMEDIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PESOPORMEDIDA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PESOPORMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPLANTILLA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODPLANTILLAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPLANTILLA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODPLANTILLAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SERVICIO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.SERVICIOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SERVICIO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.SERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ESTADO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.ESTADOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ESTADO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.ESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IVAINCLUIDO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.IVAINCLUIDOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IVAINCLUIDO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.IVAINCLUIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Expr4() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.Expr4Column),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Expr4' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.Expr4Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRECIOSERVICIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PRECIOSERVICIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRECIOSERVICIO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PRECIOSERVICIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTOPRODUCIDO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.PRODUCTOPRODUCIDOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTOPRODUCIDO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.PRODUCTOPRODUCIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODDEPOSITO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODDEPOSITOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODDEPOSITO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODDEPOSITOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCODIGO() As Integer
            Get
                Return CType(Me(Me.tableStockProducto.CODCODIGOColumn),Integer)
            End Get
            Set
                Me(Me.tableStockProducto.CODCODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COL_CODEMPRESA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.COL_CODEMPRESAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COL_CODEMPRESA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.COL_CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODUSUARIOColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.CODEMPRESAColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUPP() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.USUPPColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USUPP' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.USUPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMPREUSUPP() As Integer
            Get
                Try 
                    Return CType(Me(Me.tableStockProducto.EMPREUSUPPColumn),Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMPREUSUPP' in table 'StockProducto' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableStockProducto.EMPREUSUPPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FAMILIARow() As FAMILIARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_FAMILIA1")),FAMILIARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_FAMILIA1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UNIDADMEDIDARow() As UNIDADMEDIDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_UNIDADME1")),UNIDADMEDIDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTO_RELATIONS_UNIDADME1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PROVEEDORRow() As PROVEEDORRow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_PRODUCTOS_PROVEEDOR1")),PROVEEDORRow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_PRODUCTOS_PROVEEDOR1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableStockProducto.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableStockProducto.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableStockProducto.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableStockProducto.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKACTUALNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.STOCKACTUALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKACTUALNull()
            Me(Me.tableStockProducto.STOCKACTUALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableStockProducto.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableStockProducto.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableStockProducto.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr1Null() As Boolean
            Return Me.IsNull(Me.tableStockProducto.Expr1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr1Null()
            Me(Me.tableStockProducto.Expr1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr2Null() As Boolean
            Return Me.IsNull(Me.tableStockProducto.Expr2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr2Null()
            Me(Me.tableStockProducto.Expr2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr3Null() As Boolean
            Return Me.IsNull(Me.tableStockProducto.Expr3Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr3Null()
            Me(Me.tableStockProducto.Expr3Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPRODUCTONull()
            Me(Me.tableStockProducto.CODPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODRUBRONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODRUBRONull()
            Me(Me.tableStockProducto.CODRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFAMILIANull()
            Me(Me.tableStockProducto.CODFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODLINEANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODLINEANull()
            Me(Me.tableStockProducto.CODLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCOLORNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.NUMCOLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCOLORNull()
            Me(Me.tableStockProducto.NUMCOLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMTALLENull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.NUMTALLEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMTALLENull()
            Me(Me.tableStockProducto.NUMTALLEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTAL_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.TAL_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTAL_CODEMPRESANull()
            Me(Me.tableStockProducto.TAL_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIVANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODIVAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIVANull()
            Me(Me.tableStockProducto.CODIVAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMEDIDANull()
            Me(Me.tableStockProducto.CODMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableStockProducto.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODESTADOPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODESTADOPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODESTADOPRODUCTONull()
            Me(Me.tableStockProducto.CODESTADOPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODDESCUENTONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODDESCUENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODDESCUENTONull()
            Me(Me.tableStockProducto.CODDESCUENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPROVEEDORNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODPROVEEDORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPROVEEDORNull()
            Me(Me.tableStockProducto.CODPROVEEDORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableStockProducto.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGOBARRANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODIGOBARRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGOBARRANull()
            Me(Me.tableStockProducto.CODIGOBARRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOANTERIORNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.COSTOANTERIORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOANTERIORNull()
            Me(Me.tableStockProducto.COSTOANTERIORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMINIMONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.STOCKMINIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMINIMONull()
            Me(Me.tableStockProducto.STOCKMINIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKMAXIMONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.STOCKMAXIMOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKMAXIMONull()
            Me(Me.tableStockProducto.STOCKMAXIMOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAINGRESONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.FECHAINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAINGRESONull()
            Me(Me.tableStockProducto.FECHAINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGOORIGINALNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODIGOORIGINALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGOORIGINALNull()
            Me(Me.tableStockProducto.CODIGOORIGINALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTOACTIVONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PRODUCTOACTIVOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTOACTIVONull()
            Me(Me.tableStockProducto.PRODUCTOACTIVOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsULTIMOCOSTONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.ULTIMOCOSTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetULTIMOCOSTONull()
            Me(Me.tableStockProducto.ULTIMOCOSTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPORCENCOMINull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PORCENCOMIColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPORCENCOMINull()
            Me(Me.tableStockProducto.PORCENCOMIColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMAGENNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.IMAGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMAGENNull()
            Me(Me.tableStockProducto.IMAGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableStockProducto.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOSTOPPNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.COSTOPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOSTOPPNull()
            Me(Me.tableStockProducto.COSTOPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAPPNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.FECHAPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAPPNull()
            Me(Me.tableStockProducto.FECHAPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsORDPRENull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.ORDPREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetORDPRENull()
            Me(Me.tableStockProducto.ORDPREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFACCAMNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.FACCAMColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFACCAMNull()
            Me(Me.tableStockProducto.FACCAMColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAULTIMACOMPRANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.FECHAULTIMACOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAULTIMACOMPRANull()
            Me(Me.tableStockProducto.FECHAULTIMACOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCLORNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.NUMCLORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCLORNull()
            Me(Me.tableStockProducto.NUMCLORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCLOR_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CLOR_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCLOR_CODEMPRESANull()
            Me(Me.tableStockProducto.CLOR_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESONull()
            Me(Me.tableStockProducto.PESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESOESPECIFICONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PESOESPECIFICOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESOESPECIFICONull()
            Me(Me.tableStockProducto.PESOESPECIFICOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPESOPORMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PESOPORMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPESOPORMEDIDANull()
            Me(Me.tableStockProducto.PESOPORMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPLANTILLANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODPLANTILLAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPLANTILLANull()
            Me(Me.tableStockProducto.CODPLANTILLAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSERVICIONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.SERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSERVICIONull()
            Me(Me.tableStockProducto.SERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsESTADONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.ESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetESTADONull()
            Me(Me.tableStockProducto.ESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIVAINCLUIDONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.IVAINCLUIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIVAINCLUIDONull()
            Me(Me.tableStockProducto.IVAINCLUIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsExpr4Null() As Boolean
            Return Me.IsNull(Me.tableStockProducto.Expr4Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetExpr4Null()
            Me(Me.tableStockProducto.Expr4Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRECIOSERVICIONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PRECIOSERVICIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRECIOSERVICIONull()
            Me(Me.tableStockProducto.PRECIOSERVICIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTOPRODUCIDONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.PRODUCTOPRODUCIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTOPRODUCIDONull()
            Me(Me.tableStockProducto.PRODUCTOPRODUCIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODDEPOSITONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODDEPOSITOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODDEPOSITONull()
            Me(Me.tableStockProducto.CODDEPOSITOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOL_CODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.COL_CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOL_CODEMPRESANull()
            Me(Me.tableStockProducto.COL_CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableStockProducto.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableStockProducto.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSUPPNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.USUPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSUPPNull()
            Me(Me.tableStockProducto.USUPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMPREUSUPPNull() As Boolean
            Return Me.IsNull(Me.tableStockProducto.EMPREUSUPPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMPREUSUPPNull()
            Me(Me.tableStockProducto.EMPREUSUPPColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCODIGOSRows() As CODIGOSRow()
            If (Me.Table.ChildRelations("FK_CODIGOS_PRODUCTOS5") Is Nothing) Then
                Return New CODIGOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CODIGOS_PRODUCTOS5")),CODIGOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MOVIMIENTOPRODUCTODETRow
        Inherits Global.System.Data.DataRow
        
        Private tableMOVIMIENTOPRODUCTODET As MOVIMIENTOPRODUCTODETDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMOVIMIENTOPRODUCTODET = CType(Me.Table,MOVIMIENTOPRODUCTODETDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.FECHAMTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAMTO' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.FECHAMTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.STOCKINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKINICIAL' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.STOCKINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENTRADAPORCOMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORCOMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRADAPORCOMPRA' in table 'MOVIMIENTOPRODUCTODET' is DBNul"& _ 
                            "l.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENTRADAPORDEVOLUCION() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORDEVOLUCIONColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENTRADAPORDEVOLUCION' in table 'MOVIMIENTOPRODUCTODET' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORDEVOLUCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIAENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIAENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIAENTRADA' in table 'MOVIMIENTOPRODUCTODET' is D"& _ 
                            "BNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIAENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property Entrada_Por_Anulacion_de_Venta() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.Entrada_Por_Anulacion_de_VentaColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'Entrada Por Anulacion de Venta' in table 'MOVIMIENTOPRODUCT"& _ 
                            "ODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.Entrada_Por_Anulacion_de_VentaColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTEENTRADA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.AJUSTEENTRADAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTEENTRADA' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.AJUSTEENTRADAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALIDAPORVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.SALIDAPORVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALIDAPORVENTA' in table 'MOVIMIENTOPRODUCTODET' is DBNull."& _ 
                            "", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.SALIDAPORVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ENVIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.ENVIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'ENVIO' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.ENVIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TRANSFERENCIASALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIASALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TRANSFERENCIASALIDA' in table 'MOVIMIENTOPRODUCTODET' is DB"& _ 
                            "Null.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIASALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property AJUSTESALIDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.AJUSTESALIDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'AJUSTESALIDA' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.AJUSTESALIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OTROS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.OTROSColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OTROS' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.OTROSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESPRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.DESPRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESPRODUCTO' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.DESPRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableMOVIMIENTOPRODUCTODET.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'MOVIMIENTOPRODUCTODET' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMOVIMIENTOPRODUCTODET.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAMTONull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.FECHAMTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAMTONull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.FECHAMTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKINICIALNull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.STOCKINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKINICIALNull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.STOCKINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENTRADAPORCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENTRADAPORCOMPRANull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENTRADAPORDEVOLUCIONNull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORDEVOLUCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENTRADAPORDEVOLUCIONNull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.ENTRADAPORDEVOLUCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIAENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIAENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIAENTRADANull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIAENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEntrada_Por_Anulacion_de_VentaNull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.Entrada_Por_Anulacion_de_VentaColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEntrada_Por_Anulacion_de_VentaNull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.Entrada_Por_Anulacion_de_VentaColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTEENTRADANull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.AJUSTEENTRADAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTEENTRADANull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.AJUSTEENTRADAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALIDAPORVENTANull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.SALIDAPORVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALIDAPORVENTANull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.SALIDAPORVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsENVIONull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.ENVIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetENVIONull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.ENVIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTRANSFERENCIASALIDANull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIASALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTRANSFERENCIASALIDANull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.TRANSFERENCIASALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAJUSTESALIDANull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.AJUSTESALIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAJUSTESALIDANull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.AJUSTESALIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOTROSNull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.OTROSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOTROSNull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.OTROSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.DESPRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESPRODUCTONull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.DESPRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableMOVIMIENTOPRODUCTODET.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableMOVIMIENTOPRODUCTODET.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COSTOPROMEDIONWSUCRow
        Inherits Global.System.Data.DataRow
        
        Private tableCOSTOPROMEDIONWSUC As COSTOPROMEDIONWSUCDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOSTOPROMEDIONWSUC = CType(Me.Table,COSTOPROMEDIONWSUCDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFAMILIA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.DESFAMILIAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFAMILIA' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.DESFAMILIAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESLINEA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.DESLINEAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESLINEA' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.DESLINEAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESRUBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.DESRUBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESRUBRO' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.DESRUBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMEDIDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.DESMEDIDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMEDIDA' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.DESMEDIDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODIGO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.CODIGOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODIGO' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.CODIGOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRODUCTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.PRODUCTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRODUCTO' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.PRODUCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property STOCKACTUALDEP() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOSTOPROMEDIONWSUC.STOCKACTUALDEPColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'STOCKACTUALDEP' in table 'COSTOPROMEDIONWSUC' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOSTOPROMEDIONWSUC.STOCKACTUALDEPColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFAMILIANull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.DESFAMILIAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFAMILIANull()
            Me(Me.tableCOSTOPROMEDIONWSUC.DESFAMILIAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESLINEANull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.DESLINEAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESLINEANull()
            Me(Me.tableCOSTOPROMEDIONWSUC.DESLINEAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESRUBRONull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.DESRUBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESRUBRONull()
            Me(Me.tableCOSTOPROMEDIONWSUC.DESRUBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMEDIDANull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.DESMEDIDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMEDIDANull()
            Me(Me.tableCOSTOPROMEDIONWSUC.DESMEDIDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODIGONull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.CODIGOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODIGONull()
            Me(Me.tableCOSTOPROMEDIONWSUC.CODIGOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableCOSTOPROMEDIONWSUC.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRODUCTONull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.PRODUCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRODUCTONull()
            Me(Me.tableCOSTOPROMEDIONWSUC.PRODUCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSTOCKACTUALDEPNull() As Boolean
            Return Me.IsNull(Me.tableCOSTOPROMEDIONWSUC.STOCKACTUALDEPColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSTOCKACTUALDEPNull()
            Me(Me.tableCOSTOPROMEDIONWSUC.STOCKACTUALDEPColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class SUCURSALRow
        Inherits Global.System.Data.DataRow
        
        Private tableSUCURSAL As SUCURSALDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableSUCURSAL = CType(Me.Table,SUCURSALDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUCURSAL.DESSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESSUCURSAL' in table 'SUCURSAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUCURSAL.DESSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOSUCURSAL() As String
            Get
                Try 
                    Return CType(Me(Me.tableSUCURSAL.TIPOSUCURSALColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOSUCURSAL' in table 'SUCURSAL' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableSUCURSAL.TIPOSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Integer
            Get
                Return CType(Me(Me.tableSUCURSAL.CODSUCURSALColumn),Integer)
            End Get
            Set
                Me(Me.tableSUCURSAL.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableSUCURSAL.DESSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESSUCURSALNull()
            Me(Me.tableSUCURSAL.DESSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableSUCURSAL.TIPOSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOSUCURSALNull()
            Me(Me.tableSUCURSAL.TIPOSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CODIGOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CODIGOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CODIGOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CODIGOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class COMPRASRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COMPRASRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As COMPRASRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As COMPRASRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class COMPRASDETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COMPRASDETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As COMPRASDETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As COMPRASDETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class FAMILIARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As FAMILIARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As FAMILIARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As FAMILIARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PRODUCTOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRODUCTOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PRODUCTOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PRODUCTOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class RUBRORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As RUBRORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As RUBRORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As RUBRORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class STOCKDEPOSITORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As STOCKDEPOSITORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As STOCKDEPOSITORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As STOCKDEPOSITORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class UNIDADMEDIDARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As UNIDADMEDIDARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As UNIDADMEDIDARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As UNIDADMEDIDARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class COSTOPROMEDIONWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COSTOPROMEDIONWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As COSTOPROMEDIONWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As COSTOPROMEDIONWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class STOCKACTUALNWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As STOCKACTUALNWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As STOCKACTUALNWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As STOCKACTUALNWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PRECIONWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PRECIONWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PRECIONWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PRECIONWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class OrdenPorCategoriaNWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As OrdenPorCategoriaNWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As OrdenPorCategoriaNWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As OrdenPorCategoriaNWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class LineaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As LineaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As LineaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As LineaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class ProductoCodigosNWRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As ProductoCodigosNWRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As ProductoCodigosNWRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As ProductoCodigosNWRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MovDetalladoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MovDetalladoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MovDetalladoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MovDetalladoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MovProductoPorFechaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MovProductoPorFechaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MovProductoPorFechaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MovProductoPorFechaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class StockXFechaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As StockXFechaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As StockXFechaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As StockXFechaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MovProductoXRangoFechaRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MovProductoXRangoFechaRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MovProductoXRangoFechaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MovProductoXRangoFechaRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class PROVEEDORRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As PROVEEDORRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As PROVEEDORRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As PROVEEDORRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class StockMinimoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As StockMinimoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As StockMinimoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As StockMinimoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class StockProductoRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As StockProductoRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As StockProductoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As StockProductoRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MOVIMIENTOPRODUCTODETRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MOVIMIENTOPRODUCTODETRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MOVIMIENTOPRODUCTODETRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MOVIMIENTOPRODUCTODETRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class COSTOPROMEDIONWSUCRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COSTOPROMEDIONWSUCRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As COSTOPROMEDIONWSUCRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As COSTOPROMEDIONWSUCRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class SUCURSALRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As SUCURSALRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As SUCURSALRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As SUCURSALRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DSReporteProductoNWTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CODIGOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CODIGOS"
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("DESCODIGO1", "DESCODIGO1")
            tableMapping.ColumnMappings.Add("DESCODIGO2", "DESCODIGO2")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRECIO", "PRECIO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("PESABLE", "PESABLE")
            tableMapping.ColumnMappings.Add("VENCIMIENTO", "VENCIMIENTO")
            tableMapping.ColumnMappings.Add("BALANZA", "BALANZA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[CODIGOS] WHERE (([CODCODIGO] = @Original_CODCODIGO) AND ([CODP"& _ 
                "RODUCTO] = @Original_CODPRODUCTO) AND ((@IsNull_DESCODIGO1 = 1 AND [DESCODIGO1] "& _ 
                "IS NULL) OR ([DESCODIGO1] = @Original_DESCODIGO1)) AND ((@IsNull_DESCODIGO2 = 1 "& _ 
                "AND [DESCODIGO2] IS NULL) OR ([DESCODIGO2] = @Original_DESCODIGO2)) AND ((@IsNul"& _ 
                "l_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUAR"& _ 
                "IO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @"& _ 
                "Original_CODEMPRESA)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA"& _ 
                "] = @Original_FECGRA)) AND ((@IsNull_CODIGO = 1 AND [CODIGO] IS NULL) OR ([CODIG"& _ 
                "O] = @Original_CODIGO)) AND ((@IsNull_PRECIO = 1 AND [PRECIO] IS NULL) OR ([PREC"& _ 
                "IO] = @Original_PRECIO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR"& _ 
                " ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_PESABLE = 1 AND [PESABLE] IS"& _ 
                " NULL) OR ([PESABLE] = @Original_PESABLE)) AND ((@IsNull_VENCIMIENTO = 1 AND [VE"& _ 
                "NCIMIENTO] IS NULL) OR ([VENCIMIENTO] = @Original_VENCIMIENTO)) AND ((@IsNull_BA"& _ 
                "LANZA = 1 AND [BALANZA] IS NULL) OR ([BALANZA] = @Original_BALANZA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCODIGO1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCODIGO1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCODIGO2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCODIGO2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESABLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VENCIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENCIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VENCIMIENTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENCIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BALANZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BALANZA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BALANZA", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BALANZA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[CODIGOS] ([CODPRODUCTO], [DESCODIGO1], [DESCODIGO2], [CODUSUAR"& _ 
                "IO], [CODEMPRESA], [FECGRA], [CODIGO], [PRECIO], [CODMONEDA], [PESABLE], [VENCIM"& _ 
                "IENTO], [BALANZA]) VALUES (@CODPRODUCTO, @DESCODIGO1, @DESCODIGO2, @CODUSUARIO, "& _ 
                "@CODEMPRESA, @FECGRA, @CODIGO, @PRECIO, @CODMONEDA, @PESABLE, @VENCIMIENTO, @BAL"& _ 
                "ANZA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODCODIGO, CODPRODUCTO, DESCODIGO1, DESCODIGO2, CODUSUARIO, CODEM"& _ 
                "PRESA, FECGRA, CODIGO, PRECIO, CODMONEDA, PESABLE, VENCIMIENTO, BALANZA FROM COD"& _ 
                "IGOS WHERE (CODCODIGO = SCOPE_IDENTITY()) AND (CODPRODUCTO = @CODPRODUCTO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCODIGO1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCODIGO2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESABLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VENCIMIENTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENCIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BALANZA", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BALANZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[CODIGOS] SET [CODPRODUCTO] = @CODPRODUCTO, [DESCODIGO1] = @DESCODIG"& _ 
                "O1, [DESCODIGO2] = @DESCODIGO2, [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = @CODE"& _ 
                "MPRESA, [FECGRA] = @FECGRA, [CODIGO] = @CODIGO, [PRECIO] = @PRECIO, [CODMONEDA] "& _ 
                "= @CODMONEDA, [PESABLE] = @PESABLE, [VENCIMIENTO] = @VENCIMIENTO, [BALANZA] = @B"& _ 
                "ALANZA WHERE (([CODCODIGO] = @Original_CODCODIGO) AND ([CODPRODUCTO] = @Original"& _ 
                "_CODPRODUCTO) AND ((@IsNull_DESCODIGO1 = 1 AND [DESCODIGO1] IS NULL) OR ([DESCOD"& _ 
                "IGO1] = @Original_DESCODIGO1)) AND ((@IsNull_DESCODIGO2 = 1 AND [DESCODIGO2] IS "& _ 
                "NULL) OR ([DESCODIGO2] = @Original_DESCODIGO2)) AND ((@IsNull_CODUSUARIO = 1 AND"& _ 
                " [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_C"& _ 
                "ODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)"& _ 
                ") AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA"& _ 
                ")) AND ((@IsNull_CODIGO = 1 AND [CODIGO] IS NULL) OR ([CODIGO] = @Original_CODIG"& _ 
                "O)) AND ((@IsNull_PRECIO = 1 AND [PRECIO] IS NULL) OR ([PRECIO] = @Original_PREC"& _ 
                "IO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = @Ori"& _ 
                "ginal_CODMONEDA)) AND ((@IsNull_PESABLE = 1 AND [PESABLE] IS NULL) OR ([PESABLE]"& _ 
                " = @Original_PESABLE)) AND ((@IsNull_VENCIMIENTO = 1 AND [VENCIMIENTO] IS NULL) "& _ 
                "OR ([VENCIMIENTO] = @Original_VENCIMIENTO)) AND ((@IsNull_BALANZA = 1 AND [BALAN"& _ 
                "ZA] IS NULL) OR ([BALANZA] = @Original_BALANZA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODCODIGO, CODPRODUCT"& _ 
                "O, DESCODIGO1, DESCODIGO2, CODUSUARIO, CODEMPRESA, FECGRA, CODIGO, PRECIO, CODMO"& _ 
                "NEDA, PESABLE, VENCIMIENTO, BALANZA FROM CODIGOS WHERE (CODCODIGO = @CODCODIGO) "& _ 
                "AND (CODPRODUCTO = @CODPRODUCTO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCODIGO1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCODIGO2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESABLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VENCIMIENTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENCIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BALANZA", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BALANZA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCODIGO1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCODIGO1", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCODIGO2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCODIGO2", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCODIGO2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESABLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VENCIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENCIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VENCIMIENTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VENCIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BALANZA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BALANZA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BALANZA", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BALANZA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CODCODIGO, CODPRODUCTO, DESCODIGO1, DESCODIGO2, CODUSUARIO, CODEMPRESA, FE"& _ 
                "CGRA, CODIGO, PRECIO, CODMONEDA, PESABLE, VENCIMIENTO, BALANZA FROM dbo.CODIGOS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.CODIGOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.CODIGOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.CODIGOSDataTable = New DSReporteProductoNW.CODIGOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.CODIGOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "CODIGOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODCODIGO As Decimal, ByVal Original_CODPRODUCTO As Decimal, ByVal Original_DESCODIGO1 As String, ByVal Original_DESCODIGO2 As String, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_CODIGO As String, ByVal Original_PRECIO As Global.System.Nullable(Of Decimal), ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal), ByVal Original_PESABLE As Global.System.Nullable(Of Byte), ByVal Original_VENCIMIENTO As Global.System.Nullable(Of Byte), ByVal Original_BALANZA As Global.System.Nullable(Of Byte)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODCODIGO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODPRODUCTO,Decimal)
            If (Original_DESCODIGO1 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DESCODIGO1,String)
            End If
            If (Original_DESCODIGO2 Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_DESCODIGO2,String)
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CODIGO,String)
            End If
            If (Original_PRECIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_PRECIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_PESABLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_PESABLE.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_VENCIMIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_VENCIMIENTO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_BALANZA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_BALANZA.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODPRODUCTO As Decimal, ByVal DESCODIGO1 As String, ByVal DESCODIGO2 As String, ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal CODIGO As String, ByVal PRECIO As Global.System.Nullable(Of Decimal), ByVal CODMONEDA As Global.System.Nullable(Of Decimal), ByVal PESABLE As Global.System.Nullable(Of Byte), ByVal VENCIMIENTO As Global.System.Nullable(Of Byte), ByVal BALANZA As Global.System.Nullable(Of Byte)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODPRODUCTO,Decimal)
            If (DESCODIGO1 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(DESCODIGO1,String)
            End If
            If (DESCODIGO2 Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESCODIGO2,String)
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODIGO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CODIGO,String)
            End If
            If (PRECIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PRECIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PESABLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(PESABLE.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (VENCIMIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(VENCIMIENTO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (BALANZA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(BALANZA.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODPRODUCTO As Decimal,  _
                    ByVal DESCODIGO1 As String,  _
                    ByVal DESCODIGO2 As String,  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal CODIGO As String,  _
                    ByVal PRECIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal PESABLE As Global.System.Nullable(Of Byte),  _
                    ByVal VENCIMIENTO As Global.System.Nullable(Of Byte),  _
                    ByVal BALANZA As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODCODIGO As Decimal,  _
                    ByVal Original_CODPRODUCTO As Decimal,  _
                    ByVal Original_DESCODIGO1 As String,  _
                    ByVal Original_DESCODIGO2 As String,  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGO As String,  _
                    ByVal Original_PRECIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESABLE As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VENCIMIENTO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_BALANZA As Global.System.Nullable(Of Byte),  _
                    ByVal CODCODIGO As Decimal) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODPRODUCTO,Decimal)
            If (DESCODIGO1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(DESCODIGO1,String)
            End If
            If (DESCODIGO2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESCODIGO2,String)
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODIGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CODIGO,String)
            End If
            If (PRECIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PRECIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (PESABLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(PESABLE.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (VENCIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(VENCIMIENTO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (BALANZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(BALANZA.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_CODCODIGO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_CODPRODUCTO,Decimal)
            If (Original_DESCODIGO1 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DESCODIGO1,String)
            End If
            If (Original_DESCODIGO2 Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_DESCODIGO2,String)
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_CODIGO,String)
            End If
            If (Original_PRECIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_PRECIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_PESABLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_PESABLE.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_VENCIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_VENCIMIENTO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_BALANZA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_BALANZA.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(36).Value = CType(CODCODIGO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DESCODIGO1 As String,  _
                    ByVal DESCODIGO2 As String,  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal CODIGO As String,  _
                    ByVal PRECIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal PESABLE As Global.System.Nullable(Of Byte),  _
                    ByVal VENCIMIENTO As Global.System.Nullable(Of Byte),  _
                    ByVal BALANZA As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODCODIGO As Decimal,  _
                    ByVal Original_CODPRODUCTO As Decimal,  _
                    ByVal Original_DESCODIGO1 As String,  _
                    ByVal Original_DESCODIGO2 As String,  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGO As String,  _
                    ByVal Original_PRECIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESABLE As Global.System.Nullable(Of Byte),  _
                    ByVal Original_VENCIMIENTO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_BALANZA As Global.System.Nullable(Of Byte)) As Integer
            Return Me.Update(Original_CODPRODUCTO, DESCODIGO1, DESCODIGO2, CODUSUARIO, CODEMPRESA, FECGRA, CODIGO, PRECIO, CODMONEDA, PESABLE, VENCIMIENTO, BALANZA, Original_CODCODIGO, Original_CODPRODUCTO, Original_DESCODIGO1, Original_DESCODIGO2, Original_CODUSUARIO, Original_CODEMPRESA, Original_FECGRA, Original_CODIGO, Original_PRECIO, Original_CODMONEDA, Original_PESABLE, Original_VENCIMIENTO, Original_BALANZA, Original_CODCODIGO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class COMPRASTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COMPRAS"
            tableMapping.ColumnMappings.Add("CODCOMPRA", "CODCOMPRA")
            tableMapping.ColumnMappings.Add("NUMRESPONSABLE", "NUMRESPONSABLE")
            tableMapping.ColumnMappings.Add("RES_CODEMPRESA", "RES_CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("CODDEPOSITO", "CODDEPOSITO")
            tableMapping.ColumnMappings.Add("CODCOMPROBANTE", "CODCOMPROBANTE")
            tableMapping.ColumnMappings.Add("CODPROVEEDOR", "CODPROVEEDOR")
            tableMapping.ColumnMappings.Add("NUMCOMPRA", "NUMCOMPRA")
            tableMapping.ColumnMappings.Add("FECHACOMPRA", "FECHACOMPRA")
            tableMapping.ColumnMappings.Add("TOTALEXENTA", "TOTALEXENTA")
            tableMapping.ColumnMappings.Add("TOTALGRAVADA", "TOTALGRAVADA")
            tableMapping.ColumnMappings.Add("TOTALIVA", "TOTALIVA")
            tableMapping.ColumnMappings.Add("TOTALCOMPRA", "TOTALCOMPRA")
            tableMapping.ColumnMappings.Add("TOTALDESCUENTO", "TOTALDESCUENTO")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("CODTIPOGASTODET", "CODTIPOGASTODET")
            tableMapping.ColumnMappings.Add("MODALIDADPAGO", "MODALIDADPAGO")
            tableMapping.ColumnMappings.Add("CODCENTRO", "CODCENTRO")
            tableMapping.ColumnMappings.Add("BASEIMPONIBLE", "BASEIMPONIBLE")
            tableMapping.ColumnMappings.Add("TOTALIVA5", "TOTALIVA5")
            tableMapping.ColumnMappings.Add("IVAINCLUIDO", "IVAINCLUIDO")
            tableMapping.ColumnMappings.Add("COMPRASIMPLE", "COMPRASIMPLE")
            tableMapping.ColumnMappings.Add("METODO", "METODO")
            tableMapping.ColumnMappings.Add("TOTALGRAVADO10", "TOTALGRAVADO10")
            tableMapping.ColumnMappings.Add("TOTALIVA10", "TOTALIVA10")
            tableMapping.ColumnMappings.Add("TOTALGRAVADO5", "TOTALGRAVADO5")
            tableMapping.ColumnMappings.Add("ASENTADO", "ASENTADO")
            tableMapping.ColumnMappings.Add("CODEVENTO", "CODEVENTO")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("MOTIVOANULADO", "MOTIVOANULADO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[COMPRAS] WHERE (([CODCOMPRA] = @Original_CODCOMPRA) AND ((@IsN"& _ 
                "ull_NUMRESPONSABLE = 1 AND [NUMRESPONSABLE] IS NULL) OR ([NUMRESPONSABLE] = @Ori"& _ 
                "ginal_NUMRESPONSABLE)) AND ((@IsNull_RES_CODEMPRESA = 1 AND [RES_CODEMPRESA] IS "& _ 
                "NULL) OR ([RES_CODEMPRESA] = @Original_RES_CODEMPRESA)) AND ((@IsNull_CODMONEDA "& _ 
                "= 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNu"& _ 
                "ll_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUA"& _ 
                "RIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = "& _ 
                "@Original_CODEMPRESA)) AND ((@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) "& _ 
                "OR ([CODSUCURSAL] = @Original_CODSUCURSAL)) AND ((@IsNull_CODDEPOSITO = 1 AND [C"& _ 
                "ODDEPOSITO] IS NULL) OR ([CODDEPOSITO] = @Original_CODDEPOSITO)) AND ((@IsNull_C"& _ 
                "ODCOMPROBANTE = 1 AND [CODCOMPROBANTE] IS NULL) OR ([CODCOMPROBANTE] = @Original"& _ 
                "_CODCOMPROBANTE)) AND ((@IsNull_CODPROVEEDOR = 1 AND [CODPROVEEDOR] IS NULL) OR "& _ 
                "([CODPROVEEDOR] = @Original_CODPROVEEDOR)) AND ((@IsNull_NUMCOMPRA = 1 AND [NUMC"& _ 
                "OMPRA] IS NULL) OR ([NUMCOMPRA] = @Original_NUMCOMPRA)) AND ((@IsNull_FECHACOMPR"& _ 
                "A = 1 AND [FECHACOMPRA] IS NULL) OR ([FECHACOMPRA] = @Original_FECHACOMPRA)) AND"& _ 
                " ((@IsNull_TOTALEXENTA = 1 AND [TOTALEXENTA] IS NULL) OR ([TOTALEXENTA] = @Origi"& _ 
                "nal_TOTALEXENTA)) AND ((@IsNull_TOTALGRAVADA = 1 AND [TOTALGRAVADA] IS NULL) OR "& _ 
                "([TOTALGRAVADA] = @Original_TOTALGRAVADA)) AND ((@IsNull_TOTALIVA = 1 AND [TOTAL"& _ 
                "IVA] IS NULL) OR ([TOTALIVA] = @Original_TOTALIVA)) AND ((@IsNull_TOTALCOMPRA = "& _ 
                "1 AND [TOTALCOMPRA] IS NULL) OR ([TOTALCOMPRA] = @Original_TOTALCOMPRA)) AND ((@"& _ 
                "IsNull_TOTALDESCUENTO = 1 AND [TOTALDESCUENTO] IS NULL) OR ([TOTALDESCUENTO] = @"& _ 
                "Original_TOTALDESCUENTO)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NUL"& _ 
                "L) OR ([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND"& _ 
                " [COTIZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNul"& _ 
                "l_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNu"& _ 
                "ll_ESTADO = 1 AND [ESTADO] IS NULL) OR ([ESTADO] = @Original_ESTADO)) AND ((@IsN"& _ 
                "ull_CODTIPOGASTODET = 1 AND [CODTIPOGASTODET] IS NULL) OR ([CODTIPOGASTODET] = @"& _ 
                "Original_CODTIPOGASTODET)) AND ((@IsNull_MODALIDADPAGO = 1 AND [MODALIDADPAGO] I"& _ 
                "S NULL) OR ([MODALIDADPAGO] = @Original_MODALIDADPAGO)) AND ((@IsNull_CODCENTRO "& _ 
                "= 1 AND [CODCENTRO] IS NULL) OR ([CODCENTRO] = @Original_CODCENTRO)) AND ((@IsNu"& _ 
                "ll_BASEIMPONIBLE = 1 AND [BASEIMPONIBLE] IS NULL) OR ([BASEIMPONIBLE] = @Origina"& _ 
                "l_BASEIMPONIBLE)) AND ((@IsNull_TOTALIVA5 = 1 AND [TOTALIVA5] IS NULL) OR ([TOTA"& _ 
                "LIVA5] = @Original_TOTALIVA5)) AND ((@IsNull_IVAINCLUIDO = 1 AND [IVAINCLUIDO] I"& _ 
                "S NULL) OR ([IVAINCLUIDO] = @Original_IVAINCLUIDO)) AND ((@IsNull_COMPRASIMPLE ="& _ 
                " 1 AND [COMPRASIMPLE] IS NULL) OR ([COMPRASIMPLE] = @Original_COMPRASIMPLE)) AND"& _ 
                " ((@IsNull_METODO = 1 AND [METODO] IS NULL) OR ([METODO] = @Original_METODO)) AN"& _ 
                "D ((@IsNull_TOTALGRAVADO10 = 1 AND [TOTALGRAVADO10] IS NULL) OR ([TOTALGRAVADO10"& _ 
                "] = @Original_TOTALGRAVADO10)) AND ((@IsNull_TOTALIVA10 = 1 AND [TOTALIVA10] IS "& _ 
                "NULL) OR ([TOTALIVA10] = @Original_TOTALIVA10)) AND ((@IsNull_TOTALGRAVADO5 = 1 "& _ 
                "AND [TOTALGRAVADO5] IS NULL) OR ([TOTALGRAVADO5] = @Original_TOTALGRAVADO5)) AND"& _ 
                " ((@IsNull_ASENTADO = 1 AND [ASENTADO] IS NULL) OR ([ASENTADO] = @Original_ASENT"& _ 
                "ADO)) AND ((@IsNull_CODEVENTO = 1 AND [CODEVENTO] IS NULL) OR ([CODEVENTO] = @Or"& _ 
                "iginal_CODEVENTO)) AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCE"& _ 
                "PTO] = @Original_CONCEPTO)) AND ((@IsNull_MOTIVOANULADO = 1 AND [MOTIVOANULADO] "& _ 
                "IS NULL) OR ([MOTIVOANULADO] = @Original_MOTIVOANULADO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMRESPONSABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMRESPONSABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMRESPONSABLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMRESPONSABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RES_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RES_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "RES_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODDEPOSITO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOMPROBANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOMPROBANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPROBANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOMPROBANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCOMPRA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHACOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALEXENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALEXENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALEXENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALEXENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALGRAVADA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALGRAVADA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALGRAVADA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALIVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALDESCUENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALDESCUENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALDESCUENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOGASTODET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOGASTODET", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOGASTODET", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODTIPOGASTODET", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODALIDADPAGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODALIDADPAGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODALIDADPAGO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODALIDADPAGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCENTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BASEIMPONIBLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BASEIMPONIBLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BASEIMPONIBLE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "BASEIMPONIBLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALIVA5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALIVA5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVAINCLUIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPRASIMPLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPRASIMPLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPRASIMPLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPRASIMPLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_METODO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METODO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_METODO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METODO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALGRAVADO10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALGRAVADO10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALIVA10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALIVA10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALGRAVADO5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALGRAVADO5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASENTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASENTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASENTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASENTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEVENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEVENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEVENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEVENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MOTIVOANULADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVOANULADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MOTIVOANULADO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVOANULADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[COMPRAS] ([NUMRESPONSABLE], [RES_CODEMPRESA], [CODMONEDA], [CO"& _ 
                "DUSUARIO], [CODEMPRESA], [CODSUCURSAL], [CODDEPOSITO], [CODCOMPROBANTE], [CODPRO"& _ 
                "VEEDOR], [NUMCOMPRA], [FECHACOMPRA], [TOTALEXENTA], [TOTALGRAVADA], [TOTALIVA], "& _ 
                "[TOTALCOMPRA], [TOTALDESCUENTO], [COTIZACION1], [COTIZACION2], [FECGRA], [ESTADO"& _ 
                "], [CODTIPOGASTODET], [MODALIDADPAGO], [CODCENTRO], [BASEIMPONIBLE], [TOTALIVA5]"& _ 
                ", [IVAINCLUIDO], [COMPRASIMPLE], [METODO], [TOTALGRAVADO10], [TOTALIVA10], [TOTA"& _ 
                "LGRAVADO5], [ASENTADO], [CODEVENTO], [CONCEPTO], [MOTIVOANULADO]) VALUES (@NUMRE"& _ 
                "SPONSABLE, @RES_CODEMPRESA, @CODMONEDA, @CODUSUARIO, @CODEMPRESA, @CODSUCURSAL, "& _ 
                "@CODDEPOSITO, @CODCOMPROBANTE, @CODPROVEEDOR, @NUMCOMPRA, @FECHACOMPRA, @TOTALEX"& _ 
                "ENTA, @TOTALGRAVADA, @TOTALIVA, @TOTALCOMPRA, @TOTALDESCUENTO, @COTIZACION1, @CO"& _ 
                "TIZACION2, @FECGRA, @ESTADO, @CODTIPOGASTODET, @MODALIDADPAGO, @CODCENTRO, @BASE"& _ 
                "IMPONIBLE, @TOTALIVA5, @IVAINCLUIDO, @COMPRASIMPLE, @METODO, @TOTALGRAVADO10, @T"& _ 
                "OTALIVA10, @TOTALGRAVADO5, @ASENTADO, @CODEVENTO, @CONCEPTO, @MOTIVOANULADO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"S"& _ 
                "ELECT CODCOMPRA, NUMRESPONSABLE, RES_CODEMPRESA, CODMONEDA, CODUSUARIO, CODEMPRE"& _ 
                "SA, CODSUCURSAL, CODDEPOSITO, CODCOMPROBANTE, CODPROVEEDOR, NUMCOMPRA, FECHACOMP"& _ 
                "RA, TOTALEXENTA, TOTALGRAVADA, TOTALIVA, TOTALCOMPRA, TOTALDESCUENTO, COTIZACION"& _ 
                "1, COTIZACION2, FECGRA, ESTADO, CODTIPOGASTODET, MODALIDADPAGO, CODCENTRO, BASEI"& _ 
                "MPONIBLE, TOTALIVA5, IVAINCLUIDO, COMPRASIMPLE, METODO, TOTALGRAVADO10, TOTALIVA"& _ 
                "10, TOTALGRAVADO5, ASENTADO, CODEVENTO, CONCEPTO, MOTIVOANULADO FROM COMPRAS WHE"& _ 
                "RE (CODCOMPRA = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMRESPONSABLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMRESPONSABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "RES_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDEPOSITO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPROBANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOMPROBANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCOMPRA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALEXENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALEXENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALGRAVADA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALGRAVADA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALIVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALDESCUENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALDESCUENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOGASTODET", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODTIPOGASTODET", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODALIDADPAGO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODALIDADPAGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BASEIMPONIBLE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "BASEIMPONIBLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALIVA5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPRASIMPLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPRASIMPLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@METODO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METODO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALGRAVADO10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALIVA10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALGRAVADO5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASENTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASENTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEVENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEVENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVOANULADO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVOANULADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[COMPRAS] SET [NUMRESPONSABLE] = @NUMRESPONSABLE, [RES_CODEMPRESA] ="& _ 
                " @RES_CODEMPRESA, [CODMONEDA] = @CODMONEDA, [CODUSUARIO] = @CODUSUARIO, [CODEMPR"& _ 
                "ESA] = @CODEMPRESA, [CODSUCURSAL] = @CODSUCURSAL, [CODDEPOSITO] = @CODDEPOSITO, "& _ 
                "[CODCOMPROBANTE] = @CODCOMPROBANTE, [CODPROVEEDOR] = @CODPROVEEDOR, [NUMCOMPRA] "& _ 
                "= @NUMCOMPRA, [FECHACOMPRA] = @FECHACOMPRA, [TOTALEXENTA] = @TOTALEXENTA, [TOTAL"& _ 
                "GRAVADA] = @TOTALGRAVADA, [TOTALIVA] = @TOTALIVA, [TOTALCOMPRA] = @TOTALCOMPRA, "& _ 
                "[TOTALDESCUENTO] = @TOTALDESCUENTO, [COTIZACION1] = @COTIZACION1, [COTIZACION2] "& _ 
                "= @COTIZACION2, [FECGRA] = @FECGRA, [ESTADO] = @ESTADO, [CODTIPOGASTODET] = @COD"& _ 
                "TIPOGASTODET, [MODALIDADPAGO] = @MODALIDADPAGO, [CODCENTRO] = @CODCENTRO, [BASEI"& _ 
                "MPONIBLE] = @BASEIMPONIBLE, [TOTALIVA5] = @TOTALIVA5, [IVAINCLUIDO] = @IVAINCLUI"& _ 
                "DO, [COMPRASIMPLE] = @COMPRASIMPLE, [METODO] = @METODO, [TOTALGRAVADO10] = @TOTA"& _ 
                "LGRAVADO10, [TOTALIVA10] = @TOTALIVA10, [TOTALGRAVADO5] = @TOTALGRAVADO5, [ASENT"& _ 
                "ADO] = @ASENTADO, [CODEVENTO] = @CODEVENTO, [CONCEPTO] = @CONCEPTO, [MOTIVOANULA"& _ 
                "DO] = @MOTIVOANULADO WHERE (([CODCOMPRA] = @Original_CODCOMPRA) AND ((@IsNull_NU"& _ 
                "MRESPONSABLE = 1 AND [NUMRESPONSABLE] IS NULL) OR ([NUMRESPONSABLE] = @Original_"& _ 
                "NUMRESPONSABLE)) AND ((@IsNull_RES_CODEMPRESA = 1 AND [RES_CODEMPRESA] IS NULL) "& _ 
                "OR ([RES_CODEMPRESA] = @Original_RES_CODEMPRESA)) AND ((@IsNull_CODMONEDA = 1 AN"& _ 
                "D [CODMONEDA] IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_COD"& _ 
                "USUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) "& _ 
                "AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Origi"& _ 
                "nal_CODEMPRESA)) AND ((@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) OR ([C"& _ 
                "ODSUCURSAL] = @Original_CODSUCURSAL)) AND ((@IsNull_CODDEPOSITO = 1 AND [CODDEPO"& _ 
                "SITO] IS NULL) OR ([CODDEPOSITO] = @Original_CODDEPOSITO)) AND ((@IsNull_CODCOMP"& _ 
                "ROBANTE = 1 AND [CODCOMPROBANTE] IS NULL) OR ([CODCOMPROBANTE] = @Original_CODCO"& _ 
                "MPROBANTE)) AND ((@IsNull_CODPROVEEDOR = 1 AND [CODPROVEEDOR] IS NULL) OR ([CODP"& _ 
                "ROVEEDOR] = @Original_CODPROVEEDOR)) AND ((@IsNull_NUMCOMPRA = 1 AND [NUMCOMPRA]"& _ 
                " IS NULL) OR ([NUMCOMPRA] = @Original_NUMCOMPRA)) AND ((@IsNull_FECHACOMPRA = 1 "& _ 
                "AND [FECHACOMPRA] IS NULL) OR ([FECHACOMPRA] = @Original_FECHACOMPRA)) AND ((@Is"& _ 
                "Null_TOTALEXENTA = 1 AND [TOTALEXENTA] IS NULL) OR ([TOTALEXENTA] = @Original_TO"& _ 
                "TALEXENTA)) AND ((@IsNull_TOTALGRAVADA = 1 AND [TOTALGRAVADA] IS NULL) OR ([TOTA"& _ 
                "LGRAVADA] = @Original_TOTALGRAVADA)) AND ((@IsNull_TOTALIVA = 1 AND [TOTALIVA] I"& _ 
                "S NULL) OR ([TOTALIVA] = @Original_TOTALIVA)) AND ((@IsNull_TOTALCOMPRA = 1 AND "& _ 
                "[TOTALCOMPRA] IS NULL) OR ([TOTALCOMPRA] = @Original_TOTALCOMPRA)) AND ((@IsNull"& _ 
                "_TOTALDESCUENTO = 1 AND [TOTALDESCUENTO] IS NULL) OR ([TOTALDESCUENTO] = @Origin"& _ 
                "al_TOTALDESCUENTO)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NULL) OR "& _ 
                "([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND [COTI"& _ 
                "ZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNull_FECG"& _ 
                "RA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_EST"& _ 
                "ADO = 1 AND [ESTADO] IS NULL) OR ([ESTADO] = @Original_ESTADO)) AND ((@IsNull_CO"& _ 
                "DTIPOGASTODET = 1 AND [CODTIPOGASTODET] IS NULL) OR ([CODTIPOGASTODET] = @Origin"& _ 
                "al_CODTIPOGASTODET)) AND ((@IsNull_MODALIDADPAGO = 1 AND [MODALIDADPAGO] IS NULL"& _ 
                ") OR ([MODALIDADPAGO] = @Original_MODALIDADPAGO)) AND ((@IsNull_CODCENTRO = 1 AN"& _ 
                "D [CODCENTRO] IS NULL) OR ([CODCENTRO] = @Original_CODCENTRO)) AND ((@IsNull_BAS"& _ 
                "EIMPONIBLE = 1 AND [BASEIMPONIBLE] IS NULL) OR ([BASEIMPONIBLE] = @Original_BASE"& _ 
                "IMPONIBLE)) AND ((@IsNull_TOTALIVA5 = 1 AND [TOTALIVA5] IS NULL) OR ([TOTALIVA5]"& _ 
                " = @Original_TOTALIVA5)) AND ((@IsNull_IVAINCLUIDO = 1 AND [IVAINCLUIDO] IS NULL"& _ 
                ") OR ([IVAINCLUIDO] = @Original_IVAINCLUIDO)) AND ((@IsNull_COMPRASIMPLE = 1 AND"& _ 
                " [COMPRASIMPLE] IS NULL) OR ([COMPRASIMPLE] = @Original_COMPRASIMPLE)) AND ((@Is"& _ 
                "Null_METODO = 1 AND [METODO] IS NULL) OR ([METODO] = @Original_METODO)) AND ((@I"& _ 
                "sNull_TOTALGRAVADO10 = 1 AND [TOTALGRAVADO10] IS NULL) OR ([TOTALGRAVADO10] = @O"& _ 
                "riginal_TOTALGRAVADO10)) AND ((@IsNull_TOTALIVA10 = 1 AND [TOTALIVA10] IS NULL) "& _ 
                "OR ([TOTALIVA10] = @Original_TOTALIVA10)) AND ((@IsNull_TOTALGRAVADO5 = 1 AND [T"& _ 
                "OTALGRAVADO5] IS NULL) OR ([TOTALGRAVADO5] = @Original_TOTALGRAVADO5)) AND ((@Is"& _ 
                "Null_ASENTADO = 1 AND [ASENTADO] IS NULL) OR ([ASENTADO] = @Original_ASENTADO)) "& _ 
                "AND ((@IsNull_CODEVENTO = 1 AND [CODEVENTO] IS NULL) OR ([CODEVENTO] = @Original"& _ 
                "_CODEVENTO)) AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCEPTO] ="& _ 
                " @Original_CONCEPTO)) AND ((@IsNull_MOTIVOANULADO = 1 AND [MOTIVOANULADO] IS NUL"& _ 
                "L) OR ([MOTIVOANULADO] = @Original_MOTIVOANULADO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODCOMPRA, NUMRESPO"& _ 
                "NSABLE, RES_CODEMPRESA, CODMONEDA, CODUSUARIO, CODEMPRESA, CODSUCURSAL, CODDEPOS"& _ 
                "ITO, CODCOMPROBANTE, CODPROVEEDOR, NUMCOMPRA, FECHACOMPRA, TOTALEXENTA, TOTALGRA"& _ 
                "VADA, TOTALIVA, TOTALCOMPRA, TOTALDESCUENTO, COTIZACION1, COTIZACION2, FECGRA, E"& _ 
                "STADO, CODTIPOGASTODET, MODALIDADPAGO, CODCENTRO, BASEIMPONIBLE, TOTALIVA5, IVAI"& _ 
                "NCLUIDO, COMPRASIMPLE, METODO, TOTALGRAVADO10, TOTALIVA10, TOTALGRAVADO5, ASENTA"& _ 
                "DO, CODEVENTO, CONCEPTO, MOTIVOANULADO FROM COMPRAS WHERE (CODCOMPRA = @CODCOMPR"& _ 
                "A)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMRESPONSABLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMRESPONSABLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@RES_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "RES_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDEPOSITO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPROBANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOMPROBANTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCOMPRA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALEXENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALEXENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALGRAVADA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALGRAVADA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALIVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALDESCUENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALDESCUENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOGASTODET", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODTIPOGASTODET", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MODALIDADPAGO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODALIDADPAGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@BASEIMPONIBLE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "BASEIMPONIBLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALIVA5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COMPRASIMPLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPRASIMPLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@METODO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METODO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALGRAVADO10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALIVA10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TOTALGRAVADO5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ASENTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASENTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEVENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEVENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@MOTIVOANULADO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVOANULADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMRESPONSABLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMRESPONSABLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMRESPONSABLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMRESPONSABLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_RES_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "RES_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_RES_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "RES_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODDEPOSITO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOMPROBANTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOMPROBANTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPROBANTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOMPROBANTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCOMPRA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHACOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALEXENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALEXENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALEXENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALEXENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALGRAVADA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALGRAVADA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALGRAVADA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALIVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALDESCUENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALDESCUENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALDESCUENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOGASTODET", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOGASTODET", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOGASTODET", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODTIPOGASTODET", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MODALIDADPAGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODALIDADPAGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MODALIDADPAGO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MODALIDADPAGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCENTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_BASEIMPONIBLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "BASEIMPONIBLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_BASEIMPONIBLE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "BASEIMPONIBLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALIVA5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALIVA5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "TOTALIVA5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVAINCLUIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COMPRASIMPLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPRASIMPLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COMPRASIMPLE", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COMPRASIMPLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_METODO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METODO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_METODO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "METODO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALGRAVADO10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALGRAVADO10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALIVA10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALIVA10", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALIVA10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TOTALGRAVADO5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TOTALGRAVADO5", Global.System.Data.SqlDbType.Money, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TOTALGRAVADO5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ASENTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASENTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ASENTADO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ASENTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEVENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEVENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEVENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEVENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_MOTIVOANULADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVOANULADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_MOTIVOANULADO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "MOTIVOANULADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CODCOMPRA, NUMRESPONSABLE, RES_CODEMPRESA, CODMONEDA, CODUSUARIO, CODEMPRE"& _ 
                "SA, CODSUCURSAL, CODDEPOSITO, CODCOMPROBANTE, CODPROVEEDOR, NUMCOMPRA, FECHACOMP"& _ 
                "RA, TOTALEXENTA, TOTALGRAVADA, TOTALIVA, TOTALCOMPRA, TOTALDESCUENTO, COTIZACION"& _ 
                "1, COTIZACION2, FECGRA, ESTADO, CODTIPOGASTODET, MODALIDADPAGO, CODCENTRO, BASEI"& _ 
                "MPONIBLE, TOTALIVA5, IVAINCLUIDO, COMPRASIMPLE, METODO, TOTALGRAVADO10, TOTALIVA"& _ 
                "10, TOTALGRAVADO5, ASENTADO, CODEVENTO, CONCEPTO, MOTIVOANULADO FROM dbo.COMPRAS"& _ 
                ""
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.COMPRASDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.COMPRASDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.COMPRASDataTable = New DSReporteProductoNW.COMPRASDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.COMPRASDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "COMPRAS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODCOMPRA As Decimal,  _
                    ByVal Original_NUMRESPONSABLE As String,  _
                    ByVal Original_RES_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODDEPOSITO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOMPROBANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCOMPRA As String,  _
                    ByVal Original_FECHACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_TOTALEXENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALGRAVADA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALDESCUENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOGASTODET As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MODALIDADPAGO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BASEIMPONIBLE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COMPRASIMPLE As Global.System.Nullable(Of Byte),  _
                    ByVal Original_METODO As String,  _
                    ByVal Original_TOTALGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ASENTADO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODEVENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_MOTIVOANULADO As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODCOMPRA,Decimal)
            If (Original_NUMRESPONSABLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NUMRESPONSABLE,String)
            End If
            If (Original_RES_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_RES_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CODDEPOSITO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CODDEPOSITO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOMPROBANTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CODCOMPROBANTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCOMPRA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_NUMCOMPRA,String)
            End If
            If (Original_FECHACOMPRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_FECHACOMPRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALEXENTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_TOTALEXENTA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALGRAVADA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_TOTALGRAVADA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALIVA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_TOTALIVA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALCOMPRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_TOTALCOMPRA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALDESCUENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_TOTALDESCUENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTADO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_ESTADO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOGASTODET.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_CODTIPOGASTODET.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_MODALIDADPAGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_MODALIDADPAGO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCENTRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_BASEIMPONIBLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_BASEIMPONIBLE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALIVA5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_TOTALIVA5.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_COMPRASIMPLE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_COMPRASIMPLE.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_METODO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_METODO,String)
            End If
            If (Original_TOTALGRAVADO10.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_TOTALGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALIVA10.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_TOTALIVA10.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALGRAVADO5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_TOTALGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_ASENTADO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_ASENTADO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEVENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_CODEVENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_MOTIVOANULADO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_MOTIVOANULADO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal NUMRESPONSABLE As String,  _
                    ByVal RES_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal CODDEPOSITO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOMPROBANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCOMPRA As String,  _
                    ByVal FECHACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal TOTALEXENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALGRAVADA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALDESCUENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOGASTODET As Global.System.Nullable(Of Decimal),  _
                    ByVal MODALIDADPAGO As Global.System.Nullable(Of Byte),  _
                    ByVal CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal BASEIMPONIBLE As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA5 As Global.System.Nullable(Of Decimal),  _
                    ByVal IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal COMPRASIMPLE As Global.System.Nullable(Of Byte),  _
                    ByVal METODO As String,  _
                    ByVal TOTALGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA10 As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal ASENTADO As Global.System.Nullable(Of Byte),  _
                    ByVal CODEVENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal MOTIVOANULADO As String) As Integer
            If (NUMRESPONSABLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(NUMRESPONSABLE,String)
            End If
            If (RES_CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(RES_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODDEPOSITO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CODDEPOSITO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODCOMPROBANTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODCOMPROBANTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (NUMCOMPRA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(NUMCOMPRA,String)
            End If
            If (FECHACOMPRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(FECHACOMPRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TOTALEXENTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(TOTALEXENTA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TOTALGRAVADA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TOTALGRAVADA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TOTALIVA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(TOTALIVA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TOTALCOMPRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(TOTALCOMPRA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (TOTALDESCUENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(TOTALDESCUENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ESTADO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(ESTADO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOGASTODET.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CODTIPOGASTODET.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (MODALIDADPAGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(MODALIDADPAGO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CODCENTRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BASEIMPONIBLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(BASEIMPONIBLE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TOTALIVA5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TOTALIVA5.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (COMPRASIMPLE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(COMPRASIMPLE.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (METODO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(METODO,String)
            End If
            If (TOTALGRAVADO10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(TOTALGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (TOTALIVA10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(TOTALIVA10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (TOTALGRAVADO5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(TOTALGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ASENTADO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(ASENTADO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CODEVENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(CODEVENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(CONCEPTO,String)
            End If
            If (MOTIVOANULADO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(MOTIVOANULADO,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NUMRESPONSABLE As String,  _
                    ByVal RES_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal CODDEPOSITO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOMPROBANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCOMPRA As String,  _
                    ByVal FECHACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal TOTALEXENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALGRAVADA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALDESCUENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOGASTODET As Global.System.Nullable(Of Decimal),  _
                    ByVal MODALIDADPAGO As Global.System.Nullable(Of Byte),  _
                    ByVal CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal BASEIMPONIBLE As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA5 As Global.System.Nullable(Of Decimal),  _
                    ByVal IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal COMPRASIMPLE As Global.System.Nullable(Of Byte),  _
                    ByVal METODO As String,  _
                    ByVal TOTALGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA10 As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal ASENTADO As Global.System.Nullable(Of Byte),  _
                    ByVal CODEVENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal MOTIVOANULADO As String,  _
                    ByVal Original_CODCOMPRA As Decimal,  _
                    ByVal Original_NUMRESPONSABLE As String,  _
                    ByVal Original_RES_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODDEPOSITO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOMPROBANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCOMPRA As String,  _
                    ByVal Original_FECHACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_TOTALEXENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALGRAVADA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALDESCUENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOGASTODET As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MODALIDADPAGO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BASEIMPONIBLE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COMPRASIMPLE As Global.System.Nullable(Of Byte),  _
                    ByVal Original_METODO As String,  _
                    ByVal Original_TOTALGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ASENTADO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODEVENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_MOTIVOANULADO As String,  _
                    ByVal CODCOMPRA As Decimal) As Integer
            If (NUMRESPONSABLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NUMRESPONSABLE,String)
            End If
            If (RES_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(RES_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODDEPOSITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CODDEPOSITO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODCOMPROBANTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODCOMPROBANTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (NUMCOMPRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(NUMCOMPRA,String)
            End If
            If (FECHACOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(FECHACOMPRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (TOTALEXENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(TOTALEXENTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (TOTALGRAVADA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TOTALGRAVADA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (TOTALIVA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(TOTALIVA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (TOTALCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(TOTALCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (TOTALDESCUENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(TOTALDESCUENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (ESTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(ESTADO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOGASTODET.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CODTIPOGASTODET.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (MODALIDADPAGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(MODALIDADPAGO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CODCENTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (BASEIMPONIBLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(BASEIMPONIBLE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TOTALIVA5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TOTALIVA5.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (COMPRASIMPLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(COMPRASIMPLE.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (METODO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(METODO,String)
            End If
            If (TOTALGRAVADO10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(TOTALGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (TOTALIVA10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(TOTALIVA10.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (TOTALGRAVADO5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(TOTALGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (ASENTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(ASENTADO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (CODEVENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(CODEVENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(CONCEPTO,String)
            End If
            If (MOTIVOANULADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(MOTIVOANULADO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CODCOMPRA,Decimal)
            If (Original_NUMRESPONSABLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_NUMRESPONSABLE,String)
            End If
            If (Original_RES_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_RES_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_CODDEPOSITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_CODDEPOSITO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOMPROBANTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_CODCOMPROBANTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCOMPRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_NUMCOMPRA,String)
            End If
            If (Original_FECHACOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_FECHACOMPRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALEXENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_TOTALEXENTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALGRAVADA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_TOTALGRAVADA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALIVA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_TOTALIVA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_TOTALCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALDESCUENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_TOTALDESCUENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_ESTADO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOGASTODET.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_CODTIPOGASTODET.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            End If
            If (Original_MODALIDADPAGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_MODALIDADPAGO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCENTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_BASEIMPONIBLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_BASEIMPONIBLE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALIVA5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_TOTALIVA5.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_COMPRASIMPLE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_COMPRASIMPLE.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            End If
            If (Original_METODO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_METODO,String)
            End If
            If (Original_TOTALGRAVADO10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_TOTALGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALIVA10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_TOTALIVA10.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_TOTALGRAVADO5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_TOTALGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_ASENTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_ASENTADO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEVENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_CODEVENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_MOTIVOANULADO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_MOTIVOANULADO,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(106).Value = CType(CODCOMPRA,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NUMRESPONSABLE As String,  _
                    ByVal RES_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal CODDEPOSITO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOMPROBANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCOMPRA As String,  _
                    ByVal FECHACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal TOTALEXENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALGRAVADA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALDESCUENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal ESTADO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOGASTODET As Global.System.Nullable(Of Decimal),  _
                    ByVal MODALIDADPAGO As Global.System.Nullable(Of Byte),  _
                    ByVal CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal BASEIMPONIBLE As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA5 As Global.System.Nullable(Of Decimal),  _
                    ByVal IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal COMPRASIMPLE As Global.System.Nullable(Of Byte),  _
                    ByVal METODO As String,  _
                    ByVal TOTALGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALIVA10 As Global.System.Nullable(Of Decimal),  _
                    ByVal TOTALGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal ASENTADO As Global.System.Nullable(Of Byte),  _
                    ByVal CODEVENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal MOTIVOANULADO As String,  _
                    ByVal Original_CODCOMPRA As Decimal,  _
                    ByVal Original_NUMRESPONSABLE As String,  _
                    ByVal Original_RES_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODDEPOSITO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOMPROBANTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCOMPRA As String,  _
                    ByVal Original_FECHACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_TOTALEXENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALGRAVADA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALDESCUENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_ESTADO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOGASTODET As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_MODALIDADPAGO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_BASEIMPONIBLE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COMPRASIMPLE As Global.System.Nullable(Of Byte),  _
                    ByVal Original_METODO As String,  _
                    ByVal Original_TOTALGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALIVA10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TOTALGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ASENTADO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODEVENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_MOTIVOANULADO As String) As Integer
            Return Me.Update(NUMRESPONSABLE, RES_CODEMPRESA, CODMONEDA, CODUSUARIO, CODEMPRESA, CODSUCURSAL, CODDEPOSITO, CODCOMPROBANTE, CODPROVEEDOR, NUMCOMPRA, FECHACOMPRA, TOTALEXENTA, TOTALGRAVADA, TOTALIVA, TOTALCOMPRA, TOTALDESCUENTO, COTIZACION1, COTIZACION2, FECGRA, ESTADO, CODTIPOGASTODET, MODALIDADPAGO, CODCENTRO, BASEIMPONIBLE, TOTALIVA5, IVAINCLUIDO, COMPRASIMPLE, METODO, TOTALGRAVADO10, TOTALIVA10, TOTALGRAVADO5, ASENTADO, CODEVENTO, CONCEPTO, MOTIVOANULADO, Original_CODCOMPRA, Original_NUMRESPONSABLE, Original_RES_CODEMPRESA, Original_CODMONEDA, Original_CODUSUARIO, Original_CODEMPRESA, Original_CODSUCURSAL, Original_CODDEPOSITO, Original_CODCOMPROBANTE, Original_CODPROVEEDOR, Original_NUMCOMPRA, Original_FECHACOMPRA, Original_TOTALEXENTA, Original_TOTALGRAVADA, Original_TOTALIVA, Original_TOTALCOMPRA, Original_TOTALDESCUENTO, Original_COTIZACION1, Original_COTIZACION2, Original_FECGRA, Original_ESTADO, Original_CODTIPOGASTODET, Original_MODALIDADPAGO, Original_CODCENTRO, Original_BASEIMPONIBLE, Original_TOTALIVA5, Original_IVAINCLUIDO, Original_COMPRASIMPLE, Original_METODO, Original_TOTALGRAVADO10, Original_TOTALIVA10, Original_TOTALGRAVADO5, Original_ASENTADO, Original_CODEVENTO, Original_CONCEPTO, Original_MOTIVOANULADO, Original_CODCOMPRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class COMPRASDETALLETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COMPRASDETALLE"
            tableMapping.ColumnMappings.Add("ComprasDetalleID", "ComprasDetalleID")
            tableMapping.ColumnMappings.Add("CODCOMPRA", "CODCOMPRA")
            tableMapping.ColumnMappings.Add("LINEANROCOMPRA", "LINEANROCOMPRA")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CANTIDADCOMPRA", "CANTIDADCOMPRA")
            tableMapping.ColumnMappings.Add("COSTOPROMEDIO", "COSTOPROMEDIO")
            tableMapping.ColumnMappings.Add("COSTOUNITARIO", "COSTOUNITARIO")
            tableMapping.ColumnMappings.Add("IVA", "IVA")
            tableMapping.ColumnMappings.Add("FACTORPROMEDIO", "FACTORPROMEDIO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("COSTOBRUTO", "COSTOBRUTO")
            tableMapping.ColumnMappings.Add("ORDENFABRICACION", "ORDENFABRICACION")
            tableMapping.ColumnMappings.Add("COSTOPROMEDIOMAESTRO", "COSTOPROMEDIOMAESTRO")
            tableMapping.ColumnMappings.Add("COSTOPPMAESTRO", "COSTOPPMAESTRO")
            tableMapping.ColumnMappings.Add("PRECIOMAY", "PRECIOMAY")
            tableMapping.ColumnMappings.Add("PRECIOMIN", "PRECIOMIN")
            tableMapping.ColumnMappings.Add("LINEANUMERO", "LINEANUMERO")
            tableMapping.ColumnMappings.Add("CODCENTRO", "CODCENTRO")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("IMPORTEGRAVADO10", "IMPORTEGRAVADO10")
            tableMapping.ColumnMappings.Add("IMPORTEGRAVADO5", "IMPORTEGRAVADO5")
            tableMapping.ColumnMappings.Add("IMPORTEEXENTO", "IMPORTEEXENTO")
            tableMapping.ColumnMappings.Add("INTEGRADO", "INTEGRADO")
            tableMapping.ColumnMappings.Add("TIPOIVA", "TIPOIVA")
            tableMapping.ColumnMappings.Add("CODMATERIAPRIMA", "CODMATERIAPRIMA")
            tableMapping.ColumnMappings.Add("VIDAUTIL", "VIDAUTIL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[COMPRASDETALLE] WHERE (([ComprasDetalleID] = @Original_Compras"& _ 
                "DetalleID) AND ([CODCOMPRA] = @Original_CODCOMPRA) AND ((@IsNull_LINEANROCOMPRA "& _ 
                "= 1 AND [LINEANROCOMPRA] IS NULL) OR ([LINEANROCOMPRA] = @Original_LINEANROCOMPR"& _ 
                "A)) AND ((@IsNull_CODPRODUCTO = 1 AND [CODPRODUCTO] IS NULL) OR ([CODPRODUCTO] ="& _ 
                " @Original_CODPRODUCTO)) AND ((@IsNull_CODCODIGO = 1 AND [CODCODIGO] IS NULL) OR"& _ 
                " ([CODCODIGO] = @Original_CODCODIGO)) AND ((@IsNull_CANTIDADCOMPRA = 1 AND [CANT"& _ 
                "IDADCOMPRA] IS NULL) OR ([CANTIDADCOMPRA] = @Original_CANTIDADCOMPRA)) AND ((@Is"& _ 
                "Null_COSTOPROMEDIO = 1 AND [COSTOPROMEDIO] IS NULL) OR ([COSTOPROMEDIO] = @Origi"& _ 
                "nal_COSTOPROMEDIO)) AND ((@IsNull_COSTOUNITARIO = 1 AND [COSTOUNITARIO] IS NULL)"& _ 
                " OR ([COSTOUNITARIO] = @Original_COSTOUNITARIO)) AND ((@IsNull_IVA = 1 AND [IVA]"& _ 
                " IS NULL) OR ([IVA] = @Original_IVA)) AND ((@IsNull_FACTORPROMEDIO = 1 AND [FACT"& _ 
                "ORPROMEDIO] IS NULL) OR ([FACTORPROMEDIO] = @Original_FACTORPROMEDIO)) AND ((@Is"& _ 
                "Null_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@I"& _ 
                "sNull_COSTOBRUTO = 1 AND [COSTOBRUTO] IS NULL) OR ([COSTOBRUTO] = @Original_COST"& _ 
                "OBRUTO)) AND ((@IsNull_ORDENFABRICACION = 1 AND [ORDENFABRICACION] IS NULL) OR ("& _ 
                "[ORDENFABRICACION] = @Original_ORDENFABRICACION)) AND ((@IsNull_COSTOPROMEDIOMAE"& _ 
                "STRO = 1 AND [COSTOPROMEDIOMAESTRO] IS NULL) OR ([COSTOPROMEDIOMAESTRO] = @Origi"& _ 
                "nal_COSTOPROMEDIOMAESTRO)) AND ((@IsNull_COSTOPPMAESTRO = 1 AND [COSTOPPMAESTRO]"& _ 
                " IS NULL) OR ([COSTOPPMAESTRO] = @Original_COSTOPPMAESTRO)) AND ((@IsNull_PRECIO"& _ 
                "MAY = 1 AND [PRECIOMAY] IS NULL) OR ([PRECIOMAY] = @Original_PRECIOMAY)) AND ((@"& _ 
                "IsNull_PRECIOMIN = 1 AND [PRECIOMIN] IS NULL) OR ([PRECIOMIN] = @Original_PRECIO"& _ 
                "MIN)) AND ((@IsNull_LINEANUMERO = 1 AND [LINEANUMERO] IS NULL) OR ([LINEANUMERO]"& _ 
                " = @Original_LINEANUMERO)) AND ((@IsNull_CODCENTRO = 1 AND [CODCENTRO] IS NULL) "& _ 
                "OR ([CODCENTRO] = @Original_CODCENTRO)) AND ((@IsNull_DESPRODUCTO = 1 AND [DESPR"& _ 
                "ODUCTO] IS NULL) OR ([DESPRODUCTO] = @Original_DESPRODUCTO)) AND ((@IsNull_CODSU"& _ 
                "CURSAL = 1 AND [CODSUCURSAL] IS NULL) OR ([CODSUCURSAL] = @Original_CODSUCURSAL)"& _ 
                ") AND ((@IsNull_IMPORTEGRAVADO10 = 1 AND [IMPORTEGRAVADO10] IS NULL) OR ([IMPORT"& _ 
                "EGRAVADO10] = @Original_IMPORTEGRAVADO10)) AND ((@IsNull_IMPORTEGRAVADO5 = 1 AND"& _ 
                " [IMPORTEGRAVADO5] IS NULL) OR ([IMPORTEGRAVADO5] = @Original_IMPORTEGRAVADO5)) "& _ 
                "AND ((@IsNull_IMPORTEEXENTO = 1 AND [IMPORTEEXENTO] IS NULL) OR ([IMPORTEEXENTO]"& _ 
                " = @Original_IMPORTEEXENTO)) AND ((@IsNull_INTEGRADO = 1 AND [INTEGRADO] IS NULL"& _ 
                ") OR ([INTEGRADO] = @Original_INTEGRADO)) AND ((@IsNull_TIPOIVA = 1 AND [TIPOIVA"& _ 
                "] IS NULL) OR ([TIPOIVA] = @Original_TIPOIVA)) AND ((@IsNull_CODMATERIAPRIMA = 1"& _ 
                " AND [CODMATERIAPRIMA] IS NULL) OR ([CODMATERIAPRIMA] = @Original_CODMATERIAPRIM"& _ 
                "A)) AND ((@IsNull_VIDAUTIL = 1 AND [VIDAUTIL] IS NULL) OR ([VIDAUTIL] = @Origina"& _ 
                "l_VIDAUTIL)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ComprasDetalleID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ComprasDetalleID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LINEANROCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEANROCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINEANROCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANROCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDADCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDADCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDADCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDADCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPROMEDIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPROMEDIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOUNITARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOUNITARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOUNITARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOUNITARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 2, "IVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FACTORPROMEDIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTORPROMEDIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FACTORPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACTORPROMEDIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOBRUTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOBRUTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOBRUTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOBRUTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDENFABRICACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDENFABRICACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDENFABRICACION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDENFABRICACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPROMEDIOMAESTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPROMEDIOMAESTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPROMEDIOMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIOMAESTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPPMAESTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPPMAESTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPPMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPPMAESTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIOMAY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIOMAY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIOMAY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMAY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIOMIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIOMIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIOMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LINEANUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEANUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINEANUMERO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCENTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTEGRAVADO10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTEGRAVADO10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTEGRAVADO10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTEGRAVADO5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTEGRAVADO5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTEGRAVADO5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTEEXENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTEEXENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTEEXENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEEXENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTEGRADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTEGRADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTEGRADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INTEGRADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMATERIAPRIMA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMATERIAPRIMA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMATERIAPRIMA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODMATERIAPRIMA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIDAUTIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIDAUTIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIDAUTIL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIDAUTIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[COMPRASDETALLE] ([CODCOMPRA], [LINEANROCOMPRA], [CODPRODUCTO],"& _ 
                " [CODCODIGO], [CANTIDADCOMPRA], [COSTOPROMEDIO], [COSTOUNITARIO], [IVA], [FACTOR"& _ 
                "PROMEDIO], [FECGRA], [COSTOBRUTO], [ORDENFABRICACION], [COSTOPROMEDIOMAESTRO], ["& _ 
                "COSTOPPMAESTRO], [PRECIOMAY], [PRECIOMIN], [LINEANUMERO], [CODCENTRO], [DESPRODU"& _ 
                "CTO], [CODSUCURSAL], [IMPORTEGRAVADO10], [IMPORTEGRAVADO5], [IMPORTEEXENTO], [IN"& _ 
                "TEGRADO], [TIPOIVA], [CODMATERIAPRIMA], [VIDAUTIL]) VALUES (@CODCOMPRA, @LINEANR"& _ 
                "OCOMPRA, @CODPRODUCTO, @CODCODIGO, @CANTIDADCOMPRA, @COSTOPROMEDIO, @COSTOUNITAR"& _ 
                "IO, @IVA, @FACTORPROMEDIO, @FECGRA, @COSTOBRUTO, @ORDENFABRICACION, @COSTOPROMED"& _ 
                "IOMAESTRO, @COSTOPPMAESTRO, @PRECIOMAY, @PRECIOMIN, @LINEANUMERO, @CODCENTRO, @D"& _ 
                "ESPRODUCTO, @CODSUCURSAL, @IMPORTEGRAVADO10, @IMPORTEGRAVADO5, @IMPORTEEXENTO, @"& _ 
                "INTEGRADO, @TIPOIVA, @CODMATERIAPRIMA, @VIDAUTIL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ComprasDetalleID, COD"& _ 
                "COMPRA, LINEANROCOMPRA, CODPRODUCTO, CODCODIGO, CANTIDADCOMPRA, COSTOPROMEDIO, C"& _ 
                "OSTOUNITARIO, IVA, FACTORPROMEDIO, FECGRA, COSTOBRUTO, ORDENFABRICACION, COSTOPR"& _ 
                "OMEDIOMAESTRO, COSTOPPMAESTRO, PRECIOMAY, PRECIOMIN, LINEANUMERO, CODCENTRO, DES"& _ 
                "PRODUCTO, CODSUCURSAL, IMPORTEGRAVADO10, IMPORTEGRAVADO5, IMPORTEEXENTO, INTEGRA"& _ 
                "DO, TIPOIVA, CODMATERIAPRIMA, VIDAUTIL FROM COMPRASDETALLE WHERE (ComprasDetalle"& _ 
                "ID = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINEANROCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANROCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDADCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDADCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOUNITARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOUNITARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 2, "IVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACTORPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACTORPROMEDIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOBRUTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOBRUTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDENFABRICACION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDENFABRICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPROMEDIOMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIOMAESTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPPMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPPMAESTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIOMAY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMAY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIOMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINEANUMERO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTEGRAVADO10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTEGRAVADO5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTEEXENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEEXENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTEGRADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INTEGRADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMATERIAPRIMA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODMATERIAPRIMA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIDAUTIL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIDAUTIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[COMPRASDETALLE] SET [CODCOMPRA] = @CODCOMPRA, [LINEANROCOMPRA] = @L"& _ 
                "INEANROCOMPRA, [CODPRODUCTO] = @CODPRODUCTO, [CODCODIGO] = @CODCODIGO, [CANTIDAD"& _ 
                "COMPRA] = @CANTIDADCOMPRA, [COSTOPROMEDIO] = @COSTOPROMEDIO, [COSTOUNITARIO] = @"& _ 
                "COSTOUNITARIO, [IVA] = @IVA, [FACTORPROMEDIO] = @FACTORPROMEDIO, [FECGRA] = @FEC"& _ 
                "GRA, [COSTOBRUTO] = @COSTOBRUTO, [ORDENFABRICACION] = @ORDENFABRICACION, [COSTOP"& _ 
                "ROMEDIOMAESTRO] = @COSTOPROMEDIOMAESTRO, [COSTOPPMAESTRO] = @COSTOPPMAESTRO, [PR"& _ 
                "ECIOMAY] = @PRECIOMAY, [PRECIOMIN] = @PRECIOMIN, [LINEANUMERO] = @LINEANUMERO, ["& _ 
                "CODCENTRO] = @CODCENTRO, [DESPRODUCTO] = @DESPRODUCTO, [CODSUCURSAL] = @CODSUCUR"& _ 
                "SAL, [IMPORTEGRAVADO10] = @IMPORTEGRAVADO10, [IMPORTEGRAVADO5] = @IMPORTEGRAVADO"& _ 
                "5, [IMPORTEEXENTO] = @IMPORTEEXENTO, [INTEGRADO] = @INTEGRADO, [TIPOIVA] = @TIPO"& _ 
                "IVA, [CODMATERIAPRIMA] = @CODMATERIAPRIMA, [VIDAUTIL] = @VIDAUTIL WHERE (([Compr"& _ 
                "asDetalleID] = @Original_ComprasDetalleID) AND ([CODCOMPRA] = @Original_CODCOMPR"& _ 
                "A) AND ((@IsNull_LINEANROCOMPRA = 1 AND [LINEANROCOMPRA] IS NULL) OR ([LINEANROC"& _ 
                "OMPRA] = @Original_LINEANROCOMPRA)) AND ((@IsNull_CODPRODUCTO = 1 AND [CODPRODUC"& _ 
                "TO] IS NULL) OR ([CODPRODUCTO] = @Original_CODPRODUCTO)) AND ((@IsNull_CODCODIGO"& _ 
                " = 1 AND [CODCODIGO] IS NULL) OR ([CODCODIGO] = @Original_CODCODIGO)) AND ((@IsN"& _ 
                "ull_CANTIDADCOMPRA = 1 AND [CANTIDADCOMPRA] IS NULL) OR ([CANTIDADCOMPRA] = @Ori"& _ 
                "ginal_CANTIDADCOMPRA)) AND ((@IsNull_COSTOPROMEDIO = 1 AND [COSTOPROMEDIO] IS NU"& _ 
                "LL) OR ([COSTOPROMEDIO] = @Original_COSTOPROMEDIO)) AND ((@IsNull_COSTOUNITARIO "& _ 
                "= 1 AND [COSTOUNITARIO] IS NULL) OR ([COSTOUNITARIO] = @Original_COSTOUNITARIO))"& _ 
                " AND ((@IsNull_IVA = 1 AND [IVA] IS NULL) OR ([IVA] = @Original_IVA)) AND ((@IsN"& _ 
                "ull_FACTORPROMEDIO = 1 AND [FACTORPROMEDIO] IS NULL) OR ([FACTORPROMEDIO] = @Ori"& _ 
                "ginal_FACTORPROMEDIO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGR"& _ 
                "A] = @Original_FECGRA)) AND ((@IsNull_COSTOBRUTO = 1 AND [COSTOBRUTO] IS NULL) O"& _ 
                "R ([COSTOBRUTO] = @Original_COSTOBRUTO)) AND ((@IsNull_ORDENFABRICACION = 1 AND "& _ 
                "[ORDENFABRICACION] IS NULL) OR ([ORDENFABRICACION] = @Original_ORDENFABRICACION)"& _ 
                ") AND ((@IsNull_COSTOPROMEDIOMAESTRO = 1 AND [COSTOPROMEDIOMAESTRO] IS NULL) OR "& _ 
                "([COSTOPROMEDIOMAESTRO] = @Original_COSTOPROMEDIOMAESTRO)) AND ((@IsNull_COSTOPP"& _ 
                "MAESTRO = 1 AND [COSTOPPMAESTRO] IS NULL) OR ([COSTOPPMAESTRO] = @Original_COSTO"& _ 
                "PPMAESTRO)) AND ((@IsNull_PRECIOMAY = 1 AND [PRECIOMAY] IS NULL) OR ([PRECIOMAY]"& _ 
                " = @Original_PRECIOMAY)) AND ((@IsNull_PRECIOMIN = 1 AND [PRECIOMIN] IS NULL) OR"& _ 
                " ([PRECIOMIN] = @Original_PRECIOMIN)) AND ((@IsNull_LINEANUMERO = 1 AND [LINEANU"& _ 
                "MERO] IS NULL) OR ([LINEANUMERO] = @Original_LINEANUMERO)) AND ((@IsNull_CODCENT"& _ 
                "RO = 1 AND [CODCENTRO] IS NULL) OR ([CODCENTRO] = @Original_CODCENTRO)) AND ((@I"& _ 
                "sNull_DESPRODUCTO = 1 AND [DESPRODUCTO] IS NULL) OR ([DESPRODUCTO] = @Original_D"& _ 
                "ESPRODUCTO)) AND ((@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) OR ([CODSU"& _ 
                "CURSAL] = @Original_CODSUCURSAL)) AND ((@IsNull_IMPORTEGRAVADO10 = 1 AND [IMPORT"& _ 
                "EGRAVADO10] IS NULL) OR ([IMPORTEGRAVADO10] = @Original_IMPORTEGRAVADO10)) AND ("& _ 
                "(@IsNull_IMPORTEGRAVADO5 = 1 AND [IMPORTEGRAVADO5] IS NULL) OR ([IMPORTEGRAVADO5"& _ 
                "] = @Original_IMPORTEGRAVADO5)) AND ((@IsNull_IMPORTEEXENTO = 1 AND [IMPORTEEXEN"& _ 
                "TO] IS NULL) OR ([IMPORTEEXENTO] = @Original_IMPORTEEXENTO)) AND ((@IsNull_INTEG"& _ 
                "RADO = 1 AND [INTEGRADO] IS NULL) OR ([INTEGRADO] = @Original_INTEGRADO)) AND (("& _ 
                "@IsNull_TIPOIVA = 1 AND [TIPOIVA] IS NULL) OR ([TIPOIVA] = @Original_TIPOIVA)) A"& _ 
                "ND ((@IsNull_CODMATERIAPRIMA = 1 AND [CODMATERIAPRIMA] IS NULL) OR ([CODMATERIAP"& _ 
                "RIMA] = @Original_CODMATERIAPRIMA)) AND ((@IsNull_VIDAUTIL = 1 AND [VIDAUTIL] IS"& _ 
                " NULL) OR ([VIDAUTIL] = @Original_VIDAUTIL)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT ComprasDetalleID, CODCOMP"& _ 
                "RA, LINEANROCOMPRA, CODPRODUCTO, CODCODIGO, CANTIDADCOMPRA, COSTOPROMEDIO, COSTO"& _ 
                "UNITARIO, IVA, FACTORPROMEDIO, FECGRA, COSTOBRUTO, ORDENFABRICACION, COSTOPROMED"& _ 
                "IOMAESTRO, COSTOPPMAESTRO, PRECIOMAY, PRECIOMIN, LINEANUMERO, CODCENTRO, DESPROD"& _ 
                "UCTO, CODSUCURSAL, IMPORTEGRAVADO10, IMPORTEGRAVADO5, IMPORTEEXENTO, INTEGRADO, "& _ 
                "TIPOIVA, CODMATERIAPRIMA, VIDAUTIL FROM COMPRASDETALLE WHERE (ComprasDetalleID ="& _ 
                " @ComprasDetalleID)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINEANROCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANROCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CANTIDADCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDADCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOUNITARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOUNITARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 2, "IVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACTORPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACTORPROMEDIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOBRUTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOBRUTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDENFABRICACION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDENFABRICACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPROMEDIOMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIOMAESTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPPMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPPMAESTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIOMAY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMAY", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIOMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LINEANUMERO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANUMERO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTEGRAVADO10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO10", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTEGRAVADO5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO5", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTEEXENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEEXENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INTEGRADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INTEGRADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMATERIAPRIMA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODMATERIAPRIMA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VIDAUTIL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIDAUTIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ComprasDetalleID", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "ComprasDetalleID", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LINEANROCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEANROCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINEANROCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANROCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CANTIDADCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CANTIDADCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CANTIDADCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "CANTIDADCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPROMEDIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPROMEDIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOUNITARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOUNITARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOUNITARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOUNITARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 2, "IVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FACTORPROMEDIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACTORPROMEDIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FACTORPROMEDIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACTORPROMEDIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOBRUTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOBRUTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOBRUTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOBRUTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDENFABRICACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDENFABRICACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDENFABRICACION", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDENFABRICACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPROMEDIOMAESTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPROMEDIOMAESTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPROMEDIOMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPROMEDIOMAESTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPPMAESTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPPMAESTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPPMAESTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPPMAESTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIOMAY", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIOMAY", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIOMAY", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMAY", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIOMIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIOMIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIOMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOMIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LINEANUMERO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LINEANUMERO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LINEANUMERO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "LINEANUMERO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCENTRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCENTRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCENTRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTEGRAVADO10", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTEGRAVADO10", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTEGRAVADO10", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO10", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTEGRAVADO5", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTEGRAVADO5", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTEGRAVADO5", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEGRAVADO5", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTEEXENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTEEXENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTEEXENTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "IMPORTEEXENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INTEGRADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INTEGRADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INTEGRADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INTEGRADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOIVA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMATERIAPRIMA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMATERIAPRIMA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMATERIAPRIMA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODMATERIAPRIMA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VIDAUTIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIDAUTIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VIDAUTIL", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VIDAUTIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ComprasDetalleID", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "ComprasDetalleID", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT ComprasDetalleID, CODCOMPRA, LINEANROCOMPRA, CODPRODUCTO, CODCODIGO, CANTI"& _ 
                "DADCOMPRA, COSTOPROMEDIO, COSTOUNITARIO, IVA, FACTORPROMEDIO, FECGRA, COSTOBRUTO"& _ 
                ", ORDENFABRICACION, COSTOPROMEDIOMAESTRO, COSTOPPMAESTRO, PRECIOMAY, PRECIOMIN, "& _ 
                "LINEANUMERO, CODCENTRO, DESPRODUCTO, CODSUCURSAL, IMPORTEGRAVADO10, IMPORTEGRAVA"& _ 
                "DO5, IMPORTEEXENTO, INTEGRADO, TIPOIVA, CODMATERIAPRIMA, VIDAUTIL FROM dbo.COMPR"& _ 
                "ASDETALLE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.COMPRASDETALLEDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.COMPRASDETALLEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.COMPRASDETALLEDataTable = New DSReporteProductoNW.COMPRASDETALLEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.COMPRASDETALLEDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "COMPRASDETALLE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_ComprasDetalleID As Decimal,  _
                    ByVal Original_CODCOMPRA As Decimal,  _
                    ByVal Original_LINEANROCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDADCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOUNITARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FACTORPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_COSTOBRUTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ORDENFABRICACION As String,  _
                    ByVal Original_COSTOPROMEDIOMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOPPMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRECIOMAY As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRECIOMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LINEANUMERO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESPRODUCTO As String,  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEEXENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INTEGRADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TIPOIVA As String,  _
                    ByVal Original_CODMATERIAPRIMA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VIDAUTIL As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_ComprasDetalleID,Decimal)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODCOMPRA,Decimal)
            If (Original_LINEANROCOMPRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_LINEANROCOMPRA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPRODUCTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_CODPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CANTIDADCOMPRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CANTIDADCOMPRA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOPROMEDIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_COSTOPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOUNITARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_COSTOUNITARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_IVA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_IVA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_FACTORPROMEDIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_FACTORPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOBRUTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_COSTOBRUTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_ORDENFABRICACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_ORDENFABRICACION,String)
            End If
            If (Original_COSTOPROMEDIOMAESTRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_COSTOPROMEDIOMAESTRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOPPMAESTRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_COSTOPPMAESTRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_PRECIOMAY.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_PRECIOMAY.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_PRECIOMIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_PRECIOMIN.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_LINEANUMERO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_LINEANUMERO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCENTRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_DESPRODUCTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_DESPRODUCTO,String)
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTEGRAVADO10.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_IMPORTEGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTEGRAVADO5.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_IMPORTEGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTEEXENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_IMPORTEEXENTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_INTEGRADO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_INTEGRADO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOIVA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_TIPOIVA,String)
            End If
            If (Original_CODMATERIAPRIMA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(Original_CODMATERIAPRIMA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_VIDAUTIL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(Original_VIDAUTIL.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODCOMPRA As Decimal,  _
                    ByVal LINEANROCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal CANTIDADCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOUNITARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal IVA As Global.System.Nullable(Of Decimal),  _
                    ByVal FACTORPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal COSTOBRUTO As Global.System.Nullable(Of Decimal),  _
                    ByVal ORDENFABRICACION As String,  _
                    ByVal COSTOPROMEDIOMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOPPMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECIOMAY As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECIOMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal LINEANUMERO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEEXENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal INTEGRADO As Global.System.Nullable(Of Decimal),  _
                    ByVal TIPOIVA As String,  _
                    ByVal CODMATERIAPRIMA As Global.System.Nullable(Of Decimal),  _
                    ByVal VIDAUTIL As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODCOMPRA,Decimal)
            If (LINEANROCOMPRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(LINEANROCOMPRA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODPRODUCTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODCODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CANTIDADCOMPRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CANTIDADCOMPRA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (COSTOPROMEDIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(COSTOPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (COSTOUNITARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(COSTOUNITARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IVA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(IVA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (FACTORPROMEDIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(FACTORPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (COSTOBRUTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(COSTOBRUTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ORDENFABRICACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(ORDENFABRICACION,String)
            End If
            If (COSTOPROMEDIOMAESTRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(COSTOPROMEDIOMAESTRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (COSTOPPMAESTRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(COSTOPPMAESTRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (PRECIOMAY.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(PRECIOMAY.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PRECIOMIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(PRECIOMIN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (LINEANUMERO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(LINEANUMERO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CODCENTRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DESPRODUCTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(DESPRODUCTO,String)
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IMPORTEGRAVADO10.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(IMPORTEGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (IMPORTEGRAVADO5.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(IMPORTEGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (IMPORTEEXENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(IMPORTEEXENTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (INTEGRADO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(INTEGRADO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TIPOIVA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(TIPOIVA,String)
            End If
            If (CODMATERIAPRIMA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(CODMATERIAPRIMA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VIDAUTIL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(VIDAUTIL.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODCOMPRA As Decimal,  _
                    ByVal LINEANROCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal CANTIDADCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOUNITARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal IVA As Global.System.Nullable(Of Decimal),  _
                    ByVal FACTORPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal COSTOBRUTO As Global.System.Nullable(Of Decimal),  _
                    ByVal ORDENFABRICACION As String,  _
                    ByVal COSTOPROMEDIOMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOPPMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECIOMAY As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECIOMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal LINEANUMERO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEEXENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal INTEGRADO As Global.System.Nullable(Of Decimal),  _
                    ByVal TIPOIVA As String,  _
                    ByVal CODMATERIAPRIMA As Global.System.Nullable(Of Decimal),  _
                    ByVal VIDAUTIL As Global.System.Nullable(Of Date),  _
                    ByVal Original_ComprasDetalleID As Decimal,  _
                    ByVal Original_CODCOMPRA As Decimal,  _
                    ByVal Original_LINEANROCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDADCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOUNITARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FACTORPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_COSTOBRUTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ORDENFABRICACION As String,  _
                    ByVal Original_COSTOPROMEDIOMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOPPMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRECIOMAY As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRECIOMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LINEANUMERO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESPRODUCTO As String,  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEEXENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INTEGRADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TIPOIVA As String,  _
                    ByVal Original_CODMATERIAPRIMA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VIDAUTIL As Global.System.Nullable(Of Date),  _
                    ByVal ComprasDetalleID As Decimal) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODCOMPRA,Decimal)
            If (LINEANROCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(LINEANROCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODPRODUCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODCODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CANTIDADCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CANTIDADCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (COSTOPROMEDIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(COSTOPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (COSTOUNITARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(COSTOUNITARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (IVA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(IVA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (FACTORPROMEDIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(FACTORPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (COSTOBRUTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(COSTOBRUTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (ORDENFABRICACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(ORDENFABRICACION,String)
            End If
            If (COSTOPROMEDIOMAESTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(COSTOPROMEDIOMAESTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (COSTOPPMAESTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(COSTOPPMAESTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (PRECIOMAY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(PRECIOMAY.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (PRECIOMIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(PRECIOMIN.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (LINEANUMERO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(LINEANUMERO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (CODCENTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (DESPRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(DESPRODUCTO,String)
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (IMPORTEGRAVADO10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(IMPORTEGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (IMPORTEGRAVADO5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(IMPORTEGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (IMPORTEEXENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(IMPORTEEXENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (INTEGRADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(INTEGRADO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (TIPOIVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(TIPOIVA,String)
            End If
            If (CODMATERIAPRIMA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(CODMATERIAPRIMA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (VIDAUTIL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(VIDAUTIL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_ComprasDetalleID,Decimal)
            Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CODCOMPRA,Decimal)
            If (Original_LINEANROCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_LINEANROCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPRODUCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_CODPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_CANTIDADCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_CANTIDADCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOPROMEDIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_COSTOPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOUNITARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_COSTOUNITARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_IVA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_IVA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_FACTORPROMEDIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_FACTORPROMEDIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOBRUTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(Original_COSTOBRUTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_ORDENFABRICACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(Original_ORDENFABRICACION,String)
            End If
            If (Original_COSTOPROMEDIOMAESTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(Original_COSTOPROMEDIOMAESTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOPPMAESTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(Original_COSTOPPMAESTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_PRECIOMAY.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(Original_PRECIOMAY.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_PRECIOMIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(Original_PRECIOMIN.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_LINEANUMERO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(Original_LINEANUMERO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCENTRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(Original_CODCENTRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_DESPRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(Original_DESPRODUCTO,String)
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTEGRAVADO10.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(Original_IMPORTEGRAVADO10.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(68).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTEGRAVADO5.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(Original_IMPORTEGRAVADO5.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTEEXENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(Original_IMPORTEEXENTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_INTEGRADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(Original_INTEGRADO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_TIPOIVA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(Original_TIPOIVA,String)
            End If
            If (Original_CODMATERIAPRIMA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(Original_CODMATERIAPRIMA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_VIDAUTIL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(Original_VIDAUTIL.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(81).Value = CType(ComprasDetalleID,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODCOMPRA As Decimal,  _
                    ByVal LINEANROCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal CANTIDADCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOUNITARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal IVA As Global.System.Nullable(Of Decimal),  _
                    ByVal FACTORPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal COSTOBRUTO As Global.System.Nullable(Of Decimal),  _
                    ByVal ORDENFABRICACION As String,  _
                    ByVal COSTOPROMEDIOMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal COSTOPPMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECIOMAY As Global.System.Nullable(Of Decimal),  _
                    ByVal PRECIOMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal LINEANUMERO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTEEXENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal INTEGRADO As Global.System.Nullable(Of Decimal),  _
                    ByVal TIPOIVA As String,  _
                    ByVal CODMATERIAPRIMA As Global.System.Nullable(Of Decimal),  _
                    ByVal VIDAUTIL As Global.System.Nullable(Of Date),  _
                    ByVal Original_ComprasDetalleID As Decimal,  _
                    ByVal Original_CODCOMPRA As Decimal,  _
                    ByVal Original_LINEANROCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CANTIDADCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOUNITARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FACTORPROMEDIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_COSTOBRUTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_ORDENFABRICACION As String,  _
                    ByVal Original_COSTOPROMEDIOMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COSTOPPMAESTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRECIOMAY As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRECIOMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_LINEANUMERO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCENTRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESPRODUCTO As String,  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEGRAVADO10 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEGRAVADO5 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTEEXENTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INTEGRADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_TIPOIVA As String,  _
                    ByVal Original_CODMATERIAPRIMA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VIDAUTIL As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(CODCOMPRA, LINEANROCOMPRA, CODPRODUCTO, CODCODIGO, CANTIDADCOMPRA, COSTOPROMEDIO, COSTOUNITARIO, IVA, FACTORPROMEDIO, FECGRA, COSTOBRUTO, ORDENFABRICACION, COSTOPROMEDIOMAESTRO, COSTOPPMAESTRO, PRECIOMAY, PRECIOMIN, LINEANUMERO, CODCENTRO, DESPRODUCTO, CODSUCURSAL, IMPORTEGRAVADO10, IMPORTEGRAVADO5, IMPORTEEXENTO, INTEGRADO, TIPOIVA, CODMATERIAPRIMA, VIDAUTIL, Original_ComprasDetalleID, Original_CODCOMPRA, Original_LINEANROCOMPRA, Original_CODPRODUCTO, Original_CODCODIGO, Original_CANTIDADCOMPRA, Original_COSTOPROMEDIO, Original_COSTOUNITARIO, Original_IVA, Original_FACTORPROMEDIO, Original_FECGRA, Original_COSTOBRUTO, Original_ORDENFABRICACION, Original_COSTOPROMEDIOMAESTRO, Original_COSTOPPMAESTRO, Original_PRECIOMAY, Original_PRECIOMIN, Original_LINEANUMERO, Original_CODCENTRO, Original_DESPRODUCTO, Original_CODSUCURSAL, Original_IMPORTEGRAVADO10, Original_IMPORTEGRAVADO5, Original_IMPORTEEXENTO, Original_INTEGRADO, Original_TIPOIVA, Original_CODMATERIAPRIMA, Original_VIDAUTIL, Original_ComprasDetalleID)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class FAMILIATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "FAMILIA"
            tableMapping.ColumnMappings.Add("CODFAMILIA", "CODFAMILIA")
            tableMapping.ColumnMappings.Add("NUMFAMILIA", "NUMFAMILIA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [FAMILIA] WHERE (([CODFAMILIA] = @Original_CODFAMILIA) AND ((@IsNull_"& _ 
                "NUMFAMILIA = 1 AND [NUMFAMILIA] IS NULL) OR ([NUMFAMILIA] = @Original_NUMFAMILIA"& _ 
                ")) AND ((@IsNull_DESFAMILIA = 1 AND [DESFAMILIA] IS NULL) OR ([DESFAMILIA] = @Or"& _ 
                "iginal_DESFAMILIA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFAMILIA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFAMILIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMFAMILIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [FAMILIA] ([CODFAMILIA], [NUMFAMILIA], [DESFAMILIA]) VALUES (@CODFAMI"& _ 
                "LIA, @NUMFAMILIA, @DESFAMILIA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODFAMILIA, NUMFAMILIA, DESFAMILIA FROM "& _ 
                "FAMILIA WHERE (CODFAMILIA = @CODFAMILIA) ORDER BY DESFAMILIA"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFAMILIA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMFAMILIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [FAMILIA] SET [CODFAMILIA] = @CODFAMILIA, [NUMFAMILIA] = @NUMFAMILIA, [DES"& _ 
                "FAMILIA] = @DESFAMILIA WHERE (([CODFAMILIA] = @Original_CODFAMILIA) AND ((@IsNul"& _ 
                "l_NUMFAMILIA = 1 AND [NUMFAMILIA] IS NULL) OR ([NUMFAMILIA] = @Original_NUMFAMIL"& _ 
                "IA)) AND ((@IsNull_DESFAMILIA = 1 AND [DESFAMILIA] IS NULL) OR ([DESFAMILIA] = @"& _ 
                "Original_DESFAMILIA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODFAMILIA, NUMFAMILIA, DESFAMILIA FROM FAMILIA "& _ 
                "WHERE (CODFAMILIA = @CODFAMILIA) ORDER BY DESFAMILIA"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFAMILIA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMFAMILIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFAMILIA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFAMILIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMFAMILIA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESFAMILIA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODFAMILIA, NUMFAMILIA, DESFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            FAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER "& _ 
                "BY DESFAMILIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.FAMILIADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.FAMILIADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.FAMILIADataTable = New DSReporteProductoNW.FAMILIADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.FAMILIADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "FAMILIA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODFAMILIA As Decimal, ByVal Original_NUMFAMILIA As String, ByVal Original_DESFAMILIA As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODFAMILIA,Decimal)
            If (Original_NUMFAMILIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NUMFAMILIA,String)
            End If
            If (Original_DESFAMILIA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_DESFAMILIA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODFAMILIA As Decimal, ByVal NUMFAMILIA As String, ByVal DESFAMILIA As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODFAMILIA,Decimal)
            If (NUMFAMILIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NUMFAMILIA,String)
            End If
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESFAMILIA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODFAMILIA As Decimal, ByVal NUMFAMILIA As String, ByVal DESFAMILIA As String, ByVal Original_CODFAMILIA As Decimal, ByVal Original_NUMFAMILIA As String, ByVal Original_DESFAMILIA As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODFAMILIA,Decimal)
            If (NUMFAMILIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NUMFAMILIA,String)
            End If
            If (DESFAMILIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESFAMILIA,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(3).Value = CType(Original_CODFAMILIA,Decimal)
            If (Original_NUMFAMILIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_NUMFAMILIA,String)
            End If
            If (Original_DESFAMILIA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DESFAMILIA,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NUMFAMILIA As String, ByVal DESFAMILIA As String, ByVal Original_CODFAMILIA As Decimal, ByVal Original_NUMFAMILIA As String, ByVal Original_DESFAMILIA As String) As Integer
            Return Me.Update(Original_CODFAMILIA, NUMFAMILIA, DESFAMILIA, Original_CODFAMILIA, Original_NUMFAMILIA, Original_DESFAMILIA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PRODUCTOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRODUCTOS"
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("CODFAMILIA", "CODFAMILIA")
            tableMapping.ColumnMappings.Add("CODLINEA", "CODLINEA")
            tableMapping.ColumnMappings.Add("NUMCOLOR", "NUMCOLOR")
            tableMapping.ColumnMappings.Add("COL_CODEMPRESA", "COL_CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMTALLE", "NUMTALLE")
            tableMapping.ColumnMappings.Add("TAL_CODEMPRESA", "TAL_CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODIVA", "CODIVA")
            tableMapping.ColumnMappings.Add("CODMEDIDA", "CODMEDIDA")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODESTADOPRODUCTO", "CODESTADOPRODUCTO")
            tableMapping.ColumnMappings.Add("CODDESCUENTO", "CODDESCUENTO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODPROVEEDOR", "CODPROVEEDOR")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("CODIGOBARRA", "CODIGOBARRA")
            tableMapping.ColumnMappings.Add("COSTOANTERIOR", "COSTOANTERIOR")
            tableMapping.ColumnMappings.Add("STOCKMINIMO", "STOCKMINIMO")
            tableMapping.ColumnMappings.Add("STOCKMAXIMO", "STOCKMAXIMO")
            tableMapping.ColumnMappings.Add("FECHAINGRESO", "FECHAINGRESO")
            tableMapping.ColumnMappings.Add("CODIGOORIGINAL", "CODIGOORIGINAL")
            tableMapping.ColumnMappings.Add("PRODUCTOACTIVO", "PRODUCTOACTIVO")
            tableMapping.ColumnMappings.Add("ULTIMOCOSTO", "ULTIMOCOSTO")
            tableMapping.ColumnMappings.Add("PORCENCOMI", "PORCENCOMI")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("COSTOPP", "COSTOPP")
            tableMapping.ColumnMappings.Add("FECHAPP", "FECHAPP")
            tableMapping.ColumnMappings.Add("USUPP", "USUPP")
            tableMapping.ColumnMappings.Add("ORDPRE", "ORDPRE")
            tableMapping.ColumnMappings.Add("EMPREUSUPP", "EMPREUSUPP")
            tableMapping.ColumnMappings.Add("FACCAM", "FACCAM")
            tableMapping.ColumnMappings.Add("FECHAULTIMACOMPRA", "FECHAULTIMACOMPRA")
            tableMapping.ColumnMappings.Add("NUMCLOR", "NUMCLOR")
            tableMapping.ColumnMappings.Add("CLOR_CODEMPRESA", "CLOR_CODEMPRESA")
            tableMapping.ColumnMappings.Add("PESO", "PESO")
            tableMapping.ColumnMappings.Add("PESOESPECIFICO", "PESOESPECIFICO")
            tableMapping.ColumnMappings.Add("PESOPORMEDIDA", "PESOPORMEDIDA")
            tableMapping.ColumnMappings.Add("CODPLANTILLA", "CODPLANTILLA")
            tableMapping.ColumnMappings.Add("SERVICIO", "SERVICIO")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("IVAINCLUIDO", "IVAINCLUIDO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("PRECIOSERVICIO", "PRECIOSERVICIO")
            tableMapping.ColumnMappings.Add("PRODUCTOPRODUCIDO", "PRODUCTOPRODUCIDO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [PRODUCTOS] WHERE (([CODPRODUCTO] = @Original_CODPRODUCTO) AND ((@IsN"& _ 
                "ull_CODRUBRO = 1 AND [CODRUBRO] IS NULL) OR ([CODRUBRO] = @Original_CODRUBRO)) A"& _ 
                "ND ((@IsNull_CODFAMILIA = 1 AND [CODFAMILIA] IS NULL) OR ([CODFAMILIA] = @Origin"& _ 
                "al_CODFAMILIA)) AND ((@IsNull_CODLINEA = 1 AND [CODLINEA] IS NULL) OR ([CODLINEA"& _ 
                "] = @Original_CODLINEA)) AND ((@IsNull_NUMCOLOR = 1 AND [NUMCOLOR] IS NULL) OR ("& _ 
                "[NUMCOLOR] = @Original_NUMCOLOR)) AND ((@IsNull_COL_CODEMPRESA = 1 AND [COL_CODE"& _ 
                "MPRESA] IS NULL) OR ([COL_CODEMPRESA] = @Original_COL_CODEMPRESA)) AND ((@IsNull"& _ 
                "_NUMTALLE = 1 AND [NUMTALLE] IS NULL) OR ([NUMTALLE] = @Original_NUMTALLE)) AND "& _ 
                "((@IsNull_TAL_CODEMPRESA = 1 AND [TAL_CODEMPRESA] IS NULL) OR ([TAL_CODEMPRESA] "& _ 
                "= @Original_TAL_CODEMPRESA)) AND ((@IsNull_CODIVA = 1 AND [CODIVA] IS NULL) OR ("& _ 
                "[CODIVA] = @Original_CODIVA)) AND ((@IsNull_CODMEDIDA = 1 AND [CODMEDIDA] IS NUL"& _ 
                "L) OR ([CODMEDIDA] = @Original_CODMEDIDA)) AND ((@IsNull_CODMONEDA = 1 AND [CODM"& _ 
                "ONEDA] IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_CODESTADOP"& _ 
                "RODUCTO = 1 AND [CODESTADOPRODUCTO] IS NULL) OR ([CODESTADOPRODUCTO] = @Original"& _ 
                "_CODESTADOPRODUCTO)) AND ((@IsNull_CODDESCUENTO = 1 AND [CODDESCUENTO] IS NULL) "& _ 
                "OR ([CODDESCUENTO] = @Original_CODDESCUENTO)) AND ((@IsNull_CODUSUARIO = 1 AND ["& _ 
                "CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_COD"& _ 
                "EMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) "& _ 
                "AND ((@IsNull_CODPROVEEDOR = 1 AND [CODPROVEEDOR] IS NULL) OR ([CODPROVEEDOR] = "& _ 
                "@Original_CODPROVEEDOR)) AND ((@IsNull_DESPRODUCTO = 1 AND [DESPRODUCTO] IS NULL"& _ 
                ") OR ([DESPRODUCTO] = @Original_DESPRODUCTO)) AND ((@IsNull_CODIGOBARRA = 1 AND "& _ 
                "[CODIGOBARRA] IS NULL) OR ([CODIGOBARRA] = @Original_CODIGOBARRA)) AND ((@IsNull"& _ 
                "_COSTOANTERIOR = 1 AND [COSTOANTERIOR] IS NULL) OR ([COSTOANTERIOR] = @Original_"& _ 
                "COSTOANTERIOR)) AND ((@IsNull_STOCKMINIMO = 1 AND [STOCKMINIMO] IS NULL) OR ([ST"& _ 
                "OCKMINIMO] = @Original_STOCKMINIMO)) AND ((@IsNull_STOCKMAXIMO = 1 AND [STOCKMAX"& _ 
                "IMO] IS NULL) OR ([STOCKMAXIMO] = @Original_STOCKMAXIMO)) AND ((@IsNull_FECHAING"& _ 
                "RESO = 1 AND [FECHAINGRESO] IS NULL) OR ([FECHAINGRESO] = @Original_FECHAINGRESO"& _ 
                ")) AND ((@IsNull_CODIGOORIGINAL = 1 AND [CODIGOORIGINAL] IS NULL) OR ([CODIGOORI"& _ 
                "GINAL] = @Original_CODIGOORIGINAL)) AND ((@IsNull_PRODUCTOACTIVO = 1 AND [PRODUC"& _ 
                "TOACTIVO] IS NULL) OR ([PRODUCTOACTIVO] = @Original_PRODUCTOACTIVO)) AND ((@IsNu"& _ 
                "ll_ULTIMOCOSTO = 1 AND [ULTIMOCOSTO] IS NULL) OR ([ULTIMOCOSTO] = @Original_ULTI"& _ 
                "MOCOSTO)) AND ((@IsNull_PORCENCOMI = 1 AND [PORCENCOMI] IS NULL) OR ([PORCENCOMI"& _ 
                "] = @Original_PORCENCOMI)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([F"& _ 
                "ECGRA] = @Original_FECGRA)) AND ((@IsNull_COSTOPP = 1 AND [COSTOPP] IS NULL) OR "& _ 
                "([COSTOPP] = @Original_COSTOPP)) AND ((@IsNull_FECHAPP = 1 AND [FECHAPP] IS NULL"& _ 
                ") OR ([FECHAPP] = @Original_FECHAPP)) AND ((@IsNull_USUPP = 1 AND [USUPP] IS NUL"& _ 
                "L) OR ([USUPP] = @Original_USUPP)) AND ((@IsNull_ORDPRE = 1 AND [ORDPRE] IS NULL"& _ 
                ") OR ([ORDPRE] = @Original_ORDPRE)) AND ((@IsNull_EMPREUSUPP = 1 AND [EMPREUSUPP"& _ 
                "] IS NULL) OR ([EMPREUSUPP] = @Original_EMPREUSUPP)) AND ((@IsNull_FACCAM = 1 AN"& _ 
                "D [FACCAM] IS NULL) OR ([FACCAM] = @Original_FACCAM)) AND ((@IsNull_FECHAULTIMAC"& _ 
                "OMPRA = 1 AND [FECHAULTIMACOMPRA] IS NULL) OR ([FECHAULTIMACOMPRA] = @Original_F"& _ 
                "ECHAULTIMACOMPRA)) AND ((@IsNull_NUMCLOR = 1 AND [NUMCLOR] IS NULL) OR ([NUMCLOR"& _ 
                "] = @Original_NUMCLOR)) AND ((@IsNull_CLOR_CODEMPRESA = 1 AND [CLOR_CODEMPRESA] "& _ 
                "IS NULL) OR ([CLOR_CODEMPRESA] = @Original_CLOR_CODEMPRESA)) AND ((@IsNull_PESO "& _ 
                "= 1 AND [PESO] IS NULL) OR ([PESO] = @Original_PESO)) AND ((@IsNull_PESOESPECIFI"& _ 
                "CO = 1 AND [PESOESPECIFICO] IS NULL) OR ([PESOESPECIFICO] = @Original_PESOESPECI"& _ 
                "FICO)) AND ((@IsNull_PESOPORMEDIDA = 1 AND [PESOPORMEDIDA] IS NULL) OR ([PESOPOR"& _ 
                "MEDIDA] = @Original_PESOPORMEDIDA)) AND ((@IsNull_CODPLANTILLA = 1 AND [CODPLANT"& _ 
                "ILLA] IS NULL) OR ([CODPLANTILLA] = @Original_CODPLANTILLA)) AND ((@IsNull_SERVI"& _ 
                "CIO = 1 AND [SERVICIO] IS NULL) OR ([SERVICIO] = @Original_SERVICIO)) AND ((@IsN"& _ 
                "ull_ESTADO = 1 AND [ESTADO] IS NULL) OR ([ESTADO] = @Original_ESTADO)) AND ((@Is"& _ 
                "Null_IVAINCLUIDO = 1 AND [IVAINCLUIDO] IS NULL) OR ([IVAINCLUIDO] = @Original_IV"& _ 
                "AINCLUIDO)) AND ((@IsNull_PRODUCTO = 1 AND [PRODUCTO] IS NULL) OR ([PRODUCTO] = "& _ 
                "@Original_PRODUCTO)) AND ((@IsNull_PRECIOSERVICIO = 1 AND [PRECIOSERVICIO] IS NU"& _ 
                "LL) OR ([PRECIOSERVICIO] = @Original_PRECIOSERVICIO)) AND ((@IsNull_PRODUCTOPROD"& _ 
                "UCIDO = 1 AND [PRODUCTOPRODUCIDO] IS NULL) OR ([PRODUCTOPRODUCIDO] = @Original_P"& _ 
                "RODUCTOPRODUCIDO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODRUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODRUBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODRUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODRUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODLINEA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODLINEA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODLINEA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCOLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOLOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCOLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMTALLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTALLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMTALLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTALLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TAL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TAL_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "TAL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMEDIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODESTADOPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODESTADOPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODESTADOPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADOPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDESCUENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDESCUENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGOBARRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOBARRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGOBARRA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOBARRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOANTERIOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMINIMO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMINIMO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMINIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMINIMO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMAXIMO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMAXIMO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMAXIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAXIMO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGOORIGINAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOORIGINAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGOORIGINAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOORIGINAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRODUCTOACTIVO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOACTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRODUCTOACTIVO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOACTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ULTIMOCOSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ULTIMOCOSTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ULTIMOCOSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ULTIMOCOSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORCENCOMI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENCOMI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORCENCOMI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PORCENCOMI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAPP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_USUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDPRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDPRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDPRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "ORDPRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMPREUSUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPREUSUPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMPREUSUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPREUSUPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FACCAM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACCAM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FACCAM", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACCAM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAULTIMACOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAULTIMACOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAULTIMACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAULTIMACOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCLOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLOR_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLOR_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLOR_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CLOR_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESOESPECIFICO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOESPECIFICO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESOESPECIFICO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOESPECIFICO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESOPORMEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOPORMEDIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESOPORMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOPORMEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPLANTILLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPLANTILLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPLANTILLA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPLANTILLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERVICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERVICIO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVAINCLUIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRODUCTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIOSERVICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIOSERVICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIOSERVICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOSERVICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRODUCTOPRODUCIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOPRODUCIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRODUCTOPRODUCIDO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOPRODUCIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [PRODUCTOS] ([CODRUBRO], [CODFAMILIA], [CODLINEA], [NUMCOLOR], [COL_C"& _ 
                "ODEMPRESA], [NUMTALLE], [TAL_CODEMPRESA], [CODIVA], [CODMEDIDA], [CODMONEDA], [C"& _ 
                "ODESTADOPRODUCTO], [CODDESCUENTO], [CODUSUARIO], [CODEMPRESA], [CODPROVEEDOR], ["& _ 
                "DESPRODUCTO], [CODIGOBARRA], [COSTOANTERIOR], [STOCKMINIMO], [STOCKMAXIMO], [FEC"& _ 
                "HAINGRESO], [CODIGOORIGINAL], [PRODUCTOACTIVO], [ULTIMOCOSTO], [PORCENCOMI], [FE"& _ 
                "CGRA], [COSTOPP], [FECHAPP], [USUPP], [ORDPRE], [EMPREUSUPP], [FACCAM], [FECHAUL"& _ 
                "TIMACOMPRA], [NUMCLOR], [CLOR_CODEMPRESA], [PESO], [PESOESPECIFICO], [PESOPORMED"& _ 
                "IDA], [CODPLANTILLA], [SERVICIO], [ESTADO], [IVAINCLUIDO], [PRODUCTO], [PRECIOSE"& _ 
                "RVICIO], [PRODUCTOPRODUCIDO]) VALUES (@CODRUBRO, @CODFAMILIA, @CODLINEA, @NUMCOL"& _ 
                "OR, @COL_CODEMPRESA, @NUMTALLE, @TAL_CODEMPRESA, @CODIVA, @CODMEDIDA, @CODMONEDA"& _ 
                ", @CODESTADOPRODUCTO, @CODDESCUENTO, @CODUSUARIO, @CODEMPRESA, @CODPROVEEDOR, @D"& _ 
                "ESPRODUCTO, @CODIGOBARRA, @COSTOANTERIOR, @STOCKMINIMO, @STOCKMAXIMO, @FECHAINGR"& _ 
                "ESO, @CODIGOORIGINAL, @PRODUCTOACTIVO, @ULTIMOCOSTO, @PORCENCOMI, @FECGRA, @COST"& _ 
                "OPP, @FECHAPP, @USUPP, @ORDPRE, @EMPREUSUPP, @FACCAM, @FECHAULTIMACOMPRA, @NUMCL"& _ 
                "OR, @CLOR_CODEMPRESA, @PESO, @PESOESPECIFICO, @PESOPORMEDIDA, @CODPLANTILLA, @SE"& _ 
                "RVICIO, @ESTADO, @IVAINCLUIDO, @PRODUCTO, @PRECIOSERVICIO, @PRODUCTOPRODUCIDO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODPRODUCTO, CODRUBRO, CODFAMILIA, CODLINEA, NUMCOLOR, COL_CODEMPRESA, N"& _ 
                "UMTALLE, TAL_CODEMPRESA, CODIVA, CODMEDIDA, CODMONEDA, CODESTADOPRODUCTO, CODDES"& _ 
                "CUENTO, CODUSUARIO, CODEMPRESA, CODPROVEEDOR, DESPRODUCTO, CODIGOBARRA, COSTOANT"& _ 
                "ERIOR, STOCKMINIMO, STOCKMAXIMO, FECHAINGRESO, CODIGOORIGINAL, PRODUCTOACTIVO, U"& _ 
                "LTIMOCOSTO, PORCENCOMI, FECGRA, COSTOPP, FECHAPP, USUPP, ORDPRE, EMPREUSUPP, FAC"& _ 
                "CAM, FECHAULTIMACOMPRA, NUMCLOR, CLOR_CODEMPRESA, PESO, PESOESPECIFICO, PESOPORM"& _ 
                "EDIDA, CODPLANTILLA, SERVICIO, ESTADO, IVAINCLUIDO, PRODUCTO, PRECIOSERVICIO, PR"& _ 
                "ODUCTOPRODUCIDO FROM PRODUCTOS WHERE (CODPRODUCTO = SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODRUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODRUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODLINEA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODLINEA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCOLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMTALLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTALLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAL_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "TAL_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODESTADOPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADOPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDESCUENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGOBARRA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOBARRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOANTERIOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMINIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMINIMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMAXIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAXIMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGOORIGINAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOORIGINAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCTOACTIVO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ULTIMOCOSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ULTIMOCOSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORCENCOMI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PORCENCOMI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAPP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDPRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "ORDPRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMPREUSUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPREUSUPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACCAM", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACCAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAULTIMACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAULTIMACOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLOR_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CLOR_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESOESPECIFICO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOESPECIFICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESOPORMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOPORMEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPLANTILLA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPLANTILLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERVICIO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIOSERVICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOSERVICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCTOPRODUCIDO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOPRODUCIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [PRODUCTOS] SET [CODRUBRO] = @CODRUBRO, [CODFAMILIA] = @CODFAMILIA, [CODLI"& _ 
                "NEA] = @CODLINEA, [NUMCOLOR] = @NUMCOLOR, [COL_CODEMPRESA] = @COL_CODEMPRESA, [N"& _ 
                "UMTALLE] = @NUMTALLE, [TAL_CODEMPRESA] = @TAL_CODEMPRESA, [CODIVA] = @CODIVA, [C"& _ 
                "ODMEDIDA] = @CODMEDIDA, [CODMONEDA] = @CODMONEDA, [CODESTADOPRODUCTO] = @CODESTA"& _ 
                "DOPRODUCTO, [CODDESCUENTO] = @CODDESCUENTO, [CODUSUARIO] = @CODUSUARIO, [CODEMPR"& _ 
                "ESA] = @CODEMPRESA, [CODPROVEEDOR] = @CODPROVEEDOR, [DESPRODUCTO] = @DESPRODUCTO"& _ 
                ", [CODIGOBARRA] = @CODIGOBARRA, [COSTOANTERIOR] = @COSTOANTERIOR, [STOCKMINIMO] "& _ 
                "= @STOCKMINIMO, [STOCKMAXIMO] = @STOCKMAXIMO, [FECHAINGRESO] = @FECHAINGRESO, [C"& _ 
                "ODIGOORIGINAL] = @CODIGOORIGINAL, [PRODUCTOACTIVO] = @PRODUCTOACTIVO, [ULTIMOCOS"& _ 
                "TO] = @ULTIMOCOSTO, [PORCENCOMI] = @PORCENCOMI, [FECGRA] = @FECGRA, [COSTOPP] = "& _ 
                "@COSTOPP, [FECHAPP] = @FECHAPP, [USUPP] = @USUPP, [ORDPRE] = @ORDPRE, [EMPREUSUP"& _ 
                "P] = @EMPREUSUPP, [FACCAM] = @FACCAM, [FECHAULTIMACOMPRA] = @FECHAULTIMACOMPRA, "& _ 
                "[NUMCLOR] = @NUMCLOR, [CLOR_CODEMPRESA] = @CLOR_CODEMPRESA, [PESO] = @PESO, [PES"& _ 
                "OESPECIFICO] = @PESOESPECIFICO, [PESOPORMEDIDA] = @PESOPORMEDIDA, [CODPLANTILLA]"& _ 
                " = @CODPLANTILLA, [SERVICIO] = @SERVICIO, [ESTADO] = @ESTADO, [IVAINCLUIDO] = @I"& _ 
                "VAINCLUIDO, [PRODUCTO] = @PRODUCTO, [PRECIOSERVICIO] = @PRECIOSERVICIO, [PRODUCT"& _ 
                "OPRODUCIDO] = @PRODUCTOPRODUCIDO WHERE (([CODPRODUCTO] = @Original_CODPRODUCTO) "& _ 
                "AND ((@IsNull_CODRUBRO = 1 AND [CODRUBRO] IS NULL) OR ([CODRUBRO] = @Original_CO"& _ 
                "DRUBRO)) AND ((@IsNull_CODFAMILIA = 1 AND [CODFAMILIA] IS NULL) OR ([CODFAMILIA]"& _ 
                " = @Original_CODFAMILIA)) AND ((@IsNull_CODLINEA = 1 AND [CODLINEA] IS NULL) OR "& _ 
                "([CODLINEA] = @Original_CODLINEA)) AND ((@IsNull_NUMCOLOR = 1 AND [NUMCOLOR] IS "& _ 
                "NULL) OR ([NUMCOLOR] = @Original_NUMCOLOR)) AND ((@IsNull_COL_CODEMPRESA = 1 AND"& _ 
                " [COL_CODEMPRESA] IS NULL) OR ([COL_CODEMPRESA] = @Original_COL_CODEMPRESA)) AND"& _ 
                " ((@IsNull_NUMTALLE = 1 AND [NUMTALLE] IS NULL) OR ([NUMTALLE] = @Original_NUMTA"& _ 
                "LLE)) AND ((@IsNull_TAL_CODEMPRESA = 1 AND [TAL_CODEMPRESA] IS NULL) OR ([TAL_CO"& _ 
                "DEMPRESA] = @Original_TAL_CODEMPRESA)) AND ((@IsNull_CODIVA = 1 AND [CODIVA] IS "& _ 
                "NULL) OR ([CODIVA] = @Original_CODIVA)) AND ((@IsNull_CODMEDIDA = 1 AND [CODMEDI"& _ 
                "DA] IS NULL) OR ([CODMEDIDA] = @Original_CODMEDIDA)) AND ((@IsNull_CODMONEDA = 1"& _ 
                " AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_"& _ 
                "CODESTADOPRODUCTO = 1 AND [CODESTADOPRODUCTO] IS NULL) OR ([CODESTADOPRODUCTO] ="& _ 
                " @Original_CODESTADOPRODUCTO)) AND ((@IsNull_CODDESCUENTO = 1 AND [CODDESCUENTO]"& _ 
                " IS NULL) OR ([CODDESCUENTO] = @Original_CODDESCUENTO)) AND ((@IsNull_CODUSUARIO"& _ 
                " = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@"& _ 
                "IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_COD"& _ 
                "EMPRESA)) AND ((@IsNull_CODPROVEEDOR = 1 AND [CODPROVEEDOR] IS NULL) OR ([CODPRO"& _ 
                "VEEDOR] = @Original_CODPROVEEDOR)) AND ((@IsNull_DESPRODUCTO = 1 AND [DESPRODUCT"& _ 
                "O] IS NULL) OR ([DESPRODUCTO] = @Original_DESPRODUCTO)) AND ((@IsNull_CODIGOBARR"& _ 
                "A = 1 AND [CODIGOBARRA] IS NULL) OR ([CODIGOBARRA] = @Original_CODIGOBARRA)) AND"& _ 
                " ((@IsNull_COSTOANTERIOR = 1 AND [COSTOANTERIOR] IS NULL) OR ([COSTOANTERIOR] = "& _ 
                "@Original_COSTOANTERIOR)) AND ((@IsNull_STOCKMINIMO = 1 AND [STOCKMINIMO] IS NUL"& _ 
                "L) OR ([STOCKMINIMO] = @Original_STOCKMINIMO)) AND ((@IsNull_STOCKMAXIMO = 1 AND"& _ 
                " [STOCKMAXIMO] IS NULL) OR ([STOCKMAXIMO] = @Original_STOCKMAXIMO)) AND ((@IsNul"& _ 
                "l_FECHAINGRESO = 1 AND [FECHAINGRESO] IS NULL) OR ([FECHAINGRESO] = @Original_FE"& _ 
                "CHAINGRESO)) AND ((@IsNull_CODIGOORIGINAL = 1 AND [CODIGOORIGINAL] IS NULL) OR ("& _ 
                "[CODIGOORIGINAL] = @Original_CODIGOORIGINAL)) AND ((@IsNull_PRODUCTOACTIVO = 1 A"& _ 
                "ND [PRODUCTOACTIVO] IS NULL) OR ([PRODUCTOACTIVO] = @Original_PRODUCTOACTIVO)) A"& _ 
                "ND ((@IsNull_ULTIMOCOSTO = 1 AND [ULTIMOCOSTO] IS NULL) OR ([ULTIMOCOSTO] = @Ori"& _ 
                "ginal_ULTIMOCOSTO)) AND ((@IsNull_PORCENCOMI = 1 AND [PORCENCOMI] IS NULL) OR (["& _ 
                "PORCENCOMI] = @Original_PORCENCOMI)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NU"& _ 
                "LL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_COSTOPP = 1 AND [COSTOPP] IS"& _ 
                " NULL) OR ([COSTOPP] = @Original_COSTOPP)) AND ((@IsNull_FECHAPP = 1 AND [FECHAP"& _ 
                "P] IS NULL) OR ([FECHAPP] = @Original_FECHAPP)) AND ((@IsNull_USUPP = 1 AND [USU"& _ 
                "PP] IS NULL) OR ([USUPP] = @Original_USUPP)) AND ((@IsNull_ORDPRE = 1 AND [ORDPR"& _ 
                "E] IS NULL) OR ([ORDPRE] = @Original_ORDPRE)) AND ((@IsNull_EMPREUSUPP = 1 AND ["& _ 
                "EMPREUSUPP] IS NULL) OR ([EMPREUSUPP] = @Original_EMPREUSUPP)) AND ((@IsNull_FAC"& _ 
                "CAM = 1 AND [FACCAM] IS NULL) OR ([FACCAM] = @Original_FACCAM)) AND ((@IsNull_FE"& _ 
                "CHAULTIMACOMPRA = 1 AND [FECHAULTIMACOMPRA] IS NULL) OR ([FECHAULTIMACOMPRA] = @"& _ 
                "Original_FECHAULTIMACOMPRA)) AND ((@IsNull_NUMCLOR = 1 AND [NUMCLOR] IS NULL) OR"& _ 
                " ([NUMCLOR] = @Original_NUMCLOR)) AND ((@IsNull_CLOR_CODEMPRESA = 1 AND [CLOR_CO"& _ 
                "DEMPRESA] IS NULL) OR ([CLOR_CODEMPRESA] = @Original_CLOR_CODEMPRESA)) AND ((@Is"& _ 
                "Null_PESO = 1 AND [PESO] IS NULL) OR ([PESO] = @Original_PESO)) AND ((@IsNull_PE"& _ 
                "SOESPECIFICO = 1 AND [PESOESPECIFICO] IS NULL) OR ([PESOESPECIFICO] = @Original_"& _ 
                "PESOESPECIFICO)) AND ((@IsNull_PESOPORMEDIDA = 1 AND [PESOPORMEDIDA] IS NULL) OR"& _ 
                " ([PESOPORMEDIDA] = @Original_PESOPORMEDIDA)) AND ((@IsNull_CODPLANTILLA = 1 AND"& _ 
                " [CODPLANTILLA] IS NULL) OR ([CODPLANTILLA] = @Original_CODPLANTILLA)) AND ((@Is"& _ 
                "Null_SERVICIO = 1 AND [SERVICIO] IS NULL) OR ([SERVICIO] = @Original_SERVICIO)) "& _ 
                "AND ((@IsNull_ESTADO = 1 AND [ESTADO] IS NULL) OR ([ESTADO] = @Original_ESTADO))"& _ 
                " AND ((@IsNull_IVAINCLUIDO = 1 AND [IVAINCLUIDO] IS NULL) OR ([IVAINCLUIDO] = @O"& _ 
                "riginal_IVAINCLUIDO)) AND ((@IsNull_PRODUCTO = 1 AND [PRODUCTO] IS NULL) OR ([PR"& _ 
                "ODUCTO] = @Original_PRODUCTO)) AND ((@IsNull_PRECIOSERVICIO = 1 AND [PRECIOSERVI"& _ 
                "CIO] IS NULL) OR ([PRECIOSERVICIO] = @Original_PRECIOSERVICIO)) AND ((@IsNull_PR"& _ 
                "ODUCTOPRODUCIDO = 1 AND [PRODUCTOPRODUCIDO] IS NULL) OR ([PRODUCTOPRODUCIDO] = @"& _ 
                "Original_PRODUCTOPRODUCIDO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODPRODUCTO, CODRUBRO, CODFAMILIA, CODLIN"& _ 
                "EA, NUMCOLOR, COL_CODEMPRESA, NUMTALLE, TAL_CODEMPRESA, CODIVA, CODMEDIDA, CODMO"& _ 
                "NEDA, CODESTADOPRODUCTO, CODDESCUENTO, CODUSUARIO, CODEMPRESA, CODPROVEEDOR, DES"& _ 
                "PRODUCTO, CODIGOBARRA, COSTOANTERIOR, STOCKMINIMO, STOCKMAXIMO, FECHAINGRESO, CO"& _ 
                "DIGOORIGINAL, PRODUCTOACTIVO, ULTIMOCOSTO, PORCENCOMI, FECGRA, COSTOPP, FECHAPP,"& _ 
                " USUPP, ORDPRE, EMPREUSUPP, FACCAM, FECHAULTIMACOMPRA, NUMCLOR, CLOR_CODEMPRESA,"& _ 
                " PESO, PESOESPECIFICO, PESOPORMEDIDA, CODPLANTILLA, SERVICIO, ESTADO, IVAINCLUID"& _ 
                "O, PRODUCTO, PRECIOSERVICIO, PRODUCTOPRODUCIDO FROM PRODUCTOS WHERE (CODPRODUCTO"& _ 
                " = @CODPRODUCTO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODRUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODRUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODLINEA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODLINEA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCOLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMTALLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTALLE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TAL_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "TAL_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIVA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODESTADOPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADOPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDESCUENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGOBARRA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOBARRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOANTERIOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOANTERIOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMINIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMINIMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMAXIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAXIMO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODIGOORIGINAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOORIGINAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCTOACTIVO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOACTIVO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ULTIMOCOSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ULTIMOCOSTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PORCENCOMI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PORCENCOMI", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COSTOPP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAPP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ORDPRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "ORDPRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMPREUSUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPREUSUPP", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FACCAM", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACCAM", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAULTIMACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAULTIMACOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCLOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CLOR_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CLOR_CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESOESPECIFICO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOESPECIFICO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PESOPORMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOPORMEDIDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPLANTILLA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPLANTILLA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SERVICIO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@ESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "ESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRECIOSERVICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOSERVICIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRODUCTOPRODUCIDO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOPRODUCIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODRUBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODRUBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODRUBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODRUBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFAMILIA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFAMILIA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODLINEA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODLINEA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODLINEA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODLINEA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCOLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOLOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCOLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMTALLE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTALLE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMTALLE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTALLE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TAL_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TAL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TAL_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "TAL_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIVA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIVA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIVA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMEDIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODESTADOPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODESTADOPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODESTADOPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADOPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDESCUENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODDESCUENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDESCUENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPROVEEDOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESPRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESPRODUCTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGOBARRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOBARRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGOBARRA", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOBARRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOANTERIOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOANTERIOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOANTERIOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOANTERIOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMINIMO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMINIMO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMINIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMINIMO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMAXIMO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMAXIMO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMAXIMO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAXIMO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODIGOORIGINAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOORIGINAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODIGOORIGINAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODIGOORIGINAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRODUCTOACTIVO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOACTIVO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRODUCTOACTIVO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOACTIVO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ULTIMOCOSTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ULTIMOCOSTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ULTIMOCOSTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "ULTIMOCOSTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PORCENCOMI", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PORCENCOMI", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PORCENCOMI", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PORCENCOMI", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COSTOPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COSTOPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COSTOPP", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "COSTOPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAPP", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_USUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ORDPRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ORDPRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ORDPRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "ORDPRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMPREUSUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPREUSUPP", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMPREUSUPP", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMPREUSUPP", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FACCAM", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FACCAM", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FACCAM", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "FACCAM", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAULTIMACOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAULTIMACOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAULTIMACOMPRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAULTIMACOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCLOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCLOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCLOR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCLOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CLOR_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CLOR_CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CLOR_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CLOR_CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESOESPECIFICO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOESPECIFICO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESOESPECIFICO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOESPECIFICO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PESOPORMEDIDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PESOPORMEDIDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PESOPORMEDIDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "PESOPORMEDIDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPLANTILLA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPLANTILLA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPLANTILLA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPLANTILLA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SERVICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SERVICIO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SERVICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_ESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_ESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "ESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IVAINCLUIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IVAINCLUIDO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "IVAINCLUIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRODUCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRODUCTO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRECIOSERVICIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRECIOSERVICIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRECIOSERVICIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "PRECIOSERVICIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRODUCTOPRODUCIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOPRODUCIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRODUCTOPRODUCIDO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRODUCTOPRODUCIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CODPRODUCTO, CODRUBRO, CODFAMILIA, CODLINEA, NUMCOLOR, COL_CODEMPRESA, NUM"& _ 
                "TALLE, TAL_CODEMPRESA, CODIVA, CODMEDIDA, CODMONEDA, CODESTADOPRODUCTO, CODDESCU"& _ 
                "ENTO, CODUSUARIO, CODEMPRESA, CODPROVEEDOR, DESPRODUCTO, CODIGOBARRA, COSTOANTER"& _ 
                "IOR, STOCKMINIMO, STOCKMAXIMO, FECHAINGRESO, CODIGOORIGINAL, PRODUCTOACTIVO, ULT"& _ 
                "IMOCOSTO, PORCENCOMI, FECGRA, COSTOPP, FECHAPP, USUPP, ORDPRE, EMPREUSUPP, FACCA"& _ 
                "M, FECHAULTIMACOMPRA, NUMCLOR, CLOR_CODEMPRESA, PESO, PESOESPECIFICO, PESOPORMED"& _ 
                "IDA, CODPLANTILLA, SERVICIO, ESTADO, IVAINCLUIDO, PRODUCTO, PRECIOSERVICIO, PROD"& _ 
                "UCTOPRODUCIDO FROM PRODUCTOS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.PRODUCTOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.PRODUCTOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.PRODUCTOSDataTable = New DSReporteProductoNW.PRODUCTOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.PRODUCTOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "PRODUCTOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODPRODUCTO As Integer,  _
                    ByVal Original_CODRUBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODFAMILIA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODLINEA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCOLOR As String,  _
                    ByVal Original_COL_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMTALLE As String,  _
                    ByVal Original_TAL_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIVA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODESTADOPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODDESCUENTO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESPRODUCTO As String,  _
                    ByVal Original_CODIGOBARRA As String,  _
                    ByVal Original_COSTOANTERIOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMINIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMAXIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGOORIGINAL As String,  _
                    ByVal Original_PRODUCTOACTIVO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ULTIMOCOSTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PORCENCOMI As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_COSTOPP As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAPP As Global.System.Nullable(Of Date),  _
                    ByVal Original_USUPP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ORDPRE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_EMPREUSUPP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FACCAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAULTIMACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMCLOR As String,  _
                    ByVal Original_CLOR_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESOESPECIFICO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESOPORMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPLANTILLA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SERVICIO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRODUCTO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_PRECIOSERVICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRODUCTOPRODUCIDO As Global.System.Nullable(Of Byte)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODPRODUCTO,Integer)
            If (Original_CODRUBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODRUBRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODFAMILIA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODFAMILIA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODLINEA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODLINEA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCOLOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_NUMCOLOR,String)
            End If
            If (Original_COL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_COL_CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMTALLE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_NUMTALLE,String)
            End If
            If (Original_TAL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_TAL_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIVA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CODIVA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMEDIDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CODMEDIDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_CODMONEDA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_CODESTADOPRODUCTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_CODESTADOPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CODDESCUENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_CODDESCUENTO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_CODUSUARIO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_DESPRODUCTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_DESPRODUCTO,String)
            End If
            If (Original_CODIGOBARRA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(Original_CODIGOBARRA,String)
            End If
            If (Original_COSTOANTERIOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(Original_COSTOANTERIOR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMINIMO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(Original_STOCKMINIMO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMAXIMO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(Original_STOCKMAXIMO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(Original_FECHAINGRESO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGOORIGINAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(Original_CODIGOORIGINAL,String)
            End If
            If (Original_PRODUCTOACTIVO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(Original_PRODUCTOACTIVO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            If (Original_ULTIMOCOSTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(Original_ULTIMOCOSTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(48).Value = Global.System.DBNull.Value
            End If
            If (Original_PORCENCOMI.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = CType(Original_PORCENCOMI.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(50).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(51).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(52).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOPP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = CType(Original_COSTOPP.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(53).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(54).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAPP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = CType(Original_FECHAPP.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(55).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(56).Value = Global.System.DBNull.Value
            End If
            If (Original_USUPP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = CType(Original_USUPP.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(57).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(58).Value = Global.System.DBNull.Value
            End If
            If (Original_ORDPRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = CType(Original_ORDPRE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(59).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(60).Value = Global.System.DBNull.Value
            End If
            If (Original_EMPREUSUPP.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = CType(Original_EMPREUSUPP.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(61).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(62).Value = Global.System.DBNull.Value
            End If
            If (Original_FACCAM.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = CType(Original_FACCAM.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(63).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(64).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAULTIMACOMPRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = CType(Original_FECHAULTIMACOMPRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(65).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(66).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCLOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(67).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(68).Value = CType(Original_NUMCLOR,String)
            End If
            If (Original_CLOR_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = CType(Original_CLOR_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(69).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(70).Value = Global.System.DBNull.Value
            End If
            If (Original_PESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = CType(Original_PESO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(71).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(72).Value = Global.System.DBNull.Value
            End If
            If (Original_PESOESPECIFICO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = CType(Original_PESOESPECIFICO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(73).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(74).Value = Global.System.DBNull.Value
            End If
            If (Original_PESOPORMEDIDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = CType(Original_PESOPORMEDIDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(75).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(76).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPLANTILLA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = CType(Original_CODPLANTILLA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(77).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(78).Value = Global.System.DBNull.Value
            End If
            If (Original_SERVICIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = CType(Original_SERVICIO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(79).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(80).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTADO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = CType(Original_ESTADO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(81).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(82).Value = Global.System.DBNull.Value
            End If
            If (Original_IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = CType(Original_IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(83).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(84).Value = Global.System.DBNull.Value
            End If
            If (Original_PRODUCTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = CType(Original_PRODUCTO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(85).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(86).Value = Global.System.DBNull.Value
            End If
            If (Original_PRECIOSERVICIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = CType(Original_PRECIOSERVICIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(87).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(88).Value = Global.System.DBNull.Value
            End If
            If (Original_PRODUCTOPRODUCIDO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = CType(Original_PRODUCTOPRODUCIDO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(89).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(90).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODRUBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODFAMILIA As Global.System.Nullable(Of Integer),  _
                    ByVal CODLINEA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCOLOR As String,  _
                    ByVal COL_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal NUMTALLE As String,  _
                    ByVal TAL_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIVA As Global.System.Nullable(Of Integer),  _
                    ByVal CODMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Integer),  _
                    ByVal CODESTADOPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODDESCUENTO As Global.System.Nullable(Of Integer),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Integer),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODIGOBARRA As String,  _
                    ByVal COSTOANTERIOR As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMINIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMAXIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal CODIGOORIGINAL As String,  _
                    ByVal PRODUCTOACTIVO As Global.System.Nullable(Of Byte),  _
                    ByVal ULTIMOCOSTO As Global.System.Nullable(Of Decimal),  _
                    ByVal PORCENCOMI As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal COSTOPP As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAPP As Global.System.Nullable(Of Date),  _
                    ByVal USUPP As Global.System.Nullable(Of Integer),  _
                    ByVal ORDPRE As Global.System.Nullable(Of Decimal),  _
                    ByVal EMPREUSUPP As Global.System.Nullable(Of Integer),  _
                    ByVal FACCAM As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAULTIMACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal NUMCLOR As String,  _
                    ByVal CLOR_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal PESO As Global.System.Nullable(Of Decimal),  _
                    ByVal PESOESPECIFICO As Global.System.Nullable(Of Decimal),  _
                    ByVal PESOPORMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPLANTILLA As Global.System.Nullable(Of Decimal),  _
                    ByVal SERVICIO As Global.System.Nullable(Of Byte),  _
                    ByVal ESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRODUCTO As Global.System.Nullable(Of Byte),  _
                    ByVal PRECIOSERVICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRODUCTOPRODUCIDO As Global.System.Nullable(Of Byte)) As Integer
            If (CODRUBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODRUBRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODFAMILIA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODFAMILIA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODLINEA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODLINEA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMCOLOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NUMCOLOR,String)
            End If
            If (COL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(COL_CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMTALLE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NUMTALLE,String)
            End If
            If (TAL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(TAL_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODIVA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODIVA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODMEDIDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CODMEDIDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CODMONEDA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CODESTADOPRODUCTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(CODESTADOPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CODDESCUENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CODDESCUENTO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(CODUSUARIO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DESPRODUCTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(DESPRODUCTO,String)
            End If
            If (CODIGOBARRA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CODIGOBARRA,String)
            End If
            If (COSTOANTERIOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(COSTOANTERIOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (STOCKMINIMO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(STOCKMINIMO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (STOCKMAXIMO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(STOCKMAXIMO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (FECHAINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(FECHAINGRESO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CODIGOORIGINAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(CODIGOORIGINAL,String)
            End If
            If (PRODUCTOACTIVO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(PRODUCTOACTIVO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ULTIMOCOSTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(ULTIMOCOSTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (PORCENCOMI.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(PORCENCOMI.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (COSTOPP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(26).Value = CType(COSTOPP.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (FECHAPP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(27).Value = CType(FECHAPP.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (USUPP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(28).Value = CType(USUPP.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ORDPRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(29).Value = CType(ORDPRE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (EMPREUSUPP.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(30).Value = CType(EMPREUSUPP.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (FACCAM.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(31).Value = CType(FACCAM.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (FECHAULTIMACOMPRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(32).Value = CType(FECHAULTIMACOMPRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (NUMCLOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(33).Value = CType(NUMCLOR,String)
            End If
            If (CLOR_CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(34).Value = CType(CLOR_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(35).Value = CType(PESO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (PESOESPECIFICO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(36).Value = CType(PESOESPECIFICO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PESOPORMEDIDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(37).Value = CType(PESOPORMEDIDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (CODPLANTILLA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(38).Value = CType(CODPLANTILLA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SERVICIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(39).Value = CType(SERVICIO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ESTADO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(40).Value = CType(ESTADO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(41).Value = CType(IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (PRODUCTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(42).Value = CType(PRODUCTO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (PRECIOSERVICIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(43).Value = CType(PRECIOSERVICIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (PRODUCTOPRODUCIDO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(44).Value = CType(PRODUCTOPRODUCIDO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODRUBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODFAMILIA As Global.System.Nullable(Of Integer),  _
                    ByVal CODLINEA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCOLOR As String,  _
                    ByVal COL_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal NUMTALLE As String,  _
                    ByVal TAL_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIVA As Global.System.Nullable(Of Integer),  _
                    ByVal CODMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Integer),  _
                    ByVal CODESTADOPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODDESCUENTO As Global.System.Nullable(Of Integer),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Integer),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODIGOBARRA As String,  _
                    ByVal COSTOANTERIOR As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMINIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMAXIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal CODIGOORIGINAL As String,  _
                    ByVal PRODUCTOACTIVO As Global.System.Nullable(Of Byte),  _
                    ByVal ULTIMOCOSTO As Global.System.Nullable(Of Decimal),  _
                    ByVal PORCENCOMI As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal COSTOPP As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAPP As Global.System.Nullable(Of Date),  _
                    ByVal USUPP As Global.System.Nullable(Of Integer),  _
                    ByVal ORDPRE As Global.System.Nullable(Of Decimal),  _
                    ByVal EMPREUSUPP As Global.System.Nullable(Of Integer),  _
                    ByVal FACCAM As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAULTIMACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal NUMCLOR As String,  _
                    ByVal CLOR_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal PESO As Global.System.Nullable(Of Decimal),  _
                    ByVal PESOESPECIFICO As Global.System.Nullable(Of Decimal),  _
                    ByVal PESOPORMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPLANTILLA As Global.System.Nullable(Of Decimal),  _
                    ByVal SERVICIO As Global.System.Nullable(Of Byte),  _
                    ByVal ESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRODUCTO As Global.System.Nullable(Of Byte),  _
                    ByVal PRECIOSERVICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRODUCTOPRODUCIDO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODPRODUCTO As Integer,  _
                    ByVal Original_CODRUBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODFAMILIA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODLINEA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCOLOR As String,  _
                    ByVal Original_COL_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMTALLE As String,  _
                    ByVal Original_TAL_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIVA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODESTADOPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODDESCUENTO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESPRODUCTO As String,  _
                    ByVal Original_CODIGOBARRA As String,  _
                    ByVal Original_COSTOANTERIOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMINIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMAXIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGOORIGINAL As String,  _
                    ByVal Original_PRODUCTOACTIVO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ULTIMOCOSTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PORCENCOMI As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_COSTOPP As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAPP As Global.System.Nullable(Of Date),  _
                    ByVal Original_USUPP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ORDPRE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_EMPREUSUPP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FACCAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAULTIMACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMCLOR As String,  _
                    ByVal Original_CLOR_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESOESPECIFICO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESOPORMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPLANTILLA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SERVICIO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRODUCTO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_PRECIOSERVICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRODUCTOPRODUCIDO As Global.System.Nullable(Of Byte),  _
                    ByVal CODPRODUCTO As Integer) As Integer
            If (CODRUBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODRUBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODFAMILIA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODFAMILIA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODLINEA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODLINEA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMCOLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NUMCOLOR,String)
            End If
            If (COL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(COL_CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMTALLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NUMTALLE,String)
            End If
            If (TAL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(TAL_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODIVA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODIVA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODMEDIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CODMEDIDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CODMONEDA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (CODESTADOPRODUCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(CODESTADOPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (CODDESCUENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CODDESCUENTO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(CODUSUARIO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (DESPRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(DESPRODUCTO,String)
            End If
            If (CODIGOBARRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CODIGOBARRA,String)
            End If
            If (COSTOANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(COSTOANTERIOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (STOCKMINIMO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(STOCKMINIMO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (STOCKMAXIMO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(STOCKMAXIMO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (FECHAINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(FECHAINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (CODIGOORIGINAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(CODIGOORIGINAL,String)
            End If
            If (PRODUCTOACTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(PRODUCTOACTIVO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (ULTIMOCOSTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(ULTIMOCOSTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (PORCENCOMI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(PORCENCOMI.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (COSTOPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(COSTOPP.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (FECHAPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(FECHAPP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (USUPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(USUPP.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (ORDPRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(ORDPRE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (EMPREUSUPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(EMPREUSUPP.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (FACCAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(FACCAM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (FECHAULTIMACOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(FECHAULTIMACOMPRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (NUMCLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(NUMCLOR,String)
            End If
            If (CLOR_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(CLOR_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (PESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(PESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (PESOESPECIFICO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(PESOESPECIFICO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (PESOPORMEDIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(PESOPORMEDIDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (CODPLANTILLA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(CODPLANTILLA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (SERVICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(SERVICIO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (ESTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(ESTADO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (PRODUCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(PRODUCTO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (PRECIOSERVICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(PRECIOSERVICIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (PRODUCTOPRODUCIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(PRODUCTOPRODUCIDO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_CODPRODUCTO,Integer)
            If (Original_CODRUBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CODRUBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_CODFAMILIA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_CODFAMILIA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            If (Original_CODLINEA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_CODLINEA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCOLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_NUMCOLOR,String)
            End If
            If (Original_COL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_COL_CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMTALLE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_NUMTALLE,String)
            End If
            If (Original_TAL_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_TAL_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIVA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_CODIVA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMEDIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_CODMEDIDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_CODMONEDA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_CODESTADOPRODUCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_CODESTADOPRODUCTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_CODDESCUENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_CODDESCUENTO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_CODUSUARIO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_CODEMPRESA.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPROVEEDOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_CODPROVEEDOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            If (Original_DESPRODUCTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(76).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(77).Value = CType(Original_DESPRODUCTO,String)
            End If
            If (Original_CODIGOBARRA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(78).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(79).Value = CType(Original_CODIGOBARRA,String)
            End If
            If (Original_COSTOANTERIOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = CType(Original_COSTOANTERIOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(80).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(81).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMINIMO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = CType(Original_STOCKMINIMO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(82).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(83).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMAXIMO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = CType(Original_STOCKMAXIMO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(84).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(85).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = CType(Original_FECHAINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(86).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(87).Value = Global.System.DBNull.Value
            End If
            If (Original_CODIGOORIGINAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(88).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(89).Value = CType(Original_CODIGOORIGINAL,String)
            End If
            If (Original_PRODUCTOACTIVO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = CType(Original_PRODUCTOACTIVO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(90).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(91).Value = Global.System.DBNull.Value
            End If
            If (Original_ULTIMOCOSTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = CType(Original_ULTIMOCOSTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(92).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(93).Value = Global.System.DBNull.Value
            End If
            If (Original_PORCENCOMI.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = CType(Original_PORCENCOMI.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(94).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(95).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(96).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(97).Value = Global.System.DBNull.Value
            End If
            If (Original_COSTOPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = CType(Original_COSTOPP.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(98).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(99).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = CType(Original_FECHAPP.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(100).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(101).Value = Global.System.DBNull.Value
            End If
            If (Original_USUPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = CType(Original_USUPP.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(102).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(103).Value = Global.System.DBNull.Value
            End If
            If (Original_ORDPRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = CType(Original_ORDPRE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(104).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(105).Value = Global.System.DBNull.Value
            End If
            If (Original_EMPREUSUPP.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = CType(Original_EMPREUSUPP.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(106).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(107).Value = Global.System.DBNull.Value
            End If
            If (Original_FACCAM.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = CType(Original_FACCAM.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(108).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(109).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAULTIMACOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = CType(Original_FECHAULTIMACOMPRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(110).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(111).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCLOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(112).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(113).Value = CType(Original_NUMCLOR,String)
            End If
            If (Original_CLOR_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = CType(Original_CLOR_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(114).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(115).Value = Global.System.DBNull.Value
            End If
            If (Original_PESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = CType(Original_PESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(116).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(117).Value = Global.System.DBNull.Value
            End If
            If (Original_PESOESPECIFICO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = CType(Original_PESOESPECIFICO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(118).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(119).Value = Global.System.DBNull.Value
            End If
            If (Original_PESOPORMEDIDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = CType(Original_PESOPORMEDIDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(120).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(121).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPLANTILLA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = CType(Original_CODPLANTILLA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(122).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(123).Value = Global.System.DBNull.Value
            End If
            If (Original_SERVICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = CType(Original_SERVICIO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(124).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(125).Value = Global.System.DBNull.Value
            End If
            If (Original_ESTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = CType(Original_ESTADO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(126).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(127).Value = Global.System.DBNull.Value
            End If
            If (Original_IVAINCLUIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = CType(Original_IVAINCLUIDO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(128).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(129).Value = Global.System.DBNull.Value
            End If
            If (Original_PRODUCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = CType(Original_PRODUCTO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(130).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(131).Value = Global.System.DBNull.Value
            End If
            If (Original_PRECIOSERVICIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = CType(Original_PRECIOSERVICIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(132).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(133).Value = Global.System.DBNull.Value
            End If
            If (Original_PRODUCTOPRODUCIDO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = CType(Original_PRODUCTOPRODUCIDO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(134).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(135).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(136).Value = CType(CODPRODUCTO,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODRUBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODFAMILIA As Global.System.Nullable(Of Integer),  _
                    ByVal CODLINEA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCOLOR As String,  _
                    ByVal COL_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal NUMTALLE As String,  _
                    ByVal TAL_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODIVA As Global.System.Nullable(Of Integer),  _
                    ByVal CODMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Integer),  _
                    ByVal CODESTADOPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODDESCUENTO As Global.System.Nullable(Of Integer),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Integer),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal DESPRODUCTO As String,  _
                    ByVal CODIGOBARRA As String,  _
                    ByVal COSTOANTERIOR As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMINIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMAXIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal CODIGOORIGINAL As String,  _
                    ByVal PRODUCTOACTIVO As Global.System.Nullable(Of Byte),  _
                    ByVal ULTIMOCOSTO As Global.System.Nullable(Of Decimal),  _
                    ByVal PORCENCOMI As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal COSTOPP As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAPP As Global.System.Nullable(Of Date),  _
                    ByVal USUPP As Global.System.Nullable(Of Integer),  _
                    ByVal ORDPRE As Global.System.Nullable(Of Decimal),  _
                    ByVal EMPREUSUPP As Global.System.Nullable(Of Integer),  _
                    ByVal FACCAM As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAULTIMACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal NUMCLOR As String,  _
                    ByVal CLOR_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal PESO As Global.System.Nullable(Of Decimal),  _
                    ByVal PESOESPECIFICO As Global.System.Nullable(Of Decimal),  _
                    ByVal PESOPORMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPLANTILLA As Global.System.Nullable(Of Decimal),  _
                    ByVal SERVICIO As Global.System.Nullable(Of Byte),  _
                    ByVal ESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRODUCTO As Global.System.Nullable(Of Byte),  _
                    ByVal PRECIOSERVICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal PRODUCTOPRODUCIDO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODPRODUCTO As Integer,  _
                    ByVal Original_CODRUBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODFAMILIA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODLINEA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCOLOR As String,  _
                    ByVal Original_COL_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_NUMTALLE As String,  _
                    ByVal Original_TAL_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODIVA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODESTADOPRODUCTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODDESCUENTO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODPROVEEDOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_DESPRODUCTO As String,  _
                    ByVal Original_CODIGOBARRA As String,  _
                    ByVal Original_COSTOANTERIOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMINIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMAXIMO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODIGOORIGINAL As String,  _
                    ByVal Original_PRODUCTOACTIVO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ULTIMOCOSTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PORCENCOMI As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_COSTOPP As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAPP As Global.System.Nullable(Of Date),  _
                    ByVal Original_USUPP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_ORDPRE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_EMPREUSUPP As Global.System.Nullable(Of Integer),  _
                    ByVal Original_FACCAM As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAULTIMACOMPRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMCLOR As String,  _
                    ByVal Original_CLOR_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESOESPECIFICO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PESOPORMEDIDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPLANTILLA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SERVICIO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_ESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IVAINCLUIDO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRODUCTO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_PRECIOSERVICIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_PRODUCTOPRODUCIDO As Global.System.Nullable(Of Byte)) As Integer
            Return Me.Update(CODRUBRO, CODFAMILIA, CODLINEA, NUMCOLOR, COL_CODEMPRESA, NUMTALLE, TAL_CODEMPRESA, CODIVA, CODMEDIDA, CODMONEDA, CODESTADOPRODUCTO, CODDESCUENTO, CODUSUARIO, CODEMPRESA, CODPROVEEDOR, DESPRODUCTO, CODIGOBARRA, COSTOANTERIOR, STOCKMINIMO, STOCKMAXIMO, FECHAINGRESO, CODIGOORIGINAL, PRODUCTOACTIVO, ULTIMOCOSTO, PORCENCOMI, FECGRA, COSTOPP, FECHAPP, USUPP, ORDPRE, EMPREUSUPP, FACCAM, FECHAULTIMACOMPRA, NUMCLOR, CLOR_CODEMPRESA, PESO, PESOESPECIFICO, PESOPORMEDIDA, CODPLANTILLA, SERVICIO, ESTADO, IVAINCLUIDO, PRODUCTO, PRECIOSERVICIO, PRODUCTOPRODUCIDO, Original_CODPRODUCTO, Original_CODRUBRO, Original_CODFAMILIA, Original_CODLINEA, Original_NUMCOLOR, Original_COL_CODEMPRESA, Original_NUMTALLE, Original_TAL_CODEMPRESA, Original_CODIVA, Original_CODMEDIDA, Original_CODMONEDA, Original_CODESTADOPRODUCTO, Original_CODDESCUENTO, Original_CODUSUARIO, Original_CODEMPRESA, Original_CODPROVEEDOR, Original_DESPRODUCTO, Original_CODIGOBARRA, Original_COSTOANTERIOR, Original_STOCKMINIMO, Original_STOCKMAXIMO, Original_FECHAINGRESO, Original_CODIGOORIGINAL, Original_PRODUCTOACTIVO, Original_ULTIMOCOSTO, Original_PORCENCOMI, Original_FECGRA, Original_COSTOPP, Original_FECHAPP, Original_USUPP, Original_ORDPRE, Original_EMPREUSUPP, Original_FACCAM, Original_FECHAULTIMACOMPRA, Original_NUMCLOR, Original_CLOR_CODEMPRESA, Original_PESO, Original_PESOESPECIFICO, Original_PESOPORMEDIDA, Original_CODPLANTILLA, Original_SERVICIO, Original_ESTADO, Original_IVAINCLUIDO, Original_PRODUCTO, Original_PRECIOSERVICIO, Original_PRODUCTOPRODUCIDO, Original_CODPRODUCTO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class RUBROTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "RUBRO"
            tableMapping.ColumnMappings.Add("CODLINEA", "CODLINEA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("NUMRUBRO", "NUMRUBRO")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        RUBRO.CODRUBRO, RUBRO.CODLINEA, RUBRO.NUMRUBRO, RUBRO.DESRUBRO, LIN"& _ 
                "EA.DESLINEA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            RUBRO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON"& _ 
                " RUBRO.CODLINEA = LINEA.CODLINEA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY RUBRO.DESRUBRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.RUBRODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.RUBRODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.RUBRODataTable = New DSReporteProductoNW.RUBRODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class STOCKDEPOSITOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "STOCKDEPOSITO"
            tableMapping.ColumnMappings.Add("CODSTOCKDEPOSTIPO", "CODSTOCKDEPOSTIPO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("STOCKACTUAL", "STOCKACTUAL")
            tableMapping.ColumnMappings.Add("STOCKMIN", "STOCKMIN")
            tableMapping.ColumnMappings.Add("STOCKMAX", "STOCKMAX")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("CODCIUDAD", "CODCIUDAD")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("VALOR", "VALOR")
            tableMapping.ColumnMappings.Add("CODDEPOSITO", "CODDEPOSITO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [dbo].[STOCKDEPOSITO] WHERE (([CODSTOCKDEPOSTIPO] = @Original_CODSTOC"& _ 
                "KDEPOSTIPO) AND ((@IsNull_CODDEPOSITO = 1 AND [CODDEPOSITO] IS NULL) OR ([CODDEP"& _ 
                "OSITO] = @Original_CODDEPOSITO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] I"& _ 
                "S NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRESA = 1 A"& _ 
                "ND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ((@IsNull"& _ 
                "_STOCKACTUAL = 1 AND [STOCKACTUAL] IS NULL) OR ([STOCKACTUAL] = @Original_STOCKA"& _ 
                "CTUAL)) AND ((@IsNull_STOCKMIN = 1 AND [STOCKMIN] IS NULL) OR ([STOCKMIN] = @Ori"& _ 
                "ginal_STOCKMIN)) AND ((@IsNull_STOCKMAX = 1 AND [STOCKMAX] IS NULL) OR ([STOCKMA"& _ 
                "X] = @Original_STOCKMAX)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FE"& _ 
                "CGRA] = @Original_FECGRA)) AND ((@IsNull_CODCIUDAD = 1 AND [CODCIUDAD] IS NULL) "& _ 
                "OR ([CODCIUDAD] = @Original_CODCIUDAD)) AND ((@IsNull_CODCODIGO = 1 AND [CODCODI"& _ 
                "GO] IS NULL) OR ([CODCODIGO] = @Original_CODCODIGO)) AND ((@IsNull_VALOR = 1 AND"& _ 
                " [VALOR] IS NULL) OR ([VALOR] = @Original_VALOR)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSTOCKDEPOSTIPO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODSTOCKDEPOSTIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKACTUAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKACTUAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKACTUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKACTUAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMAX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMAX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMAX", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [dbo].[STOCKDEPOSITO] ([CODDEPOSITO], [CODUSUARIO], [CODEMPRESA], [ST"& _ 
                "OCKACTUAL], [STOCKMIN], [STOCKMAX], [FECGRA], [CODCIUDAD], [CODCODIGO], [VALOR])"& _ 
                " VALUES (@CODDEPOSITO, @CODUSUARIO, @CODEMPRESA, @STOCKACTUAL, @STOCKMIN, @STOCK"& _ 
                "MAX, @FECGRA, @CODCIUDAD, @CODCODIGO, @VALOR);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODSTOCKDEPOSTIPO, CODDEP"& _ 
                "OSITO, CODUSUARIO, CODEMPRESA, STOCKACTUAL, STOCKMIN, STOCKMAX, FECGRA, CODCIUDA"& _ 
                "D, CODCODIGO, VALOR FROM STOCKDEPOSITO WHERE (CODSTOCKDEPOSTIPO = SCOPE_IDENTITY"& _ 
                "())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKACTUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKACTUAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMAX", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [dbo].[STOCKDEPOSITO] SET [CODDEPOSITO] = @CODDEPOSITO, [CODUSUARIO] = @CO"& _ 
                "DUSUARIO, [CODEMPRESA] = @CODEMPRESA, [STOCKACTUAL] = @STOCKACTUAL, [STOCKMIN] ="& _ 
                " @STOCKMIN, [STOCKMAX] = @STOCKMAX, [FECGRA] = @FECGRA, [CODCIUDAD] = @CODCIUDAD"& _ 
                ", [CODCODIGO] = @CODCODIGO, [VALOR] = @VALOR WHERE (([CODSTOCKDEPOSTIPO] = @Orig"& _ 
                "inal_CODSTOCKDEPOSTIPO) AND ((@IsNull_CODDEPOSITO = 1 AND [CODDEPOSITO] IS NULL)"& _ 
                " OR ([CODDEPOSITO] = @Original_CODDEPOSITO)) AND ((@IsNull_CODUSUARIO = 1 AND [C"& _ 
                "ODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODE"& _ 
                "MPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) A"& _ 
                "ND ((@IsNull_STOCKACTUAL = 1 AND [STOCKACTUAL] IS NULL) OR ([STOCKACTUAL] = @Ori"& _ 
                "ginal_STOCKACTUAL)) AND ((@IsNull_STOCKMIN = 1 AND [STOCKMIN] IS NULL) OR ([STOC"& _ 
                "KMIN] = @Original_STOCKMIN)) AND ((@IsNull_STOCKMAX = 1 AND [STOCKMAX] IS NULL) "& _ 
                "OR ([STOCKMAX] = @Original_STOCKMAX)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS N"& _ 
                "ULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_CODCIUDAD = 1 AND [CODCIUDA"& _ 
                "D] IS NULL) OR ([CODCIUDAD] = @Original_CODCIUDAD)) AND ((@IsNull_CODCODIGO = 1 "& _ 
                "AND [CODCODIGO] IS NULL) OR ([CODCODIGO] = @Original_CODCODIGO)) AND ((@IsNull_V"& _ 
                "ALOR = 1 AND [VALOR] IS NULL) OR ([VALOR] = @Original_VALOR)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODSTOCK"& _ 
                "DEPOSTIPO, CODDEPOSITO, CODUSUARIO, CODEMPRESA, STOCKACTUAL, STOCKMIN, STOCKMAX,"& _ 
                " FECGRA, CODCIUDAD, CODCODIGO, VALOR FROM STOCKDEPOSITO WHERE (CODSTOCKDEPOSTIPO"& _ 
                " = @CODSTOCKDEPOSTIPO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKACTUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKACTUAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMIN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@STOCKMAX", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAX", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VALOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSTOCKDEPOSTIPO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODSTOCKDEPOSTIPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODDEPOSITO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODDEPOSITO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKACTUAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKACTUAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKACTUAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKACTUAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMIN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMIN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMIN", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMIN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_STOCKMAX", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "STOCKMAX", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_STOCKMAX", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "STOCKMAX", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCODIGO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCODIGO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VALOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VALOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VALOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 2, "VALOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSTOCKDEPOSTIPO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODSTOCKDEPOSTIPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CODSTOCKDEPOSTIPO, CODDEPOSITO, CODUSUARIO, CODEMPRESA, STOCKACTUAL, STOCK"& _ 
                "MIN, STOCKMAX, FECGRA, CODCIUDAD, CODCODIGO, VALOR FROM dbo.STOCKDEPOSITO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.STOCKDEPOSITODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.STOCKDEPOSITODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.STOCKDEPOSITODataTable = New DSReporteProductoNW.STOCKDEPOSITODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.STOCKDEPOSITODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "STOCKDEPOSITO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODSTOCKDEPOSTIPO As Decimal, ByVal Original_CODDEPOSITO As Global.System.Nullable(Of Integer), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_STOCKACTUAL As Global.System.Nullable(Of Decimal), ByVal Original_STOCKMIN As Global.System.Nullable(Of Decimal), ByVal Original_STOCKMAX As Global.System.Nullable(Of Decimal), ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_CODCIUDAD As Global.System.Nullable(Of Decimal), ByVal Original_CODCODIGO As Global.System.Nullable(Of Decimal), ByVal Original_VALOR As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODSTOCKDEPOSTIPO,Decimal)
            If (Original_CODDEPOSITO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODDEPOSITO.Value,Integer)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKACTUAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_STOCKACTUAL.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMIN.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_STOCKMIN.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMAX.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_STOCKMAX.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCIUDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCODIGO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_VALOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_VALOR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODDEPOSITO As Global.System.Nullable(Of Integer), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal STOCKACTUAL As Global.System.Nullable(Of Decimal), ByVal STOCKMIN As Global.System.Nullable(Of Decimal), ByVal STOCKMAX As Global.System.Nullable(Of Decimal), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal CODCIUDAD As Global.System.Nullable(Of Decimal), ByVal CODCODIGO As Global.System.Nullable(Of Decimal), ByVal VALOR As Global.System.Nullable(Of Decimal)) As Integer
            If (CODDEPOSITO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODDEPOSITO.Value,Integer)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (STOCKACTUAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(STOCKACTUAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (STOCKMIN.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(STOCKMIN.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (STOCKMAX.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(STOCKMAX.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODCIUDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODCODIGO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (VALOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(VALOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODDEPOSITO As Global.System.Nullable(Of Integer),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKACTUAL As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMAX As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal VALOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSTOCKDEPOSTIPO As Decimal,  _
                    ByVal Original_CODDEPOSITO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKACTUAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMAX As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VALOR As Global.System.Nullable(Of Decimal),  _
                    ByVal CODSTOCKDEPOSTIPO As Decimal) As Integer
            If (CODDEPOSITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODDEPOSITO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (STOCKACTUAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(STOCKACTUAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (STOCKMIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(STOCKMIN.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (STOCKMAX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(STOCKMAX.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODCIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODCODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (VALOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(VALOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_CODSTOCKDEPOSTIPO,Decimal)
            If (Original_CODDEPOSITO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_CODDEPOSITO.Value,Integer)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKACTUAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_STOCKACTUAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMIN.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_STOCKMIN.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_STOCKMAX.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_STOCKMAX.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCODIGO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CODCODIGO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_VALOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_VALOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(31).Value = CType(CODSTOCKDEPOSTIPO,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODDEPOSITO As Global.System.Nullable(Of Integer),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKACTUAL As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal STOCKMAX As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal VALOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSTOCKDEPOSTIPO As Decimal,  _
                    ByVal Original_CODDEPOSITO As Global.System.Nullable(Of Integer),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKACTUAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMIN As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_STOCKMAX As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCODIGO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VALOR As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(CODDEPOSITO, CODUSUARIO, CODEMPRESA, STOCKACTUAL, STOCKMIN, STOCKMAX, FECGRA, CODCIUDAD, CODCODIGO, VALOR, Original_CODSTOCKDEPOSTIPO, Original_CODDEPOSITO, Original_CODUSUARIO, Original_CODEMPRESA, Original_STOCKACTUAL, Original_STOCKMIN, Original_STOCKMAX, Original_FECGRA, Original_CODCIUDAD, Original_CODCODIGO, Original_VALOR, Original_CODSTOCKDEPOSTIPO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class UNIDADMEDIDATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "UNIDADMEDIDA"
            tableMapping.ColumnMappings.Add("CODMEDIDA", "CODMEDIDA")
            tableMapping.ColumnMappings.Add("NUMMEDIDA", "NUMMEDIDA")
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("SIMBOLO", "SIMBOLO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODMEDIDA, NUMMEDIDA, DESMEDIDA, SIMBOLO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            UNIDADMED"& _ 
                "IDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY DESMEDIDA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.UNIDADMEDIDADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.UNIDADMEDIDADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.UNIDADMEDIDADataTable = New DSReporteProductoNW.UNIDADMEDIDADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class COSTOPROMEDIONWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COSTOPROMEDIONW"
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("Cantidad", "Cantidad")
            tableMapping.ColumnMappings.Add("TotalUni", "TotalUni")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DESFAMILIA, DESLINEA, DESRUBRO, DESMEDIDA, CODIGO, DESSUCURSAL, PRO"& _ 
                "DUCTO, CASE WHEN Cantidad IS NULL THEN 0 ELSE Cantidad END AS Cantidad, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   CASE WHEN TotalUni IS NULL THEN 0 ELSE TotalUni END AS TotalU"& _ 
                "ni"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DES"& _ 
                "RUBRO, UNIDADMEDIDA.DESMEDIDA, CODIGOS.CODIGO, SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           RTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + "& _ 
                "LTRIM(CODIGOS.DESCODIGO1) AS PRODUCTO, COMPRASDETALLE.CANTIDADCOMPRA AS Cantidad"& _ 
                ", "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    COMPRASDETALLE.CANTIDADC"& _ 
                "OMPRA * COMPRASDETALLE.COSTOUNITARIO AS TotalUni"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM"& _ 
                "            PRODUCTOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                  SUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                                                COMPRAS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                             COMPRASDETALLE ON COMPRAS.CODCOMPRA"& _ 
                " = COMPRASDETALLE.CODCOMPRA ON SUCURSAL.CODSUCURSAL = COMPRAS.CODSUCURSAL ON "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   CODIGOS.CODCODIGO = COMPRASDE"& _ 
                "TALLE.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDIDA.CODMEDIDA LEFT OUTER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    RUBRO ON PRODUCTOS.CODRUB"& _ 
                "RO = RUBRO.CODRUBRO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           FAMILIA ON PRODUCTOS.CODFAMILIA = FAM"& _ 
                "ILIA.CODFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          WHERE        (PRODUCTOS.SERVICIO <> 1"& _ 
                ") AND (PRODUCTOS.ESTADO = 0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGOS.CODIGO,"& _ 
                " RTRIM(PRODUCTOS.DESPRODUCTO) + ' ' + LTRIM(CODIGOS.DESCODIGO1), SUCURSAL.DESSUC"& _ 
                "URSAL, RUBRO.DESRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FAM"& _ 
                "ILIA.DESFAMILIA, LINEA.DESLINEA, UNIDADMEDIDA.DESMEDIDA, COMPRASDETALLE.CANTIDAD"& _ 
                "COMPRA, COMPRASDETALLE.COSTOUNITARIO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS Subconsulta"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.COSTOPROMEDIONWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.COSTOPROMEDIONWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.COSTOPROMEDIONWDataTable = New DSReporteProductoNW.COSTOPROMEDIONWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class STOCKACTUALNWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "STOCKACTUALNW"
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        SUM(STOCKDEPOSITO.STOCKACTUAL) AS Expr1, CODIGOS.CODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM      "& _ 
                "      STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON STOCKDEPOSIT"& _ 
                "O.CODCODIGO = CODIGOS.CODCODIGO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODIGO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.STOCKACTUALNWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.STOCKACTUALNWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.STOCKACTUALNWDataTable = New DSReporteProductoNW.STOCKACTUALNWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PRECIONWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PRECIONW"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRECIOVENTA", "PRECIOVENTA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODIGOS.CODIGO, PRECIO.PRECIOVENTA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            PRECIO INNER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRODUCTOS ON PRECIO.CODPRODUCTO = PRODUCTOS.CODPROD"& _ 
                "UCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON PRODUCTOS.CODPRODUCTO = COD"& _ 
                "IGOS.CODPRODUCTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.PRECIONWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.PRECIONWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.PRECIONWDataTable = New DSReporteProductoNW.PRECIONWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class OrdenPorCategoriaNWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "OrdenPorCategoriaNW"
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CATEGORIA", "CATEGORIA")
            tableMapping.ColumnMappings.Add("LINEA", "LINEA")
            tableMapping.ColumnMappings.Add("MARCA", "MARCA")
            tableMapping.ColumnMappings.Add("MEDIDA", "MEDIDA")
            tableMapping.ColumnMappings.Add("SERVICIO", "SERVICIO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, ISNULL(FAMILIA.DESFAMILIA"& _ 
                ", 'Sin Familia') AS CATEGORIA, ISNULL(LINEA.DESLINEA, 'Sin Linea') AS LINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        ISNULL(RUBRO.DESRUBRO, 'Sin Marca') AS MARCA, UNIDADMEDI"& _ 
                "DA.DESMEDIDA AS MEDIDA, PRODUCTOS.SERVICIO, SUCURSAL.DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  SUCURSAL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON SUCURSAL.CODSUC"& _ 
                "URSAL = STOCKDEPOSITO.CODDEPOSITO RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRO"& _ 
                "DUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODFAMILIA"& _ 
                " = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCT"& _ 
                "OS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODFAMILIA LEFT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO AN"& _ 
                "D LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODI"& _ 
                "GOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOSITO.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO  LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON UNI"& _ 
                "DADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) A"& _ 
                "ND (PRODUCTOS.SERVICIO <> 1)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO"& _ 
                ".DESRUBRO, PRODUCTOS.DESPRODUCTO, CODIGOS.DESCODIGO1, CODIGOS.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     UNIDADMEDIDA.DESMEDIDA, PRODUCTOS.SERVICIO, SUCURSAL.DESSUC"& _ 
                "URSAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, ISNULL(FAMILIA.DESFAMILIA"& _ 
                ", 'Sin Familia') AS CATEGORIA, ISNULL(LINEA.DESLINEA, 'Sin Linea') AS LINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        ISNULL(RUBRO.DESRUBRO, 'Sin Marca') AS MARCA, UNIDADMEDI"& _ 
                "DA.DESMEDIDA AS MEDIDA, PRODUCTOS.SERVICIO, SUCURSAL.DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM          "& _ 
                "  SUCURSAL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON SUCURSAL.CODSUC"& _ 
                "URSAL = STOCKDEPOSITO.CODDEPOSITO RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         PRO"& _ 
                "DUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODFAMILIA"& _ 
                " = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCT"& _ 
                "OS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODFAMILIA LEFT OUTE"& _ 
                "R JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO AN"& _ 
                "D LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODI"& _ 
                "GOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOSITO.CODCODIGO = "& _ 
                "CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON UNID"& _ 
                "ADMEDIDA.CODMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AN"& _ 
                "D (PRODUCTOS.SERVICIO <> 1) AND SUCURSAL.DESSUCURSAL = @suc"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY FAMILIA.DE"& _ 
                "SFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBRO, PRODUCTOS.DESPRODUCTO, CODIGOS.DESCODI"& _ 
                "GO1, CODIGOS.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA.DESMEDIDA, PROD"& _ 
                "UCTOS.SERVICIO, SUCURSAL.DESSUCURSAL"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suc", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.OrdenPorCategoriaNWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.OrdenPorCategoriaNWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.OrdenPorCategoriaNWDataTable = New DSReporteProductoNW.OrdenPorCategoriaNWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySucursal(ByVal dataTable As DSReporteProductoNW.OrdenPorCategoriaNWDataTable, ByVal suc As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (suc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySucursal(ByVal suc As String) As DSReporteProductoNW.OrdenPorCategoriaNWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (suc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc,String)
            End If
            Dim dataTable As DSReporteProductoNW.OrdenPorCategoriaNWDataTable = New DSReporteProductoNW.OrdenPorCategoriaNWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class LineaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "Linea"
            tableMapping.ColumnMappings.Add("CODLINEA", "CODLINEA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODFAMILIA", "CODFAMILIA")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMLINEA", "NUMLINEA")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        LINEA.CODLINEA, LINEA.CODFAMILIA, LINEA.CODUSUARIO, LINEA.CODEMPRES"& _ 
                "A, LINEA.NUMLINEA, LINEA.DESLINEA, LINEA.FECGRA, FAMILIA.DESFAMILIA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM       "& _ 
                "     LINEA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON LINEA.CODFAMILIA = FA"& _ 
                "MILIA.CODFAMILIA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.LineaDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.LineaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.LineaDataTable = New DSReporteProductoNW.LineaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class ProductoCodigosNWTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ProductoCodigosNW"
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("DESCODIGO1", "DESCODIGO1")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CODLINEA", "CODLINEA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        PRODUCTOS.DESPRODUCTO, CODIGOS.DESCODIGO1, ISNULL(RTRIM(PRODUCTOS.D"& _ 
                "ESPRODUCTO), '') + ' ' + ISNULL(LTRIM(CODIGOS.DESCODIGO1), '') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"               "& _ 
                "          + ' ' + ISNULL(LTRIM(CODIGOS.DESCODIGO2), '') AS PRODUCTO, CODIGOS.COD"& _ 
                "CODIGO, CODIGOS.CODPRODUCTO, PRODUCTOS.CODLINEA, LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            PRODUCTOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "           CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO LEFT OUTER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OU"& _ 
                "TER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON RUBRO.CODLINEA = LINEA.CODLINEA AND "& _ 
                "PRODUCTOS.CODLINEA = LINEA.CODLINEA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.ProductoCodigosNWDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.ProductoCodigosNWDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.ProductoCodigosNWDataTable = New DSReporteProductoNW.ProductoCodigosNWDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MovDetalladoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MovDetallado"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CANTIDAD", "CANTIDAD")
            tableMapping.ColumnMappings.Add("TIPOMOVIMIENTO", "TIPOMOVIMIENTO")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("FECHAMTO", "FECHAMTO")
            tableMapping.ColumnMappings.Add("STOCKINICIAL", "STOCKINICIAL")
            tableMapping.ColumnMappings.Add("COMPRA", "COMPRA")
            tableMapping.ColumnMappings.Add("DEVOLUCIONCLIENTE", "DEVOLUCIONCLIENTE")
            tableMapping.ColumnMappings.Add("TRANSFERENCIAENTRADA", "TRANSFERENCIAENTRADA")
            tableMapping.ColumnMappings.Add("AJUSTEENTRADA", "AJUSTEENTRADA")
            tableMapping.ColumnMappings.Add("VENTA", "VENTA")
            tableMapping.ColumnMappings.Add("ENVIO", "ENVIO")
            tableMapping.ColumnMappings.Add("TRANSFERENCIASALIDA", "TRANSFERENCIASALIDA")
            tableMapping.ColumnMappings.Add("AJUSTESALIDA", "AJUSTESALIDA")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("Expr2", "Expr2")
            tableMapping.ColumnMappings.Add("Expr3", "Expr3")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("Expr4", "Expr4")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD"& _ 
                ".DESCODIGO1, '')) + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         M.TIPOMOVIMIENTO, M.CONCEPTO, M.CODPRODUCTO, M.CODCOD"& _ 
                "IGO, M.CODSUCURSAL, FAMILIA.DESFAMILIA, LINEA.DESLINEA, CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     CAST(M.FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, CASE WHE"& _ 
                "N (M.TIPOMOVIMIENTO = 'ENTRADA' AND M.CONCEPTO = 'StockInicial') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.TIPOMOVIMIE"& _ 
                "NTO = 'ENTRADA' AND M.CONCEPTO = 'ENTRADA POR COMPRA') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "  THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.TIPOMOVIMIENTO = 'ENTRADA' "& _ 
                "AND M.CONCEPTO = 'ENTRADA POR DEVOLUCIÓN') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         THEN M.CAN"& _ 
                "TIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE WHEN (M.TIPOMOVIMIENTO = 'ENTRADA' A"& _ 
                "ND M.CONCEPTO LIKE 'Transf.%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         THEN M.CANTIDAD ELSE 0"& _ 
                " END AS TRANSFERENCIAENTRADA, CASE WHEN (M.TIPOMOVIMIENTO = 'ENTRADA' AND M.CONC"& _ 
                "EPTO LIKE 'Ajuste.%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         THEN M.CANTIDAD ELSE 0 END AS A"& _ 
                "JUSTEENTRADA, CASE WHEN (M.TIPOMOVIMIENTO = 'SALIDA' AND (M.CONCEPTO = 'SALIDA P"& _ 
                "OR VENTA' OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         M.CONCEPTO = 'SALIDA POR VENTA (Combo)'))"& _ 
                " THEN M.CANTIDAD ELSE 0 END AS VENTA, CASE WHEN (M.TIPOMOVIMIENTO = 'SALIDA' AND"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (M.CONCEPTO = 'ENVIO DE MERCADERIA' OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             M.CONCEPTO = 'ENVIO DE MERCADERIA(Combo)')) THEN M.CANTIDAD ELSE 0 "& _ 
                "END AS ENVIO, CASE WHEN (M.TIPOMOVIMIENTO = 'SALIDA' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "    M.CONCEPTO LIKE 'Transf.%') THEN M.CANTIDAD ELSE 0 END AS TRANSFERENCIASALID"& _ 
                "A, CASE WHEN (M.TIPOMOVIMIENTO = 'SALIDA' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         M.CONCE"& _ 
                "PTO LIKE 'Ajuste.%') THEN M.CANTIDAD ELSE 0 END AS AJUSTESALIDA, M.CODSUCURSAL A"& _ 
                "S Expr1, FAMILIA.DESFAMILIA AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA.DESLINEA "& _ 
                "AS Expr3, SUCURSAL.DESSUCURSAL, M.FECHAMTO AS Expr4"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            MOVIMIENTOP"& _ 
                "RODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS AS CD ON M.CODCODIGO ="& _ 
                " CD.CODCODIGO AND M.CODPRODUCTO = CD.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                   "& _ 
                "      PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                 FAMILIA ON P.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                        LINEA ON P.CODLINEA = LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                       SUCURSAL ON M.CODSUCURSAL = SUCURSAL.CODSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE  "& _ 
                "      (M.CODSUCURSAL = @sucursal) AND (CONVERT(DATETIME, CAST(M.FECHAMTO AS VARC"& _ 
                "HAR(11)), 103) = CONVERT(DATETIME, @Fecha, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "(M.CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY FECHAMTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sucursal", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Fecha", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.MovDetalladoDataTable, ByVal sucursal As Global.System.Nullable(Of Decimal), ByVal Fecha As Date, ByVal CODCOD As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal sucursal As Global.System.Nullable(Of Decimal), ByVal Fecha As Date, ByVal CODCOD As Global.System.Nullable(Of Decimal)) As DSReporteProductoNW.MovDetalladoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(Fecha,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSReporteProductoNW.MovDetalladoDataTable = New DSReporteProductoNW.MovDetalladoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MovProductoPorFechaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MovProductoPorFecha"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("STOCKINICIAL", "STOCKINICIAL")
            tableMapping.ColumnMappings.Add("COMPRA", "COMPRA")
            tableMapping.ColumnMappings.Add("DEVOLUCIONCLIENTE", "DEVOLUCIONCLIENTE")
            tableMapping.ColumnMappings.Add("TRANSFERENCIAENTRADA", "TRANSFERENCIAENTRADA")
            tableMapping.ColumnMappings.Add("AJUSTEENTRADA", "AJUSTEENTRADA")
            tableMapping.ColumnMappings.Add("VENTA", "VENTA")
            tableMapping.ColumnMappings.Add("TRANSFERENCIASALIDA", "TRANSFERENCIASALIDA")
            tableMapping.ColumnMappings.Add("AJUSTESALIDA", "AJUSTESALIDA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("FECHAMTO", "FECHAMTO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("ENTRPROD", "ENTRPROD")
            tableMapping.ColumnMappings.Add("ANULVTA", "ANULVTA")
            tableMapping.ColumnMappings.Add("SALPROD", "SALPROD")
            tableMapping.ColumnMappings.Add("DEVCOMP", "DEVCOMP")
            tableMapping.ColumnMappings.Add("ANULCOMP", "ANULCOMP")
            tableMapping.ColumnMappings.Add("ANULDEVCOMP", "ANULDEVCOMP")
            tableMapping.ColumnMappings.Add("ANULDEVVTA", "ANULDEVVTA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CODSUCURSAL = @sucursal) AND (C"& _ 
                "ONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @Fecha"& _ 
                "Ini, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (CONVERT(DATETIME, CAST(FECHAMTO AS VA"& _ 
                "RCHAR(11)), 103) <= CONVERT(DATETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCT"& _ 
                "O, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUB"& _ 
                "RO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sucursal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT   "& _ 
                "     item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',"& _ 
                "') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA"& _ 
                ", CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), DESSUCURSAL,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODIGO, CODSUCURSAL,"& _ 
                " FECHAMTO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT   "& _ 
                "     item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            dbo.fnPartir(@Plan, ',"& _ 
                "') AS fnPartir_1)) AND (CODSUCURSAL = @sucursal)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, COD"& _ 
                "SUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VA"& _ 
                "RCHAR(11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"OR"& _ 
                "DER BY CODCODIGO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sucursal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, C"& _ 
                "ODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DE"& _ 
                "SLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), DESSUC"& _ 
                "URSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODCODIGO, CODSUC"& _ 
                "URSAL, FECHAMTO"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, CONVERT(DATETIME, "& _ 
                "CAST(FECHAMTO AS VARCHAR(11)),"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          103) AS FECHAMTO, DESS"& _ 
                "UCURSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, R"& _ 
                "TRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) + + LTR"& _ 
                "IM(ISNULL(CD.DESCODIGO2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    '"& _ 
                "')) AS PRODUCTO, M.CANTIDAD, M.CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURS"& _ 
                "AL, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLINEA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                              "& _ 
                "                      CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), "& _ 
                "103) AS FECHAMTO, CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                   = 'STOCK INICIAL' AND M.MODULO = 13) THEN M.C"& _ 
                "ANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD ELSE 0 END"& _ 
                " AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, "& _ 
                "CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         M.MODULO = 13) THEN M.CANTIDAD ELSE 0 E"& _ 
                "ND AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "                              M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONC"& _ 
                "EPTO) LIKE 'AJUSTE%') THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "                                         CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                              CASE WHEN (M.CANTIDAD > 0 AND M.MO"& _ 
                "DULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M.CANTIDAD > 0 AND M"& _ 
                ".MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS VENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "            CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTI"& _ 
                "DAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTIDAD < 0 AND UPPER"& _ 
                "(M.CONCEPTO) LIKE 'AJUSTE%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "      (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    M.M"& _ 
                "ODULO = 28)) THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANT"& _ 
                "IDAD < 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SALPROD, CASE WH"& _ 
                "EN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                        "& _ 
                "            THEN M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN "& _ 
                "M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    THEN M.CANTIDAD * - "& _ 
                "1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, dbo.RUBRO.DESR"& _ 
                "UBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    dbo.CODIGOS AS CD ON M.CODC"& _ 
                "ODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                               "& _ 
                "     dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               dbo.FAMILIA ON P.CODFAMILIA = dbo"& _ 
                ".FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.LINEA ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                           dbo.SUCURSAL ON M.CODDEPOSITO = dbo.S"& _ 
                "UCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "         dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.CODRUBRO AND dbo.LINEA.CODLINEA = d"& _ 
                "bo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (CONVERT(DATETIME, CAST(FECHAMTO"& _ 
                " AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETI"& _ 
                "ME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CAST(FECHAMTO AS VARCHAR(11)), 103) <= CONVERT(DA"& _ 
                "TETIME, @FechaFin, 103)) AND (CODSUCURSAL = @suc)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CO"& _ 
                "DSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS V"& _ 
                "ARCHAR(11)), 103), DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"O"& _ 
                "RDER BY CODCODIGO, CODSUCURSAL, FECHAMTO"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suc", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillBySuc(ByVal dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable, ByVal sucursal As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataBySuc(ByVal sucursal As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date) As DSReporteProductoNW.MovProductoPorFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            Dim dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable = New DSReporteProductoNW.MovProductoPorFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSinSuc(ByVal dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As DSReporteProductoNW.MovProductoPorFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable = New DSReporteProductoNW.MovProductoPorFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSuc(ByVal dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal sucursal As Global.System.Nullable(Of Integer), ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal sucursal As Global.System.Nullable(Of Integer), ByVal Plan As String) As DSReporteProductoNW.MovProductoPorFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable = New DSReporteProductoNW.MovProductoPorFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBySinSuc(ByVal dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBySinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As DSReporteProductoNW.MovProductoPorFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable = New DSReporteProductoNW.MovProductoPorFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSinSuc(ByVal dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date) As DSReporteProductoNW.MovProductoPorFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            Dim dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable = New DSReporteProductoNW.MovProductoPorFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSuc(ByVal dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal suc As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (suc.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(suc.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal suc As Global.System.Nullable(Of Integer)) As DSReporteProductoNW.MovProductoPorFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (suc.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(suc.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoPorFechaDataTable = New DSReporteProductoNW.MovProductoPorFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StockXFechaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StockXFecha"
            tableMapping.ColumnMappings.Add("STOCKFECHA", "STOCKFECHA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT SUM(SALDOTODOS) AS STOCKFECHA, CODSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM "& _ 
                "           (SELECT        TOP (100) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                          "& _ 
                "          PERCENT STOCKINICIAL + COMPRA + DEVOLUCIONCLIENTE + TRANSFERENCIAENTRA"& _ 
                "DA + AJUSTEENTRADA + ENTRPROD + ANULVTA + ANULDEVCOMP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                            - VENTA - SALPROD - DEVCOMP - ANULCOMP - TRANSFERENC"& _ 
                "IASALIDA - AJUSTESALIDA - ANULDEVVTA AS SALDOTODOS, CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                       DESSUCURSAL, FECHAMTO, CODIGO, PRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                          FROM            (SELECT        TOP (100) PERCENT CODIG"& _ 
                "O, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOL"& _ 
                "UCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              AS DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAEN"& _ 
                "TRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                  "& _ 
                "                                            SUM(ANULDEVCOMP) AS ANULDEVCOMP, SUM"& _ 
                "(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                                                                      SUM(SALPRO"& _ 
                "D) AS SALPROD, SUM(DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERE"& _ 
                "NCIASALIDA) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                  "& _ 
                "            AS TRANSFERENCIASALIDA, SUM(AJUSTESALIDA) AS AJUSTESALIDA, SUM(ANULD"& _ 
                "EVVTA) AS ANULDEVVTA, CODSUCURSAL, CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                "& _ 
                "                                              CONVERT(DATETIME, CAST(FECHAMTO AS"& _ 
                " VARCHAR(11)), 103) AS FECHAMTO, DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                  "& _ 
                "                  FROM            (SELECT        TOP (100) PERCENT CD.CODIGO, RT"& _ 
                "RIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD.DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                                "& _ 
                "                  + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, "& _ 
                "M.CONCEPTO, M.CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                                                   M.CODDEPOSITO AS CODSUCURSAL,"& _ 
                " CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103) AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                                                "& _ 
                "                       CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICI"& _ 
                "AL' AND M.MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                       "& _ 
                "                                                 THEN M.CANTIDAD ELSE 0 END AS S"& _ 
                "TOCKINICIAL, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "                                                                                "& _ 
                "   THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                        "& _ 
                "                                THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE,"& _ 
                " CASE WHEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             "& _ 
                "                                                                           LIKE "& _ 
                "'TRANSF%' AND M.MODULO = 13) THEN M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA,"& _ 
                " "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                             "& _ 
                "                           CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "                                                                                "& _ 
                " M.MODULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                                                "& _ 
                "                   THEN M.CANTIDAD ELSE 0 END AS AJUSTEENTRADA, CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                              "& _ 
                "                                                          M.TIPOPRODUCCION <> 3)"& _ 
                " THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, CASE WHEN (M.CANTIDAD > 0 AND M.MODULO "& _ 
                "= 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                         "& _ 
                "                               THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN "& _ 
                "(M.CANTIDAD > 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "                                                             THEN M.CANTIDAD ELS"& _ 
                "E 0 END AS ANULDEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"          "& _ 
                "                                                                                "& _ 
                "              THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA, CASE WHEN (M.CANTIDAD <"& _ 
                " 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                  "& _ 
                "                                                                      M.MODULO ="& _ 
                " 13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTI"& _ 
                "DAD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                  "& _ 
                "                                      UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MO"& _ 
                "DULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                  "& _ 
                "                                      M.MODULO = 28)) THEN M.CANTIDAD * - 1 ELSE"& _ 
                " 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                                                "& _ 
                "M.MODULO = 28 AND M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SAL"& _ 
                "PROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                        "& _ 
                "                                CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) THE"& _ 
                "N M.CANTIDAD * - 1 ELSE 0 END AS DEVCOMP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                    "& _ 
                "                                                                    CASE WHEN (M"& _ 
                ".CANTIDAD < 0 AND M.MODULO = 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS ANULCOMP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                                                                                "& _ 
                "                        CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) THEN M.CANT"& _ 
                "IDAD * - 1 ELSE 0 END AS ANULDEVVTA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                                               dbo.SUCURSAL.DESS"& _ 
                "UCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                       "& _ 
                "       FROM            dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                                                "& _ 
                "dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCODIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "                                                                                "& _ 
                "    dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                                "& _ 
                "                  dbo.SUCURSAL ON M.CODDEPOSITO = dbo.SUCURSAL.CODSUCURSAL) AS S"& _ 
                "ubconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    WHERE        (CO"& _ 
                "DSUCURSAL = @codsuc) AND (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) "& _ 
                ">= CONVERT(DATETIME, '01/01/1900', "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                           "& _ 
                "                                   103)) AND (CONVERT(DATETIME, CAST(FECHAMTO AS"& _ 
                " VARCHAR(11)), 103) <= CONVERT(DATETIME, @fechastock, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                (CODCODIGO = @pr"& _ 
                "odcodcod)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    GROUP BY CODIGO, "& _ 
                "PRODUCTO, CODSUCURSAL, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)"& _ 
                "), 103), DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    ORDER "& _ 
                "BY FECHAMTO) AS Subconsulta2) AS Subconsulta3"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUC"& _ 
                "URSAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codsuc", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechastock", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prodcodcod", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.StockXFechaDataTable, ByVal codsuc As Global.System.Nullable(Of Integer), ByVal fechastock As Date, ByVal prodcodcod As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (codsuc.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(codsuc.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechastock,Date)
            If (prodcodcod.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(prodcodcod.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal codsuc As Global.System.Nullable(Of Integer), ByVal fechastock As Date, ByVal prodcodcod As Global.System.Nullable(Of Integer)) As DSReporteProductoNW.StockXFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (codsuc.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(codsuc.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechastock,Date)
            If (prodcodcod.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(prodcodcod.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSReporteProductoNW.StockXFechaDataTable = New DSReporteProductoNW.StockXFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MovProductoXRangoFechaTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MovProductoXRangoFecha"
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("STOCKINICIAL", "STOCKINICIAL")
            tableMapping.ColumnMappings.Add("COMPRA", "COMPRA")
            tableMapping.ColumnMappings.Add("DEVOLUCIONCLIENTE", "DEVOLUCIONCLIENTE")
            tableMapping.ColumnMappings.Add("TRANSFERENCIAENTRADA", "TRANSFERENCIAENTRADA")
            tableMapping.ColumnMappings.Add("AJUSTEENTRADA", "AJUSTEENTRADA")
            tableMapping.ColumnMappings.Add("VENTA", "VENTA")
            tableMapping.ColumnMappings.Add("TRANSFERENCIASALIDA", "TRANSFERENCIASALIDA")
            tableMapping.ColumnMappings.Add("AJUSTESALIDA", "AJUSTESALIDA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("ENTRPROD", "ENTRPROD")
            tableMapping.ColumnMappings.Add("ANULVTA", "ANULVTA")
            tableMapping.ColumnMappings.Add("SALPROD", "SALPROD")
            tableMapping.ColumnMappings.Add("DEVCOMP", "DEVCOMP")
            tableMapping.ColumnMappings.Add("ANULCOMP", "ANULCOMP")
            tableMapping.ColumnMappings.Add("ANULDEVCOMP", "ANULDEVCOMP")
            tableMapping.ColumnMappings.Add("ANULDEVVTA", "ANULDEVVTA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(5) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL = @sucursal) AND (CONVERT(DATETIME, CAS"& _ 
                "T(FECHAMTO AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 (CONVERT(DATETIME, CAST(FECHAMT"& _ 
                "O AS VARCHAR(11)), 103) <= CONVERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @"& _ 
                "CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFA"& _ 
                "MILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103"& _ 
                "), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    DESSUCURSAL, CODRUBRO, "& _ 
                "DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) A"& _ 
                "S Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CO"& _ 
                "DCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sucursal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                      CAST(FECHAMTO AS VARCHAR(11)), 103) <= CON"& _ 
                "VERT(DATETIME, @FechaFin, 103)) AND (CODCODIGO = @CODCOD)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "     GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CO"& _ 
                "NVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "                           DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "      ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIG"& _ 
                "O, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO"& _ 
                ", DESRUBRO"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOD", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                      CAST(FECHAMTO AS VARCHAR(11)), 103) <= CON"& _ 
                "VERT(DATETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                "& _ 
                "                        (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                       FROM            dbo.fnPartir(@Plan, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, D"& _ 
                "ESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 DESSUCURSAL, CODRUBRO, DESRUBRO"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subcon"& _ 
                "sulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO,"& _ 
                " DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL = @sucursal) AND (CONVERT(DATETIME, CAS"& _ 
                "T(FECHAMTO AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"   "& _ 
                "                                                 (CONVERT(DATETIME, CAST(FECHAMT"& _ 
                "O AS VARCHAR(11)), 103) <= CONVERT(DATETIME, @FechaFin, 103)) AND (CODIGO IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                      (SELECT        item"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                                     FROM            dbo.fnParti"& _ 
                "r(@Plan, ',') AS fnPartir_1))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PRODUC"& _ 
                "TO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHAMT"& _ 
                "O AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    D"& _ 
                "ESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, CO"& _ 
                "DSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DE"& _ 
                "SFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@sucursal", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Plan", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(4).Connection = Me.Connection
            Me._commandCollection(4).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 10"& _ 
                "3) >= CONVERT(DATETIME, @FechaIni, 103)) AND (CONVERT(DATETIME, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                      CAST(FECHAMTO AS VARCHAR(11)), 103) <= CON"& _ 
                "VERT(DATETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          GROUP BY CODIGO, PROD"& _ 
                "UCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CONVERT(DATETIME, CAST(FECHA"& _ 
                "MTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                   "& _ 
                " DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          ORDER BY CODCODIGO, "& _ 
                "CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, "& _ 
                "DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO, DESRUBRO"
            Me._commandCollection(4).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(4).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(5).Connection = Me.Connection
            Me._commandCollection(5).CommandText = "SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOCKINICIAL) AS STOCKINICI"& _ 
                "AL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS "& _ 
                "DEVOLUCIONCLIENTE, SUM(TRANSFERENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTE"& _ 
                "ENTRADA) AS AJUSTEENTRADA, SUM(ANULDEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS ANULDE"& _ 
                "VCOMP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, "& _ 
                "SUM(SALPROD) AS SALPROD, SUM(DEVCOMP) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS DEVCOMP, SUM"& _ 
                "(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRANSFERENCIASALIDA, SUM(AJU"& _ 
                "STESALIDA) AS AJUSTESALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SUM(ANULDEVVTA) AS ANULDE"& _ 
                "VVTA, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CODRUBRO, DESSUCURSAL, DESRU"& _ 
                "BRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            (SELECT        TOP (100) PERCENT CODIGO, PRODUCTO, SUM(STOC"& _ 
                "KINICIAL) AS STOCKINICIAL, SUM(COMPRA) AS COMPRA, SUM(DEVOLUCIONCLIENTE) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                                               AS DEVOLUCIONCLIENTE, SUM(TRANSFE"& _ 
                "RENCIAENTRADA) AS TRANSFERENCIAENTRADA, SUM(AJUSTEENTRADA) AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                                                   SUM(ANULDEVCOMP) AS ANULDEVCO"& _ 
                "MP, SUM(VENTA) AS VENTA, SUM(ENTRPROD) AS ENTRPROD, SUM(ANULVTA) AS ANULVTA, SUM"& _ 
                "(SALPROD) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    AS SALPROD, SUM("& _ 
                "DEVCOMP) AS DEVCOMP, SUM(ANULCOMP) AS ANULCOMP, SUM(TRANSFERENCIASALIDA) AS TRAN"& _ 
                "SFERENCIASALIDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    SUM(AJUST"& _ 
                "ESALIDA) AS AJUSTESALIDA, SUM(ANULDEVVTA) AS ANULDEVVTA, CODSUCURSAL, DESFAMILIA"& _ 
                ", DESLINEA, CODCODIGO, CODRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "       CONVERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103) AS FECHAMTO, DESSUC"& _ 
                "URSAL, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          FROM            (SELECT        TOP (1"& _ 
                "00) PERCENT CD.CODIGO, RTRIM(ISNULL(P.DESPRODUCTO, '')) + ' ' + LTRIM(ISNULL(CD."& _ 
                "DESCODIGO1, '')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 + + LTRIM(ISNULL(CD.DESCODIGO2, '')) AS PRODUCTO, M.CANTIDAD, M"& _ 
                ".CONCEPTO, M.CODCODIGO, M.CODDEPOSITO AS CODSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                        "& _ 
                "                                                      dbo.FAMILIA.DESFAMILIA, db"& _ 
                "o.LINEA.DESLINEA, CONVERT(DATETIME, CAST(M.FECHAMOVIMIENTO AS VARCHAR(11)), 103)"& _ 
                " AS FECHAMTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              CASE WHEN (M.CANTIDAD > 0 AND (M.CONCEPTO) = 'STOCK INICIAL' AND M"& _ 
                ".MODULO = 13) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                "& _ 
                "              THEN M.CANTIDAD ELSE 0 END AS STOCKINICIAL, CASE WHEN (M.CANTIDAD "& _ 
                "> 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                        "& _ 
                "                      THEN M.CANTIDAD ELSE 0 END AS COMPRA, CASE WHEN (M.CANTIDA"& _ 
                "D > 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                     "& _ 
                "                         THEN M.CANTIDAD ELSE 0 END AS DEVOLUCIONCLIENTE, CASE W"& _ 
                "HEN (M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             M.MODULO = 13) THEN"& _ 
                " M.CANTIDAD ELSE 0 END AS TRANSFERENCIAENTRADA, CASE WHEN ((M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"  "& _ 
                "                                                                            M.MO"& _ 
                "DULO = 28) AND M.CANTIDAD > 0 AND UPPER(M.CONCEPTO) LIKE 'AJUSTE%') THEN M.CANTI"& _ 
                "DAD ELSE 0 END AS AJUSTEENTRADA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                             "& _ 
                "                                 CASE WHEN (M.CANTIDAD > 0 AND M.MODULO = 28 AND"& _ 
                " M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD ELSE 0 END AS ENTRPROD, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "                                                                CASE WHEN (M.CAN"& _ 
                "TIDAD > 0 AND M.MODULO = 8) THEN M.CANTIDAD ELSE 0 END AS ANULVTA, CASE WHEN (M."& _ 
                "CANTIDAD > 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                             "& _ 
                "                 M.MODULO = 29) THEN M.CANTIDAD ELSE 0 END AS ANULDEVCOMP, CASE "& _ 
                "WHEN (M.CANTIDAD < 0 AND M.MODULO = 8) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                       "& _ 
                "                                       THEN M.CANTIDAD * - 1 ELSE 0 END AS VENTA"& _ 
                ", CASE WHEN (M.CANTIDAD < 0 AND UPPER(M.CONCEPTO) LIKE 'TRANSF%' AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                                                                     M.MODULO = "& _ 
                "13) THEN M.CANTIDAD * - 1 ELSE 0 END AS TRANSFERENCIASALIDA, CASE WHEN (M.CANTID"& _ 
                "AD < 0 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                   "& _ 
                "           UPPER(M.CONCEPTO) LIKE 'AJUSTE%' AND (M.MODULO = 13 OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "                                                                 M.MODULO = 28))"& _ 
                " THEN M.CANTIDAD * - 1 ELSE 0 END AS AJUSTESALIDA, CASE WHEN (M.CANTIDAD < 0 AND"& _ 
                " M.MODULO = 28 AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                           "& _ 
                "                   M.TIPOPRODUCCION <> 3) THEN M.CANTIDAD * - 1 ELSE 0 END AS SA"& _ 
                "LPROD, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 29) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                                                    THEN M.CANTIDAD * - 1 ELSE 0"& _ 
                " END AS DEVCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 3) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "                                                             THEN M.CANTIDAD * -"& _ 
                " 1 ELSE 0 END AS ANULCOMP, CASE WHEN (M.CANTIDAD < 0 AND M.MODULO = 11) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                                                                        THEN M.C"& _ 
                "ANTIDAD * - 1 ELSE 0 END AS ANULDEVVTA, dbo.SUCURSAL.DESSUCURSAL, P.CODRUBRO, db"& _ 
                "o.RUBRO.DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                    FROM      "& _ 
                "      dbo.MOVPRODUCTO AS M INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                         "& _ 
                "                                     dbo.CODIGOS AS CD ON M.CODCODIGO = CD.CODCO"& _ 
                "DIGO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                               "& _ 
                "               dbo.PRODUCTOS AS P ON CD.CODPRODUCTO = P.CODPRODUCTO LEFT OUTER J"& _ 
                "OIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                                                           "& _ 
                "   dbo.FAMILIA ON P.CODFAMILIA = dbo.FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                                                                       dbo.LINEA"& _ 
                " ON P.CODLINEA = dbo.LINEA.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                           "& _ 
                "                                                   dbo.SUCURSAL ON M.CODDEPOSITO"& _ 
                " = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                                   "& _ 
                "                                           dbo.RUBRO ON P.CODRUBRO = dbo.RUBRO.C"& _ 
                "ODRUBRO AND dbo.LINEA.CODLINEA = dbo.RUBRO.CODLINEA) AS Subconsulta"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "               WHERE        (CODSUCURSAL = @suc) AND (CONVERT(DATETIME, CAST(FEC"& _ 
                "HAMTO AS VARCHAR(11)), 103) >= CONVERT(DATETIME, @FechaIni, 103)) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"        "& _ 
                "                                            (CONVERT(DATETIME, CAST(FECHAMTO AS "& _ 
                "VARCHAR(11)), 103) <= CONVERT(DATETIME, @FechaFin, 103))"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "    GROUP BY CODIGO, PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, CON"& _ 
                "VERT(DATETIME, CAST(FECHAMTO AS VARCHAR(11)), 103), "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "                          DESSUCURSAL, CODRUBRO, DESRUBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                     "& _ 
                "     ORDER BY CODCODIGO, CODSUCURSAL, FECHAMTO) AS Subconsulta2"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGO"& _ 
                ", PRODUCTO, CODSUCURSAL, DESFAMILIA, DESLINEA, CODCODIGO, DESSUCURSAL, CODRUBRO,"& _ 
                " DESRUBRO"
            Me._commandCollection(5).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suc", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaIni", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(5).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FechaFin", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill1PSuc(ByVal dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable, ByVal sucursal As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData1PSuc(ByVal sucursal As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As DSReporteProductoNW.MovProductoXRangoFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable = New DSReporteProductoNW.MovProductoXRangoFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1PSinSuc(ByVal dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1PSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal CODCOD As Global.System.Nullable(Of Integer)) As DSReporteProductoNW.MovProductoXRangoFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (CODCOD.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODCOD.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable = New DSReporteProductoNW.MovProductoXRangoFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSinSuc(ByVal dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As DSReporteProductoNW.MovProductoXRangoFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(Plan,String)
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable = New DSReporteProductoNW.MovProductoXRangoFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByLPSuc(ByVal dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable, ByVal sucursal As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByLPSuc(ByVal sucursal As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date, ByVal Plan As String) As DSReporteProductoNW.MovProductoXRangoFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            If (sucursal.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(sucursal.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            If (Plan Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Plan")
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(Plan,String)
            End If
            Dim dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable = New DSReporteProductoNW.MovProductoXRangoFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSinSuc(ByVal dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable, ByVal FechaIni As Date, ByVal FechaFin As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSinSuc(ByVal FechaIni As Date, ByVal FechaFin As Date) As DSReporteProductoNW.MovProductoXRangoFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(4)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaFin,Date)
            Dim dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable = New DSReporteProductoNW.MovProductoXRangoFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillByTPSuc(ByVal dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable, ByVal suc As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (suc.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataByTPSuc(ByVal suc As Global.System.Nullable(Of Integer), ByVal FechaIni As Date, ByVal FechaFin As Date) As DSReporteProductoNW.MovProductoXRangoFechaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(5)
            If (suc.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(suc.Value,Integer)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(FechaIni,Date)
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(FechaFin,Date)
            Dim dataTable As DSReporteProductoNW.MovProductoXRangoFechaDataTable = New DSReporteProductoNW.MovProductoXRangoFechaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class PROVEEDORTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "PROVEEDOR"
            tableMapping.ColumnMappings.Add("CODPROVEEDOR", "CODPROVEEDOR")
            tableMapping.ColumnMappings.Add("PROVEEDOR", "PROVEEDOR")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [PROVEEDOR] WHERE (([CODPROVEEDOR] = @Original_CODPROVEEDOR))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [PROVEEDOR] ([CODPROVEEDOR]) VALUES (@CODPROVEEDOR);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODPROVE"& _ 
                "EDOR, RTRIM(NOMBRE) + ' ' + LTRIM(APELLIDO) AS PROVEEDOR FROM PROVEEDOR WHERE (C"& _ 
                "ODPROVEEDOR = @CODPROVEEDOR)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [PROVEEDOR] SET [CODPROVEEDOR] = @CODPROVEEDOR WHERE (([CODPROVEEDOR] = @O"& _ 
                "riginal_CODPROVEEDOR));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODPROVEEDOR, RTRIM(NOMBRE) + ' ' + LTRIM(APELLI"& _ 
                "DO) AS PROVEEDOR FROM PROVEEDOR WHERE (CODPROVEEDOR = @CODPROVEEDOR)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPROVEEDOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPROVEEDOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODPROVEEDOR, rtrim (NOMBRE) + ' ' +ltrim( APELLIDO) as PROVEEDOR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FRO"& _ 
                "M         PROVEEDOR"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.PROVEEDORDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.PROVEEDORDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.PROVEEDORDataTable = New DSReporteProductoNW.PROVEEDORDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.PROVEEDORDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "PROVEEDOR")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODPROVEEDOR As Decimal) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODPROVEEDOR,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODPROVEEDOR As Decimal) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODPROVEEDOR,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODPROVEEDOR As Decimal, ByVal Original_CODPROVEEDOR As Decimal) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODPROVEEDOR,Decimal)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(Original_CODPROVEEDOR,Decimal)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal Original_CODPROVEEDOR As Decimal) As Integer
            Return Me.Update(Original_CODPROVEEDOR, Original_CODPROVEEDOR)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StockMinimoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StockMinimo"
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("CATEGORIA", "CATEGORIA")
            tableMapping.ColumnMappings.Add("LINEA", "LINEA")
            tableMapping.ColumnMappings.Add("MARCA", "MARCA")
            tableMapping.ColumnMappings.Add("STOCKMINIMO", "STOCKMINIMO")
            tableMapping.ColumnMappings.Add("STOCKMAXIMO", "STOCKMAXIMO")
            tableMapping.ColumnMappings.Add("STOCKACTUAL", "STOCKACTUAL")
            tableMapping.ColumnMappings.Add("MEDIDA", "MEDIDA")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, FAMILIA.DESFAMILIA AS CAT"& _ 
                "EGORIA, LINEA.DESLINEA AS LINEA, RUBRO.DESRUBRO AS MARCA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     ISNULL(PRODUCTOS.STOCKMINIMO, 0) AS STOCKMINIMO, ISNULL(PRODUCTOS.STOCKMAXI"& _ 
                "MO, 0) AS STOCKMAXIMO, CODIGOS.CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.COD"& _ 
                "PRODUCTO, ISNULL(STOCKDEPOSITO.STOCKACTUAL, 0) AS STOCKACTUAL, UNIDADMEDIDA.DESM"& _ 
                "EDIDA AS MEDIDA, SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.CODIGO"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            SUCURSAL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON"& _ 
                " SUCURSAL.CODSUCURSAL = STOCKDEPOSITO.CODDEPOSITO RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             PRODUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PROD"& _ 
                "UCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODF"& _ 
                "AMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = R"& _ 
                "UBRO.CODRUBRO AND LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOS"& _ 
                "ITO.CODCODIGO = CODIGOS.CODCODIGO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO.C"& _ 
                "ODPRODUCTO = CODIGOS.CODPRODUCTO AND STOCKDEPOSITO.STOCKACTUAL < PRODUCTOS.STOCK"& _ 
                "MINIMO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON UNIDADMEDIDA.CO"& _ 
                "DMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AND (PRODUCTO"& _ 
                "S.SERVICIO = 0) AND (SUCURSAL.DESSUCURSAL LIKE @desd)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@desd", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        RTRIM(PRODUCTOS.DESPRODUCTO) AS PRODUCTO, FAMILIA.DESFAMILIA AS CAT"& _ 
                "EGORIA, LINEA.DESLINEA AS LINEA, RUBRO.DESRUBRO AS MARCA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     ISNULL(PRODUCTOS.STOCKMINIMO, 0) AS STOCKMINIMO, ISNULL(PRODUCTOS.STOCKMAXI"& _ 
                "MO, 0) AS STOCKMAXIMO, CODIGOS.CODCODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.COD"& _ 
                "PRODUCTO, ISNULL(STOCKDEPOSITO.STOCKACTUAL, 0) AS STOCKACTUAL, UNIDADMEDIDA.DESM"& _ 
                "EDIDA AS MEDIDA, SUCURSAL.DESSUCURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS.CODIGO"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            SUCURSAL INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON"& _ 
                " SUCURSAL.CODSUCURSAL = STOCKDEPOSITO.CODDEPOSITO RIGHT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"            "& _ 
                "             PRODUCTOS LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PROD"& _ 
                "UCTOS.CODFAMILIA = FAMILIA.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "LINEA ON PRODUCTOS.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINEA.CODF"& _ 
                "AMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = R"& _ 
                "UBRO.CODRUBRO AND LINEA.CODLINEA = RUBRO.CODLINEA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            CODIGOS ON PRODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO ON STOCKDEPOS"& _ 
                "ITO.CODCODIGO = CODIGOS.CODCODIGO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO.C"& _ 
                "ODPRODUCTO = CODIGOS.CODPRODUCTO AND STOCKDEPOSITO.STOCKACTUAL < PRODUCTOS.STOCK"& _ 
                "MINIMO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         UNIDADMEDIDA ON UNIDADMEDIDA.CO"& _ 
                "DMEDIDA = PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AND (PRODUCTO"& _ 
                "S.SERVICIO = 0)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function FillBySuc(ByVal dataTable As DSReporteProductoNW.StockMinimoDataTable, ByVal desd As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desd Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desd,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetDataBySuc(ByVal desd As String) As DSReporteProductoNW.StockMinimoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (desd Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(desd,String)
            End If
            Dim dataTable As DSReporteProductoNW.StockMinimoDataTable = New DSReporteProductoNW.StockMinimoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.StockMinimoDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.StockMinimoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Dim dataTable As DSReporteProductoNW.StockMinimoDataTable = New DSReporteProductoNW.StockMinimoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class StockProductoTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "StockProducto"
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("STOCKACTUAL", "STOCKACTUAL")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("Expr1", "Expr1")
            tableMapping.ColumnMappings.Add("Expr2", "Expr2")
            tableMapping.ColumnMappings.Add("Expr3", "Expr3")
            tableMapping.ColumnMappings.Add("CODPRODUCTO", "CODPRODUCTO")
            tableMapping.ColumnMappings.Add("CODRUBRO", "CODRUBRO")
            tableMapping.ColumnMappings.Add("CODFAMILIA", "CODFAMILIA")
            tableMapping.ColumnMappings.Add("CODLINEA", "CODLINEA")
            tableMapping.ColumnMappings.Add("NUMCOLOR", "NUMCOLOR")
            tableMapping.ColumnMappings.Add("NUMTALLE", "NUMTALLE")
            tableMapping.ColumnMappings.Add("TAL_CODEMPRESA", "TAL_CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODIVA", "CODIVA")
            tableMapping.ColumnMappings.Add("CODMEDIDA", "CODMEDIDA")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODESTADOPRODUCTO", "CODESTADOPRODUCTO")
            tableMapping.ColumnMappings.Add("CODDESCUENTO", "CODDESCUENTO")
            tableMapping.ColumnMappings.Add("CODPROVEEDOR", "CODPROVEEDOR")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("CODIGOBARRA", "CODIGOBARRA")
            tableMapping.ColumnMappings.Add("COSTOANTERIOR", "COSTOANTERIOR")
            tableMapping.ColumnMappings.Add("STOCKMINIMO", "STOCKMINIMO")
            tableMapping.ColumnMappings.Add("STOCKMAXIMO", "STOCKMAXIMO")
            tableMapping.ColumnMappings.Add("FECHAINGRESO", "FECHAINGRESO")
            tableMapping.ColumnMappings.Add("CODIGOORIGINAL", "CODIGOORIGINAL")
            tableMapping.ColumnMappings.Add("PRODUCTOACTIVO", "PRODUCTOACTIVO")
            tableMapping.ColumnMappings.Add("ULTIMOCOSTO", "ULTIMOCOSTO")
            tableMapping.ColumnMappings.Add("PORCENCOMI", "PORCENCOMI")
            tableMapping.ColumnMappings.Add("IMAGEN", "IMAGEN")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("COSTOPP", "COSTOPP")
            tableMapping.ColumnMappings.Add("FECHAPP", "FECHAPP")
            tableMapping.ColumnMappings.Add("ORDPRE", "ORDPRE")
            tableMapping.ColumnMappings.Add("FACCAM", "FACCAM")
            tableMapping.ColumnMappings.Add("FECHAULTIMACOMPRA", "FECHAULTIMACOMPRA")
            tableMapping.ColumnMappings.Add("NUMCLOR", "NUMCLOR")
            tableMapping.ColumnMappings.Add("CLOR_CODEMPRESA", "CLOR_CODEMPRESA")
            tableMapping.ColumnMappings.Add("PESO", "PESO")
            tableMapping.ColumnMappings.Add("PESOESPECIFICO", "PESOESPECIFICO")
            tableMapping.ColumnMappings.Add("PESOPORMEDIDA", "PESOPORMEDIDA")
            tableMapping.ColumnMappings.Add("CODPLANTILLA", "CODPLANTILLA")
            tableMapping.ColumnMappings.Add("SERVICIO", "SERVICIO")
            tableMapping.ColumnMappings.Add("ESTADO", "ESTADO")
            tableMapping.ColumnMappings.Add("IVAINCLUIDO", "IVAINCLUIDO")
            tableMapping.ColumnMappings.Add("Expr4", "Expr4")
            tableMapping.ColumnMappings.Add("PRECIOSERVICIO", "PRECIOSERVICIO")
            tableMapping.ColumnMappings.Add("PRODUCTOPRODUCIDO", "PRODUCTOPRODUCIDO")
            tableMapping.ColumnMappings.Add("CODDEPOSITO", "CODDEPOSITO")
            tableMapping.ColumnMappings.Add("CODCODIGO", "CODCODIGO")
            tableMapping.ColumnMappings.Add("COL_CODEMPRESA", "COL_CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("USUPP", "USUPP")
            tableMapping.ColumnMappings.Add("EMPREUSUPP", "EMPREUSUPP")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(3) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        dbo.UNIDADMEDIDA.DESMEDIDA, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLI"& _ 
                "NEA, dbo.CODIGOS.CODIGO, dbo.STOCKDEPOSITO.STOCKACTUAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   dbo.STOCKDEPOSITO.CODDEPOSITO, dbo.SUCURSAL.DESSUCURSAL, dbo.RUBRO.DESRUBRO, "& _ 
                "RTRIM(dbo.PRODUCTOS.DESPRODUCTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(dbo.CO"& _ 
                "DIGOS.DESCODIGO1) AS PRODUCTO, dbo.PRODUCTOS.ESTADO AS Expr1, dbo.PRODUCTOS.CODP"& _ 
                "RODUCTO AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS.CODCODIGO, dbo.PRODUCTO"& _ 
                "S.SERVICIO AS Expr3, dbo.PRODUCTOS.CODPRODUCTO, dbo.PRODUCTOS.CODRUBRO, dbo.PROD"& _ 
                "UCTOS.CODFAMILIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODLINEA, dbo.PRODUCT"& _ 
                "OS.NUMCOLOR, dbo.PRODUCTOS.COL_CODEMPRESA, dbo.PRODUCTOS.NUMTALLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              dbo.PRODUCTOS.TAL_CODEMPRESA, dbo.PRODUCTOS.CODIVA, dbo.PRODUCTOS."& _ 
                "CODMEDIDA, dbo.PRODUCTOS.CODMONEDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.COD"& _ 
                "ESTADOPRODUCTO, dbo.PRODUCTOS.CODDESCUENTO, dbo.PRODUCTOS.CODUSUARIO, dbo.PRODUC"& _ 
                "TOS.CODEMPRESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODPROVEEDOR, dbo.PRODU"& _ 
                "CTOS.DESPRODUCTO, dbo.PRODUCTOS.CODIGOBARRA, dbo.PRODUCTOS.COSTOANTERIOR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     dbo.PRODUCTOS.STOCKMINIMO, dbo.PRODUCTOS.STOCKMAXIMO, dbo.P"& _ 
                "RODUCTOS.FECHAINGRESO, dbo.PRODUCTOS.CODIGOORIGINAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "dbo.PRODUCTOS.PRODUCTOACTIVO, dbo.PRODUCTOS.ULTIMOCOSTO, dbo.PRODUCTOS.PORCENCOM"& _ 
                "I, dbo.PRODUCTOS.IMAGEN, dbo.PRODUCTOS.FECGRA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PR"& _ 
                "ODUCTOS.COSTOPP, dbo.PRODUCTOS.FECHAPP, dbo.PRODUCTOS.USUPP, dbo.PRODUCTOS.ORDPR"& _ 
                "E, dbo.PRODUCTOS.EMPREUSUPP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.FACCAM, db"& _ 
                "o.PRODUCTOS.FECHAULTIMACOMPRA, dbo.PRODUCTOS.NUMCLOR, dbo.PRODUCTOS.CLOR_CODEMPR"& _ 
                "ESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.PESO, dbo.PRODUCTOS.PESOESPECIFICO"& _ 
                ", dbo.PRODUCTOS.PESOPORMEDIDA, dbo.PRODUCTOS.IMAGENPRODUCTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        dbo.PRODUCTOS.CODPLANTILLA, dbo.PRODUCTOS.SERVICIO, dbo.PRODUCTOS.ESTADO"& _ 
                ", dbo.PRODUCTOS.IVAINCLUIDO, dbo.PRODUCTOS.PRODUCTO AS Expr4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         dbo.PRODUCTOS.PRECIOSERVICIO, dbo.PRODUCTOS.PRODUCTOPRODUCIDO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        dbo.STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS ON db"& _ 
                "o.STOCKDEPOSITO.CODCODIGO = dbo.CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            dbo.PRODUCTOS ON dbo.PRODUCTOS.CODPRODUCTO = dbo.CODIGOS.CODPRODUCTO"& _ 
                " LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.SUCURSAL ON dbo.STOCKDEPOSITO.COD"& _ 
                "DEPOSITO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         db"& _ 
                "o.FAMILIA ON dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         dbo.RUBRO ON dbo.PRODUCTOS.CODRUBRO = dbo.RUBRO.CODRUBR"& _ 
                "O LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.LINEA ON dbo.PRODUCTOS.CODLINEA "& _ 
                "= dbo.LINEA.CODLINEA AND dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT "& _ 
                "OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.UNIDADMEDIDA ON dbo.UNIDADMEDIDA.CODMED"& _ 
                "IDA = dbo.PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (dbo.PRODUCTOS.ESTADO = 0) AND (dbo."& _ 
                "LINEA.DESLINEA LIKE @linea OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.LINEA.DESLINEA IS NU"& _ 
                "LL) AND (dbo.RUBRO.DESRUBRO LIKE @rub OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.RUBRO.DES"& _ 
                "RUBRO IS NULL) AND (dbo.SUCURSAL.DESSUCURSAL LIKE @suc) AND (dbo.PRODUCTOS.DESPR"& _ 
                "ODUCTO LIKE @prod) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (dbo.FAMILIA.DESFAMILIA LIKE @"& _ 
                "fam OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.FAMILIA.DESFAMILIA IS NULL) AND (dbo.PRODUC"& _ 
                "TOS.SERVICIO <> 1)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@linea", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "DESLINEA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@rub", Global.System.Data.SqlDbType.VarChar, 100, Global.System.Data.ParameterDirection.Input, 0, 0, "DESRUBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@suc", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prod", Global.System.Data.SqlDbType.VarChar, 80, Global.System.Data.ParameterDirection.Input, 0, 0, "DESPRODUCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fam", Global.System.Data.SqlDbType.VarChar, 50, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFAMILIA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        dbo.UNIDADMEDIDA.DESMEDIDA, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLI"& _ 
                "NEA, dbo.CODIGOS.CODIGO, dbo.STOCKDEPOSITO.STOCKACTUAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   dbo.STOCKDEPOSITO.CODDEPOSITO, dbo.SUCURSAL.DESSUCURSAL, dbo.RUBRO.DESRUBRO, "& _ 
                "RTRIM(dbo.PRODUCTOS.DESPRODUCTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(dbo.CO"& _ 
                "DIGOS.DESCODIGO1) AS PRODUCTO, dbo.PRODUCTOS.ESTADO AS Expr1, dbo.PRODUCTOS.CODP"& _ 
                "RODUCTO AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS.CODCODIGO, dbo.PRODUCTO"& _ 
                "S.SERVICIO AS Expr3, dbo.PRODUCTOS.CODPRODUCTO, dbo.PRODUCTOS.CODRUBRO, dbo.PROD"& _ 
                "UCTOS.CODFAMILIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODLINEA, dbo.PRODUCT"& _ 
                "OS.NUMCOLOR, dbo.PRODUCTOS.COL_CODEMPRESA, dbo.PRODUCTOS.NUMTALLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              dbo.PRODUCTOS.TAL_CODEMPRESA, dbo.PRODUCTOS.CODIVA, dbo.PRODUCTOS."& _ 
                "CODMEDIDA, dbo.PRODUCTOS.CODMONEDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.COD"& _ 
                "ESTADOPRODUCTO, dbo.PRODUCTOS.CODDESCUENTO, dbo.PRODUCTOS.CODUSUARIO, dbo.PRODUC"& _ 
                "TOS.CODEMPRESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODPROVEEDOR, dbo.PRODU"& _ 
                "CTOS.DESPRODUCTO, dbo.PRODUCTOS.CODIGOBARRA, dbo.PRODUCTOS.COSTOANTERIOR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     dbo.PRODUCTOS.STOCKMINIMO, dbo.PRODUCTOS.STOCKMAXIMO, dbo.P"& _ 
                "RODUCTOS.FECHAINGRESO, dbo.PRODUCTOS.CODIGOORIGINAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "dbo.PRODUCTOS.PRODUCTOACTIVO, dbo.PRODUCTOS.ULTIMOCOSTO, dbo.PRODUCTOS.PORCENCOM"& _ 
                "I, dbo.PRODUCTOS.IMAGEN, dbo.PRODUCTOS.FECGRA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PR"& _ 
                "ODUCTOS.COSTOPP, dbo.PRODUCTOS.FECHAPP, dbo.PRODUCTOS.USUPP, dbo.PRODUCTOS.ORDPR"& _ 
                "E, dbo.PRODUCTOS.EMPREUSUPP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.FACCAM, db"& _ 
                "o.PRODUCTOS.FECHAULTIMACOMPRA, dbo.PRODUCTOS.NUMCLOR, dbo.PRODUCTOS.CLOR_CODEMPR"& _ 
                "ESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.PESO, dbo.PRODUCTOS.PESOESPECIFICO"& _ 
                ", dbo.PRODUCTOS.PESOPORMEDIDA, dbo.PRODUCTOS.IMAGENPRODUCTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        dbo.PRODUCTOS.CODPLANTILLA, dbo.PRODUCTOS.SERVICIO, dbo.PRODUCTOS.ESTADO"& _ 
                ", dbo.PRODUCTOS.IVAINCLUIDO, dbo.PRODUCTOS.PRODUCTO AS Expr4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         dbo.PRODUCTOS.PRECIOSERVICIO, dbo.PRODUCTOS.PRODUCTOPRODUCIDO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        dbo.STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS ON db"& _ 
                "o.STOCKDEPOSITO.CODCODIGO = dbo.CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            dbo.PRODUCTOS ON dbo.PRODUCTOS.CODPRODUCTO = dbo.CODIGOS.CODPRODUCTO"& _ 
                " LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.SUCURSAL ON dbo.STOCKDEPOSITO.COD"& _ 
                "DEPOSITO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         db"& _ 
                "o.FAMILIA ON dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         dbo.RUBRO ON dbo.PRODUCTOS.CODRUBRO = dbo.RUBRO.CODRUBR"& _ 
                "O LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.LINEA ON dbo.PRODUCTOS.CODLINEA "& _ 
                "= dbo.LINEA.CODLINEA AND dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT "& _ 
                "OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.UNIDADMEDIDA ON dbo.UNIDADMEDIDA.CODMED"& _ 
                "IDA = dbo.PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AND (PRODUCTO"& _ 
                "S.SERVICIO <> 1) AND (CODIGOS.CODCODIGO = @prod)"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prod", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        dbo.UNIDADMEDIDA.DESMEDIDA, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLI"& _ 
                "NEA, dbo.CODIGOS.CODIGO, dbo.STOCKDEPOSITO.STOCKACTUAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   dbo.STOCKDEPOSITO.CODDEPOSITO, dbo.SUCURSAL.DESSUCURSAL, dbo.RUBRO.DESRUBRO, "& _ 
                "RTRIM(dbo.PRODUCTOS.DESPRODUCTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(dbo.CO"& _ 
                "DIGOS.DESCODIGO1) AS PRODUCTO, dbo.PRODUCTOS.ESTADO AS Expr1, dbo.PRODUCTOS.CODP"& _ 
                "RODUCTO AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS.CODCODIGO, dbo.PRODUCTO"& _ 
                "S.SERVICIO AS Expr3, dbo.PRODUCTOS.CODPRODUCTO, dbo.PRODUCTOS.CODRUBRO, dbo.PROD"& _ 
                "UCTOS.CODFAMILIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODLINEA, dbo.PRODUCT"& _ 
                "OS.NUMCOLOR, dbo.PRODUCTOS.COL_CODEMPRESA, dbo.PRODUCTOS.NUMTALLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              dbo.PRODUCTOS.TAL_CODEMPRESA, dbo.PRODUCTOS.CODIVA, dbo.PRODUCTOS."& _ 
                "CODMEDIDA, dbo.PRODUCTOS.CODMONEDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.COD"& _ 
                "ESTADOPRODUCTO, dbo.PRODUCTOS.CODDESCUENTO, dbo.PRODUCTOS.CODUSUARIO, dbo.PRODUC"& _ 
                "TOS.CODEMPRESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODPROVEEDOR, dbo.PRODU"& _ 
                "CTOS.DESPRODUCTO, dbo.PRODUCTOS.CODIGOBARRA, dbo.PRODUCTOS.COSTOANTERIOR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     dbo.PRODUCTOS.STOCKMINIMO, dbo.PRODUCTOS.STOCKMAXIMO, dbo.P"& _ 
                "RODUCTOS.FECHAINGRESO, dbo.PRODUCTOS.CODIGOORIGINAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "dbo.PRODUCTOS.PRODUCTOACTIVO, dbo.PRODUCTOS.ULTIMOCOSTO, dbo.PRODUCTOS.PORCENCOM"& _ 
                "I, dbo.PRODUCTOS.IMAGEN, dbo.PRODUCTOS.FECGRA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PR"& _ 
                "ODUCTOS.COSTOPP, dbo.PRODUCTOS.FECHAPP, dbo.PRODUCTOS.USUPP, dbo.PRODUCTOS.ORDPR"& _ 
                "E, dbo.PRODUCTOS.EMPREUSUPP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.FACCAM, db"& _ 
                "o.PRODUCTOS.FECHAULTIMACOMPRA, dbo.PRODUCTOS.NUMCLOR, dbo.PRODUCTOS.CLOR_CODEMPR"& _ 
                "ESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.PESO, dbo.PRODUCTOS.PESOESPECIFICO"& _ 
                ", dbo.PRODUCTOS.PESOPORMEDIDA, dbo.PRODUCTOS.IMAGENPRODUCTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        dbo.PRODUCTOS.CODPLANTILLA, dbo.PRODUCTOS.SERVICIO, dbo.PRODUCTOS.ESTADO"& _ 
                ", dbo.PRODUCTOS.IVAINCLUIDO, dbo.PRODUCTOS.PRODUCTO AS Expr4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         dbo.PRODUCTOS.PRECIOSERVICIO, dbo.PRODUCTOS.PRODUCTOPRODUCIDO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        dbo.STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS ON db"& _ 
                "o.STOCKDEPOSITO.CODCODIGO = dbo.CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            dbo.PRODUCTOS ON dbo.PRODUCTOS.CODPRODUCTO = dbo.CODIGOS.CODPRODUCTO"& _ 
                " LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.SUCURSAL ON dbo.STOCKDEPOSITO.COD"& _ 
                "DEPOSITO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         db"& _ 
                "o.FAMILIA ON dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         dbo.RUBRO ON dbo.PRODUCTOS.CODRUBRO = dbo.RUBRO.CODRUBR"& _ 
                "O LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.LINEA ON dbo.PRODUCTOS.CODLINEA "& _ 
                "= dbo.LINEA.CODLINEA AND dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT "& _ 
                "OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.UNIDADMEDIDA ON dbo.UNIDADMEDIDA.CODMED"& _ 
                "IDA = dbo.PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AND (PRODUCTO"& _ 
                "S.SERVICIO <> 1) AND (CODIGOS.CODCODIGO = @prod) AND (SUCURSAL.CODSUCURSAL = @co"& _ 
                "dsuc)"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prod", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codsuc", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(3).Connection = Me.Connection
            Me._commandCollection(3).CommandText = "SELECT        dbo.UNIDADMEDIDA.DESMEDIDA, dbo.FAMILIA.DESFAMILIA, dbo.LINEA.DESLI"& _ 
                "NEA, dbo.CODIGOS.CODIGO, dbo.STOCKDEPOSITO.STOCKACTUAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   dbo.STOCKDEPOSITO.CODDEPOSITO, dbo.SUCURSAL.DESSUCURSAL, dbo.RUBRO.DESRUBRO, "& _ 
                "RTRIM(dbo.PRODUCTOS.DESPRODUCTO) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         + ' ' + LTRIM(dbo.CO"& _ 
                "DIGOS.DESCODIGO1) AS PRODUCTO, dbo.PRODUCTOS.ESTADO AS Expr1, dbo.PRODUCTOS.CODP"& _ 
                "RODUCTO AS Expr2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS.CODCODIGO, dbo.PRODUCTO"& _ 
                "S.SERVICIO AS Expr3, dbo.PRODUCTOS.CODPRODUCTO, dbo.PRODUCTOS.CODRUBRO, dbo.PROD"& _ 
                "UCTOS.CODFAMILIA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODLINEA, dbo.PRODUCT"& _ 
                "OS.NUMCOLOR, dbo.PRODUCTOS.COL_CODEMPRESA, dbo.PRODUCTOS.NUMTALLE, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "              dbo.PRODUCTOS.TAL_CODEMPRESA, dbo.PRODUCTOS.CODIVA, dbo.PRODUCTOS."& _ 
                "CODMEDIDA, dbo.PRODUCTOS.CODMONEDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.COD"& _ 
                "ESTADOPRODUCTO, dbo.PRODUCTOS.CODDESCUENTO, dbo.PRODUCTOS.CODUSUARIO, dbo.PRODUC"& _ 
                "TOS.CODEMPRESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.CODPROVEEDOR, dbo.PRODU"& _ 
                "CTOS.DESPRODUCTO, dbo.PRODUCTOS.CODIGOBARRA, dbo.PRODUCTOS.COSTOANTERIOR, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"    "& _ 
                "                     dbo.PRODUCTOS.STOCKMINIMO, dbo.PRODUCTOS.STOCKMAXIMO, dbo.P"& _ 
                "RODUCTOS.FECHAINGRESO, dbo.PRODUCTOS.CODIGOORIGINAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "dbo.PRODUCTOS.PRODUCTOACTIVO, dbo.PRODUCTOS.ULTIMOCOSTO, dbo.PRODUCTOS.PORCENCOM"& _ 
                "I, dbo.PRODUCTOS.IMAGEN, dbo.PRODUCTOS.FECGRA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PR"& _ 
                "ODUCTOS.COSTOPP, dbo.PRODUCTOS.FECHAPP, dbo.PRODUCTOS.USUPP, dbo.PRODUCTOS.ORDPR"& _ 
                "E, dbo.PRODUCTOS.EMPREUSUPP, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.FACCAM, db"& _ 
                "o.PRODUCTOS.FECHAULTIMACOMPRA, dbo.PRODUCTOS.NUMCLOR, dbo.PRODUCTOS.CLOR_CODEMPR"& _ 
                "ESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS.PESO, dbo.PRODUCTOS.PESOESPECIFICO"& _ 
                ", dbo.PRODUCTOS.PESOPORMEDIDA, dbo.PRODUCTOS.IMAGENPRODUCTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "        dbo.PRODUCTOS.CODPLANTILLA, dbo.PRODUCTOS.SERVICIO, dbo.PRODUCTOS.ESTADO"& _ 
                ", dbo.PRODUCTOS.IVAINCLUIDO, dbo.PRODUCTOS.PRODUCTO AS Expr4, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         dbo.PRODUCTOS.PRECIOSERVICIO, dbo.PRODUCTOS.PRODUCTOPRODUCIDO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM    "& _ 
                "        dbo.STOCKDEPOSITO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS ON db"& _ 
                "o.STOCKDEPOSITO.CODCODIGO = dbo.CODIGOS.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"             "& _ 
                "            dbo.PRODUCTOS ON dbo.PRODUCTOS.CODPRODUCTO = dbo.CODIGOS.CODPRODUCTO"& _ 
                " LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.SUCURSAL ON dbo.STOCKDEPOSITO.COD"& _ 
                "DEPOSITO = dbo.SUCURSAL.CODSUCURSAL LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         db"& _ 
                "o.FAMILIA ON dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "                         dbo.RUBRO ON dbo.PRODUCTOS.CODRUBRO = dbo.RUBRO.CODRUBR"& _ 
                "O LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.LINEA ON dbo.PRODUCTOS.CODLINEA "& _ 
                "= dbo.LINEA.CODLINEA AND dbo.FAMILIA.CODFAMILIA = dbo.PRODUCTOS.CODFAMILIA LEFT "& _ 
                "OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.UNIDADMEDIDA ON dbo.UNIDADMEDIDA.CODMED"& _ 
                "IDA = dbo.PRODUCTOS.CODMEDIDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUCTOS.ESTADO = 0) AND (PRODUCTO"& _ 
                "S.SERVICIO <> 1) AND (CODIGOS.CODCODIGO = @prod) AND (SUCURSAL.CODSUCURSAL = @co"& _ 
                "dsuc)"
            Me._commandCollection(3).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@prod", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCODIGO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(3).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@codsuc", Global.System.Data.SqlDbType.Int, 4, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.StockProductoDataTable, ByVal linea As String, ByVal rub As String, ByVal suc As String, ByVal prod As String, ByVal fam As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (linea Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(linea,String)
            End If
            If (rub Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(rub,String)
            End If
            If (suc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(suc,String)
            End If
            If (prod Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(prod,String)
            End If
            If (fam Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(fam,String)
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal linea As String, ByVal rub As String, ByVal suc As String, ByVal prod As String, ByVal fam As String) As DSReporteProductoNW.StockProductoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (linea Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(linea,String)
            End If
            If (rub Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(rub,String)
            End If
            If (suc Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(suc,String)
            End If
            If (prod Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(3).Value = CType(prod,String)
            End If
            If (fam Is Nothing) Then
                Me.Adapter.SelectCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.SelectCommand.Parameters(4).Value = CType(fam,String)
            End If
            Dim dataTable As DSReporteProductoNW.StockProductoDataTable = New DSReporteProductoNW.StockProductoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1PSinSuc(ByVal dataTable As DSReporteProductoNW.StockProductoDataTable, ByVal prod As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(prod,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1PSinSuc(ByVal prod As Integer) As DSReporteProductoNW.StockProductoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(prod,Integer)
            Dim dataTable As DSReporteProductoNW.StockProductoDataTable = New DSReporteProductoNW.StockProductoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1PSuc(ByVal dataTable As DSReporteProductoNW.StockProductoDataTable, ByVal prod As Integer, ByVal codsuc As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(prod,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codsuc,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy1PSuc(ByVal prod As Integer, ByVal codsuc As Integer) As DSReporteProductoNW.StockProductoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(prod,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codsuc,Integer)
            Dim dataTable As DSReporteProductoNW.StockProductoDataTable = New DSReporteProductoNW.StockProductoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, false)>  _
        Public Overloads Overridable Function FillBy1PSuc1(ByVal dataTable As DSReporteProductoNW.StockProductoDataTable, ByVal prod As Integer, ByVal codsuc As Integer) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(prod,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codsuc,Integer)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], false)>  _
        Public Overloads Overridable Function GetDataBy(ByVal prod As Integer, ByVal codsuc As Integer) As DSReporteProductoNW.StockProductoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(3)
            Me.Adapter.SelectCommand.Parameters(0).Value = CType(prod,Integer)
            Me.Adapter.SelectCommand.Parameters(1).Value = CType(codsuc,Integer)
            Dim dataTable As DSReporteProductoNW.StockProductoDataTable = New DSReporteProductoNW.StockProductoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MOVIMIENTOPRODUCTODETTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MOVIMIENTOPRODUCTODET"
            tableMapping.ColumnMappings.Add("FECHAMTO", "FECHAMTO")
            tableMapping.ColumnMappings.Add("STOCKINICIAL", "STOCKINICIAL")
            tableMapping.ColumnMappings.Add("ENTRADAPORCOMPRA", "ENTRADAPORCOMPRA")
            tableMapping.ColumnMappings.Add("ENTRADAPORDEVOLUCION", "ENTRADAPORDEVOLUCION")
            tableMapping.ColumnMappings.Add("TRANSFERENCIAENTRADA", "TRANSFERENCIAENTRADA")
            tableMapping.ColumnMappings.Add("Entrada Por Anulacion de Venta", "Entrada Por Anulacion de Venta")
            tableMapping.ColumnMappings.Add("AJUSTEENTRADA", "AJUSTEENTRADA")
            tableMapping.ColumnMappings.Add("SALIDAPORVENTA", "SALIDAPORVENTA")
            tableMapping.ColumnMappings.Add("ENVIO", "ENVIO")
            tableMapping.ColumnMappings.Add("TRANSFERENCIASALIDA", "TRANSFERENCIASALIDA")
            tableMapping.ColumnMappings.Add("AJUSTESALIDA", "AJUSTESALIDA")
            tableMapping.ColumnMappings.Add("OTROS", "OTROS")
            tableMapping.ColumnMappings.Add("DESPRODUCTO", "DESPRODUCTO")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT CONVERT(nvarchar(10), dbo.MOVIMIENTOPRODUCTO.FECH"& _ 
                "AMTO, 103) AS FECHAMTO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        SUM(dbo.MOV"& _ 
                "IMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE        "& _ 
                "(dbo.MOVIMIENTOPRODUCTO.CONCEPTO = 'Stock Inicial')) AS STOCKINICIAL,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"         "& _ 
                "                    (SELECT        SUM(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO ="& _ 
                " 'ENTRADA POR COMPRA')) AS ENTRADAPORCOMPRA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELE"& _ 
                "CT        SUM(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       "& _ 
                "        WHERE        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO = 'ENTRADA POR DEVOLUCIÓN'"& _ 
                ")) AS ENTRADAPORDEVOLUCION,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        SUM(dbo"& _ 
                ".MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE    "& _ 
                "    (dbo.MOVIMIENTOPRODUCTO.CONCEPTO LIKE '%Transferencia%') AND (dbo.MOVIMIENTO"& _ 
                "PRODUCTO.TIPOMOVIMIENTO = 'ENTRADA')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS TRANSFERENCI"& _ 
                "AENTRADA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        SUM(dbo.MOVIMIENTOPRODUCT"& _ 
                "O.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE        (dbo.MOVIMIENT"& _ 
                "OPRODUCTO.CONCEPTO = 'ENTRADA POR ANULACION DE VENTA')) AS [Entrada Por Anulacio"& _ 
                "n de Venta],"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        SUM(dbo.MOVIMIENTOPROD"& _ 
                "UCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE        (dbo.MOVIMI"& _ 
                "ENTOPRODUCTO.CONCEPTO LIKE '%AJUSTE%') AND (dbo.MOVIMIENTOPRODUCTO.TIPOMOVIMIENT"& _ 
                "O = 'ENTRADA')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         AS AJUSTEENTRADA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "           (SELECT        SUM(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"       "& _ 
                "                        WHERE        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO = 'SALIDA "& _ 
                "POR VENTA')) AS SALIDAPORVENTA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT        SUM"& _ 
                "(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE"& _ 
                "        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO = 'ENVIO')) AS ENVIO,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "             (SELECT        SUM(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                          WHERE        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO LIKE '%T"& _ 
                "ransferencia%') AND (dbo.MOVIMIENTOPRODUCTO.TIPOMOVIMIENTO = 'SALIDA')) "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                   AS TRANSFERENCIASALIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                             (SELECT"& _ 
                "        SUM(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         "& _ 
                "      WHERE        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO LIKE '%AJUSTE%') AND (dbo.MO"& _ 
                "VIMIENTOPRODUCTO.TIPOMOVIMIENTO = 'SALIDA')) AS AJUSTESALIDA,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                 "& _ 
                "            (SELECT        SUM(dbo.MOVIMIENTOPRODUCTO.CANTIDAD) AS Expr1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"      "& _ 
                "                         WHERE        (dbo.MOVIMIENTOPRODUCTO.CONCEPTO = 'OTROS'"& _ 
                ")) AS OTROS, dbo.PRODUCTOS.DESPRODUCTO, dbo.CODIGOS.CODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                  "& _ 
                "       dbo.SUCURSAL.DESSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            dbo.MOVIMIENTOPRODUCTO INNER JO"& _ 
                "IN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.PRODUCTOS ON dbo.MOVIMIENTOPRODUCTO.CODPRODUCTO"& _ 
                " = dbo.PRODUCTOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         dbo.CODIGOS ON"& _ 
                " dbo.MOVIMIENTOPRODUCTO.CODCODIGO = dbo.CODIGOS.CODCODIGO AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         dbo.MOVIMIENTOPRODUCTO.CODPRODUCTO = dbo.CODIGOS.CODPRODUCTO AND dbo.PR"& _ 
                "ODUCTOS.CODPRODUCTO = dbo.CODIGOS.CODPRODUCTO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      "& _ 
                "   dbo.SUCURSAL ON dbo.MOVIMIENTOPRODUCTO.CODSUCURSAL = dbo.SUCURSAL.CODSUCURSAL"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (dbo.MOVIMIENTOPRODUCTO.CODPRODUCTO ="&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                          "& _ 
                "   (SELECT        CODPRODUCTO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM            db"& _ 
                "o.PRODUCTOS AS PRODUCTOS_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE        (CODPROD"& _ 
                "UCTO = @CODPRODUCTO))) AND (dbo.MOVIMIENTOPRODUCTO.CODSUCURSAL ="&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"              "& _ 
                "               (SELECT        CODSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               FROM  "& _ 
                "          dbo.SUCURSAL AS SUCURSAL_1"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                               WHERE      "& _ 
                "  (CODSUCURSAL = @CODSUCURSAL))) AND (dbo.MOVIMIENTOPRODUCTO.FECHAMTO BETWEEN @F"& _ 
                "ECHADESDE AND @FECHAHASTA)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY dbo.MOVIMIENTOPRODUCTO.FECHAMTO, dbo.MOVIMI"& _ 
                "ENTOPRODUCTO.CONCEPTO, dbo.MOVIMIENTOPRODUCTO.TIPOMOVIMIENTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "         dbo.PRODUCTOS.DESPRODUCTO, dbo.CODIGOS.CODIGO, dbo.SUCURSAL.DESSUCURSAL"& _ 
                ""&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CONVERT(datetime, dbo.MOVIMIENTOPRODUCTO.FECHAMTO, 103)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHADESDE", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAHASTA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPRODUCTO", Global.System.Data.SqlDbType.[Decimal], 9, Global.System.Data.ParameterDirection.Input, 18, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 9, 0, "", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.MOVIMIENTOPRODUCTODETDataTable, ByVal FECHADESDE As Global.System.Nullable(Of Date), ByVal FECHAHASTA As Global.System.Nullable(Of Date), ByVal CODPRODUCTO As Decimal, ByVal CODSUCURSAL As Decimal) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHADESDE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHADESDE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHAHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHAHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODPRODUCTO,Decimal)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODSUCURSAL,Decimal)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHADESDE As Global.System.Nullable(Of Date), ByVal FECHAHASTA As Global.System.Nullable(Of Date), ByVal CODPRODUCTO As Decimal, ByVal CODSUCURSAL As Decimal) As DSReporteProductoNW.MOVIMIENTOPRODUCTODETDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHADESDE.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHADESDE.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHAHASTA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHAHASTA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.SelectCommand.Parameters(2).Value = CType(CODPRODUCTO,Decimal)
            Me.Adapter.SelectCommand.Parameters(3).Value = CType(CODSUCURSAL,Decimal)
            Dim dataTable As DSReporteProductoNW.MOVIMIENTOPRODUCTODETDataTable = New DSReporteProductoNW.MOVIMIENTOPRODUCTODETDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class COSTOPROMEDIONWSUCTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COSTOPROMEDIONWSUC"
            tableMapping.ColumnMappings.Add("DESFAMILIA", "DESFAMILIA")
            tableMapping.ColumnMappings.Add("DESLINEA", "DESLINEA")
            tableMapping.ColumnMappings.Add("DESRUBRO", "DESRUBRO")
            tableMapping.ColumnMappings.Add("DESMEDIDA", "DESMEDIDA")
            tableMapping.ColumnMappings.Add("CODIGO", "CODIGO")
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("PRODUCTO", "PRODUCTO")
            tableMapping.ColumnMappings.Add("STOCKACTUALDEP", "STOCKACTUALDEP")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT FAMILIA.DESFAMILIA, LINEA.DESLINEA, RUBRO.DESRUBR"& _ 
                "O, UNIDADMEDIDA.DESMEDIDA, CODIGOS.CODIGO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RTRIM(PROD"& _ 
                "UCTOS.DESPRODUCTO) + ' ' + LTRIM(CODIGOS.DESCODIGO1) AS PRODUCTO, SUCURSAL.DESSU"& _ 
                "CURSAL, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO.STOCKACTUAL AS STOCKACTUALDEP"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)& _ 
                "FROM            PRODUCTOS FULL OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         CODIGOS ON P"& _ 
                "RODUCTOS.CODPRODUCTO = CODIGOS.CODPRODUCTO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                    "& _ 
                "     UNIDADMEDIDA ON PRODUCTOS.CODMEDIDA = UNIDADMEDIDA.CODMEDIDA LEFT OUTER JOI"& _ 
                "N"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         RUBRO ON PRODUCTOS.CODRUBRO = RUBRO.CODRUBRO LEFT OU"& _ 
                "TER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA ON PRODUCTOS.CODFAMILIA = FAMILIA.COD"& _ 
                "FAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         LINEA ON PRODUCTOS.CODLINEA = "& _ 
                "LINEA.CODLINEA AND RUBRO.CODLINEA = LINEA.CODLINEA AND FAMILIA.CODFAMILIA = LINE"& _ 
                "A.CODFAMILIA LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         STOCKDEPOSITO ON CODIGOS."& _ 
                "CODCODIGO = STOCKDEPOSITO.CODCODIGO LEFT OUTER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         SU"& _ 
                "CURSAL ON STOCKDEPOSITO.CODDEPOSITO = SUCURSAL.CODSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE        (PRODUC"& _ 
                "TOS.SERVICIO <> 1) AND (PRODUCTOS.ESTADO = 0)"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"GROUP BY CODIGOS.CODIGO, RTRIM(PR"& _ 
                "ODUCTOS.DESPRODUCTO) + ' ' + LTRIM(CODIGOS.DESCODIGO1), SUCURSAL.DESSUCURSAL, RU"& _ 
                "BRO.DESRUBRO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         FAMILIA.DESFAMILIA, LINEA.DESLINEA, UNI"& _ 
                "DADMEDIDA.DESMEDIDA, STOCKDEPOSITO.STOCKACTUAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"ORDER BY CODIGOS.CODIGO, SUCURSA"& _ 
                "L.DESSUCURSAL"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.COSTOPROMEDIONWSUCDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.COSTOPROMEDIONWSUCDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.COSTOPROMEDIONWSUCDataTable = New DSReporteProductoNW.COSTOPROMEDIONWSUCDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class SUCURSALTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "SUCURSAL"
            tableMapping.ColumnMappings.Add("DESSUCURSAL", "DESSUCURSAL")
            tableMapping.ColumnMappings.Add("TIPOSUCURSAL", "TIPOSUCURSAL")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [SUCURSAL] WHERE (((@IsNull_DESSUCURSAL = 1 AND [DESSUCURSAL] IS NULL"& _ 
                ") OR ([DESSUCURSAL] = @Original_DESSUCURSAL)) AND ((@IsNull_TIPOSUCURSAL = 1 AND"& _ 
                " [TIPOSUCURSAL] IS NULL) OR ([TIPOSUCURSAL] = @Original_TIPOSUCURSAL)) AND ([COD"& _ 
                "SUCURSAL] = @Original_CODSUCURSAL))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [SUCURSAL] ([DESSUCURSAL], [TIPOSUCURSAL], [CODSUCURSAL]) VALUES (@DE"& _ 
                "SSUCURSAL, @TIPOSUCURSAL, @CODSUCURSAL);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DESSUCURSAL, TIPOSUCURSAL, CODS"& _ 
                "UCURSAL FROM SUCURSAL WHERE (CODSUCURSAL = @CODSUCURSAL)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [SUCURSAL] SET [DESSUCURSAL] = @DESSUCURSAL, [TIPOSUCURSAL] = @TIPOSUCURSA"& _ 
                "L, [CODSUCURSAL] = @CODSUCURSAL WHERE (((@IsNull_DESSUCURSAL = 1 AND [DESSUCURSA"& _ 
                "L] IS NULL) OR ([DESSUCURSAL] = @Original_DESSUCURSAL)) AND ((@IsNull_TIPOSUCURS"& _ 
                "AL = 1 AND [TIPOSUCURSAL] IS NULL) OR ([TIPOSUCURSAL] = @Original_TIPOSUCURSAL))"& _ 
                " AND ([CODSUCURSAL] = @Original_CODSUCURSAL));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT DESSUCURSAL, TIPOSUCURSAL"& _ 
                ", CODSUCURSAL FROM SUCURSAL WHERE (CODSUCURSAL = @CODSUCURSAL)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOSUCURSAL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        DESSUCURSAL, TIPOSUCURSAL, CODSUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            SUCURSAL"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"W"& _ 
                "HERE        (TIPOSUCURSAL = 'Solo Stock') OR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         (TIPOSUCU"& _ 
                "RSAL = 'Factura y Stock')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DSReporteProductoNW.SUCURSALDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DSReporteProductoNW.SUCURSALDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DSReporteProductoNW.SUCURSALDataTable = New DSReporteProductoNW.SUCURSALDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DSReporteProductoNW.SUCURSALDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DSReporteProductoNW) As Integer
            Return Me.Adapter.Update(dataSet, "SUCURSAL")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_DESSUCURSAL As String, ByVal Original_TIPOSUCURSAL As String, ByVal Original_CODSUCURSAL As Integer) As Integer
            If (Original_DESSUCURSAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_DESSUCURSAL,String)
            End If
            If (Original_TIPOSUCURSAL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_TIPOSUCURSAL,String)
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODSUCURSAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DESSUCURSAL As String, ByVal TIPOSUCURSAL As String, ByVal CODSUCURSAL As Integer) As Integer
            If (DESSUCURSAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DESSUCURSAL,String)
            End If
            If (TIPOSUCURSAL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIPOSUCURSAL,String)
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODSUCURSAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESSUCURSAL As String, ByVal TIPOSUCURSAL As String, ByVal CODSUCURSAL As Integer, ByVal Original_DESSUCURSAL As String, ByVal Original_TIPOSUCURSAL As String, ByVal Original_CODSUCURSAL As Integer) As Integer
            If (DESSUCURSAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DESSUCURSAL,String)
            End If
            If (TIPOSUCURSAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TIPOSUCURSAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODSUCURSAL,Integer)
            If (Original_DESSUCURSAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(Original_DESSUCURSAL,String)
            End If
            If (Original_TIPOSUCURSAL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(Original_TIPOSUCURSAL,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CODSUCURSAL,Integer)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESSUCURSAL As String, ByVal TIPOSUCURSAL As String, ByVal Original_DESSUCURSAL As String, ByVal Original_TIPOSUCURSAL As String, ByVal Original_CODSUCURSAL As Integer) As Integer
            Return Me.Update(DESSUCURSAL, TIPOSUCURSAL, Original_CODSUCURSAL, Original_DESSUCURSAL, Original_TIPOSUCURSAL, Original_CODSUCURSAL)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cODIGOSTableAdapter As CODIGOSTableAdapter
        
        Private _cOMPRASTableAdapter As COMPRASTableAdapter
        
        Private _cOMPRASDETALLETableAdapter As COMPRASDETALLETableAdapter
        
        Private _fAMILIATableAdapter As FAMILIATableAdapter
        
        Private _pRODUCTOSTableAdapter As PRODUCTOSTableAdapter
        
        Private _sTOCKDEPOSITOTableAdapter As STOCKDEPOSITOTableAdapter
        
        Private _pROVEEDORTableAdapter As PROVEEDORTableAdapter
        
        Private _sUCURSALTableAdapter As SUCURSALTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CODIGOSTableAdapter() As CODIGOSTableAdapter
            Get
                Return Me._cODIGOSTableAdapter
            End Get
            Set
                Me._cODIGOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property COMPRASTableAdapter() As COMPRASTableAdapter
            Get
                Return Me._cOMPRASTableAdapter
            End Get
            Set
                Me._cOMPRASTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property COMPRASDETALLETableAdapter() As COMPRASDETALLETableAdapter
            Get
                Return Me._cOMPRASDETALLETableAdapter
            End Get
            Set
                Me._cOMPRASDETALLETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property FAMILIATableAdapter() As FAMILIATableAdapter
            Get
                Return Me._fAMILIATableAdapter
            End Get
            Set
                Me._fAMILIATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PRODUCTOSTableAdapter() As PRODUCTOSTableAdapter
            Get
                Return Me._pRODUCTOSTableAdapter
            End Get
            Set
                Me._pRODUCTOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property STOCKDEPOSITOTableAdapter() As STOCKDEPOSITOTableAdapter
            Get
                Return Me._sTOCKDEPOSITOTableAdapter
            End Get
            Set
                Me._sTOCKDEPOSITOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property PROVEEDORTableAdapter() As PROVEEDORTableAdapter
            Get
                Return Me._pROVEEDORTableAdapter
            End Get
            Set
                Me._pROVEEDORTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property SUCURSALTableAdapter() As SUCURSALTableAdapter
            Get
                Return Me._sUCURSALTableAdapter
            End Get
            Set
                Me._sUCURSALTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cODIGOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cODIGOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cODIGOSTableAdapter.Connection
                End If
                If ((Not (Me._cOMPRASTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cOMPRASTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cOMPRASTableAdapter.Connection
                End If
                If ((Not (Me._cOMPRASDETALLETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cOMPRASDETALLETableAdapter.Connection) Is Nothing)) Then
                    Return Me._cOMPRASDETALLETableAdapter.Connection
                End If
                If ((Not (Me._fAMILIATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._fAMILIATableAdapter.Connection) Is Nothing)) Then
                    Return Me._fAMILIATableAdapter.Connection
                End If
                If ((Not (Me._pRODUCTOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pRODUCTOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pRODUCTOSTableAdapter.Connection
                End If
                If ((Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sTOCKDEPOSITOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sTOCKDEPOSITOTableAdapter.Connection
                End If
                If ((Not (Me._pROVEEDORTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._pROVEEDORTableAdapter.Connection) Is Nothing)) Then
                    Return Me._pROVEEDORTableAdapter.Connection
                End If
                If ((Not (Me._sUCURSALTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._sUCURSALTableAdapter.Connection) Is Nothing)) Then
                    Return Me._sUCURSALTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cODIGOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cOMPRASTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cOMPRASDETALLETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._fAMILIATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pRODUCTOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._pROVEEDORTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._sUCURSALTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DSReporteProductoNW, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._fAMILIATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.FAMILIA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._fAMILIATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pROVEEDORTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PROVEEDOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pROVEEDORTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._pRODUCTOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.PRODUCTOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._pRODUCTOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cOMPRASTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.COMPRAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cOMPRASTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cODIGOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CODIGOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cODIGOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sUCURSALTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.SUCURSAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sUCURSALTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cOMPRASDETALLETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.COMPRASDETALLE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cOMPRASDETALLETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.STOCKDEPOSITO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._sTOCKDEPOSITOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DSReporteProductoNW, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._fAMILIATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.FAMILIA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._fAMILIATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pROVEEDORTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PROVEEDOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pROVEEDORTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._pRODUCTOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.PRODUCTOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._pRODUCTOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cOMPRASTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.COMPRAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cOMPRASTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cODIGOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CODIGOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cODIGOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sUCURSALTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.SUCURSAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sUCURSALTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cOMPRASDETALLETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.COMPRASDETALLE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cOMPRASDETALLETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.STOCKDEPOSITO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._sTOCKDEPOSITOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DSReporteProductoNW, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.STOCKDEPOSITO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sTOCKDEPOSITOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cOMPRASDETALLETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.COMPRASDETALLE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cOMPRASDETALLETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._sUCURSALTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.SUCURSAL.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._sUCURSALTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cODIGOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CODIGOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cODIGOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cOMPRASTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.COMPRAS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cOMPRASTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pRODUCTOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PRODUCTOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pRODUCTOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._pROVEEDORTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.PROVEEDOR.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._pROVEEDORTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._fAMILIATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.FAMILIA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._fAMILIATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DSReporteProductoNW) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cODIGOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cODIGOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cOMPRASTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cOMPRASTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cOMPRASDETALLETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cOMPRASDETALLETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._fAMILIATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._fAMILIATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._pRODUCTOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pRODUCTOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sTOCKDEPOSITOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._pROVEEDORTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._pROVEEDORTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._sUCURSALTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._sUCURSALTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cODIGOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cODIGOSTableAdapter, Me._cODIGOSTableAdapter.Connection)
                    Me._cODIGOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cODIGOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cODIGOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cODIGOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cODIGOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cOMPRASTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cOMPRASTableAdapter, Me._cOMPRASTableAdapter.Connection)
                    Me._cOMPRASTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cOMPRASTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cOMPRASTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cOMPRASTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cOMPRASTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cOMPRASDETALLETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cOMPRASDETALLETableAdapter, Me._cOMPRASDETALLETableAdapter.Connection)
                    Me._cOMPRASDETALLETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cOMPRASDETALLETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cOMPRASDETALLETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cOMPRASDETALLETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cOMPRASDETALLETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._fAMILIATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._fAMILIATableAdapter, Me._fAMILIATableAdapter.Connection)
                    Me._fAMILIATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._fAMILIATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._fAMILIATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._fAMILIATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._fAMILIATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pRODUCTOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pRODUCTOSTableAdapter, Me._pRODUCTOSTableAdapter.Connection)
                    Me._pRODUCTOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pRODUCTOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pRODUCTOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pRODUCTOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pRODUCTOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sTOCKDEPOSITOTableAdapter, Me._sTOCKDEPOSITOTableAdapter.Connection)
                    Me._sTOCKDEPOSITOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sTOCKDEPOSITOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sTOCKDEPOSITOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sTOCKDEPOSITOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sTOCKDEPOSITOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._pROVEEDORTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._pROVEEDORTableAdapter, Me._pROVEEDORTableAdapter.Connection)
                    Me._pROVEEDORTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._pROVEEDORTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._pROVEEDORTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._pROVEEDORTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._pROVEEDORTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._sUCURSALTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._sUCURSALTableAdapter, Me._sUCURSALTableAdapter.Connection)
                    Me._sUCURSALTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._sUCURSALTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._sUCURSALTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._sUCURSALTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._sUCURSALTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cODIGOSTableAdapter) Is Nothing) Then
                    Me._cODIGOSTableAdapter.Connection = CType(revertConnections(Me._cODIGOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cODIGOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cOMPRASTableAdapter) Is Nothing) Then
                    Me._cOMPRASTableAdapter.Connection = CType(revertConnections(Me._cOMPRASTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cOMPRASTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cOMPRASDETALLETableAdapter) Is Nothing) Then
                    Me._cOMPRASDETALLETableAdapter.Connection = CType(revertConnections(Me._cOMPRASDETALLETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cOMPRASDETALLETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._fAMILIATableAdapter) Is Nothing) Then
                    Me._fAMILIATableAdapter.Connection = CType(revertConnections(Me._fAMILIATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._fAMILIATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pRODUCTOSTableAdapter) Is Nothing) Then
                    Me._pRODUCTOSTableAdapter.Connection = CType(revertConnections(Me._pRODUCTOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pRODUCTOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sTOCKDEPOSITOTableAdapter) Is Nothing) Then
                    Me._sTOCKDEPOSITOTableAdapter.Connection = CType(revertConnections(Me._sTOCKDEPOSITOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sTOCKDEPOSITOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._pROVEEDORTableAdapter) Is Nothing) Then
                    Me._pROVEEDORTableAdapter.Connection = CType(revertConnections(Me._pROVEEDORTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._pROVEEDORTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._sUCURSALTableAdapter) Is Nothing) Then
                    Me._sUCURSALTableAdapter.Connection = CType(revertConnections(Me._sUCURSALTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._sUCURSALTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
