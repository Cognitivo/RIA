'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.296
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DsCaja"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DsCaja
    Inherits Global.System.Data.DataSet
    
    Private tableCAJAINGRESOS As CAJAINGRESOSDataTable
    
    Private tableCAJACHEQUESRECIBIDOS As CAJACHEQUESRECIBIDOSDataTable
    
    Private tableUSUARIO As USUARIODataTable
    
    Private tableCAJAINGRESO As CAJAINGRESODataTable
    
    Private tableTIPOEGRESO As TIPOEGRESODataTable
    
    Private tableCAJAEGRESOS As CAJAEGRESOSDataTable
    
    Private tableMONEDA As MONEDADataTable
    
    Private tableCOTIZACION As COTIZACIONDataTable
    
    Private tableTIPOCOBRO As TIPOCOBRODataTable
    
    Private tableCAJACIERRE As CAJACIERREDataTable
    
    Private tableCAJASALDO As CAJASALDODataTable
    
    Private tableCAJA As CAJADataTable
    
    Private tableAPERTURACAJA As APERTURACAJADataTable
    
    Private tableAPERTURADETALLE As APERTURADETALLEDataTable
    
    Private tableCAJAINGRESOSDETALLE As CAJAINGRESOSDETALLEDataTable
    
    Private tableCAJAEGRESOSDETALLE As CAJAEGRESOSDETALLEDataTable
    
    Private tableTIPOFORMACOBRO As TIPOFORMACOBRODataTable
    
    Private relationFK_CAJAINGR_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_TIPOEGRESO As Global.System.Data.DataRelation
    
    Private relationFK_TIPOEGRE_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRE_RELATIONS_TIPOEGRE As Global.System.Data.DataRelation
    
    Private relationFK_INGRESO_MONEDA As Global.System.Data.DataRelation
    
    Private relationFK_CAJACHEQUESRECIBIDOS_MONEDA As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRESOS_MONEDA As Global.System.Data.DataRelation
    
    Private relationFK_MONEDA_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_COTIZACI_RELATIONS_MONEDA As Global.System.Data.DataRelation
    
    Private relationFK_COTIZACI_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_INGRESO_TIPOCOBRO As Global.System.Data.DataRelation
    
    Private relationFK_TIPOCOBR_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_EGRESO_TIPOCOBRO As Global.System.Data.DataRelation
    
    Private relationFK_CAJACIERRE_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_CAJASALDO_CAJACIERRE As Global.System.Data.DataRelation
    
    Private relationFK_CAJASALDO_MONEDA As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_TIPOEGRESO1 As Global.System.Data.DataRelation
    
    Private relationFK_INGRESO_MONEDA1 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_CAJA As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_CAJA1 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRESOS_CAJA As Global.System.Data.DataRelation
    
    Private relationFK_CAJACIERRE_CAJA As Global.System.Data.DataRelation
    
    Private relationFK_CAJA_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_CAJA2 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_RELATIONS_USUARIO1 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_TIPOEGRESO2 As Global.System.Data.DataRelation
    
    Private relationFK_INGRESO_MONEDA2 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_CAJA3 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_RELATIONS_USUARIO2 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_TIPOEGRESO3 As Global.System.Data.DataRelation
    
    Private relationFK_INGRESO_MONEDA3 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_CAJA4 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_RELATIONS_USUARIO3 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAINGRESOS_TIPOEGRESO4 As Global.System.Data.DataRelation
    
    Private relationFK_INGRESO_MONEDA4 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRESOS_RELATIONS_USUARIO As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRE_RELATIONS_TIPOEGRE1 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRESOS_CAJA1 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRESOS_MONEDA1 As Global.System.Data.DataRelation
    
    Private relationFK_CAJAEGRESOS_RELATIONS_USUARIO1 As Global.System.Data.DataRelation
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("CAJAINGRESOS")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAINGRESOSDataTable(ds.Tables("CAJAINGRESOS")))
            End If
            If (Not (ds.Tables("CAJACHEQUESRECIBIDOS")) Is Nothing) Then
                MyBase.Tables.Add(New CAJACHEQUESRECIBIDOSDataTable(ds.Tables("CAJACHEQUESRECIBIDOS")))
            End If
            If (Not (ds.Tables("USUARIO")) Is Nothing) Then
                MyBase.Tables.Add(New USUARIODataTable(ds.Tables("USUARIO")))
            End If
            If (Not (ds.Tables("CAJAINGRESO")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAINGRESODataTable(ds.Tables("CAJAINGRESO")))
            End If
            If (Not (ds.Tables("TIPOEGRESO")) Is Nothing) Then
                MyBase.Tables.Add(New TIPOEGRESODataTable(ds.Tables("TIPOEGRESO")))
            End If
            If (Not (ds.Tables("CAJAEGRESOS")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAEGRESOSDataTable(ds.Tables("CAJAEGRESOS")))
            End If
            If (Not (ds.Tables("MONEDA")) Is Nothing) Then
                MyBase.Tables.Add(New MONEDADataTable(ds.Tables("MONEDA")))
            End If
            If (Not (ds.Tables("COTIZACION")) Is Nothing) Then
                MyBase.Tables.Add(New COTIZACIONDataTable(ds.Tables("COTIZACION")))
            End If
            If (Not (ds.Tables("TIPOCOBRO")) Is Nothing) Then
                MyBase.Tables.Add(New TIPOCOBRODataTable(ds.Tables("TIPOCOBRO")))
            End If
            If (Not (ds.Tables("CAJACIERRE")) Is Nothing) Then
                MyBase.Tables.Add(New CAJACIERREDataTable(ds.Tables("CAJACIERRE")))
            End If
            If (Not (ds.Tables("CAJASALDO")) Is Nothing) Then
                MyBase.Tables.Add(New CAJASALDODataTable(ds.Tables("CAJASALDO")))
            End If
            If (Not (ds.Tables("CAJA")) Is Nothing) Then
                MyBase.Tables.Add(New CAJADataTable(ds.Tables("CAJA")))
            End If
            If (Not (ds.Tables("APERTURACAJA")) Is Nothing) Then
                MyBase.Tables.Add(New APERTURACAJADataTable(ds.Tables("APERTURACAJA")))
            End If
            If (Not (ds.Tables("APERTURADETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New APERTURADETALLEDataTable(ds.Tables("APERTURADETALLE")))
            End If
            If (Not (ds.Tables("CAJAINGRESOSDETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAINGRESOSDETALLEDataTable(ds.Tables("CAJAINGRESOSDETALLE")))
            End If
            If (Not (ds.Tables("CAJAEGRESOSDETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAEGRESOSDETALLEDataTable(ds.Tables("CAJAEGRESOSDETALLE")))
            End If
            If (Not (ds.Tables("TIPOFORMACOBRO")) Is Nothing) Then
                MyBase.Tables.Add(New TIPOFORMACOBRODataTable(ds.Tables("TIPOFORMACOBRO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJAINGRESOS() As CAJAINGRESOSDataTable
        Get
            Return Me.tableCAJAINGRESOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJACHEQUESRECIBIDOS() As CAJACHEQUESRECIBIDOSDataTable
        Get
            Return Me.tableCAJACHEQUESRECIBIDOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property USUARIO() As USUARIODataTable
        Get
            Return Me.tableUSUARIO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJAINGRESO() As CAJAINGRESODataTable
        Get
            Return Me.tableCAJAINGRESO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIPOEGRESO() As TIPOEGRESODataTable
        Get
            Return Me.tableTIPOEGRESO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJAEGRESOS() As CAJAEGRESOSDataTable
        Get
            Return Me.tableCAJAEGRESOS
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property MONEDA() As MONEDADataTable
        Get
            Return Me.tableMONEDA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property COTIZACION() As COTIZACIONDataTable
        Get
            Return Me.tableCOTIZACION
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIPOCOBRO() As TIPOCOBRODataTable
        Get
            Return Me.tableTIPOCOBRO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJACIERRE() As CAJACIERREDataTable
        Get
            Return Me.tableCAJACIERRE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJASALDO() As CAJASALDODataTable
        Get
            Return Me.tableCAJASALDO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJA() As CAJADataTable
        Get
            Return Me.tableCAJA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property APERTURACAJA() As APERTURACAJADataTable
        Get
            Return Me.tableAPERTURACAJA
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property APERTURADETALLE() As APERTURADETALLEDataTable
        Get
            Return Me.tableAPERTURADETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJAINGRESOSDETALLE() As CAJAINGRESOSDETALLEDataTable
        Get
            Return Me.tableCAJAINGRESOSDETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property CAJAEGRESOSDETALLE() As CAJAEGRESOSDETALLEDataTable
        Get
            Return Me.tableCAJAEGRESOSDETALLE
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property TIPOFORMACOBRO() As TIPOFORMACOBRODataTable
        Get
            Return Me.tableTIPOFORMACOBRO
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DsCaja = CType(MyBase.Clone,DsCaja)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("CAJAINGRESOS")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAINGRESOSDataTable(ds.Tables("CAJAINGRESOS")))
            End If
            If (Not (ds.Tables("CAJACHEQUESRECIBIDOS")) Is Nothing) Then
                MyBase.Tables.Add(New CAJACHEQUESRECIBIDOSDataTable(ds.Tables("CAJACHEQUESRECIBIDOS")))
            End If
            If (Not (ds.Tables("USUARIO")) Is Nothing) Then
                MyBase.Tables.Add(New USUARIODataTable(ds.Tables("USUARIO")))
            End If
            If (Not (ds.Tables("CAJAINGRESO")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAINGRESODataTable(ds.Tables("CAJAINGRESO")))
            End If
            If (Not (ds.Tables("TIPOEGRESO")) Is Nothing) Then
                MyBase.Tables.Add(New TIPOEGRESODataTable(ds.Tables("TIPOEGRESO")))
            End If
            If (Not (ds.Tables("CAJAEGRESOS")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAEGRESOSDataTable(ds.Tables("CAJAEGRESOS")))
            End If
            If (Not (ds.Tables("MONEDA")) Is Nothing) Then
                MyBase.Tables.Add(New MONEDADataTable(ds.Tables("MONEDA")))
            End If
            If (Not (ds.Tables("COTIZACION")) Is Nothing) Then
                MyBase.Tables.Add(New COTIZACIONDataTable(ds.Tables("COTIZACION")))
            End If
            If (Not (ds.Tables("TIPOCOBRO")) Is Nothing) Then
                MyBase.Tables.Add(New TIPOCOBRODataTable(ds.Tables("TIPOCOBRO")))
            End If
            If (Not (ds.Tables("CAJACIERRE")) Is Nothing) Then
                MyBase.Tables.Add(New CAJACIERREDataTable(ds.Tables("CAJACIERRE")))
            End If
            If (Not (ds.Tables("CAJASALDO")) Is Nothing) Then
                MyBase.Tables.Add(New CAJASALDODataTable(ds.Tables("CAJASALDO")))
            End If
            If (Not (ds.Tables("CAJA")) Is Nothing) Then
                MyBase.Tables.Add(New CAJADataTable(ds.Tables("CAJA")))
            End If
            If (Not (ds.Tables("APERTURACAJA")) Is Nothing) Then
                MyBase.Tables.Add(New APERTURACAJADataTable(ds.Tables("APERTURACAJA")))
            End If
            If (Not (ds.Tables("APERTURADETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New APERTURADETALLEDataTable(ds.Tables("APERTURADETALLE")))
            End If
            If (Not (ds.Tables("CAJAINGRESOSDETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAINGRESOSDETALLEDataTable(ds.Tables("CAJAINGRESOSDETALLE")))
            End If
            If (Not (ds.Tables("CAJAEGRESOSDETALLE")) Is Nothing) Then
                MyBase.Tables.Add(New CAJAEGRESOSDETALLEDataTable(ds.Tables("CAJAEGRESOSDETALLE")))
            End If
            If (Not (ds.Tables("TIPOFORMACOBRO")) Is Nothing) Then
                MyBase.Tables.Add(New TIPOFORMACOBRODataTable(ds.Tables("TIPOFORMACOBRO")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableCAJAINGRESOS = CType(MyBase.Tables("CAJAINGRESOS"),CAJAINGRESOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJAINGRESOS) Is Nothing) Then
                Me.tableCAJAINGRESOS.InitVars
            End If
        End If
        Me.tableCAJACHEQUESRECIBIDOS = CType(MyBase.Tables("CAJACHEQUESRECIBIDOS"),CAJACHEQUESRECIBIDOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJACHEQUESRECIBIDOS) Is Nothing) Then
                Me.tableCAJACHEQUESRECIBIDOS.InitVars
            End If
        End If
        Me.tableUSUARIO = CType(MyBase.Tables("USUARIO"),USUARIODataTable)
        If (initTable = true) Then
            If (Not (Me.tableUSUARIO) Is Nothing) Then
                Me.tableUSUARIO.InitVars
            End If
        End If
        Me.tableCAJAINGRESO = CType(MyBase.Tables("CAJAINGRESO"),CAJAINGRESODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJAINGRESO) Is Nothing) Then
                Me.tableCAJAINGRESO.InitVars
            End If
        End If
        Me.tableTIPOEGRESO = CType(MyBase.Tables("TIPOEGRESO"),TIPOEGRESODataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIPOEGRESO) Is Nothing) Then
                Me.tableTIPOEGRESO.InitVars
            End If
        End If
        Me.tableCAJAEGRESOS = CType(MyBase.Tables("CAJAEGRESOS"),CAJAEGRESOSDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJAEGRESOS) Is Nothing) Then
                Me.tableCAJAEGRESOS.InitVars
            End If
        End If
        Me.tableMONEDA = CType(MyBase.Tables("MONEDA"),MONEDADataTable)
        If (initTable = true) Then
            If (Not (Me.tableMONEDA) Is Nothing) Then
                Me.tableMONEDA.InitVars
            End If
        End If
        Me.tableCOTIZACION = CType(MyBase.Tables("COTIZACION"),COTIZACIONDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCOTIZACION) Is Nothing) Then
                Me.tableCOTIZACION.InitVars
            End If
        End If
        Me.tableTIPOCOBRO = CType(MyBase.Tables("TIPOCOBRO"),TIPOCOBRODataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIPOCOBRO) Is Nothing) Then
                Me.tableTIPOCOBRO.InitVars
            End If
        End If
        Me.tableCAJACIERRE = CType(MyBase.Tables("CAJACIERRE"),CAJACIERREDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJACIERRE) Is Nothing) Then
                Me.tableCAJACIERRE.InitVars
            End If
        End If
        Me.tableCAJASALDO = CType(MyBase.Tables("CAJASALDO"),CAJASALDODataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJASALDO) Is Nothing) Then
                Me.tableCAJASALDO.InitVars
            End If
        End If
        Me.tableCAJA = CType(MyBase.Tables("CAJA"),CAJADataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJA) Is Nothing) Then
                Me.tableCAJA.InitVars
            End If
        End If
        Me.tableAPERTURACAJA = CType(MyBase.Tables("APERTURACAJA"),APERTURACAJADataTable)
        If (initTable = true) Then
            If (Not (Me.tableAPERTURACAJA) Is Nothing) Then
                Me.tableAPERTURACAJA.InitVars
            End If
        End If
        Me.tableAPERTURADETALLE = CType(MyBase.Tables("APERTURADETALLE"),APERTURADETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableAPERTURADETALLE) Is Nothing) Then
                Me.tableAPERTURADETALLE.InitVars
            End If
        End If
        Me.tableCAJAINGRESOSDETALLE = CType(MyBase.Tables("CAJAINGRESOSDETALLE"),CAJAINGRESOSDETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJAINGRESOSDETALLE) Is Nothing) Then
                Me.tableCAJAINGRESOSDETALLE.InitVars
            End If
        End If
        Me.tableCAJAEGRESOSDETALLE = CType(MyBase.Tables("CAJAEGRESOSDETALLE"),CAJAEGRESOSDETALLEDataTable)
        If (initTable = true) Then
            If (Not (Me.tableCAJAEGRESOSDETALLE) Is Nothing) Then
                Me.tableCAJAEGRESOSDETALLE.InitVars
            End If
        End If
        Me.tableTIPOFORMACOBRO = CType(MyBase.Tables("TIPOFORMACOBRO"),TIPOFORMACOBRODataTable)
        If (initTable = true) Then
            If (Not (Me.tableTIPOFORMACOBRO) Is Nothing) Then
                Me.tableTIPOFORMACOBRO.InitVars
            End If
        End If
        Me.relationFK_CAJAINGR_RELATIONS_USUARIO = Me.Relations("FK_CAJAINGR_RELATIONS_USUARIO")
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO = Me.Relations("FK_CAJAINGRESOS_TIPOEGRESO")
        Me.relationFK_TIPOEGRE_RELATIONS_USUARIO = Me.Relations("FK_TIPOEGRE_RELATIONS_USUARIO")
        Me.relationFK_CAJAEGRE_RELATIONS_TIPOEGRE = Me.Relations("FK_CAJAEGRE_RELATIONS_TIPOEGRE")
        Me.relationFK_INGRESO_MONEDA = Me.Relations("FK_INGRESO_MONEDA")
        Me.relationFK_CAJACHEQUESRECIBIDOS_MONEDA = Me.Relations("FK_CAJACHEQUESRECIBIDOS_MONEDA")
        Me.relationFK_CAJAEGRESOS_MONEDA = Me.Relations("FK_CAJAEGRESOS_MONEDA")
        Me.relationFK_MONEDA_RELATIONS_USUARIO = Me.Relations("FK_MONEDA_RELATIONS_USUARIO")
        Me.relationFK_COTIZACI_RELATIONS_MONEDA = Me.Relations("FK_COTIZACI_RELATIONS_MONEDA")
        Me.relationFK_COTIZACI_RELATIONS_USUARIO = Me.Relations("FK_COTIZACI_RELATIONS_USUARIO")
        Me.relationFK_INGRESO_TIPOCOBRO = Me.Relations("FK_INGRESO_TIPOCOBRO")
        Me.relationFK_TIPOCOBR_RELATIONS_USUARIO = Me.Relations("FK_TIPOCOBR_RELATIONS_USUARIO")
        Me.relationFK_EGRESO_TIPOCOBRO = Me.Relations("FK_EGRESO_TIPOCOBRO")
        Me.relationFK_CAJACIERRE_USUARIO = Me.Relations("FK_CAJACIERRE_USUARIO")
        Me.relationFK_CAJASALDO_CAJACIERRE = Me.Relations("FK_CAJASALDO_CAJACIERRE")
        Me.relationFK_CAJASALDO_MONEDA = Me.Relations("FK_CAJASALDO_MONEDA")
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO1 = Me.Relations("FK_CAJAINGRESOS_TIPOEGRESO1")
        Me.relationFK_INGRESO_MONEDA1 = Me.Relations("FK_INGRESO_MONEDA1")
        Me.relationFK_CAJAINGRESOS_CAJA = Me.Relations("FK_CAJAINGRESOS_CAJA")
        Me.relationFK_CAJAINGRESOS_CAJA1 = Me.Relations("FK_CAJAINGRESOS_CAJA1")
        Me.relationFK_CAJAEGRESOS_CAJA = Me.Relations("FK_CAJAEGRESOS_CAJA")
        Me.relationFK_CAJACIERRE_CAJA = Me.Relations("FK_CAJACIERRE_CAJA")
        Me.relationFK_CAJA_RELATIONS_USUARIO = Me.Relations("FK_CAJA_RELATIONS_USUARIO")
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO = Me.Relations("FK_CAJAINGRESOS_RELATIONS_USUARIO")
        Me.relationFK_CAJAINGRESOS_CAJA2 = Me.Relations("FK_CAJAINGRESOS_CAJA2")
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO1 = Me.Relations("FK_CAJAINGRESOS_RELATIONS_USUARIO1")
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO2 = Me.Relations("FK_CAJAINGRESOS_TIPOEGRESO2")
        Me.relationFK_INGRESO_MONEDA2 = Me.Relations("FK_INGRESO_MONEDA2")
        Me.relationFK_CAJAINGRESOS_CAJA3 = Me.Relations("FK_CAJAINGRESOS_CAJA3")
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO2 = Me.Relations("FK_CAJAINGRESOS_RELATIONS_USUARIO2")
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO3 = Me.Relations("FK_CAJAINGRESOS_TIPOEGRESO3")
        Me.relationFK_INGRESO_MONEDA3 = Me.Relations("FK_INGRESO_MONEDA3")
        Me.relationFK_CAJAINGRESOS_CAJA4 = Me.Relations("FK_CAJAINGRESOS_CAJA4")
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO3 = Me.Relations("FK_CAJAINGRESOS_RELATIONS_USUARIO3")
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO4 = Me.Relations("FK_CAJAINGRESOS_TIPOEGRESO4")
        Me.relationFK_INGRESO_MONEDA4 = Me.Relations("FK_INGRESO_MONEDA4")
        Me.relationFK_CAJAEGRESOS_RELATIONS_USUARIO = Me.Relations("FK_CAJAEGRESOS_RELATIONS_USUARIO")
        Me.relationFK_CAJAEGRE_RELATIONS_TIPOEGRE1 = Me.Relations("FK_CAJAEGRE_RELATIONS_TIPOEGRE1")
        Me.relationFK_CAJAEGRESOS_CAJA1 = Me.Relations("FK_CAJAEGRESOS_CAJA1")
        Me.relationFK_CAJAEGRESOS_MONEDA1 = Me.Relations("FK_CAJAEGRESOS_MONEDA1")
        Me.relationFK_CAJAEGRESOS_RELATIONS_USUARIO1 = Me.Relations("FK_CAJAEGRESOS_RELATIONS_USUARIO1")
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DsCaja"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DsCaja.xsd"
        Me.EnforceConstraints = true
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableCAJAINGRESOS = New CAJAINGRESOSDataTable()
        MyBase.Tables.Add(Me.tableCAJAINGRESOS)
        Me.tableCAJACHEQUESRECIBIDOS = New CAJACHEQUESRECIBIDOSDataTable()
        MyBase.Tables.Add(Me.tableCAJACHEQUESRECIBIDOS)
        Me.tableUSUARIO = New USUARIODataTable()
        MyBase.Tables.Add(Me.tableUSUARIO)
        Me.tableCAJAINGRESO = New CAJAINGRESODataTable()
        MyBase.Tables.Add(Me.tableCAJAINGRESO)
        Me.tableTIPOEGRESO = New TIPOEGRESODataTable()
        MyBase.Tables.Add(Me.tableTIPOEGRESO)
        Me.tableCAJAEGRESOS = New CAJAEGRESOSDataTable()
        MyBase.Tables.Add(Me.tableCAJAEGRESOS)
        Me.tableMONEDA = New MONEDADataTable()
        MyBase.Tables.Add(Me.tableMONEDA)
        Me.tableCOTIZACION = New COTIZACIONDataTable()
        MyBase.Tables.Add(Me.tableCOTIZACION)
        Me.tableTIPOCOBRO = New TIPOCOBRODataTable()
        MyBase.Tables.Add(Me.tableTIPOCOBRO)
        Me.tableCAJACIERRE = New CAJACIERREDataTable()
        MyBase.Tables.Add(Me.tableCAJACIERRE)
        Me.tableCAJASALDO = New CAJASALDODataTable()
        MyBase.Tables.Add(Me.tableCAJASALDO)
        Me.tableCAJA = New CAJADataTable()
        MyBase.Tables.Add(Me.tableCAJA)
        Me.tableAPERTURACAJA = New APERTURACAJADataTable()
        MyBase.Tables.Add(Me.tableAPERTURACAJA)
        Me.tableAPERTURADETALLE = New APERTURADETALLEDataTable()
        MyBase.Tables.Add(Me.tableAPERTURADETALLE)
        Me.tableCAJAINGRESOSDETALLE = New CAJAINGRESOSDETALLEDataTable()
        MyBase.Tables.Add(Me.tableCAJAINGRESOSDETALLE)
        Me.tableCAJAEGRESOSDETALLE = New CAJAEGRESOSDETALLEDataTable()
        MyBase.Tables.Add(Me.tableCAJAEGRESOSDETALLE)
        Me.tableTIPOFORMACOBRO = New TIPOFORMACOBRODataTable()
        MyBase.Tables.Add(Me.tableTIPOFORMACOBRO)
        Me.relationFK_CAJAINGR_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_CAJAINGR_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESO.CODUSUARIOColumn, Me.tableCAJAINGRESO.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGR_RELATIONS_USUARIO)
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_TIPOEGRESO", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOS.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_TIPOEGRESO)
        Me.relationFK_TIPOEGRE_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_TIPOEGRE_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODUSUARIOColumn, Me.tableTIPOEGRESO.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_TIPOEGRE_RELATIONS_USUARIO)
        Me.relationFK_CAJAEGRE_RELATIONS_TIPOEGRE = New Global.System.Data.DataRelation("FK_CAJAEGRE_RELATIONS_TIPOEGRE", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOS.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRE_RELATIONS_TIPOEGRE)
        Me.relationFK_INGRESO_MONEDA = New Global.System.Data.DataRelation("FK_INGRESO_MONEDA", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOS.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_INGRESO_MONEDA)
        Me.relationFK_CAJACHEQUESRECIBIDOS_MONEDA = New Global.System.Data.DataRelation("FK_CAJACHEQUESRECIBIDOS_MONEDA", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJACHEQUESRECIBIDOS.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJACHEQUESRECIBIDOS_MONEDA)
        Me.relationFK_CAJAEGRESOS_MONEDA = New Global.System.Data.DataRelation("FK_CAJAEGRESOS_MONEDA", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOS.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRESOS_MONEDA)
        Me.relationFK_MONEDA_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_MONEDA_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableMONEDA.CODUSUARIOColumn, Me.tableMONEDA.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_MONEDA_RELATIONS_USUARIO)
        Me.relationFK_COTIZACI_RELATIONS_MONEDA = New Global.System.Data.DataRelation("FK_COTIZACI_RELATIONS_MONEDA", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCOTIZACION.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_COTIZACI_RELATIONS_MONEDA)
        Me.relationFK_COTIZACI_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_COTIZACI_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCOTIZACION.CODUSUARIOColumn, Me.tableCOTIZACION.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_COTIZACI_RELATIONS_USUARIO)
        Me.relationFK_INGRESO_TIPOCOBRO = New Global.System.Data.DataRelation("FK_INGRESO_TIPOCOBRO", New Global.System.Data.DataColumn() {Me.tableTIPOCOBRO.CODCOBROColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOS.CODFORCOBROColumn}, false)
        Me.Relations.Add(Me.relationFK_INGRESO_TIPOCOBRO)
        Me.relationFK_TIPOCOBR_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_TIPOCOBR_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableTIPOCOBRO.CODUSUARIOColumn, Me.tableTIPOCOBRO.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_TIPOCOBR_RELATIONS_USUARIO)
        Me.relationFK_EGRESO_TIPOCOBRO = New Global.System.Data.DataRelation("FK_EGRESO_TIPOCOBRO", New Global.System.Data.DataColumn() {Me.tableTIPOCOBRO.CODCOBROColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOS.CODFORCOBROColumn}, false)
        Me.Relations.Add(Me.relationFK_EGRESO_TIPOCOBRO)
        Me.relationFK_CAJACIERRE_USUARIO = New Global.System.Data.DataRelation("FK_CAJACIERRE_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJACIERRE.CODUSUARIOColumn, Me.tableCAJACIERRE.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJACIERRE_USUARIO)
        Me.relationFK_CAJASALDO_CAJACIERRE = New Global.System.Data.DataRelation("FK_CAJASALDO_CAJACIERRE", New Global.System.Data.DataColumn() {Me.tableCAJACIERRE.NUMCIERREColumn}, New Global.System.Data.DataColumn() {Me.tableCAJASALDO.NUMCIERREColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJASALDO_CAJACIERRE)
        Me.relationFK_CAJASALDO_MONEDA = New Global.System.Data.DataRelation("FK_CAJASALDO_MONEDA", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJASALDO.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJASALDO_MONEDA)
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO1 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_TIPOEGRESO1", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESO.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_TIPOEGRESO1)
        Me.relationFK_INGRESO_MONEDA1 = New Global.System.Data.DataRelation("FK_INGRESO_MONEDA1", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESO.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_INGRESO_MONEDA1)
        Me.relationFK_CAJAINGRESOS_CAJA = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_CAJA", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOS.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_CAJA)
        Me.relationFK_CAJAINGRESOS_CAJA1 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_CAJA1", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESO.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_CAJA1)
        Me.relationFK_CAJAEGRESOS_CAJA = New Global.System.Data.DataRelation("FK_CAJAEGRESOS_CAJA", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOS.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRESOS_CAJA)
        Me.relationFK_CAJACIERRE_CAJA = New Global.System.Data.DataRelation("FK_CAJACIERRE_CAJA", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJACIERRE.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJACIERRE_CAJA)
        Me.relationFK_CAJA_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_CAJA_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJA.CODUSUARIOColumn, Me.tableCAJA.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJA_RELATIONS_USUARIO)
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOS.CODUSUARIOColumn, Me.tableCAJAINGRESOS.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO)
        Me.relationFK_CAJAINGRESOS_CAJA2 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_CAJA2", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURACAJA.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_CAJA2)
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO1 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_RELATIONS_USUARIO1", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURACAJA.CODUSUARIOColumn, Me.tableAPERTURACAJA.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO1)
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO2 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_TIPOEGRESO2", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURACAJA.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_TIPOEGRESO2)
        Me.relationFK_INGRESO_MONEDA2 = New Global.System.Data.DataRelation("FK_INGRESO_MONEDA2", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURACAJA.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_INGRESO_MONEDA2)
        Me.relationFK_CAJAINGRESOS_CAJA3 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_CAJA3", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURADETALLE.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_CAJA3)
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO2 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_RELATIONS_USUARIO2", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURADETALLE.CODUSUARIOColumn, Me.tableAPERTURADETALLE.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO2)
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO3 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_TIPOEGRESO3", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURADETALLE.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_TIPOEGRESO3)
        Me.relationFK_INGRESO_MONEDA3 = New Global.System.Data.DataRelation("FK_INGRESO_MONEDA3", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableAPERTURADETALLE.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_INGRESO_MONEDA3)
        Me.relationFK_CAJAINGRESOS_CAJA4 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_CAJA4", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOSDETALLE.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_CAJA4)
        Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO3 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_RELATIONS_USUARIO3", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOSDETALLE.CODUSUARIOColumn, Me.tableCAJAINGRESOSDETALLE.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_RELATIONS_USUARIO3)
        Me.relationFK_CAJAINGRESOS_TIPOEGRESO4 = New Global.System.Data.DataRelation("FK_CAJAINGRESOS_TIPOEGRESO4", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOSDETALLE.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAINGRESOS_TIPOEGRESO4)
        Me.relationFK_INGRESO_MONEDA4 = New Global.System.Data.DataRelation("FK_INGRESO_MONEDA4", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAINGRESOSDETALLE.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_INGRESO_MONEDA4)
        Me.relationFK_CAJAEGRESOS_RELATIONS_USUARIO = New Global.System.Data.DataRelation("FK_CAJAEGRESOS_RELATIONS_USUARIO", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOS.CODUSUARIOColumn, Me.tableCAJAEGRESOS.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRESOS_RELATIONS_USUARIO)
        Me.relationFK_CAJAEGRE_RELATIONS_TIPOEGRE1 = New Global.System.Data.DataRelation("FK_CAJAEGRE_RELATIONS_TIPOEGRE1", New Global.System.Data.DataColumn() {Me.tableTIPOEGRESO.CODTIPOEGRESOColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOSDETALLE.CODTIPOEGRESOColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRE_RELATIONS_TIPOEGRE1)
        Me.relationFK_CAJAEGRESOS_CAJA1 = New Global.System.Data.DataRelation("FK_CAJAEGRESOS_CAJA1", New Global.System.Data.DataColumn() {Me.tableCAJA.NUMCAJAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOSDETALLE.NUMCAJAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRESOS_CAJA1)
        Me.relationFK_CAJAEGRESOS_MONEDA1 = New Global.System.Data.DataRelation("FK_CAJAEGRESOS_MONEDA1", New Global.System.Data.DataColumn() {Me.tableMONEDA.CODMONEDAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOSDETALLE.CODMONEDAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRESOS_MONEDA1)
        Me.relationFK_CAJAEGRESOS_RELATIONS_USUARIO1 = New Global.System.Data.DataRelation("FK_CAJAEGRESOS_RELATIONS_USUARIO1", New Global.System.Data.DataColumn() {Me.tableUSUARIO.CODUSUARIOColumn, Me.tableUSUARIO.CODEMPRESAColumn}, New Global.System.Data.DataColumn() {Me.tableCAJAEGRESOSDETALLE.CODUSUARIOColumn, Me.tableCAJAEGRESOSDETALLE.CODEMPRESAColumn}, false)
        Me.Relations.Add(Me.relationFK_CAJAEGRESOS_RELATIONS_USUARIO1)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJAINGRESOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJACHEQUESRECIBIDOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeUSUARIO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJAINGRESO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTIPOEGRESO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJAEGRESOS() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeMONEDA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCOTIZACION() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTIPOCOBRO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJACIERRE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJASALDO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAPERTURACAJA() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeAPERTURADETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJAINGRESOSDETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeCAJAEGRESOSDETALLE() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeTIPOFORMACOBRO() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DsCaja = New DsCaja()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJAINGRESOSRowChangeEventHandler(ByVal sender As Object, ByVal e As CAJAINGRESOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJACHEQUESRECIBIDOSRowChangeEventHandler(ByVal sender As Object, ByVal e As CAJACHEQUESRECIBIDOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub USUARIORowChangeEventHandler(ByVal sender As Object, ByVal e As USUARIORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJAINGRESORowChangeEventHandler(ByVal sender As Object, ByVal e As CAJAINGRESORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TIPOEGRESORowChangeEventHandler(ByVal sender As Object, ByVal e As TIPOEGRESORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJAEGRESOSRowChangeEventHandler(ByVal sender As Object, ByVal e As CAJAEGRESOSRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub MONEDARowChangeEventHandler(ByVal sender As Object, ByVal e As MONEDARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub COTIZACIONRowChangeEventHandler(ByVal sender As Object, ByVal e As COTIZACIONRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TIPOCOBRORowChangeEventHandler(ByVal sender As Object, ByVal e As TIPOCOBRORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJACIERRERowChangeEventHandler(ByVal sender As Object, ByVal e As CAJACIERRERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJASALDORowChangeEventHandler(ByVal sender As Object, ByVal e As CAJASALDORowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJARowChangeEventHandler(ByVal sender As Object, ByVal e As CAJARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub APERTURACAJARowChangeEventHandler(ByVal sender As Object, ByVal e As APERTURACAJARowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub APERTURADETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As APERTURADETALLERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJAINGRESOSDETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As CAJAINGRESOSDETALLERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub CAJAEGRESOSDETALLERowChangeEventHandler(ByVal sender As Object, ByVal e As CAJAEGRESOSDETALLERowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub TIPOFORMACOBRORowChangeEventHandler(ByVal sender As Object, ByVal e As TIPOFORMACOBRORowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJAINGRESOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJAINGRESOSRow)
        
        Private columnCODINGRESO As Global.System.Data.DataColumn
        
        Private columnTIPOINGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnVUELTO As Global.System.Data.DataColumn
        
        Private columnFECINGRESO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJAINGRESOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VUELTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVUELTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJAINGRESOSRow
            Get
                Return CType(Me.Rows(index),CAJAINGRESOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSRowChanging As CAJAINGRESOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSRowChanged As CAJAINGRESOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSRowDeleting As CAJAINGRESOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSRowDeleted As CAJAINGRESOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJAINGRESOSRow(ByVal row As CAJAINGRESOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJAINGRESOSRow(ByVal TIPOINGRESO As Byte, ByVal parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO As TIPOEGRESORow, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal parentCAJARowByFK_CAJAINGRESOS_CAJA As CAJARow, ByVal CONCEPTO As String, ByVal parentMONEDARowByFK_INGRESO_MONEDA As MONEDARow, ByVal COTIZACION1 As Decimal, ByVal COTIZACION2 As Decimal, ByVal IMPORTE As Decimal, ByVal VUELTO As Decimal, ByVal FECINGRESO As Date, ByVal FECGRA As Date, ByVal OBSERVACION As String, ByVal parentTIPOCOBRORowByFK_INGRESO_TIPOCOBRO As TIPOCOBRORow) As CAJAINGRESOSRow
            Dim rowCAJAINGRESOSRow As CAJAINGRESOSRow = CType(Me.NewRow,CAJAINGRESOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, TIPOINGRESO, Nothing, CODUSUARIO, CODEMPRESA, Nothing, CONCEPTO, Nothing, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, Nothing}
            If (Not (parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO) Is Nothing) Then
                columnValuesArray(2) = parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO(0)
            End If
            If (Not (parentCAJARowByFK_CAJAINGRESOS_CAJA) Is Nothing) Then
                columnValuesArray(5) = parentCAJARowByFK_CAJAINGRESOS_CAJA(0)
            End If
            If (Not (parentMONEDARowByFK_INGRESO_MONEDA) Is Nothing) Then
                columnValuesArray(7) = parentMONEDARowByFK_INGRESO_MONEDA(0)
            End If
            If (Not (parentTIPOCOBRORowByFK_INGRESO_TIPOCOBRO) Is Nothing) Then
                columnValuesArray(15) = parentTIPOCOBRORowByFK_INGRESO_TIPOCOBRO(0)
            End If
            rowCAJAINGRESOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJAINGRESOSRow)
            Return rowCAJAINGRESOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODINGRESO(ByVal CODINGRESO As Decimal) As CAJAINGRESOSRow
            Return CType(Me.Rows.Find(New Object() {CODINGRESO}),CAJAINGRESOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJAINGRESOSDataTable = CType(MyBase.Clone,CAJAINGRESOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJAINGRESOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODINGRESO = MyBase.Columns("CODINGRESO")
            Me.columnTIPOINGRESO = MyBase.Columns("TIPOINGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnVUELTO = MyBase.Columns("VUELTO")
            Me.columnFECINGRESO = MyBase.Columns("FECINGRESO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODINGRESO = New Global.System.Data.DataColumn("CODINGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODINGRESO)
            Me.columnTIPOINGRESO = New Global.System.Data.DataColumn("TIPOINGRESO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOINGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnVUELTO = New Global.System.Data.DataColumn("VUELTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVUELTO)
            Me.columnFECINGRESO = New Global.System.Data.DataColumn("FECINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECINGRESO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODINGRESO}, true))
            Me.columnCODINGRESO.AutoIncrement = true
            Me.columnCODINGRESO.AutoIncrementSeed = 1
            Me.columnCODINGRESO.AllowDBNull = false
            Me.columnCODINGRESO.Unique = true
            Me.columnCONCEPTO.MaxLength = 100
            Me.columnOBSERVACION.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJAINGRESOSRow() As CAJAINGRESOSRow
            Return CType(Me.NewRow,CAJAINGRESOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJAINGRESOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJAINGRESOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJAINGRESOSRowChangedEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSRowChanged(Me, New CAJAINGRESOSRowChangeEvent(CType(e.Row,CAJAINGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJAINGRESOSRowChangingEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSRowChanging(Me, New CAJAINGRESOSRowChangeEvent(CType(e.Row,CAJAINGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJAINGRESOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSRowDeleted(Me, New CAJAINGRESOSRowChangeEvent(CType(e.Row,CAJAINGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJAINGRESOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSRowDeleting(Me, New CAJAINGRESOSRowChangeEvent(CType(e.Row,CAJAINGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJAINGRESOSRow(ByVal row As CAJAINGRESOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJAINGRESOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJACHEQUESRECIBIDOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJACHEQUESRECIBIDOSRow)
        
        Private columnCODFORMACOBRO As Global.System.Data.DataColumn
        
        Private columnCODINGRESO As Global.System.Data.DataColumn
        
        Private columnCODBANCO As Global.System.Data.DataColumn
        
        Private columnNUMCHEQUE As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODESTADO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnFECHAVCTO As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnLIBRADOR As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJACHEQUESRECIBIDOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORMACOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORMACOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODBANCOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODBANCO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCHEQUEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCHEQUE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODESTADOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODESTADO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAVCTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAVCTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property LIBRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnLIBRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJACHEQUESRECIBIDOSRow
            Get
                Return CType(Me.Rows(index),CAJACHEQUESRECIBIDOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACHEQUESRECIBIDOSRowChanging As CAJACHEQUESRECIBIDOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACHEQUESRECIBIDOSRowChanged As CAJACHEQUESRECIBIDOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACHEQUESRECIBIDOSRowDeleting As CAJACHEQUESRECIBIDOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACHEQUESRECIBIDOSRowDeleted As CAJACHEQUESRECIBIDOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJACHEQUESRECIBIDOSRow(ByVal row As CAJACHEQUESRECIBIDOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJACHEQUESRECIBIDOSRow(ByVal CODFORMACOBRO As Decimal, ByVal CODINGRESO As Decimal, ByVal CODBANCO As Decimal, ByVal NUMCHEQUE As String, ByVal parentMONEDARowByFK_CAJACHEQUESRECIBIDOS_MONEDA As MONEDARow, ByVal CODSUCURSAL As Decimal, ByVal CODESTADO As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal FECHAVCTO As Date, ByVal IMPORTE As Decimal, ByVal COTIZACION1 As Decimal, ByVal COTIZACION2 As Decimal, ByVal FECGRA As Date, ByVal LIBRADOR As String) As CAJACHEQUESRECIBIDOSRow
            Dim rowCAJACHEQUESRECIBIDOSRow As CAJACHEQUESRECIBIDOSRow = CType(Me.NewRow,CAJACHEQUESRECIBIDOSRow)
            Dim columnValuesArray() As Object = New Object() {CODFORMACOBRO, CODINGRESO, CODBANCO, NUMCHEQUE, Nothing, CODSUCURSAL, CODESTADO, CODUSUARIO, CODEMPRESA, FECHAVCTO, IMPORTE, COTIZACION1, COTIZACION2, FECGRA, LIBRADOR}
            If (Not (parentMONEDARowByFK_CAJACHEQUESRECIBIDOS_MONEDA) Is Nothing) Then
                columnValuesArray(4) = parentMONEDARowByFK_CAJACHEQUESRECIBIDOS_MONEDA(0)
            End If
            rowCAJACHEQUESRECIBIDOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJACHEQUESRECIBIDOSRow)
            Return rowCAJACHEQUESRECIBIDOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODBANCONUMCHEQUE(ByVal CODBANCO As Decimal, ByVal NUMCHEQUE As String) As CAJACHEQUESRECIBIDOSRow
            Return CType(Me.Rows.Find(New Object() {CODBANCO, NUMCHEQUE}),CAJACHEQUESRECIBIDOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJACHEQUESRECIBIDOSDataTable = CType(MyBase.Clone,CAJACHEQUESRECIBIDOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJACHEQUESRECIBIDOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODFORMACOBRO = MyBase.Columns("CODFORMACOBRO")
            Me.columnCODINGRESO = MyBase.Columns("CODINGRESO")
            Me.columnCODBANCO = MyBase.Columns("CODBANCO")
            Me.columnNUMCHEQUE = MyBase.Columns("NUMCHEQUE")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnCODESTADO = MyBase.Columns("CODESTADO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnFECHAVCTO = MyBase.Columns("FECHAVCTO")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnLIBRADOR = MyBase.Columns("LIBRADOR")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODFORMACOBRO = New Global.System.Data.DataColumn("CODFORMACOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORMACOBRO)
            Me.columnCODINGRESO = New Global.System.Data.DataColumn("CODINGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODINGRESO)
            Me.columnCODBANCO = New Global.System.Data.DataColumn("CODBANCO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODBANCO)
            Me.columnNUMCHEQUE = New Global.System.Data.DataColumn("NUMCHEQUE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCHEQUE)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnCODESTADO = New Global.System.Data.DataColumn("CODESTADO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODESTADO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnFECHAVCTO = New Global.System.Data.DataColumn("FECHAVCTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAVCTO)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnLIBRADOR = New Global.System.Data.DataColumn("LIBRADOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnLIBRADOR)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODBANCO, Me.columnNUMCHEQUE}, true))
            Me.columnCODBANCO.AllowDBNull = false
            Me.columnNUMCHEQUE.AllowDBNull = false
            Me.columnNUMCHEQUE.MaxLength = 30
            Me.columnLIBRADOR.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJACHEQUESRECIBIDOSRow() As CAJACHEQUESRECIBIDOSRow
            Return CType(Me.NewRow,CAJACHEQUESRECIBIDOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJACHEQUESRECIBIDOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJACHEQUESRECIBIDOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJACHEQUESRECIBIDOSRowChangedEvent) Is Nothing) Then
                RaiseEvent CAJACHEQUESRECIBIDOSRowChanged(Me, New CAJACHEQUESRECIBIDOSRowChangeEvent(CType(e.Row,CAJACHEQUESRECIBIDOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJACHEQUESRECIBIDOSRowChangingEvent) Is Nothing) Then
                RaiseEvent CAJACHEQUESRECIBIDOSRowChanging(Me, New CAJACHEQUESRECIBIDOSRowChangeEvent(CType(e.Row,CAJACHEQUESRECIBIDOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJACHEQUESRECIBIDOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJACHEQUESRECIBIDOSRowDeleted(Me, New CAJACHEQUESRECIBIDOSRowChangeEvent(CType(e.Row,CAJACHEQUESRECIBIDOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJACHEQUESRECIBIDOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJACHEQUESRECIBIDOSRowDeleting(Me, New CAJACHEQUESRECIBIDOSRowChangeEvent(CType(e.Row,CAJACHEQUESRECIBIDOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJACHEQUESRECIBIDOSRow(ByVal row As CAJACHEQUESRECIBIDOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJACHEQUESRECIBIDOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class USUARIODataTable
        Inherits Global.System.Data.TypedTableBase(Of USUARIORow)
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnDESUSUARIO As Global.System.Data.DataColumn
        
        Private columnPASSUSUARIO As Global.System.Data.DataColumn
        
        Private columnNIVELCUENTA As Global.System.Data.DataColumn
        
        Private columnUSUGRA As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnAPELLIDO As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnCONTACTO As Global.System.Data.DataColumn
        
        Private columnTELEFONOCONTACTO As Global.System.Data.DataColumn
        
        Private columnIMAGEN As Global.System.Data.DataColumn
        
        Private columnNIVELUSUARIO As Global.System.Data.DataColumn
        
        Private columnSEXO As Global.System.Data.DataColumn
        
        Private columnINICIOCOMPRAS As Global.System.Data.DataColumn
        
        Private columnINICIOVENTAS As Global.System.Data.DataColumn
        
        Private columnCELULAR As Global.System.Data.DataColumn
        
        Private columnEMAIL As Global.System.Data.DataColumn
        
        Private columnCODCIUDAD As Global.System.Data.DataColumn
        
        Private columnFECHANAC As Global.System.Data.DataColumn
        
        Private columnCEDULA As Global.System.Data.DataColumn
        
        Private columnCODGRUPO As Global.System.Data.DataColumn
        
        Private columnFECHAPASSW As Global.System.Data.DataColumn
        
        Private columnNUMSISTEMAS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "USUARIO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PASSUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPASSUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVELCUENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVELCUENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property USUGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnUSUGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property APELLIDOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnAPELLIDO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONTACTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONTACTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TELEFONOCONTACTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONOCONTACTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMAGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NIVELUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNIVELUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SEXOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSEXO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INICIOCOMPRASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINICIOCOMPRAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property INICIOVENTASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnINICIOVENTAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CELULARColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCELULAR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property EMAILColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnEMAIL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHANACColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHANAC
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CEDULAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCEDULA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODGRUPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODGRUPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAPASSWColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAPASSW
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMSISTEMASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMSISTEMAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As USUARIORow
            Get
                Return CType(Me.Rows(index),USUARIORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USUARIORowChanging As USUARIORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USUARIORowChanged As USUARIORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USUARIORowDeleting As USUARIORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event USUARIORowDeleted As USUARIORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddUSUARIORow(ByVal row As USUARIORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddUSUARIORow( _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal DESUSUARIO As String,  _
                    ByVal PASSUSUARIO As String,  _
                    ByVal NIVELCUENTA As Decimal,  _
                    ByVal USUGRA As Decimal,  _
                    ByVal FECGRA As Date,  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CONTACTO As String,  _
                    ByVal TELEFONOCONTACTO As String,  _
                    ByVal IMAGEN As String,  _
                    ByVal NIVELUSUARIO As Decimal,  _
                    ByVal SEXO As Decimal,  _
                    ByVal INICIOCOMPRAS As Decimal,  _
                    ByVal INICIOVENTAS As Decimal,  _
                    ByVal CELULAR As String,  _
                    ByVal EMAIL As String,  _
                    ByVal CODCIUDAD As Decimal,  _
                    ByVal FECHANAC As Date,  _
                    ByVal CEDULA As String,  _
                    ByVal CODGRUPO As Decimal,  _
                    ByVal FECHAPASSW As Date,  _
                    ByVal NUMSISTEMAS As Decimal) As USUARIORow
            Dim rowUSUARIORow As USUARIORow = CType(Me.NewRow,USUARIORow)
            Dim columnValuesArray() As Object = New Object() {CODUSUARIO, CODEMPRESA, DESUSUARIO, PASSUSUARIO, NIVELCUENTA, USUGRA, FECGRA, NOMBRE, APELLIDO, DIRECCION, TELEFONO, CONTACTO, TELEFONOCONTACTO, IMAGEN, NIVELUSUARIO, SEXO, INICIOCOMPRAS, INICIOVENTAS, CELULAR, EMAIL, CODCIUDAD, FECHANAC, CEDULA, CODGRUPO, FECHAPASSW, NUMSISTEMAS}
            rowUSUARIORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowUSUARIORow)
            Return rowUSUARIORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODUSUARIOCODEMPRESA(ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal) As USUARIORow
            Return CType(Me.Rows.Find(New Object() {CODUSUARIO, CODEMPRESA}),USUARIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As USUARIODataTable = CType(MyBase.Clone,USUARIODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New USUARIODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnDESUSUARIO = MyBase.Columns("DESUSUARIO")
            Me.columnPASSUSUARIO = MyBase.Columns("PASSUSUARIO")
            Me.columnNIVELCUENTA = MyBase.Columns("NIVELCUENTA")
            Me.columnUSUGRA = MyBase.Columns("USUGRA")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnAPELLIDO = MyBase.Columns("APELLIDO")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCONTACTO = MyBase.Columns("CONTACTO")
            Me.columnTELEFONOCONTACTO = MyBase.Columns("TELEFONOCONTACTO")
            Me.columnIMAGEN = MyBase.Columns("IMAGEN")
            Me.columnNIVELUSUARIO = MyBase.Columns("NIVELUSUARIO")
            Me.columnSEXO = MyBase.Columns("SEXO")
            Me.columnINICIOCOMPRAS = MyBase.Columns("INICIOCOMPRAS")
            Me.columnINICIOVENTAS = MyBase.Columns("INICIOVENTAS")
            Me.columnCELULAR = MyBase.Columns("CELULAR")
            Me.columnEMAIL = MyBase.Columns("EMAIL")
            Me.columnCODCIUDAD = MyBase.Columns("CODCIUDAD")
            Me.columnFECHANAC = MyBase.Columns("FECHANAC")
            Me.columnCEDULA = MyBase.Columns("CEDULA")
            Me.columnCODGRUPO = MyBase.Columns("CODGRUPO")
            Me.columnFECHAPASSW = MyBase.Columns("FECHAPASSW")
            Me.columnNUMSISTEMAS = MyBase.Columns("NUMSISTEMAS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnDESUSUARIO = New Global.System.Data.DataColumn("DESUSUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESUSUARIO)
            Me.columnPASSUSUARIO = New Global.System.Data.DataColumn("PASSUSUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPASSUSUARIO)
            Me.columnNIVELCUENTA = New Global.System.Data.DataColumn("NIVELCUENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVELCUENTA)
            Me.columnUSUGRA = New Global.System.Data.DataColumn("USUGRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnUSUGRA)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnAPELLIDO = New Global.System.Data.DataColumn("APELLIDO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnAPELLIDO)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCONTACTO = New Global.System.Data.DataColumn("CONTACTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONTACTO)
            Me.columnTELEFONOCONTACTO = New Global.System.Data.DataColumn("TELEFONOCONTACTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONOCONTACTO)
            Me.columnIMAGEN = New Global.System.Data.DataColumn("IMAGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN)
            Me.columnNIVELUSUARIO = New Global.System.Data.DataColumn("NIVELUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNIVELUSUARIO)
            Me.columnSEXO = New Global.System.Data.DataColumn("SEXO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSEXO)
            Me.columnINICIOCOMPRAS = New Global.System.Data.DataColumn("INICIOCOMPRAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINICIOCOMPRAS)
            Me.columnINICIOVENTAS = New Global.System.Data.DataColumn("INICIOVENTAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnINICIOVENTAS)
            Me.columnCELULAR = New Global.System.Data.DataColumn("CELULAR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCELULAR)
            Me.columnEMAIL = New Global.System.Data.DataColumn("EMAIL", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnEMAIL)
            Me.columnCODCIUDAD = New Global.System.Data.DataColumn("CODCIUDAD", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCIUDAD)
            Me.columnFECHANAC = New Global.System.Data.DataColumn("FECHANAC", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHANAC)
            Me.columnCEDULA = New Global.System.Data.DataColumn("CEDULA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCEDULA)
            Me.columnCODGRUPO = New Global.System.Data.DataColumn("CODGRUPO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODGRUPO)
            Me.columnFECHAPASSW = New Global.System.Data.DataColumn("FECHAPASSW", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAPASSW)
            Me.columnNUMSISTEMAS = New Global.System.Data.DataColumn("NUMSISTEMAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMSISTEMAS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODUSUARIO, Me.columnCODEMPRESA}, true))
            Me.columnCODUSUARIO.AllowDBNull = false
            Me.columnCODEMPRESA.AllowDBNull = false
            Me.columnDESUSUARIO.MaxLength = 60
            Me.columnPASSUSUARIO.MaxLength = 50
            Me.columnNOMBRE.MaxLength = 50
            Me.columnAPELLIDO.MaxLength = 50
            Me.columnDIRECCION.MaxLength = 200
            Me.columnTELEFONO.MaxLength = 50
            Me.columnCONTACTO.MaxLength = 100
            Me.columnTELEFONOCONTACTO.MaxLength = 50
            Me.columnIMAGEN.MaxLength = 300
            Me.columnCELULAR.MaxLength = 150
            Me.columnEMAIL.MaxLength = 250
            Me.columnCEDULA.MaxLength = 20
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewUSUARIORow() As USUARIORow
            Return CType(Me.NewRow,USUARIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New USUARIORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(USUARIORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.USUARIORowChangedEvent) Is Nothing) Then
                RaiseEvent USUARIORowChanged(Me, New USUARIORowChangeEvent(CType(e.Row,USUARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.USUARIORowChangingEvent) Is Nothing) Then
                RaiseEvent USUARIORowChanging(Me, New USUARIORowChangeEvent(CType(e.Row,USUARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.USUARIORowDeletedEvent) Is Nothing) Then
                RaiseEvent USUARIORowDeleted(Me, New USUARIORowChangeEvent(CType(e.Row,USUARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.USUARIORowDeletingEvent) Is Nothing) Then
                RaiseEvent USUARIORowDeleting(Me, New USUARIORowChangeEvent(CType(e.Row,USUARIORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveUSUARIORow(ByVal row As USUARIORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "USUARIODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJAINGRESODataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJAINGRESORow)
        
        Private columnCODINGRESO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnTIPOINGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnVUELTO As Global.System.Data.DataColumn
        
        Private columnFECINGRESO As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJAINGRESO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VUELTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVUELTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJAINGRESORow
            Get
                Return CType(Me.Rows(index),CAJAINGRESORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESORowChanging As CAJAINGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESORowChanged As CAJAINGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESORowDeleting As CAJAINGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESORowDeleted As CAJAINGRESORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJAINGRESORow(ByVal row As CAJAINGRESORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJAINGRESORow( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal parentMONEDARowByFK_INGRESO_MONEDA1 As MONEDARow,  _
                    ByVal CODFORCOBRO As Decimal,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal parentCAJARowByFK_CAJAINGRESOS_CAJA1 As CAJARow,  _
                    ByVal IMPORTE As Decimal,  _
                    ByVal COTIZACION1 As Decimal,  _
                    ByVal COTIZACION2 As Decimal,  _
                    ByVal FECGRA As Date,  _
                    ByVal TIPOINGRESO As Byte,  _
                    ByVal parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO1 As TIPOEGRESORow,  _
                    ByVal CONCEPTO As String,  _
                    ByVal VUELTO As Decimal,  _
                    ByVal FECINGRESO As Date,  _
                    ByVal OBSERVACION As String) As CAJAINGRESORow
            Dim rowCAJAINGRESORow As CAJAINGRESORow = CType(Me.NewRow,CAJAINGRESORow)
            Dim columnValuesArray() As Object = New Object() {CODINGRESO, Nothing, CODFORCOBRO, CODUSUARIO, CODEMPRESA, Nothing, IMPORTE, COTIZACION1, COTIZACION2, FECGRA, TIPOINGRESO, Nothing, CONCEPTO, VUELTO, FECINGRESO, OBSERVACION}
            If (Not (parentMONEDARowByFK_INGRESO_MONEDA1) Is Nothing) Then
                columnValuesArray(1) = parentMONEDARowByFK_INGRESO_MONEDA1(0)
            End If
            If (Not (parentCAJARowByFK_CAJAINGRESOS_CAJA1) Is Nothing) Then
                columnValuesArray(5) = parentCAJARowByFK_CAJAINGRESOS_CAJA1(0)
            End If
            If (Not (parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO1) Is Nothing) Then
                columnValuesArray(11) = parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO1(0)
            End If
            rowCAJAINGRESORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJAINGRESORow)
            Return rowCAJAINGRESORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODINGRESO(ByVal CODINGRESO As Decimal) As CAJAINGRESORow
            Return CType(Me.Rows.Find(New Object() {CODINGRESO}),CAJAINGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJAINGRESODataTable = CType(MyBase.Clone,CAJAINGRESODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJAINGRESODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODINGRESO = MyBase.Columns("CODINGRESO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnTIPOINGRESO = MyBase.Columns("TIPOINGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnVUELTO = MyBase.Columns("VUELTO")
            Me.columnFECINGRESO = MyBase.Columns("FECINGRESO")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODINGRESO = New Global.System.Data.DataColumn("CODINGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODINGRESO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnTIPOINGRESO = New Global.System.Data.DataColumn("TIPOINGRESO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOINGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnVUELTO = New Global.System.Data.DataColumn("VUELTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVUELTO)
            Me.columnFECINGRESO = New Global.System.Data.DataColumn("FECINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECINGRESO)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODINGRESO}, true))
            Me.columnCODINGRESO.AllowDBNull = false
            Me.columnCODINGRESO.Unique = true
            Me.columnCONCEPTO.MaxLength = 100
            Me.columnOBSERVACION.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJAINGRESORow() As CAJAINGRESORow
            Return CType(Me.NewRow,CAJAINGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJAINGRESORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJAINGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJAINGRESORowChangedEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESORowChanged(Me, New CAJAINGRESORowChangeEvent(CType(e.Row,CAJAINGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJAINGRESORowChangingEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESORowChanging(Me, New CAJAINGRESORowChangeEvent(CType(e.Row,CAJAINGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJAINGRESORowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESORowDeleted(Me, New CAJAINGRESORowChangeEvent(CType(e.Row,CAJAINGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJAINGRESORowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESORowDeleting(Me, New CAJAINGRESORowChangeEvent(CType(e.Row,CAJAINGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJAINGRESORow(ByVal row As CAJAINGRESORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJAINGRESODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIPOEGRESODataTable
        Inherits Global.System.Data.TypedTableBase(Of TIPOEGRESORow)
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnDESTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnPRIORIDAD As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIPOEGRESO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIORIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIORIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIPOEGRESORow
            Get
                Return CType(Me.Rows(index),TIPOEGRESORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOEGRESORowChanging As TIPOEGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOEGRESORowChanged As TIPOEGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOEGRESORowDeleting As TIPOEGRESORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOEGRESORowDeleted As TIPOEGRESORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTIPOEGRESORow(ByVal row As TIPOEGRESORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTIPOEGRESORow(ByVal CODTIPOEGRESO As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal NUMTIPOEGRESO As String, ByVal DESTIPOEGRESO As String, ByVal PRIORIDAD As Byte, ByVal FECGRA As Date) As TIPOEGRESORow
            Dim rowTIPOEGRESORow As TIPOEGRESORow = CType(Me.NewRow,TIPOEGRESORow)
            Dim columnValuesArray() As Object = New Object() {CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMTIPOEGRESO, DESTIPOEGRESO, PRIORIDAD, FECGRA}
            rowTIPOEGRESORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIPOEGRESORow)
            Return rowTIPOEGRESORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODTIPOEGRESO(ByVal CODTIPOEGRESO As Decimal) As TIPOEGRESORow
            Return CType(Me.Rows.Find(New Object() {CODTIPOEGRESO}),TIPOEGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIPOEGRESODataTable = CType(MyBase.Clone,TIPOEGRESODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIPOEGRESODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMTIPOEGRESO = MyBase.Columns("NUMTIPOEGRESO")
            Me.columnDESTIPOEGRESO = MyBase.Columns("DESTIPOEGRESO")
            Me.columnPRIORIDAD = MyBase.Columns("PRIORIDAD")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMTIPOEGRESO = New Global.System.Data.DataColumn("NUMTIPOEGRESO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMTIPOEGRESO)
            Me.columnDESTIPOEGRESO = New Global.System.Data.DataColumn("DESTIPOEGRESO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTIPOEGRESO)
            Me.columnPRIORIDAD = New Global.System.Data.DataColumn("PRIORIDAD", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIORIDAD)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODTIPOEGRESO}, true))
            Me.columnCODTIPOEGRESO.AllowDBNull = false
            Me.columnCODTIPOEGRESO.Unique = true
            Me.columnNUMTIPOEGRESO.MaxLength = 5
            Me.columnDESTIPOEGRESO.MaxLength = 40
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTIPOEGRESORow() As TIPOEGRESORow
            Return CType(Me.NewRow,TIPOEGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIPOEGRESORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIPOEGRESORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIPOEGRESORowChangedEvent) Is Nothing) Then
                RaiseEvent TIPOEGRESORowChanged(Me, New TIPOEGRESORowChangeEvent(CType(e.Row,TIPOEGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIPOEGRESORowChangingEvent) Is Nothing) Then
                RaiseEvent TIPOEGRESORowChanging(Me, New TIPOEGRESORowChangeEvent(CType(e.Row,TIPOEGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIPOEGRESORowDeletedEvent) Is Nothing) Then
                RaiseEvent TIPOEGRESORowDeleted(Me, New TIPOEGRESORowChangeEvent(CType(e.Row,TIPOEGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIPOEGRESORowDeletingEvent) Is Nothing) Then
                RaiseEvent TIPOEGRESORowDeleting(Me, New TIPOEGRESORowChangeEvent(CType(e.Row,TIPOEGRESORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTIPOEGRESORow(ByVal row As TIPOEGRESORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIPOEGRESODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJAEGRESOSDataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJAEGRESOSRow)
        
        Private columnCODEGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODPAGANZAS As Global.System.Data.DataColumn
        
        Private columnNUMEROCUOTA As Global.System.Data.DataColumn
        
        Private columnCODCOMPRA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnFECHAMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJAEGRESOS"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPAGANZASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPAGANZAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMEROCUOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMEROCUOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJAEGRESOSRow
            Get
                Return CType(Me.Rows(index),CAJAEGRESOSRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSRowChanging As CAJAEGRESOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSRowChanged As CAJAEGRESOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSRowDeleting As CAJAEGRESOSRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSRowDeleted As CAJAEGRESOSRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJAEGRESOSRow(ByVal row As CAJAEGRESOSRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJAEGRESOSRow(ByVal parentTIPOEGRESORowByFK_CAJAEGRE_RELATIONS_TIPOEGRE As TIPOEGRESORow, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal CODPAGANZAS As Decimal, ByVal NUMEROCUOTA As Decimal, ByVal CODCOMPRA As Decimal, ByVal parentCAJARowByFK_CAJAEGRESOS_CAJA As CAJARow, ByVal IMPORTE As Decimal, ByVal COTIZACION1 As Decimal, ByVal COTIZACION2 As Decimal, ByVal FECHAMOVIMIENTO As Date, ByVal FECGRA As Date, ByVal OBSERVACION As String, ByVal CONCEPTO As String, ByVal parentTIPOCOBRORowByFK_EGRESO_TIPOCOBRO As TIPOCOBRORow) As CAJAEGRESOSRow
            Dim rowCAJAEGRESOSRow As CAJAEGRESOSRow = CType(Me.NewRow,CAJAEGRESOSRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, CODUSUARIO, CODEMPRESA, CODPAGANZAS, NUMEROCUOTA, CODCOMPRA, Nothing, IMPORTE, Nothing, COTIZACION1, COTIZACION2, FECHAMOVIMIENTO, FECGRA, OBSERVACION, CONCEPTO, Nothing}
            If (Not (parentTIPOEGRESORowByFK_CAJAEGRE_RELATIONS_TIPOEGRE) Is Nothing) Then
                columnValuesArray(1) = parentTIPOEGRESORowByFK_CAJAEGRE_RELATIONS_TIPOEGRE(0)
            End If
            If (Not (parentCAJARowByFK_CAJAEGRESOS_CAJA) Is Nothing) Then
                columnValuesArray(7) = parentCAJARowByFK_CAJAEGRESOS_CAJA(0)
            End If
            If (Not (parentTIPOCOBRORowByFK_EGRESO_TIPOCOBRO) Is Nothing) Then
                columnValuesArray(16) = parentTIPOCOBRORowByFK_EGRESO_TIPOCOBRO(0)
            End If
            rowCAJAEGRESOSRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJAEGRESOSRow)
            Return rowCAJAEGRESOSRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODEGRESO(ByVal CODEGRESO As Decimal) As CAJAEGRESOSRow
            Return CType(Me.Rows.Find(New Object() {CODEGRESO}),CAJAEGRESOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJAEGRESOSDataTable = CType(MyBase.Clone,CAJAEGRESOSDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJAEGRESOSDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODEGRESO = MyBase.Columns("CODEGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnCODPAGANZAS = MyBase.Columns("CODPAGANZAS")
            Me.columnNUMEROCUOTA = MyBase.Columns("NUMEROCUOTA")
            Me.columnCODCOMPRA = MyBase.Columns("CODCOMPRA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnFECHAMOVIMIENTO = MyBase.Columns("FECHAMOVIMIENTO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODEGRESO = New Global.System.Data.DataColumn("CODEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnCODPAGANZAS = New Global.System.Data.DataColumn("CODPAGANZAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPAGANZAS)
            Me.columnNUMEROCUOTA = New Global.System.Data.DataColumn("NUMEROCUOTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMEROCUOTA)
            Me.columnCODCOMPRA = New Global.System.Data.DataColumn("CODCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOMPRA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnFECHAMOVIMIENTO = New Global.System.Data.DataColumn("FECHAMOVIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMOVIMIENTO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODEGRESO}, true))
            Me.columnCODEGRESO.AutoIncrement = true
            Me.columnCODEGRESO.AutoIncrementSeed = 1
            Me.columnCODEGRESO.AllowDBNull = false
            Me.columnCODEGRESO.Unique = true
            Me.columnCODMONEDA.AutoIncrement = true
            Me.columnCODMONEDA.AutoIncrementSeed = 1
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnCONCEPTO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJAEGRESOSRow() As CAJAEGRESOSRow
            Return CType(Me.NewRow,CAJAEGRESOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJAEGRESOSRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJAEGRESOSRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJAEGRESOSRowChangedEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSRowChanged(Me, New CAJAEGRESOSRowChangeEvent(CType(e.Row,CAJAEGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJAEGRESOSRowChangingEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSRowChanging(Me, New CAJAEGRESOSRowChangeEvent(CType(e.Row,CAJAEGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJAEGRESOSRowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSRowDeleted(Me, New CAJAEGRESOSRowChangeEvent(CType(e.Row,CAJAEGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJAEGRESOSRowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSRowDeleting(Me, New CAJAEGRESOSRowChangeEvent(CType(e.Row,CAJAEGRESOSRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJAEGRESOSRow(ByVal row As CAJAEGRESOSRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJAEGRESOSDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class MONEDADataTable
        Inherits Global.System.Data.TypedTableBase(Of MONEDARow)
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMMONEDA As Global.System.Data.DataColumn
        
        Private columnDESMONEDA As Global.System.Data.DataColumn
        
        Private columnSIMBOLO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnPRIORIDAD As Global.System.Data.DataColumn
        
        Private columnDECIMALES As Global.System.Data.DataColumn
        
        Private columnIMAGEN As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "MONEDA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIMBOLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIMBOLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIORIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIORIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DECIMALESColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDECIMALES
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMAGENColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMAGEN
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As MONEDARow
            Get
                Return CType(Me.Rows(index),MONEDARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MONEDARowChanging As MONEDARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MONEDARowChanged As MONEDARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MONEDARowDeleting As MONEDARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event MONEDARowDeleted As MONEDARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddMONEDARow(ByVal row As MONEDARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddMONEDARow(ByVal CODMONEDA As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal NUMMONEDA As String, ByVal DESMONEDA As String, ByVal SIMBOLO As String, ByVal FECGRA As Date, ByVal PRIORIDAD As Byte, ByVal DECIMALES As Boolean, ByVal IMAGEN As String) As MONEDARow
            Dim rowMONEDARow As MONEDARow = CType(Me.NewRow,MONEDARow)
            Dim columnValuesArray() As Object = New Object() {CODMONEDA, CODUSUARIO, CODEMPRESA, NUMMONEDA, DESMONEDA, SIMBOLO, FECGRA, PRIORIDAD, DECIMALES, IMAGEN}
            rowMONEDARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowMONEDARow)
            Return rowMONEDARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODMONEDA(ByVal CODMONEDA As Decimal) As MONEDARow
            Return CType(Me.Rows.Find(New Object() {CODMONEDA}),MONEDARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As MONEDADataTable = CType(MyBase.Clone,MONEDADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New MONEDADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMMONEDA = MyBase.Columns("NUMMONEDA")
            Me.columnDESMONEDA = MyBase.Columns("DESMONEDA")
            Me.columnSIMBOLO = MyBase.Columns("SIMBOLO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnPRIORIDAD = MyBase.Columns("PRIORIDAD")
            Me.columnDECIMALES = MyBase.Columns("DECIMALES")
            Me.columnIMAGEN = MyBase.Columns("IMAGEN")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMMONEDA = New Global.System.Data.DataColumn("NUMMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMMONEDA)
            Me.columnDESMONEDA = New Global.System.Data.DataColumn("DESMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMONEDA)
            Me.columnSIMBOLO = New Global.System.Data.DataColumn("SIMBOLO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIMBOLO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnPRIORIDAD = New Global.System.Data.DataColumn("PRIORIDAD", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIORIDAD)
            Me.columnDECIMALES = New Global.System.Data.DataColumn("DECIMALES", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDECIMALES)
            Me.columnIMAGEN = New Global.System.Data.DataColumn("IMAGEN", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMAGEN)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODMONEDA}, true))
            Me.columnCODMONEDA.AllowDBNull = false
            Me.columnCODMONEDA.Unique = true
            Me.columnNUMMONEDA.MaxLength = 50
            Me.columnDESMONEDA.MaxLength = 50
            Me.columnSIMBOLO.MaxLength = 50
            Me.columnIMAGEN.MaxLength = 250
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewMONEDARow() As MONEDARow
            Return CType(Me.NewRow,MONEDARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New MONEDARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(MONEDARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.MONEDARowChangedEvent) Is Nothing) Then
                RaiseEvent MONEDARowChanged(Me, New MONEDARowChangeEvent(CType(e.Row,MONEDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.MONEDARowChangingEvent) Is Nothing) Then
                RaiseEvent MONEDARowChanging(Me, New MONEDARowChangeEvent(CType(e.Row,MONEDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.MONEDARowDeletedEvent) Is Nothing) Then
                RaiseEvent MONEDARowDeleted(Me, New MONEDARowChangeEvent(CType(e.Row,MONEDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.MONEDARowDeletingEvent) Is Nothing) Then
                RaiseEvent MONEDARowDeleting(Me, New MONEDARowChangeEvent(CType(e.Row,MONEDARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveMONEDARow(ByVal row As MONEDARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "MONEDADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class COTIZACIONDataTable
        Inherits Global.System.Data.TypedTableBase(Of COTIZACIONRow)
        
        Private columnFECHAMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnFACTORCOBRO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnFACTORVENTA As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnDESMONEDA As Global.System.Data.DataColumn
        
        Private columnSIMBOLO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "COTIZACION"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FACTORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FACTORVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFACTORVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SIMBOLOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSIMBOLO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As COTIZACIONRow
            Get
                Return CType(Me.Rows(index),COTIZACIONRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COTIZACIONRowChanging As COTIZACIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COTIZACIONRowChanged As COTIZACIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COTIZACIONRowDeleting As COTIZACIONRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event COTIZACIONRowDeleted As COTIZACIONRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCOTIZACIONRow(ByVal row As COTIZACIONRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCOTIZACIONRow(ByVal FECHAMOVIMIENTO As Date, ByVal parentMONEDARowByFK_COTIZACI_RELATIONS_MONEDA As MONEDARow, ByVal CODUSUARIO As Decimal, ByVal FACTORCOBRO As Decimal, ByVal CODEMPRESA As Decimal, ByVal FACTORVENTA As Decimal, ByVal FECGRA As Date, ByVal DESMONEDA As String, ByVal SIMBOLO As String) As COTIZACIONRow
            Dim rowCOTIZACIONRow As COTIZACIONRow = CType(Me.NewRow,COTIZACIONRow)
            Dim columnValuesArray() As Object = New Object() {FECHAMOVIMIENTO, Nothing, CODUSUARIO, FACTORCOBRO, CODEMPRESA, FACTORVENTA, FECGRA, DESMONEDA, SIMBOLO}
            If (Not (parentMONEDARowByFK_COTIZACI_RELATIONS_MONEDA) Is Nothing) Then
                columnValuesArray(1) = parentMONEDARowByFK_COTIZACI_RELATIONS_MONEDA(0)
            End If
            rowCOTIZACIONRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCOTIZACIONRow)
            Return rowCOTIZACIONRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByFECHAMOVIMIENTOCODMONEDACODEMPRESA(ByVal FECHAMOVIMIENTO As Date, ByVal CODMONEDA As Decimal, ByVal CODEMPRESA As Decimal) As COTIZACIONRow
            Return CType(Me.Rows.Find(New Object() {FECHAMOVIMIENTO, CODMONEDA, CODEMPRESA}),COTIZACIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As COTIZACIONDataTable = CType(MyBase.Clone,COTIZACIONDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New COTIZACIONDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnFECHAMOVIMIENTO = MyBase.Columns("FECHAMOVIMIENTO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnFACTORCOBRO = MyBase.Columns("FACTORCOBRO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnFACTORVENTA = MyBase.Columns("FACTORVENTA")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnDESMONEDA = MyBase.Columns("DESMONEDA")
            Me.columnSIMBOLO = MyBase.Columns("SIMBOLO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnFECHAMOVIMIENTO = New Global.System.Data.DataColumn("FECHAMOVIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMOVIMIENTO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnFACTORCOBRO = New Global.System.Data.DataColumn("FACTORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTORCOBRO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnFACTORVENTA = New Global.System.Data.DataColumn("FACTORVENTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFACTORVENTA)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnDESMONEDA = New Global.System.Data.DataColumn("DESMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMONEDA)
            Me.columnSIMBOLO = New Global.System.Data.DataColumn("SIMBOLO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSIMBOLO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnFECHAMOVIMIENTO, Me.columnCODMONEDA, Me.columnCODEMPRESA}, true))
            Me.columnFECHAMOVIMIENTO.AllowDBNull = false
            Me.columnCODMONEDA.AllowDBNull = false
            Me.columnCODEMPRESA.AllowDBNull = false
            Me.columnDESMONEDA.MaxLength = 50
            Me.columnSIMBOLO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCOTIZACIONRow() As COTIZACIONRow
            Return CType(Me.NewRow,COTIZACIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New COTIZACIONRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(COTIZACIONRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.COTIZACIONRowChangedEvent) Is Nothing) Then
                RaiseEvent COTIZACIONRowChanged(Me, New COTIZACIONRowChangeEvent(CType(e.Row,COTIZACIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.COTIZACIONRowChangingEvent) Is Nothing) Then
                RaiseEvent COTIZACIONRowChanging(Me, New COTIZACIONRowChangeEvent(CType(e.Row,COTIZACIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.COTIZACIONRowDeletedEvent) Is Nothing) Then
                RaiseEvent COTIZACIONRowDeleted(Me, New COTIZACIONRowChangeEvent(CType(e.Row,COTIZACIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.COTIZACIONRowDeletingEvent) Is Nothing) Then
                RaiseEvent COTIZACIONRowDeleting(Me, New COTIZACIONRowChangeEvent(CType(e.Row,COTIZACIONRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCOTIZACIONRow(ByVal row As COTIZACIONRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "COTIZACIONDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIPOCOBRODataTable
        Inherits Global.System.Data.TypedTableBase(Of TIPOCOBRORow)
        
        Private columnCODCOBRO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMCOBRO As Global.System.Data.DataColumn
        
        Private columnDESCOBRO As Global.System.Data.DataColumn
        
        Private columnPRIORIDAD As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIPOCOBRO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PRIORIDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPRIORIDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIPOCOBRORow
            Get
                Return CType(Me.Rows(index),TIPOCOBRORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOCOBRORowChanging As TIPOCOBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOCOBRORowChanged As TIPOCOBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOCOBRORowDeleting As TIPOCOBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOCOBRORowDeleted As TIPOCOBRORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTIPOCOBRORow(ByVal row As TIPOCOBRORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTIPOCOBRORow(ByVal CODCOBRO As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal NUMCOBRO As String, ByVal DESCOBRO As String, ByVal PRIORIDAD As Byte, ByVal FECGRA As Date) As TIPOCOBRORow
            Dim rowTIPOCOBRORow As TIPOCOBRORow = CType(Me.NewRow,TIPOCOBRORow)
            Dim columnValuesArray() As Object = New Object() {CODCOBRO, CODUSUARIO, CODEMPRESA, NUMCOBRO, DESCOBRO, PRIORIDAD, FECGRA}
            rowTIPOCOBRORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIPOCOBRORow)
            Return rowTIPOCOBRORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODCOBRO(ByVal CODCOBRO As Decimal) As TIPOCOBRORow
            Return CType(Me.Rows.Find(New Object() {CODCOBRO}),TIPOCOBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIPOCOBRODataTable = CType(MyBase.Clone,TIPOCOBRODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIPOCOBRODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODCOBRO = MyBase.Columns("CODCOBRO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMCOBRO = MyBase.Columns("NUMCOBRO")
            Me.columnDESCOBRO = MyBase.Columns("DESCOBRO")
            Me.columnPRIORIDAD = MyBase.Columns("PRIORIDAD")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODCOBRO = New Global.System.Data.DataColumn("CODCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOBRO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMCOBRO = New Global.System.Data.DataColumn("NUMCOBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCOBRO)
            Me.columnDESCOBRO = New Global.System.Data.DataColumn("DESCOBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCOBRO)
            Me.columnPRIORIDAD = New Global.System.Data.DataColumn("PRIORIDAD", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPRIORIDAD)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODCOBRO}, true))
            Me.columnCODCOBRO.AllowDBNull = false
            Me.columnCODCOBRO.Unique = true
            Me.columnNUMCOBRO.MaxLength = 50
            Me.columnDESCOBRO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTIPOCOBRORow() As TIPOCOBRORow
            Return CType(Me.NewRow,TIPOCOBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIPOCOBRORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIPOCOBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIPOCOBRORowChangedEvent) Is Nothing) Then
                RaiseEvent TIPOCOBRORowChanged(Me, New TIPOCOBRORowChangeEvent(CType(e.Row,TIPOCOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIPOCOBRORowChangingEvent) Is Nothing) Then
                RaiseEvent TIPOCOBRORowChanging(Me, New TIPOCOBRORowChangeEvent(CType(e.Row,TIPOCOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIPOCOBRORowDeletedEvent) Is Nothing) Then
                RaiseEvent TIPOCOBRORowDeleted(Me, New TIPOCOBRORowChangeEvent(CType(e.Row,TIPOCOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIPOCOBRORowDeletingEvent) Is Nothing) Then
                RaiseEvent TIPOCOBRORowDeleting(Me, New TIPOCOBRORowChangeEvent(CType(e.Row,TIPOCOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTIPOCOBRORow(ByVal row As TIPOCOBRORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIPOCOBRODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJACIERREDataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJACIERRERow)
        
        Private columnNUMCIERRE As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnCODCOBRADOR As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnFECAPERTURA As Global.System.Data.DataColumn
        
        Private columnFECCIERRE As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJACIERRE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOBRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOBRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECAPERTURAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECAPERTURA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECCIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECCIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJACIERRERow
            Get
                Return CType(Me.Rows(index),CAJACIERRERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACIERRERowChanging As CAJACIERRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACIERRERowChanged As CAJACIERRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACIERRERowDeleting As CAJACIERRERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJACIERRERowDeleted As CAJACIERRERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJACIERRERow(ByVal row As CAJACIERRERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJACIERRERow(ByVal NUMCIERRE As Decimal, ByVal parentCAJARowByFK_CAJACIERRE_CAJA As CAJARow, ByVal CODCOBRADOR As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal FECAPERTURA As Date, ByVal FECCIERRE As Date, ByVal FECGRA As Date) As CAJACIERRERow
            Dim rowCAJACIERRERow As CAJACIERRERow = CType(Me.NewRow,CAJACIERRERow)
            Dim columnValuesArray() As Object = New Object() {NUMCIERRE, Nothing, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECAPERTURA, FECCIERRE, FECGRA}
            If (Not (parentCAJARowByFK_CAJACIERRE_CAJA) Is Nothing) Then
                columnValuesArray(1) = parentCAJARowByFK_CAJACIERRE_CAJA(0)
            End If
            rowCAJACIERRERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJACIERRERow)
            Return rowCAJACIERRERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByNUMCIERRE(ByVal NUMCIERRE As Decimal) As CAJACIERRERow
            Return CType(Me.Rows.Find(New Object() {NUMCIERRE}),CAJACIERRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJACIERREDataTable = CType(MyBase.Clone,CAJACIERREDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJACIERREDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMCIERRE = MyBase.Columns("NUMCIERRE")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnCODCOBRADOR = MyBase.Columns("CODCOBRADOR")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnFECAPERTURA = MyBase.Columns("FECAPERTURA")
            Me.columnFECCIERRE = MyBase.Columns("FECCIERRE")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMCIERRE = New Global.System.Data.DataColumn("NUMCIERRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCIERRE)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnCODCOBRADOR = New Global.System.Data.DataColumn("CODCOBRADOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOBRADOR)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnFECAPERTURA = New Global.System.Data.DataColumn("FECAPERTURA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECAPERTURA)
            Me.columnFECCIERRE = New Global.System.Data.DataColumn("FECCIERRE", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECCIERRE)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNUMCIERRE}, true))
            Me.columnNUMCIERRE.AllowDBNull = false
            Me.columnNUMCIERRE.Unique = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJACIERRERow() As CAJACIERRERow
            Return CType(Me.NewRow,CAJACIERRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJACIERRERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJACIERRERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJACIERRERowChangedEvent) Is Nothing) Then
                RaiseEvent CAJACIERRERowChanged(Me, New CAJACIERRERowChangeEvent(CType(e.Row,CAJACIERRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJACIERRERowChangingEvent) Is Nothing) Then
                RaiseEvent CAJACIERRERowChanging(Me, New CAJACIERRERowChangeEvent(CType(e.Row,CAJACIERRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJACIERRERowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJACIERRERowDeleted(Me, New CAJACIERRERowChangeEvent(CType(e.Row,CAJACIERRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJACIERRERowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJACIERRERowDeleting(Me, New CAJACIERRERowChangeEvent(CType(e.Row,CAJACIERRERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJACIERRERow(ByVal row As CAJACIERRERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJACIERREDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJASALDODataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJASALDORow)
        
        Private columnNUMCIERRE As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnSALDOINICIAL As Global.System.Data.DataColumn
        
        Private columnSALDOCIERRE As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        Private columnDESMONEDA As Global.System.Data.DataColumn
        
        Private columnDESFORCOBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJASALDO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALDOINICIALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDOINICIAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property SALDOCIERREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnSALDOCIERRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJASALDORow
            Get
                Return CType(Me.Rows(index),CAJASALDORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJASALDORowChanging As CAJASALDORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJASALDORowChanged As CAJASALDORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJASALDORowDeleting As CAJASALDORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJASALDORowDeleted As CAJASALDORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJASALDORow(ByVal row As CAJASALDORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJASALDORow(ByVal parentCAJACIERRERowByFK_CAJASALDO_CAJACIERRE As CAJACIERRERow, ByVal parentMONEDARowByFK_CAJASALDO_MONEDA As MONEDARow, ByVal COTIZACION1 As Decimal, ByVal COTIZACION2 As Decimal, ByVal SALDOINICIAL As Decimal, ByVal SALDOCIERRE As Decimal, ByVal CODFORCOBRO As Decimal, ByVal DESMONEDA As String, ByVal DESFORCOBRO As String) As CAJASALDORow
            Dim rowCAJASALDORow As CAJASALDORow = CType(Me.NewRow,CAJASALDORow)
            Dim columnValuesArray() As Object = New Object() {Nothing, Nothing, COTIZACION1, COTIZACION2, SALDOINICIAL, SALDOCIERRE, CODFORCOBRO, DESMONEDA, DESFORCOBRO}
            If (Not (parentCAJACIERRERowByFK_CAJASALDO_CAJACIERRE) Is Nothing) Then
                columnValuesArray(0) = parentCAJACIERRERowByFK_CAJASALDO_CAJACIERRE(0)
            End If
            If (Not (parentMONEDARowByFK_CAJASALDO_MONEDA) Is Nothing) Then
                columnValuesArray(1) = parentMONEDARowByFK_CAJASALDO_MONEDA(0)
            End If
            rowCAJASALDORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJASALDORow)
            Return rowCAJASALDORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByNUMCIERRECODMONEDA(ByVal NUMCIERRE As Decimal, ByVal CODMONEDA As Decimal) As CAJASALDORow
            Return CType(Me.Rows.Find(New Object() {NUMCIERRE, CODMONEDA}),CAJASALDORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJASALDODataTable = CType(MyBase.Clone,CAJASALDODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJASALDODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMCIERRE = MyBase.Columns("NUMCIERRE")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnSALDOINICIAL = MyBase.Columns("SALDOINICIAL")
            Me.columnSALDOCIERRE = MyBase.Columns("SALDOCIERRE")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
            Me.columnDESMONEDA = MyBase.Columns("DESMONEDA")
            Me.columnDESFORCOBRO = MyBase.Columns("DESFORCOBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMCIERRE = New Global.System.Data.DataColumn("NUMCIERRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCIERRE)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnSALDOINICIAL = New Global.System.Data.DataColumn("SALDOINICIAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDOINICIAL)
            Me.columnSALDOCIERRE = New Global.System.Data.DataColumn("SALDOCIERRE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnSALDOCIERRE)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.columnDESMONEDA = New Global.System.Data.DataColumn("DESMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMONEDA)
            Me.columnDESFORCOBRO = New Global.System.Data.DataColumn("DESFORCOBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFORCOBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNUMCIERRE, Me.columnCODMONEDA}, true))
            Me.columnNUMCIERRE.AllowDBNull = false
            Me.columnCODMONEDA.AllowDBNull = false
            Me.columnCODFORCOBRO.AllowDBNull = false
            Me.columnDESMONEDA.MaxLength = 50
            Me.columnDESFORCOBRO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJASALDORow() As CAJASALDORow
            Return CType(Me.NewRow,CAJASALDORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJASALDORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJASALDORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJASALDORowChangedEvent) Is Nothing) Then
                RaiseEvent CAJASALDORowChanged(Me, New CAJASALDORowChangeEvent(CType(e.Row,CAJASALDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJASALDORowChangingEvent) Is Nothing) Then
                RaiseEvent CAJASALDORowChanging(Me, New CAJASALDORowChangeEvent(CType(e.Row,CAJASALDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJASALDORowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJASALDORowDeleted(Me, New CAJASALDORowChangeEvent(CType(e.Row,CAJASALDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJASALDORowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJASALDORowDeleting(Me, New CAJASALDORowChangeEvent(CType(e.Row,CAJASALDORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJASALDORow(ByVal row As CAJASALDORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJASALDODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJADataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJARow)
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnNUMEROCAJA As Global.System.Data.DataColumn
        
        Private columnCODSUCURSAL As Global.System.Data.DataColumn
        
        Private columnCODCOBRADOR As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMEROCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMEROCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODSUCURSALColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODSUCURSAL
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOBRADORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOBRADOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJARow
            Get
                Return CType(Me.Rows(index),CAJARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJARowChanging As CAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJARowChanged As CAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJARowDeleting As CAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJARowDeleted As CAJARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJARow(ByVal row As CAJARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJARow(ByVal NUMCAJA As Decimal, ByVal NUMEROCAJA As String, ByVal CODSUCURSAL As Decimal, ByVal CODCOBRADOR As Decimal, ByVal CODUSUARIO As Decimal, ByVal CODEMPRESA As Decimal, ByVal FECGRA As Date) As CAJARow
            Dim rowCAJARow As CAJARow = CType(Me.NewRow,CAJARow)
            Dim columnValuesArray() As Object = New Object() {NUMCAJA, NUMEROCAJA, CODSUCURSAL, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECGRA}
            rowCAJARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJARow)
            Return rowCAJARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByNUMCAJA(ByVal NUMCAJA As Decimal) As CAJARow
            Return CType(Me.Rows.Find(New Object() {NUMCAJA}),CAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJADataTable = CType(MyBase.Clone,CAJADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnNUMEROCAJA = MyBase.Columns("NUMEROCAJA")
            Me.columnCODSUCURSAL = MyBase.Columns("CODSUCURSAL")
            Me.columnCODCOBRADOR = MyBase.Columns("CODCOBRADOR")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnNUMEROCAJA = New Global.System.Data.DataColumn("NUMEROCAJA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMEROCAJA)
            Me.columnCODSUCURSAL = New Global.System.Data.DataColumn("CODSUCURSAL", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODSUCURSAL)
            Me.columnCODCOBRADOR = New Global.System.Data.DataColumn("CODCOBRADOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOBRADOR)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnNUMCAJA}, true))
            Me.columnNUMCAJA.AllowDBNull = false
            Me.columnNUMCAJA.Unique = true
            Me.columnNUMEROCAJA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJARow() As CAJARow
            Return CType(Me.NewRow,CAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJARowChangedEvent) Is Nothing) Then
                RaiseEvent CAJARowChanged(Me, New CAJARowChangeEvent(CType(e.Row,CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJARowChangingEvent) Is Nothing) Then
                RaiseEvent CAJARowChanging(Me, New CAJARowChangeEvent(CType(e.Row,CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJARowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJARowDeleted(Me, New CAJARowChangeEvent(CType(e.Row,CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJARowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJARowDeleting(Me, New CAJARowChangeEvent(CType(e.Row,CAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJARow(ByVal row As CAJARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class APERTURACAJADataTable
        Inherits Global.System.Data.TypedTableBase(Of APERTURACAJARow)
        
        Private columnCODINGRESO As Global.System.Data.DataColumn
        
        Private columnTIPOINGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnVUELTO As Global.System.Data.DataColumn
        
        Private columnFECINGRESO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "APERTURACAJA"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VUELTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVUELTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As APERTURACAJARow
            Get
                Return CType(Me.Rows(index),APERTURACAJARow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURACAJARowChanging As APERTURACAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURACAJARowChanged As APERTURACAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURACAJARowDeleting As APERTURACAJARowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURACAJARowDeleted As APERTURACAJARowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAPERTURACAJARow(ByVal row As APERTURACAJARow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAPERTURACAJARow( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Byte,  _
                    ByVal parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO2 As TIPOEGRESORow,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal parentCAJARowByFK_CAJAINGRESOS_CAJA2 As CAJARow,  _
                    ByVal CONCEPTO As String,  _
                    ByVal parentMONEDARowByFK_INGRESO_MONEDA2 As MONEDARow,  _
                    ByVal COTIZACION1 As Decimal,  _
                    ByVal COTIZACION2 As Decimal,  _
                    ByVal IMPORTE As Decimal,  _
                    ByVal VUELTO As Decimal,  _
                    ByVal FECINGRESO As Date,  _
                    ByVal FECGRA As Date,  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Decimal) As APERTURACAJARow
            Dim rowAPERTURACAJARow As APERTURACAJARow = CType(Me.NewRow,APERTURACAJARow)
            Dim columnValuesArray() As Object = New Object() {CODINGRESO, TIPOINGRESO, Nothing, CODUSUARIO, CODEMPRESA, Nothing, CONCEPTO, Nothing, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO}
            If (Not (parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO2) Is Nothing) Then
                columnValuesArray(2) = parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO2(0)
            End If
            If (Not (parentCAJARowByFK_CAJAINGRESOS_CAJA2) Is Nothing) Then
                columnValuesArray(5) = parentCAJARowByFK_CAJAINGRESOS_CAJA2(0)
            End If
            If (Not (parentMONEDARowByFK_INGRESO_MONEDA2) Is Nothing) Then
                columnValuesArray(7) = parentMONEDARowByFK_INGRESO_MONEDA2(0)
            End If
            rowAPERTURACAJARow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAPERTURACAJARow)
            Return rowAPERTURACAJARow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODINGRESO(ByVal CODINGRESO As Decimal) As APERTURACAJARow
            Return CType(Me.Rows.Find(New Object() {CODINGRESO}),APERTURACAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As APERTURACAJADataTable = CType(MyBase.Clone,APERTURACAJADataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New APERTURACAJADataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODINGRESO = MyBase.Columns("CODINGRESO")
            Me.columnTIPOINGRESO = MyBase.Columns("TIPOINGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnVUELTO = MyBase.Columns("VUELTO")
            Me.columnFECINGRESO = MyBase.Columns("FECINGRESO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODINGRESO = New Global.System.Data.DataColumn("CODINGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODINGRESO)
            Me.columnTIPOINGRESO = New Global.System.Data.DataColumn("TIPOINGRESO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOINGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnVUELTO = New Global.System.Data.DataColumn("VUELTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVUELTO)
            Me.columnFECINGRESO = New Global.System.Data.DataColumn("FECINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECINGRESO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODINGRESO}, true))
            Me.columnCODINGRESO.AllowDBNull = false
            Me.columnCODINGRESO.Unique = true
            Me.columnCONCEPTO.MaxLength = 100
            Me.columnOBSERVACION.MaxLength = 150
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAPERTURACAJARow() As APERTURACAJARow
            Return CType(Me.NewRow,APERTURACAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New APERTURACAJARow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(APERTURACAJARow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.APERTURACAJARowChangedEvent) Is Nothing) Then
                RaiseEvent APERTURACAJARowChanged(Me, New APERTURACAJARowChangeEvent(CType(e.Row,APERTURACAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.APERTURACAJARowChangingEvent) Is Nothing) Then
                RaiseEvent APERTURACAJARowChanging(Me, New APERTURACAJARowChangeEvent(CType(e.Row,APERTURACAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.APERTURACAJARowDeletedEvent) Is Nothing) Then
                RaiseEvent APERTURACAJARowDeleted(Me, New APERTURACAJARowChangeEvent(CType(e.Row,APERTURACAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.APERTURACAJARowDeletingEvent) Is Nothing) Then
                RaiseEvent APERTURACAJARowDeleting(Me, New APERTURACAJARowChangeEvent(CType(e.Row,APERTURACAJARow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAPERTURACAJARow(ByVal row As APERTURACAJARow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "APERTURACAJADataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class APERTURADETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of APERTURADETALLERow)
        
        Private columnCODINGRESO As Global.System.Data.DataColumn
        
        Private columnTIPOINGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnVUELTO As Global.System.Data.DataColumn
        
        Private columnFECINGRESO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        Private columnDESUSUARIO As Global.System.Data.DataColumn
        
        Private columnDESMONEDA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "APERTURADETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VUELTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVUELTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As APERTURADETALLERow
            Get
                Return CType(Me.Rows(index),APERTURADETALLERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURADETALLERowChanging As APERTURADETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURADETALLERowChanged As APERTURADETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURADETALLERowDeleting As APERTURADETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event APERTURADETALLERowDeleted As APERTURADETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddAPERTURADETALLERow(ByVal row As APERTURADETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddAPERTURADETALLERow( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Byte,  _
                    ByVal parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO3 As TIPOEGRESORow,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal parentCAJARowByFK_CAJAINGRESOS_CAJA3 As CAJARow,  _
                    ByVal CONCEPTO As String,  _
                    ByVal parentMONEDARowByFK_INGRESO_MONEDA3 As MONEDARow,  _
                    ByVal COTIZACION1 As Decimal,  _
                    ByVal COTIZACION2 As Decimal,  _
                    ByVal IMPORTE As Decimal,  _
                    ByVal VUELTO As Decimal,  _
                    ByVal FECINGRESO As Date,  _
                    ByVal FECGRA As Date,  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Decimal,  _
                    ByVal DESUSUARIO As String,  _
                    ByVal DESMONEDA As String) As APERTURADETALLERow
            Dim rowAPERTURADETALLERow As APERTURADETALLERow = CType(Me.NewRow,APERTURADETALLERow)
            Dim columnValuesArray() As Object = New Object() {CODINGRESO, TIPOINGRESO, Nothing, CODUSUARIO, CODEMPRESA, Nothing, CONCEPTO, Nothing, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO, DESUSUARIO, DESMONEDA}
            If (Not (parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO3) Is Nothing) Then
                columnValuesArray(2) = parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO3(0)
            End If
            If (Not (parentCAJARowByFK_CAJAINGRESOS_CAJA3) Is Nothing) Then
                columnValuesArray(5) = parentCAJARowByFK_CAJAINGRESOS_CAJA3(0)
            End If
            If (Not (parentMONEDARowByFK_INGRESO_MONEDA3) Is Nothing) Then
                columnValuesArray(7) = parentMONEDARowByFK_INGRESO_MONEDA3(0)
            End If
            rowAPERTURADETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowAPERTURADETALLERow)
            Return rowAPERTURADETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODINGRESO(ByVal CODINGRESO As Decimal) As APERTURADETALLERow
            Return CType(Me.Rows.Find(New Object() {CODINGRESO}),APERTURADETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As APERTURADETALLEDataTable = CType(MyBase.Clone,APERTURADETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New APERTURADETALLEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODINGRESO = MyBase.Columns("CODINGRESO")
            Me.columnTIPOINGRESO = MyBase.Columns("TIPOINGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnVUELTO = MyBase.Columns("VUELTO")
            Me.columnFECINGRESO = MyBase.Columns("FECINGRESO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
            Me.columnDESUSUARIO = MyBase.Columns("DESUSUARIO")
            Me.columnDESMONEDA = MyBase.Columns("DESMONEDA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODINGRESO = New Global.System.Data.DataColumn("CODINGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODINGRESO)
            Me.columnTIPOINGRESO = New Global.System.Data.DataColumn("TIPOINGRESO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOINGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnVUELTO = New Global.System.Data.DataColumn("VUELTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVUELTO)
            Me.columnFECINGRESO = New Global.System.Data.DataColumn("FECINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECINGRESO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.columnDESUSUARIO = New Global.System.Data.DataColumn("DESUSUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESUSUARIO)
            Me.columnDESMONEDA = New Global.System.Data.DataColumn("DESMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMONEDA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODINGRESO}, true))
            Me.columnCODINGRESO.AutoIncrementSeed = 1
            Me.columnCODINGRESO.AllowDBNull = false
            Me.columnCODINGRESO.Unique = true
            Me.columnCONCEPTO.MaxLength = 100
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnDESUSUARIO.MaxLength = 60
            Me.columnDESMONEDA.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewAPERTURADETALLERow() As APERTURADETALLERow
            Return CType(Me.NewRow,APERTURADETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New APERTURADETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(APERTURADETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.APERTURADETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent APERTURADETALLERowChanged(Me, New APERTURADETALLERowChangeEvent(CType(e.Row,APERTURADETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.APERTURADETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent APERTURADETALLERowChanging(Me, New APERTURADETALLERowChangeEvent(CType(e.Row,APERTURADETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.APERTURADETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent APERTURADETALLERowDeleted(Me, New APERTURADETALLERowChangeEvent(CType(e.Row,APERTURADETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.APERTURADETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent APERTURADETALLERowDeleting(Me, New APERTURADETALLERowChangeEvent(CType(e.Row,APERTURADETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveAPERTURADETALLERow(ByVal row As APERTURADETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "APERTURADETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJAINGRESOSDETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJAINGRESOSDETALLERow)
        
        Private columnCODINGRESO As Global.System.Data.DataColumn
        
        Private columnTIPOINGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnVUELTO As Global.System.Data.DataColumn
        
        Private columnFECINGRESO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        Private columnDESMONEDA As Global.System.Data.DataColumn
        
        Private columnDESUSUARIO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJAINGRESOSDETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPOINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property VUELTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnVUELTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECINGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECINGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJAINGRESOSDETALLERow
            Get
                Return CType(Me.Rows(index),CAJAINGRESOSDETALLERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSDETALLERowChanging As CAJAINGRESOSDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSDETALLERowChanged As CAJAINGRESOSDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSDETALLERowDeleting As CAJAINGRESOSDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAINGRESOSDETALLERowDeleted As CAJAINGRESOSDETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJAINGRESOSDETALLERow(ByVal row As CAJAINGRESOSDETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJAINGRESOSDETALLERow( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Byte,  _
                    ByVal parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO4 As TIPOEGRESORow,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal parentCAJARowByFK_CAJAINGRESOS_CAJA4 As CAJARow,  _
                    ByVal CONCEPTO As String,  _
                    ByVal parentMONEDARowByFK_INGRESO_MONEDA4 As MONEDARow,  _
                    ByVal COTIZACION1 As Decimal,  _
                    ByVal COTIZACION2 As Decimal,  _
                    ByVal IMPORTE As Decimal,  _
                    ByVal VUELTO As Decimal,  _
                    ByVal FECINGRESO As Date,  _
                    ByVal FECGRA As Date,  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Decimal,  _
                    ByVal DESMONEDA As String,  _
                    ByVal DESUSUARIO As String) As CAJAINGRESOSDETALLERow
            Dim rowCAJAINGRESOSDETALLERow As CAJAINGRESOSDETALLERow = CType(Me.NewRow,CAJAINGRESOSDETALLERow)
            Dim columnValuesArray() As Object = New Object() {CODINGRESO, TIPOINGRESO, Nothing, CODUSUARIO, CODEMPRESA, Nothing, CONCEPTO, Nothing, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO, DESMONEDA, DESUSUARIO}
            If (Not (parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO4) Is Nothing) Then
                columnValuesArray(2) = parentTIPOEGRESORowByFK_CAJAINGRESOS_TIPOEGRESO4(0)
            End If
            If (Not (parentCAJARowByFK_CAJAINGRESOS_CAJA4) Is Nothing) Then
                columnValuesArray(5) = parentCAJARowByFK_CAJAINGRESOS_CAJA4(0)
            End If
            If (Not (parentMONEDARowByFK_INGRESO_MONEDA4) Is Nothing) Then
                columnValuesArray(7) = parentMONEDARowByFK_INGRESO_MONEDA4(0)
            End If
            rowCAJAINGRESOSDETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJAINGRESOSDETALLERow)
            Return rowCAJAINGRESOSDETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODINGRESO(ByVal CODINGRESO As Decimal) As CAJAINGRESOSDETALLERow
            Return CType(Me.Rows.Find(New Object() {CODINGRESO}),CAJAINGRESOSDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJAINGRESOSDETALLEDataTable = CType(MyBase.Clone,CAJAINGRESOSDETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJAINGRESOSDETALLEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODINGRESO = MyBase.Columns("CODINGRESO")
            Me.columnTIPOINGRESO = MyBase.Columns("TIPOINGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnVUELTO = MyBase.Columns("VUELTO")
            Me.columnFECINGRESO = MyBase.Columns("FECINGRESO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
            Me.columnDESMONEDA = MyBase.Columns("DESMONEDA")
            Me.columnDESUSUARIO = MyBase.Columns("DESUSUARIO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODINGRESO = New Global.System.Data.DataColumn("CODINGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODINGRESO)
            Me.columnTIPOINGRESO = New Global.System.Data.DataColumn("TIPOINGRESO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPOINGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnVUELTO = New Global.System.Data.DataColumn("VUELTO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnVUELTO)
            Me.columnFECINGRESO = New Global.System.Data.DataColumn("FECINGRESO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECINGRESO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.columnDESMONEDA = New Global.System.Data.DataColumn("DESMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMONEDA)
            Me.columnDESUSUARIO = New Global.System.Data.DataColumn("DESUSUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESUSUARIO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODINGRESO}, true))
            Me.columnCODINGRESO.AllowDBNull = false
            Me.columnCODINGRESO.Unique = true
            Me.columnCONCEPTO.MaxLength = 100
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnDESMONEDA.MaxLength = 50
            Me.columnDESUSUARIO.MaxLength = 60
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJAINGRESOSDETALLERow() As CAJAINGRESOSDETALLERow
            Return CType(Me.NewRow,CAJAINGRESOSDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJAINGRESOSDETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJAINGRESOSDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJAINGRESOSDETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSDETALLERowChanged(Me, New CAJAINGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAINGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJAINGRESOSDETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSDETALLERowChanging(Me, New CAJAINGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAINGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJAINGRESOSDETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSDETALLERowDeleted(Me, New CAJAINGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAINGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJAINGRESOSDETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJAINGRESOSDETALLERowDeleting(Me, New CAJAINGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAINGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJAINGRESOSDETALLERow(ByVal row As CAJAINGRESOSDETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJAINGRESOSDETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class CAJAEGRESOSDETALLEDataTable
        Inherits Global.System.Data.TypedTableBase(Of CAJAEGRESOSDETALLERow)
        
        Private columnDESMONEDA As Global.System.Data.DataColumn
        
        Private columnDESUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEGRESO As Global.System.Data.DataColumn
        
        Private columnCODTIPOEGRESO As Global.System.Data.DataColumn
        
        Private columnCODUSUARIO As Global.System.Data.DataColumn
        
        Private columnCODEMPRESA As Global.System.Data.DataColumn
        
        Private columnCODPAGANZAS As Global.System.Data.DataColumn
        
        Private columnNUMEROCUOTA As Global.System.Data.DataColumn
        
        Private columnCODCOMPRA As Global.System.Data.DataColumn
        
        Private columnNUMCAJA As Global.System.Data.DataColumn
        
        Private columnIMPORTE As Global.System.Data.DataColumn
        
        Private columnCODMONEDA As Global.System.Data.DataColumn
        
        Private columnCOTIZACION1 As Global.System.Data.DataColumn
        
        Private columnCOTIZACION2 As Global.System.Data.DataColumn
        
        Private columnFECHAMOVIMIENTO As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnOBSERVACION As Global.System.Data.DataColumn
        
        Private columnCONCEPTO As Global.System.Data.DataColumn
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "CAJAEGRESOSDETALLE"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODTIPOEGRESOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOEGRESO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODUSUARIOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODUSUARIO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODEMPRESAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODEMPRESA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODPAGANZASColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODPAGANZAS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMEROCUOTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMEROCUOTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCOMPRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCOMPRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property IMPORTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnIMPORTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODMONEDAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODMONEDA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION1
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COTIZACION2Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOTIZACION2
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAMOVIMIENTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAMOVIMIENTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property OBSERVACIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnOBSERVACION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CONCEPTOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCONCEPTO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As CAJAEGRESOSDETALLERow
            Get
                Return CType(Me.Rows(index),CAJAEGRESOSDETALLERow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSDETALLERowChanging As CAJAEGRESOSDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSDETALLERowChanged As CAJAEGRESOSDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSDETALLERowDeleting As CAJAEGRESOSDETALLERowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event CAJAEGRESOSDETALLERowDeleted As CAJAEGRESOSDETALLERowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddCAJAEGRESOSDETALLERow(ByVal row As CAJAEGRESOSDETALLERow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddCAJAEGRESOSDETALLERow( _
                    ByVal DESMONEDA As String,  _
                    ByVal DESUSUARIO As String,  _
                    ByVal CODEGRESO As Decimal,  _
                    ByVal parentTIPOEGRESORowByFK_CAJAEGRE_RELATIONS_TIPOEGRE1 As TIPOEGRESORow,  _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal CODPAGANZAS As Decimal,  _
                    ByVal NUMEROCUOTA As Decimal,  _
                    ByVal CODCOMPRA As Decimal,  _
                    ByVal parentCAJARowByFK_CAJAEGRESOS_CAJA1 As CAJARow,  _
                    ByVal IMPORTE As Decimal,  _
                    ByVal parentMONEDARowByFK_CAJAEGRESOS_MONEDA1 As MONEDARow,  _
                    ByVal COTIZACION1 As Decimal,  _
                    ByVal COTIZACION2 As Decimal,  _
                    ByVal FECHAMOVIMIENTO As Date,  _
                    ByVal FECGRA As Date,  _
                    ByVal OBSERVACION As String,  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODFORCOBRO As Decimal) As CAJAEGRESOSDETALLERow
            Dim rowCAJAEGRESOSDETALLERow As CAJAEGRESOSDETALLERow = CType(Me.NewRow,CAJAEGRESOSDETALLERow)
            Dim columnValuesArray() As Object = New Object() {DESMONEDA, DESUSUARIO, CODEGRESO, Nothing, CODUSUARIO, CODEMPRESA, CODPAGANZAS, NUMEROCUOTA, CODCOMPRA, Nothing, IMPORTE, Nothing, COTIZACION1, COTIZACION2, FECHAMOVIMIENTO, FECGRA, OBSERVACION, CONCEPTO, CODFORCOBRO}
            If (Not (parentTIPOEGRESORowByFK_CAJAEGRE_RELATIONS_TIPOEGRE1) Is Nothing) Then
                columnValuesArray(3) = parentTIPOEGRESORowByFK_CAJAEGRE_RELATIONS_TIPOEGRE1(0)
            End If
            If (Not (parentCAJARowByFK_CAJAEGRESOS_CAJA1) Is Nothing) Then
                columnValuesArray(9) = parentCAJARowByFK_CAJAEGRESOS_CAJA1(0)
            End If
            If (Not (parentMONEDARowByFK_CAJAEGRESOS_MONEDA1) Is Nothing) Then
                columnValuesArray(11) = parentMONEDARowByFK_CAJAEGRESOS_MONEDA1(0)
            End If
            rowCAJAEGRESOSDETALLERow.ItemArray = columnValuesArray
            Me.Rows.Add(rowCAJAEGRESOSDETALLERow)
            Return rowCAJAEGRESOSDETALLERow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODEGRESO(ByVal CODEGRESO As Decimal) As CAJAEGRESOSDETALLERow
            Return CType(Me.Rows.Find(New Object() {CODEGRESO}),CAJAEGRESOSDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As CAJAEGRESOSDETALLEDataTable = CType(MyBase.Clone,CAJAEGRESOSDETALLEDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New CAJAEGRESOSDETALLEDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnDESMONEDA = MyBase.Columns("DESMONEDA")
            Me.columnDESUSUARIO = MyBase.Columns("DESUSUARIO")
            Me.columnCODEGRESO = MyBase.Columns("CODEGRESO")
            Me.columnCODTIPOEGRESO = MyBase.Columns("CODTIPOEGRESO")
            Me.columnCODUSUARIO = MyBase.Columns("CODUSUARIO")
            Me.columnCODEMPRESA = MyBase.Columns("CODEMPRESA")
            Me.columnCODPAGANZAS = MyBase.Columns("CODPAGANZAS")
            Me.columnNUMEROCUOTA = MyBase.Columns("NUMEROCUOTA")
            Me.columnCODCOMPRA = MyBase.Columns("CODCOMPRA")
            Me.columnNUMCAJA = MyBase.Columns("NUMCAJA")
            Me.columnIMPORTE = MyBase.Columns("IMPORTE")
            Me.columnCODMONEDA = MyBase.Columns("CODMONEDA")
            Me.columnCOTIZACION1 = MyBase.Columns("COTIZACION1")
            Me.columnCOTIZACION2 = MyBase.Columns("COTIZACION2")
            Me.columnFECHAMOVIMIENTO = MyBase.Columns("FECHAMOVIMIENTO")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnOBSERVACION = MyBase.Columns("OBSERVACION")
            Me.columnCONCEPTO = MyBase.Columns("CONCEPTO")
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnDESMONEDA = New Global.System.Data.DataColumn("DESMONEDA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESMONEDA)
            Me.columnDESUSUARIO = New Global.System.Data.DataColumn("DESUSUARIO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESUSUARIO)
            Me.columnCODEGRESO = New Global.System.Data.DataColumn("CODEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEGRESO)
            Me.columnCODTIPOEGRESO = New Global.System.Data.DataColumn("CODTIPOEGRESO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOEGRESO)
            Me.columnCODUSUARIO = New Global.System.Data.DataColumn("CODUSUARIO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODUSUARIO)
            Me.columnCODEMPRESA = New Global.System.Data.DataColumn("CODEMPRESA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODEMPRESA)
            Me.columnCODPAGANZAS = New Global.System.Data.DataColumn("CODPAGANZAS", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODPAGANZAS)
            Me.columnNUMEROCUOTA = New Global.System.Data.DataColumn("NUMEROCUOTA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMEROCUOTA)
            Me.columnCODCOMPRA = New Global.System.Data.DataColumn("CODCOMPRA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCOMPRA)
            Me.columnNUMCAJA = New Global.System.Data.DataColumn("NUMCAJA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCAJA)
            Me.columnIMPORTE = New Global.System.Data.DataColumn("IMPORTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnIMPORTE)
            Me.columnCODMONEDA = New Global.System.Data.DataColumn("CODMONEDA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODMONEDA)
            Me.columnCOTIZACION1 = New Global.System.Data.DataColumn("COTIZACION1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION1)
            Me.columnCOTIZACION2 = New Global.System.Data.DataColumn("COTIZACION2", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOTIZACION2)
            Me.columnFECHAMOVIMIENTO = New Global.System.Data.DataColumn("FECHAMOVIMIENTO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAMOVIMIENTO)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnOBSERVACION = New Global.System.Data.DataColumn("OBSERVACION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnOBSERVACION)
            Me.columnCONCEPTO = New Global.System.Data.DataColumn("CONCEPTO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCONCEPTO)
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODEGRESO}, true))
            Me.columnDESMONEDA.MaxLength = 50
            Me.columnDESUSUARIO.MaxLength = 60
            Me.columnCODEGRESO.AllowDBNull = false
            Me.columnCODEGRESO.Unique = true
            Me.columnOBSERVACION.MaxLength = 150
            Me.columnCONCEPTO.MaxLength = 100
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewCAJAEGRESOSDETALLERow() As CAJAEGRESOSDETALLERow
            Return CType(Me.NewRow,CAJAEGRESOSDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New CAJAEGRESOSDETALLERow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(CAJAEGRESOSDETALLERow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.CAJAEGRESOSDETALLERowChangedEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSDETALLERowChanged(Me, New CAJAEGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAEGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.CAJAEGRESOSDETALLERowChangingEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSDETALLERowChanging(Me, New CAJAEGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAEGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.CAJAEGRESOSDETALLERowDeletedEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSDETALLERowDeleted(Me, New CAJAEGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAEGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.CAJAEGRESOSDETALLERowDeletingEvent) Is Nothing) Then
                RaiseEvent CAJAEGRESOSDETALLERowDeleting(Me, New CAJAEGRESOSDETALLERowChangeEvent(CType(e.Row,CAJAEGRESOSDETALLERow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveCAJAEGRESOSDETALLERow(ByVal row As CAJAEGRESOSDETALLERow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "CAJAEGRESOSDETALLEDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class TIPOFORMACOBRODataTable
        Inherits Global.System.Data.TypedTableBase(Of TIPOFORMACOBRORow)
        
        Private columnCODFORCOBRO As Global.System.Data.DataColumn
        
        Private columnDESFORCOBRO As Global.System.Data.DataColumn
        
        Private columnCAJA As Global.System.Data.DataColumn
        
        Private columnFECGRA As Global.System.Data.DataColumn
        
        Private columnCOBROS As Global.System.Data.DataColumn
        
        Private columnPAGOS As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "TIPOFORMACOBRO"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESFORCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESFORCOBRO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CAJAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCAJA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECGRAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECGRA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property COBROSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCOBROS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PAGOSColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPAGOS
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As TIPOFORMACOBRORow
            Get
                Return CType(Me.Rows(index),TIPOFORMACOBRORow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOFORMACOBRORowChanging As TIPOFORMACOBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOFORMACOBRORowChanged As TIPOFORMACOBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOFORMACOBRORowDeleting As TIPOFORMACOBRORowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event TIPOFORMACOBRORowDeleted As TIPOFORMACOBRORowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddTIPOFORMACOBRORow(ByVal row As TIPOFORMACOBRORow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddTIPOFORMACOBRORow(ByVal CODFORCOBRO As Byte, ByVal DESFORCOBRO As String, ByVal CAJA As Boolean, ByVal FECGRA As Date, ByVal COBROS As Boolean, ByVal PAGOS As Boolean) As TIPOFORMACOBRORow
            Dim rowTIPOFORMACOBRORow As TIPOFORMACOBRORow = CType(Me.NewRow,TIPOFORMACOBRORow)
            Dim columnValuesArray() As Object = New Object() {CODFORCOBRO, DESFORCOBRO, CAJA, FECGRA, COBROS, PAGOS}
            rowTIPOFORMACOBRORow.ItemArray = columnValuesArray
            Me.Rows.Add(rowTIPOFORMACOBRORow)
            Return rowTIPOFORMACOBRORow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODFORCOBRO(ByVal CODFORCOBRO As Byte) As TIPOFORMACOBRORow
            Return CType(Me.Rows.Find(New Object() {CODFORCOBRO}),TIPOFORMACOBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As TIPOFORMACOBRODataTable = CType(MyBase.Clone,TIPOFORMACOBRODataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New TIPOFORMACOBRODataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODFORCOBRO = MyBase.Columns("CODFORCOBRO")
            Me.columnDESFORCOBRO = MyBase.Columns("DESFORCOBRO")
            Me.columnCAJA = MyBase.Columns("CAJA")
            Me.columnFECGRA = MyBase.Columns("FECGRA")
            Me.columnCOBROS = MyBase.Columns("COBROS")
            Me.columnPAGOS = MyBase.Columns("PAGOS")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODFORCOBRO = New Global.System.Data.DataColumn("CODFORCOBRO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODFORCOBRO)
            Me.columnDESFORCOBRO = New Global.System.Data.DataColumn("DESFORCOBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESFORCOBRO)
            Me.columnCAJA = New Global.System.Data.DataColumn("CAJA", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCAJA)
            Me.columnFECGRA = New Global.System.Data.DataColumn("FECGRA", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECGRA)
            Me.columnCOBROS = New Global.System.Data.DataColumn("COBROS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCOBROS)
            Me.columnPAGOS = New Global.System.Data.DataColumn("PAGOS", GetType(Boolean), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPAGOS)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODFORCOBRO}, true))
            Me.columnCODFORCOBRO.AllowDBNull = false
            Me.columnCODFORCOBRO.ReadOnly = true
            Me.columnCODFORCOBRO.Unique = true
            Me.columnDESFORCOBRO.MaxLength = 50
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewTIPOFORMACOBRORow() As TIPOFORMACOBRORow
            Return CType(Me.NewRow,TIPOFORMACOBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New TIPOFORMACOBRORow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(TIPOFORMACOBRORow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.TIPOFORMACOBRORowChangedEvent) Is Nothing) Then
                RaiseEvent TIPOFORMACOBRORowChanged(Me, New TIPOFORMACOBRORowChangeEvent(CType(e.Row,TIPOFORMACOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.TIPOFORMACOBRORowChangingEvent) Is Nothing) Then
                RaiseEvent TIPOFORMACOBRORowChanging(Me, New TIPOFORMACOBRORowChangeEvent(CType(e.Row,TIPOFORMACOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.TIPOFORMACOBRORowDeletedEvent) Is Nothing) Then
                RaiseEvent TIPOFORMACOBRORowDeleted(Me, New TIPOFORMACOBRORowChangeEvent(CType(e.Row,TIPOFORMACOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.TIPOFORMACOBRORowDeletingEvent) Is Nothing) Then
                RaiseEvent TIPOFORMACOBRORowDeleting(Me, New TIPOFORMACOBRORowChangeEvent(CType(e.Row,TIPOFORMACOBRORow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveTIPOFORMACOBRORow(ByVal row As TIPOFORMACOBRORow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsCaja = New DsCaja()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "TIPOFORMACOBRODataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJAINGRESOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJAINGRESOS As CAJAINGRESOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJAINGRESOS = CType(Me.Table,CAJAINGRESOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODINGRESO() As Decimal
            Get
                Return CType(Me(Me.tableCAJAINGRESOS.CODINGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CODINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOINGRESO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.TIPOINGRESOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOINGRESO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.TIPOINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VUELTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.VUELTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VUELTO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.VUELTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.FECINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECINGRESO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.FECINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOS.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'CAJAINGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOS.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_INGRESO_MONEDA")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_INGRESO_MONEDA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOCOBRORow() As TIPOCOBRORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_INGRESO_TIPOCOBRO")),TIPOCOBRORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_INGRESO_TIPOCOBRO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.TIPOINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOINGRESONull()
            Me(Me.tableCAJAINGRESOS.TIPOINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableCAJAINGRESOS.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJAINGRESOS.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJAINGRESOS.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableCAJAINGRESOS.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableCAJAINGRESOS.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCAJAINGRESOS.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJAINGRESOS.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJAINGRESOS.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableCAJAINGRESOS.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVUELTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.VUELTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVUELTONull()
            Me(Me.tableCAJAINGRESOS.VUELTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.FECINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECINGRESONull()
            Me(Me.tableCAJAINGRESOS.FECINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJAINGRESOS.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableCAJAINGRESOS.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOS.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableCAJAINGRESOS.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJACHEQUESRECIBIDOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJACHEQUESRECIBIDOS As CAJACHEQUESRECIBIDOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJACHEQUESRECIBIDOS = CType(Me.Table,CAJACHEQUESRECIBIDOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORMACOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODFORMACOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORMACOBRO' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODFORMACOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODINGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODINGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODINGRESO' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODBANCO() As Decimal
            Get
                Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODBANCOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODBANCOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCHEQUE() As String
            Get
                Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.NUMCHEQUEColumn),String)
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.NUMCHEQUEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODSUCURSALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODESTADO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODESTADOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODESTADO' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODESTADOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAVCTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.FECHAVCTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAVCTO' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.FECHAVCTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property LIBRADOR() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJACHEQUESRECIBIDOS.LIBRADORColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'LIBRADOR' in table 'CAJACHEQUESRECIBIDOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACHEQUESRECIBIDOS.LIBRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJACHEQUESRECIBIDOS_MONEDA")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJACHEQUESRECIBIDOS_MONEDA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORMACOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODFORMACOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORMACOBRONull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODFORMACOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODINGRESONull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODESTADONull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODESTADOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODESTADONull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODESTADOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAVCTONull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.FECHAVCTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAVCTONull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.FECHAVCTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJACHEQUESRECIBIDOS.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsLIBRADORNull() As Boolean
            Return Me.IsNull(Me.tableCAJACHEQUESRECIBIDOS.LIBRADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetLIBRADORNull()
            Me(Me.tableCAJACHEQUESRECIBIDOS.LIBRADORColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class USUARIORow
        Inherits Global.System.Data.DataRow
        
        Private tableUSUARIO As USUARIODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableUSUARIO = CType(Me.Table,USUARIODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Return CType(Me(Me.tableUSUARIO.CODUSUARIOColumn),Decimal)
            End Get
            Set
                Me(Me.tableUSUARIO.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Return CType(Me(Me.tableUSUARIO.CODEMPRESAColumn),Decimal)
            End Get
            Set
                Me(Me.tableUSUARIO.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESUSUARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.DESUSUARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESUSUARIO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.DESUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PASSUSUARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.PASSUSUARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PASSUSUARIO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.PASSUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVELCUENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.NIVELCUENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NIVELCUENTA' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.NIVELCUENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUGRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.USUGRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'USUGRA' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.USUGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NOMBRE() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.NOMBREColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.NOMBREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property APELLIDO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.APELLIDOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'APELLIDO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.APELLIDOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DIRECCION() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.DIRECCIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.DIRECCIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TELEFONO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.TELEFONOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TELEFONO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.TELEFONOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONTACTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.CONTACTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONTACTO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.CONTACTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TELEFONOCONTACTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.TELEFONOCONTACTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TELEFONOCONTACTO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.TELEFONOCONTACTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMAGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.IMAGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.IMAGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NIVELUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.NIVELUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NIVELUSUARIO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.NIVELUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SEXO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.SEXOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SEXO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.SEXOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INICIOCOMPRAS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.INICIOCOMPRASColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INICIOCOMPRAS' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.INICIOCOMPRASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property INICIOVENTAS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.INICIOVENTASColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'INICIOVENTAS' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.INICIOVENTASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CELULAR() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.CELULARColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CELULAR' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.CELULARColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property EMAIL() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.EMAILColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'EMAIL' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.EMAILColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCIUDAD() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.CODCIUDADColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCIUDAD' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.CODCIUDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHANAC() As Date
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.FECHANACColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHANAC' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.FECHANACColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CEDULA() As String
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.CEDULAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CEDULA' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.CEDULAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODGRUPO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.CODGRUPOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODGRUPO' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.CODGRUPOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAPASSW() As Date
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.FECHAPASSWColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAPASSW' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.FECHAPASSWColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMSISTEMAS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableUSUARIO.NUMSISTEMASColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMSISTEMAS' in table 'USUARIO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableUSUARIO.NUMSISTEMASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.DESUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESUSUARIONull()
            Me(Me.tableUSUARIO.DESUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPASSUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.PASSUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPASSUSUARIONull()
            Me(Me.tableUSUARIO.PASSUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNIVELCUENTANull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.NIVELCUENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNIVELCUENTANull()
            Me(Me.tableUSUARIO.NIVELCUENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsUSUGRANull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.USUGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetUSUGRANull()
            Me(Me.tableUSUARIO.USUGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableUSUARIO.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.NOMBREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNOMBRENull()
            Me(Me.tableUSUARIO.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsAPELLIDONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.APELLIDOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetAPELLIDONull()
            Me(Me.tableUSUARIO.APELLIDOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.DIRECCIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableUSUARIO.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTELEFONONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.TELEFONOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTELEFONONull()
            Me(Me.tableUSUARIO.TELEFONOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONTACTONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.CONTACTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONTACTONull()
            Me(Me.tableUSUARIO.CONTACTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTELEFONOCONTACTONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.TELEFONOCONTACTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTELEFONOCONTACTONull()
            Me(Me.tableUSUARIO.TELEFONOCONTACTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMAGENNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.IMAGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMAGENNull()
            Me(Me.tableUSUARIO.IMAGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNIVELUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.NIVELUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNIVELUSUARIONull()
            Me(Me.tableUSUARIO.NIVELUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSEXONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.SEXOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSEXONull()
            Me(Me.tableUSUARIO.SEXOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINICIOCOMPRASNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.INICIOCOMPRASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINICIOCOMPRASNull()
            Me(Me.tableUSUARIO.INICIOCOMPRASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsINICIOVENTASNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.INICIOVENTASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetINICIOVENTASNull()
            Me(Me.tableUSUARIO.INICIOVENTASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCELULARNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.CELULARColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCELULARNull()
            Me(Me.tableUSUARIO.CELULARColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsEMAILNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.EMAILColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetEMAILNull()
            Me(Me.tableUSUARIO.EMAILColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCIUDADNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.CODCIUDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCIUDADNull()
            Me(Me.tableUSUARIO.CODCIUDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHANACNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.FECHANACColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHANACNull()
            Me(Me.tableUSUARIO.FECHANACColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCEDULANull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.CEDULAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCEDULANull()
            Me(Me.tableUSUARIO.CEDULAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODGRUPONull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.CODGRUPOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODGRUPONull()
            Me(Me.tableUSUARIO.CODGRUPOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAPASSWNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.FECHAPASSWColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAPASSWNull()
            Me(Me.tableUSUARIO.FECHAPASSWColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMSISTEMASNull() As Boolean
            Return Me.IsNull(Me.tableUSUARIO.NUMSISTEMASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMSISTEMASNull()
            Me(Me.tableUSUARIO.NUMSISTEMASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESORows() As CAJAINGRESORow()
            If (Me.Table.ChildRelations("FK_CAJAINGR_RELATIONS_USUARIO") Is Nothing) Then
                Return New CAJAINGRESORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGR_RELATIONS_USUARIO")),CAJAINGRESORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTIPOEGRESORows() As TIPOEGRESORow()
            If (Me.Table.ChildRelations("FK_TIPOEGRE_RELATIONS_USUARIO") Is Nothing) Then
                Return New TIPOEGRESORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TIPOEGRE_RELATIONS_USUARIO")),TIPOEGRESORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetMONEDARows() As MONEDARow()
            If (Me.Table.ChildRelations("FK_MONEDA_RELATIONS_USUARIO") Is Nothing) Then
                Return New MONEDARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_MONEDA_RELATIONS_USUARIO")),MONEDARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCOTIZACIONRows() As COTIZACIONRow()
            If (Me.Table.ChildRelations("FK_COTIZACI_RELATIONS_USUARIO") Is Nothing) Then
                Return New COTIZACIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_COTIZACI_RELATIONS_USUARIO")),COTIZACIONRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetTIPOCOBRORows() As TIPOCOBRORow()
            If (Me.Table.ChildRelations("FK_TIPOCOBR_RELATIONS_USUARIO") Is Nothing) Then
                Return New TIPOCOBRORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_TIPOCOBR_RELATIONS_USUARIO")),TIPOCOBRORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJACIERRERows() As CAJACIERRERow()
            If (Me.Table.ChildRelations("FK_CAJACIERRE_USUARIO") Is Nothing) Then
                Return New CAJACIERRERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJACIERRE_USUARIO")),CAJACIERRERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJARows() As CAJARow()
            If (Me.Table.ChildRelations("FK_CAJA_RELATIONS_USUARIO") Is Nothing) Then
                Return New CAJARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJA_RELATIONS_USUARIO")),CAJARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSRows() As CAJAINGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO") Is Nothing) Then
                Return New CAJAINGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO")),CAJAINGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURACAJARows() As APERTURACAJARow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO1") Is Nothing) Then
                Return New APERTURACAJARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO1")),APERTURACAJARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURADETALLERows() As APERTURADETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO2") Is Nothing) Then
                Return New APERTURADETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO2")),APERTURADETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSDETALLERows() As CAJAINGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO3") Is Nothing) Then
                Return New CAJAINGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO3")),CAJAINGRESOSDETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSRows() As CAJAEGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO") Is Nothing) Then
                Return New CAJAEGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO")),CAJAEGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSDETALLERows() As CAJAEGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO1") Is Nothing) Then
                Return New CAJAEGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO1")),CAJAEGRESOSDETALLERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJAINGRESORow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJAINGRESO As CAJAINGRESODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJAINGRESO = CType(Me.Table,CAJAINGRESODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODINGRESO() As Decimal
            Get
                Return CType(Me(Me.tableCAJAINGRESO.CODINGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CODINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOINGRESO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.TIPOINGRESOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOINGRESO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.TIPOINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VUELTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.VUELTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VUELTO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.VUELTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.FECINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECINGRESO' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.FECINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESO.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'CAJAINGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESO.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGR_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGR_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO1")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_INGRESO_MONEDA1")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_INGRESO_MONEDA1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA1")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCAJAINGRESO.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableCAJAINGRESO.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJAINGRESO.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJAINGRESO.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableCAJAINGRESO.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableCAJAINGRESO.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJAINGRESO.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJAINGRESO.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJAINGRESO.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.TIPOINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOINGRESONull()
            Me(Me.tableCAJAINGRESO.TIPOINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableCAJAINGRESO.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableCAJAINGRESO.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVUELTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.VUELTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVUELTONull()
            Me(Me.tableCAJAINGRESO.VUELTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.FECINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECINGRESONull()
            Me(Me.tableCAJAINGRESO.FECINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESO.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableCAJAINGRESO.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIPOEGRESORow
        Inherits Global.System.Data.DataRow
        
        Private tableTIPOEGRESO As TIPOEGRESODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIPOEGRESO = CType(Me.Table,TIPOEGRESODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Return CType(Me(Me.tableTIPOEGRESO.CODTIPOEGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableTIPOEGRESO.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTIPOEGRESO.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'TIPOEGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOEGRESO.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTIPOEGRESO.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'TIPOEGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOEGRESO.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMTIPOEGRESO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIPOEGRESO.NUMTIPOEGRESOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMTIPOEGRESO' in table 'TIPOEGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOEGRESO.NUMTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESTIPOEGRESO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIPOEGRESO.DESTIPOEGRESOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESTIPOEGRESO' in table 'TIPOEGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOEGRESO.DESTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIORIDAD() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTIPOEGRESO.PRIORIDADColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIORIDAD' in table 'TIPOEGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOEGRESO.PRIORIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTIPOEGRESO.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'TIPOEGRESO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOEGRESO.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TIPOEGRE_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TIPOEGRE_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableTIPOEGRESO.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableTIPOEGRESO.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableTIPOEGRESO.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableTIPOEGRESO.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableTIPOEGRESO.NUMTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMTIPOEGRESONull()
            Me(Me.tableTIPOEGRESO.NUMTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableTIPOEGRESO.DESTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESTIPOEGRESONull()
            Me(Me.tableTIPOEGRESO.DESTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIORIDADNull() As Boolean
            Return Me.IsNull(Me.tableTIPOEGRESO.PRIORIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIORIDADNull()
            Me(Me.tableTIPOEGRESO.PRIORIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableTIPOEGRESO.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableTIPOEGRESO.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSRows() As CAJAINGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO") Is Nothing) Then
                Return New CAJAINGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO")),CAJAINGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSRows() As CAJAEGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE") Is Nothing) Then
                Return New CAJAEGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE")),CAJAEGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESORows() As CAJAINGRESORow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO1") Is Nothing) Then
                Return New CAJAINGRESORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO1")),CAJAINGRESORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURACAJARows() As APERTURACAJARow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO2") Is Nothing) Then
                Return New APERTURACAJARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO2")),APERTURACAJARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURADETALLERows() As APERTURADETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO3") Is Nothing) Then
                Return New APERTURADETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO3")),APERTURADETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSDETALLERows() As CAJAINGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO4") Is Nothing) Then
                Return New CAJAINGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_TIPOEGRESO4")),CAJAINGRESOSDETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSDETALLERows() As CAJAEGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE1") Is Nothing) Then
                Return New CAJAEGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE1")),CAJAEGRESOSDETALLERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJAEGRESOSRow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJAEGRESOS As CAJAEGRESOSDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJAEGRESOS = CType(Me.Table,CAJAEGRESOSDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEGRESO() As Decimal
            Get
                Return CType(Me(Me.tableCAJAEGRESOS.CODEGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPAGANZAS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODPAGANZASColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPAGANZAS' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODPAGANZASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMEROCUOTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.NUMEROCUOTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMEROCUOTA' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.NUMEROCUOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODCOMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCOMPRA' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMOVIMIENTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.FECHAMOVIMIENTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAMOVIMIENTO' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.FECHAMOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOS.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'CAJAEGRESOS' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOS.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRESOS_MONEDA")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRESOS_MONEDA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOCOBRORow() As TIPOCOBRORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_EGRESO_TIPOCOBRO")),TIPOCOBRORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_EGRESO_TIPOCOBRO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRESOS_CAJA")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRESOS_CAJA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableCAJAEGRESOS.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJAEGRESOS.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJAEGRESOS.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPAGANZASNull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODPAGANZASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPAGANZASNull()
            Me(Me.tableCAJAEGRESOS.CODPAGANZASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMEROCUOTANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.NUMEROCUOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMEROCUOTANull()
            Me(Me.tableCAJAEGRESOS.NUMEROCUOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCOMPRANull()
            Me(Me.tableCAJAEGRESOS.CODCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableCAJAEGRESOS.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableCAJAEGRESOS.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCAJAEGRESOS.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJAEGRESOS.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJAEGRESOS.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAMOVIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.FECHAMOVIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAMOVIMIENTONull()
            Me(Me.tableCAJAEGRESOS.FECHAMOVIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJAEGRESOS.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableCAJAEGRESOS.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableCAJAEGRESOS.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOS.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableCAJAEGRESOS.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class MONEDARow
        Inherits Global.System.Data.DataRow
        
        Private tableMONEDA As MONEDADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableMONEDA = CType(Me.Table,MONEDADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Return CType(Me(Me.tableMONEDA.CODMONEDAColumn),Decimal)
            End Get
            Set
                Me(Me.tableMONEDA.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.NUMMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMMONEDA' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.NUMMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.DESMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMONEDA' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.DESMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIMBOLO() As String
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.SIMBOLOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIMBOLO' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.SIMBOLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIORIDAD() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.PRIORIDADColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIORIDAD' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.PRIORIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DECIMALES() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.DECIMALESColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DECIMALES' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.DECIMALESColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMAGEN() As String
            Get
                Try 
                    Return CType(Me(Me.tableMONEDA.IMAGENColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMAGEN' in table 'MONEDA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableMONEDA.IMAGENColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_MONEDA_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_MONEDA_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableMONEDA.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableMONEDA.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMMONEDANull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.NUMMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMMONEDANull()
            Me(Me.tableMONEDA.NUMMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMONEDANull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.DESMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMONEDANull()
            Me(Me.tableMONEDA.DESMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIMBOLONull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.SIMBOLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIMBOLONull()
            Me(Me.tableMONEDA.SIMBOLOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableMONEDA.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIORIDADNull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.PRIORIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIORIDADNull()
            Me(Me.tableMONEDA.PRIORIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDECIMALESNull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.DECIMALESColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDECIMALESNull()
            Me(Me.tableMONEDA.DECIMALESColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMAGENNull() As Boolean
            Return Me.IsNull(Me.tableMONEDA.IMAGENColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMAGENNull()
            Me(Me.tableMONEDA.IMAGENColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSRows() As CAJAINGRESOSRow()
            If (Me.Table.ChildRelations("FK_INGRESO_MONEDA") Is Nothing) Then
                Return New CAJAINGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_INGRESO_MONEDA")),CAJAINGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJACHEQUESRECIBIDOSRows() As CAJACHEQUESRECIBIDOSRow()
            If (Me.Table.ChildRelations("FK_CAJACHEQUESRECIBIDOS_MONEDA") Is Nothing) Then
                Return New CAJACHEQUESRECIBIDOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJACHEQUESRECIBIDOS_MONEDA")),CAJACHEQUESRECIBIDOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSRows() As CAJAEGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAEGRESOS_MONEDA") Is Nothing) Then
                Return New CAJAEGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRESOS_MONEDA")),CAJAEGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCOTIZACIONRows() As COTIZACIONRow()
            If (Me.Table.ChildRelations("FK_COTIZACI_RELATIONS_MONEDA") Is Nothing) Then
                Return New COTIZACIONRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_COTIZACI_RELATIONS_MONEDA")),COTIZACIONRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJASALDORows() As CAJASALDORow()
            If (Me.Table.ChildRelations("FK_CAJASALDO_MONEDA") Is Nothing) Then
                Return New CAJASALDORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJASALDO_MONEDA")),CAJASALDORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESORows() As CAJAINGRESORow()
            If (Me.Table.ChildRelations("FK_INGRESO_MONEDA1") Is Nothing) Then
                Return New CAJAINGRESORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_INGRESO_MONEDA1")),CAJAINGRESORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURACAJARows() As APERTURACAJARow()
            If (Me.Table.ChildRelations("FK_INGRESO_MONEDA2") Is Nothing) Then
                Return New APERTURACAJARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_INGRESO_MONEDA2")),APERTURACAJARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURADETALLERows() As APERTURADETALLERow()
            If (Me.Table.ChildRelations("FK_INGRESO_MONEDA3") Is Nothing) Then
                Return New APERTURADETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_INGRESO_MONEDA3")),APERTURADETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSDETALLERows() As CAJAINGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_INGRESO_MONEDA4") Is Nothing) Then
                Return New CAJAINGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_INGRESO_MONEDA4")),CAJAINGRESOSDETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSDETALLERows() As CAJAEGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAEGRESOS_MONEDA1") Is Nothing) Then
                Return New CAJAEGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRESOS_MONEDA1")),CAJAEGRESOSDETALLERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class COTIZACIONRow
        Inherits Global.System.Data.DataRow
        
        Private tableCOTIZACION As COTIZACIONDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCOTIZACION = CType(Me.Table,COTIZACIONDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMOVIMIENTO() As Date
            Get
                Return CType(Me(Me.tableCOTIZACION.FECHAMOVIMIENTOColumn),Date)
            End Get
            Set
                Me(Me.tableCOTIZACION.FECHAMOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Return CType(Me(Me.tableCOTIZACION.CODMONEDAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOTIZACION.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOTIZACION.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'COTIZACION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOTIZACION.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FACTORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOTIZACION.FACTORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FACTORCOBRO' in table 'COTIZACION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOTIZACION.FACTORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Return CType(Me(Me.tableCOTIZACION.CODEMPRESAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCOTIZACION.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FACTORVENTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCOTIZACION.FACTORVENTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FACTORVENTA' in table 'COTIZACION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOTIZACION.FACTORVENTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCOTIZACION.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'COTIZACION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOTIZACION.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOTIZACION.DESMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMONEDA' in table 'COTIZACION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOTIZACION.DESMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SIMBOLO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCOTIZACION.SIMBOLOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SIMBOLO' in table 'COTIZACION' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCOTIZACION.SIMBOLOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_COTIZACI_RELATIONS_MONEDA")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_COTIZACI_RELATIONS_MONEDA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_COTIZACI_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_COTIZACI_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCOTIZACION.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCOTIZACION.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFACTORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCOTIZACION.FACTORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFACTORCOBRONull()
            Me(Me.tableCOTIZACION.FACTORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFACTORVENTANull() As Boolean
            Return Me.IsNull(Me.tableCOTIZACION.FACTORVENTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFACTORVENTANull()
            Me(Me.tableCOTIZACION.FACTORVENTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCOTIZACION.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCOTIZACION.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCOTIZACION.DESMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMONEDANull()
            Me(Me.tableCOTIZACION.DESMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSIMBOLONull() As Boolean
            Return Me.IsNull(Me.tableCOTIZACION.SIMBOLOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSIMBOLONull()
            Me(Me.tableCOTIZACION.SIMBOLOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIPOCOBRORow
        Inherits Global.System.Data.DataRow
        
        Private tableTIPOCOBRO As TIPOCOBRODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIPOCOBRO = CType(Me.Table,TIPOCOBRODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOBRO() As Decimal
            Get
                Return CType(Me(Me.tableTIPOCOBRO.CODCOBROColumn),Decimal)
            End Get
            Set
                Me(Me.tableTIPOCOBRO.CODCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTIPOCOBRO.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'TIPOCOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOCOBRO.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableTIPOCOBRO.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'TIPOCOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOCOBRO.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCOBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIPOCOBRO.NUMCOBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCOBRO' in table 'TIPOCOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOCOBRO.NUMCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESCOBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIPOCOBRO.DESCOBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCOBRO' in table 'TIPOCOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOCOBRO.DESCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PRIORIDAD() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableTIPOCOBRO.PRIORIDADColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PRIORIDAD' in table 'TIPOCOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOCOBRO.PRIORIDADColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTIPOCOBRO.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'TIPOCOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOCOBRO.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_TIPOCOBR_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_TIPOCOBR_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableTIPOCOBRO.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableTIPOCOBRO.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableTIPOCOBRO.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableTIPOCOBRO.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCOBRONull() As Boolean
            Return Me.IsNull(Me.tableTIPOCOBRO.NUMCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCOBRONull()
            Me(Me.tableTIPOCOBRO.NUMCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESCOBRONull() As Boolean
            Return Me.IsNull(Me.tableTIPOCOBRO.DESCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESCOBRONull()
            Me(Me.tableTIPOCOBRO.DESCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPRIORIDADNull() As Boolean
            Return Me.IsNull(Me.tableTIPOCOBRO.PRIORIDADColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPRIORIDADNull()
            Me(Me.tableTIPOCOBRO.PRIORIDADColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableTIPOCOBRO.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableTIPOCOBRO.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSRows() As CAJAINGRESOSRow()
            If (Me.Table.ChildRelations("FK_INGRESO_TIPOCOBRO") Is Nothing) Then
                Return New CAJAINGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_INGRESO_TIPOCOBRO")),CAJAINGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSRows() As CAJAEGRESOSRow()
            If (Me.Table.ChildRelations("FK_EGRESO_TIPOCOBRO") Is Nothing) Then
                Return New CAJAEGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_EGRESO_TIPOCOBRO")),CAJAEGRESOSRow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJACIERRERow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJACIERRE As CAJACIERREDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJACIERRE = CType(Me.Table,CAJACIERREDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCIERRE() As Decimal
            Get
                Return CType(Me(Me.tableCAJACIERRE.NUMCIERREColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJACIERRE.NUMCIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOBRADOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.CODCOBRADORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCOBRADOR' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.CODCOBRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECAPERTURA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.FECAPERTURAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECAPERTURA' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.FECAPERTURAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECCIERRE() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.FECCIERREColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECCIERRE' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.FECCIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJACIERRE.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJACIERRE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJACIERRE.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJACIERRE_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJACIERRE_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJACIERRE_CAJA")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJACIERRE_CAJA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableCAJACIERRE.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCOBRADORNull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.CODCOBRADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCOBRADORNull()
            Me(Me.tableCAJACIERRE.CODCOBRADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJACIERRE.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJACIERRE.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECAPERTURANull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.FECAPERTURAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECAPERTURANull()
            Me(Me.tableCAJACIERRE.FECAPERTURAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECCIERRENull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.FECCIERREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECCIERRENull()
            Me(Me.tableCAJACIERRE.FECCIERREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJACIERRE.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJACIERRE.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJASALDORows() As CAJASALDORow()
            If (Me.Table.ChildRelations("FK_CAJASALDO_CAJACIERRE") Is Nothing) Then
                Return New CAJASALDORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJASALDO_CAJACIERRE")),CAJASALDORow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJASALDORow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJASALDO As CAJASALDODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJASALDO = CType(Me.Table,CAJASALDODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCIERRE() As Decimal
            Get
                Return CType(Me(Me.tableCAJASALDO.NUMCIERREColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJASALDO.NUMCIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Return CType(Me(Me.tableCAJASALDO.CODMONEDAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJASALDO.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJASALDO.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJASALDO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJASALDO.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJASALDO.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJASALDO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJASALDO.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALDOINICIAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJASALDO.SALDOINICIALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALDOINICIAL' in table 'CAJASALDO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJASALDO.SALDOINICIALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property SALDOCIERRE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJASALDO.SALDOCIERREColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'SALDOCIERRE' in table 'CAJASALDO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJASALDO.SALDOCIERREColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Return CType(Me(Me.tableCAJASALDO.CODFORCOBROColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJASALDO.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJASALDO.DESMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMONEDA' in table 'CAJASALDO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJASALDO.DESMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFORCOBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJASALDO.DESFORCOBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFORCOBRO' in table 'CAJASALDO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJASALDO.DESFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJACIERRERow() As CAJACIERRERow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJASALDO_CAJACIERRE")),CAJACIERRERow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJASALDO_CAJACIERRE"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJASALDO_MONEDA")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJASALDO_MONEDA"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJASALDO.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJASALDO.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJASALDO.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJASALDO.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALDOINICIALNull() As Boolean
            Return Me.IsNull(Me.tableCAJASALDO.SALDOINICIALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALDOINICIALNull()
            Me(Me.tableCAJASALDO.SALDOINICIALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsSALDOCIERRENull() As Boolean
            Return Me.IsNull(Me.tableCAJASALDO.SALDOCIERREColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetSALDOCIERRENull()
            Me(Me.tableCAJASALDO.SALDOCIERREColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJASALDO.DESMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMONEDANull()
            Me(Me.tableCAJASALDO.DESMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJASALDO.DESFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFORCOBRONull()
            Me(Me.tableCAJASALDO.DESFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJARow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJA As CAJADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJA = CType(Me.Table,CAJADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Return CType(Me(Me.tableCAJA.NUMCAJAColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJA.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMEROCAJA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJA.NUMEROCAJAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMEROCAJA' in table 'CAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJA.NUMEROCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODSUCURSAL() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJA.CODSUCURSALColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODSUCURSAL' in table 'CAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJA.CODSUCURSALColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOBRADOR() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJA.CODCOBRADORColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCOBRADOR' in table 'CAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJA.CODCOBRADORColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJA.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJA.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJA.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJA.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJA.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJA.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJA_RELATIONS_USUARIO")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJA_RELATIONS_USUARIO"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMEROCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJA.NUMEROCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMEROCAJANull()
            Me(Me.tableCAJA.NUMEROCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODSUCURSALNull() As Boolean
            Return Me.IsNull(Me.tableCAJA.CODSUCURSALColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODSUCURSALNull()
            Me(Me.tableCAJA.CODSUCURSALColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCOBRADORNull() As Boolean
            Return Me.IsNull(Me.tableCAJA.CODCOBRADORColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCOBRADORNull()
            Me(Me.tableCAJA.CODCOBRADORColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJA.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJA.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJA.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJA.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJA.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJA.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSRows() As CAJAINGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA") Is Nothing) Then
                Return New CAJAINGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA")),CAJAINGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESORows() As CAJAINGRESORow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA1") Is Nothing) Then
                Return New CAJAINGRESORow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA1")),CAJAINGRESORow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSRows() As CAJAEGRESOSRow()
            If (Me.Table.ChildRelations("FK_CAJAEGRESOS_CAJA") Is Nothing) Then
                Return New CAJAEGRESOSRow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRESOS_CAJA")),CAJAEGRESOSRow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJACIERRERows() As CAJACIERRERow()
            If (Me.Table.ChildRelations("FK_CAJACIERRE_CAJA") Is Nothing) Then
                Return New CAJACIERRERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJACIERRE_CAJA")),CAJACIERRERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURACAJARows() As APERTURACAJARow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA2") Is Nothing) Then
                Return New APERTURACAJARow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA2")),APERTURACAJARow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetAPERTURADETALLERows() As APERTURADETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA3") Is Nothing) Then
                Return New APERTURADETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA3")),APERTURADETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAINGRESOSDETALLERows() As CAJAINGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA4") Is Nothing) Then
                Return New CAJAINGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAINGRESOS_CAJA4")),CAJAINGRESOSDETALLERow())
            End If
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function GetCAJAEGRESOSDETALLERows() As CAJAEGRESOSDETALLERow()
            If (Me.Table.ChildRelations("FK_CAJAEGRESOS_CAJA1") Is Nothing) Then
                Return New CAJAEGRESOSDETALLERow(-1) {}
            Else
                Return CType(MyBase.GetChildRows(Me.Table.ChildRelations("FK_CAJAEGRESOS_CAJA1")),CAJAEGRESOSDETALLERow())
            End If
        End Function
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class APERTURACAJARow
        Inherits Global.System.Data.DataRow
        
        Private tableAPERTURACAJA As APERTURACAJADataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAPERTURACAJA = CType(Me.Table,APERTURACAJADataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODINGRESO() As Decimal
            Get
                Return CType(Me(Me.tableAPERTURACAJA.CODINGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CODINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOINGRESO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.TIPOINGRESOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOINGRESO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.TIPOINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VUELTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.VUELTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VUELTO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.VUELTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.FECINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECINGRESO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.FECINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURACAJA.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'APERTURACAJA' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURACAJA.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA2")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO1")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO2")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_INGRESO_MONEDA2")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_INGRESO_MONEDA2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOINGRESONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.TIPOINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOINGRESONull()
            Me(Me.tableAPERTURACAJA.TIPOINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableAPERTURACAJA.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableAPERTURACAJA.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableAPERTURACAJA.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableAPERTURACAJA.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableAPERTURACAJA.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableAPERTURACAJA.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableAPERTURACAJA.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableAPERTURACAJA.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableAPERTURACAJA.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVUELTONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.VUELTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVUELTONull()
            Me(Me.tableAPERTURACAJA.VUELTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECINGRESONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.FECINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECINGRESONull()
            Me(Me.tableAPERTURACAJA.FECINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableAPERTURACAJA.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableAPERTURACAJA.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURACAJA.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableAPERTURACAJA.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class APERTURADETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableAPERTURADETALLE As APERTURADETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableAPERTURADETALLE = CType(Me.Table,APERTURADETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODINGRESO() As Decimal
            Get
                Return CType(Me(Me.tableAPERTURADETALLE.CODINGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CODINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOINGRESO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.TIPOINGRESOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOINGRESO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.TIPOINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VUELTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.VUELTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VUELTO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.VUELTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.FECINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECINGRESO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.FECINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESUSUARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.DESUSUARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESUSUARIO' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.DESUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableAPERTURADETALLE.DESMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMONEDA' in table 'APERTURADETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableAPERTURADETALLE.DESMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA3")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA3"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO2")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO2"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO3")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO3"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_INGRESO_MONEDA3")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_INGRESO_MONEDA3"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOINGRESONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.TIPOINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOINGRESONull()
            Me(Me.tableAPERTURADETALLE.TIPOINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableAPERTURADETALLE.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableAPERTURADETALLE.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableAPERTURADETALLE.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableAPERTURADETALLE.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableAPERTURADETALLE.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableAPERTURADETALLE.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableAPERTURADETALLE.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableAPERTURADETALLE.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableAPERTURADETALLE.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVUELTONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.VUELTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVUELTONull()
            Me(Me.tableAPERTURADETALLE.VUELTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECINGRESONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.FECINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECINGRESONull()
            Me(Me.tableAPERTURADETALLE.FECINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableAPERTURADETALLE.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableAPERTURADETALLE.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableAPERTURADETALLE.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.DESUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESUSUARIONull()
            Me(Me.tableAPERTURADETALLE.DESUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMONEDANull() As Boolean
            Return Me.IsNull(Me.tableAPERTURADETALLE.DESMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMONEDANull()
            Me(Me.tableAPERTURADETALLE.DESMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJAINGRESOSDETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJAINGRESOSDETALLE As CAJAINGRESOSDETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJAINGRESOSDETALLE = CType(Me.Table,CAJAINGRESOSDETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODINGRESO() As Decimal
            Get
                Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CODINGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CODINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOINGRESO() As Byte
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.TIPOINGRESOColumn),Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPOINGRESO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.TIPOINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property VUELTO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.VUELTOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'VUELTO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.VUELTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECINGRESO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.FECINGRESOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECINGRESO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.FECINGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.DESMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMONEDA' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.DESMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESUSUARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAINGRESOSDETALLE.DESUSUARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESUSUARIO' in table 'CAJAINGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAINGRESOSDETALLE.DESUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA4")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_CAJA4"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO3")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_RELATIONS_USUARIO3"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO4")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAINGRESOS_TIPOEGRESO4"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_INGRESO_MONEDA4")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_INGRESO_MONEDA4"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsTIPOINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.TIPOINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetTIPOINGRESONull()
            Me(Me.tableCAJAINGRESOSDETALLE.TIPOINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableCAJAINGRESOSDETALLE.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJAINGRESOSDETALLE.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJAINGRESOSDETALLE.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableCAJAINGRESOSDETALLE.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableCAJAINGRESOSDETALLE.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCAJAINGRESOSDETALLE.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJAINGRESOSDETALLE.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJAINGRESOSDETALLE.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableCAJAINGRESOSDETALLE.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsVUELTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.VUELTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetVUELTONull()
            Me(Me.tableCAJAINGRESOSDETALLE.VUELTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECINGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.FECINGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECINGRESONull()
            Me(Me.tableCAJAINGRESOSDETALLE.FECINGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJAINGRESOSDETALLE.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableCAJAINGRESOSDETALLE.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableCAJAINGRESOSDETALLE.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.DESMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMONEDANull()
            Me(Me.tableCAJAINGRESOSDETALLE.DESMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAINGRESOSDETALLE.DESUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESUSUARIONull()
            Me(Me.tableCAJAINGRESOSDETALLE.DESUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class CAJAEGRESOSDETALLERow
        Inherits Global.System.Data.DataRow
        
        Private tableCAJAEGRESOSDETALLE As CAJAEGRESOSDETALLEDataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableCAJAEGRESOSDETALLE = CType(Me.Table,CAJAEGRESOSDETALLEDataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESMONEDA() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.DESMONEDAColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESMONEDA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.DESMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESUSUARIO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.DESUSUARIOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESUSUARIO' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.DESUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEGRESO() As Decimal
            Get
                Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODEGRESOColumn),Decimal)
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODTIPOEGRESO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODTIPOEGRESOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOEGRESO' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODTIPOEGRESOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODUSUARIO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODUSUARIOColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODUSUARIO' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODUSUARIOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODEMPRESA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODEMPRESAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODEMPRESA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODEMPRESAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODPAGANZAS() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODPAGANZASColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODPAGANZAS' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODPAGANZASColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMEROCUOTA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.NUMEROCUOTAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMEROCUOTA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.NUMEROCUOTAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODCOMPRA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODCOMPRAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCOMPRA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODCOMPRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property NUMCAJA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.NUMCAJAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCAJA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.NUMCAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property IMPORTE() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.IMPORTEColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'IMPORTE' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.IMPORTEColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODMONEDA() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODMONEDAColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODMONEDA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODMONEDAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION1() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.COTIZACION1Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION1' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.COTIZACION1Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COTIZACION2() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.COTIZACION2Column),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COTIZACION2' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.COTIZACION2Column) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECHAMOVIMIENTO() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.FECHAMOVIMIENTOColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAMOVIMIENTO' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.FECHAMOVIMIENTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property OBSERVACION() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.OBSERVACIONColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'OBSERVACION' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.OBSERVACIONColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CONCEPTO() As String
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CONCEPTOColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CONCEPTO' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CONCEPTOColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Decimal
            Get
                Try 
                    Return CType(Me(Me.tableCAJAEGRESOSDETALLE.CODFORCOBROColumn),Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODFORCOBRO' in table 'CAJAEGRESOSDETALLE' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableCAJAEGRESOSDETALLE.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property TIPOEGRESORow() As TIPOEGRESORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE1")),TIPOEGRESORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRE_RELATIONS_TIPOEGRE1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJARow() As CAJARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRESOS_CAJA1")),CAJARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRESOS_CAJA1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property MONEDARow() As MONEDARow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRESOS_MONEDA1")),MONEDARow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRESOS_MONEDA1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property USUARIORowParent() As USUARIORow
            Get
                Return CType(Me.GetParentRow(Me.Table.ParentRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO1")),USUARIORow)
            End Get
            Set
                Me.SetParentRow(value, Me.Table.ParentRelations("FK_CAJAEGRESOS_RELATIONS_USUARIO1"))
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.DESMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESMONEDANull()
            Me(Me.tableCAJAEGRESOSDETALLE.DESMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.DESUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESUSUARIONull()
            Me(Me.tableCAJAEGRESOSDETALLE.DESUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODTIPOEGRESONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODTIPOEGRESOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODTIPOEGRESONull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODTIPOEGRESOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODUSUARIONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODUSUARIOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODUSUARIONull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODUSUARIOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODEMPRESANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODEMPRESAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODEMPRESANull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODEMPRESAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODPAGANZASNull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODPAGANZASColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODPAGANZASNull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODPAGANZASColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMEROCUOTANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.NUMEROCUOTAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMEROCUOTANull()
            Me(Me.tableCAJAEGRESOSDETALLE.NUMEROCUOTAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODCOMPRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODCOMPRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODCOMPRANull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODCOMPRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsNUMCAJANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.NUMCAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetNUMCAJANull()
            Me(Me.tableCAJAEGRESOSDETALLE.NUMCAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsIMPORTENull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.IMPORTEColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetIMPORTENull()
            Me(Me.tableCAJAEGRESOSDETALLE.IMPORTEColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODMONEDANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODMONEDAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODMONEDANull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODMONEDAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION1Null() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.COTIZACION1Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION1Null()
            Me(Me.tableCAJAEGRESOSDETALLE.COTIZACION1Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOTIZACION2Null() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.COTIZACION2Column)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOTIZACION2Null()
            Me(Me.tableCAJAEGRESOSDETALLE.COTIZACION2Column) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECHAMOVIMIENTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.FECHAMOVIMIENTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECHAMOVIMIENTONull()
            Me(Me.tableCAJAEGRESOSDETALLE.FECHAMOVIMIENTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableCAJAEGRESOSDETALLE.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsOBSERVACIONNull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.OBSERVACIONColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetOBSERVACIONNull()
            Me(Me.tableCAJAEGRESOSDETALLE.OBSERVACIONColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCONCEPTONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CONCEPTOColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCONCEPTONull()
            Me(Me.tableCAJAEGRESOSDETALLE.CONCEPTOColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCODFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableCAJAEGRESOSDETALLE.CODFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCODFORCOBRONull()
            Me(Me.tableCAJAEGRESOSDETALLE.CODFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class TIPOFORMACOBRORow
        Inherits Global.System.Data.DataRow
        
        Private tableTIPOFORMACOBRO As TIPOFORMACOBRODataTable
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableTIPOFORMACOBRO = CType(Me.Table,TIPOFORMACOBRODataTable)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CODFORCOBRO() As Byte
            Get
                Return CType(Me(Me.tableTIPOFORMACOBRO.CODFORCOBROColumn),Byte)
            End Get
            Set
                Me(Me.tableTIPOFORMACOBRO.CODFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property DESFORCOBRO() As String
            Get
                Try 
                    Return CType(Me(Me.tableTIPOFORMACOBRO.DESFORCOBROColumn),String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESFORCOBRO' in table 'TIPOFORMACOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOFORMACOBRO.DESFORCOBROColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property CAJA() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTIPOFORMACOBRO.CAJAColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CAJA' in table 'TIPOFORMACOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOFORMACOBRO.CAJAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property FECGRA() As Date
            Get
                Try 
                    Return CType(Me(Me.tableTIPOFORMACOBRO.FECGRAColumn),Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECGRA' in table 'TIPOFORMACOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOFORMACOBRO.FECGRAColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property COBROS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTIPOFORMACOBRO.COBROSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'COBROS' in table 'TIPOFORMACOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOFORMACOBRO.COBROSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property PAGOS() As Boolean
            Get
                Try 
                    Return CType(Me(Me.tableTIPOFORMACOBRO.PAGOSColumn),Boolean)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PAGOS' in table 'TIPOFORMACOBRO' is DBNull.", e)
                End Try
            End Get
            Set
                Me(Me.tableTIPOFORMACOBRO.PAGOSColumn) = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsDESFORCOBRONull() As Boolean
            Return Me.IsNull(Me.tableTIPOFORMACOBRO.DESFORCOBROColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetDESFORCOBRONull()
            Me(Me.tableTIPOFORMACOBRO.DESFORCOBROColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCAJANull() As Boolean
            Return Me.IsNull(Me.tableTIPOFORMACOBRO.CAJAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCAJANull()
            Me(Me.tableTIPOFORMACOBRO.CAJAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsFECGRANull() As Boolean
            Return Me.IsNull(Me.tableTIPOFORMACOBRO.FECGRAColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetFECGRANull()
            Me(Me.tableTIPOFORMACOBRO.FECGRAColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsCOBROSNull() As Boolean
            Return Me.IsNull(Me.tableTIPOFORMACOBRO.COBROSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetCOBROSNull()
            Me(Me.tableTIPOFORMACOBRO.COBROSColumn) = Global.System.Convert.DBNull
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function IsPAGOSNull() As Boolean
            Return Me.IsNull(Me.tableTIPOFORMACOBRO.PAGOSColumn)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub SetPAGOSNull()
            Me(Me.tableTIPOFORMACOBRO.PAGOSColumn) = Global.System.Convert.DBNull
        End Sub
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJAINGRESOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJAINGRESOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJAINGRESOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJAINGRESOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJACHEQUESRECIBIDOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJACHEQUESRECIBIDOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJACHEQUESRECIBIDOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJACHEQUESRECIBIDOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class USUARIORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As USUARIORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As USUARIORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As USUARIORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJAINGRESORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJAINGRESORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJAINGRESORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJAINGRESORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TIPOEGRESORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIPOEGRESORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TIPOEGRESORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TIPOEGRESORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJAEGRESOSRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJAEGRESOSRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJAEGRESOSRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJAEGRESOSRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class MONEDARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As MONEDARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As MONEDARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As MONEDARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class COTIZACIONRowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As COTIZACIONRow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As COTIZACIONRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As COTIZACIONRow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TIPOCOBRORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIPOCOBRORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TIPOCOBRORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TIPOCOBRORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJACIERRERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJACIERRERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJACIERRERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJACIERRERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJASALDORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJASALDORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJASALDORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJASALDORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class APERTURACAJARowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As APERTURACAJARow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As APERTURACAJARow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As APERTURACAJARow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class APERTURADETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As APERTURADETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As APERTURADETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As APERTURADETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJAINGRESOSDETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJAINGRESOSDETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJAINGRESOSDETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJAINGRESOSDETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class CAJAEGRESOSDETALLERowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As CAJAEGRESOSDETALLERow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As CAJAEGRESOSDETALLERow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As CAJAEGRESOSDETALLERow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
    
    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Class TIPOFORMACOBRORowChangeEvent
        Inherits Global.System.EventArgs
        
        Private eventRow As TIPOFORMACOBRORow
        
        Private eventAction As Global.System.Data.DataRowAction
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New(ByVal row As TIPOFORMACOBRORow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New
            Me.eventRow = row
            Me.eventAction = action
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Row() As TIPOFORMACOBRORow
            Get
                Return Me.eventRow
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DsCajaTableAdapters
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJAINGRESOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJAINGRESOS"
            tableMapping.ColumnMappings.Add("CODINGRESO", "CODINGRESO")
            tableMapping.ColumnMappings.Add("TIPOINGRESO", "TIPOINGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("VUELTO", "VUELTO")
            tableMapping.ColumnMappings.Add("FECINGRESO", "FECINGRESO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJAINGRESOS] WHERE (([CODINGRESO] = @Original_CODINGRESO) AND ((@Is"& _ 
                "Null_TIPOINGRESO = 1 AND [TIPOINGRESO] IS NULL) OR ([TIPOINGRESO] = @Original_TI"& _ 
                "POINGRESO)) AND ((@IsNull_CODTIPOEGRESO = 1 AND [CODTIPOEGRESO] IS NULL) OR ([CO"& _ 
                "DTIPOEGRESO] = @Original_CODTIPOEGRESO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUS"& _ 
                "UARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRE"& _ 
                "SA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ("& _ 
                "(@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUMCAJA] = @Original_NUMCAJA)) "& _ 
                "AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCEPTO] = @Original_CO"& _ 
                "NCEPTO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = "& _ 
                "@Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NULL) O"& _ 
                "R ([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND [CO"& _ 
                "TIZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNull_IM"& _ 
                "PORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = @Original_IMPORTE)) AND ((@IsNu"& _ 
                "ll_VUELTO = 1 AND [VUELTO] IS NULL) OR ([VUELTO] = @Original_VUELTO)) AND ((@IsN"& _ 
                "ull_FECINGRESO = 1 AND [FECINGRESO] IS NULL) OR ([FECINGRESO] = @Original_FECING"& _ 
                "RESO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_F"& _ 
                "ECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSERVACION] IS NULL) OR ([OBSERVACIO"& _ 
                "N] = @Original_OBSERVACION)) AND ((@IsNull_CODFORCOBRO = 1 AND [CODFORCOBRO] IS "& _ 
                "NULL) OR ([CODFORCOBRO] = @Original_CODFORCOBRO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VUELTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VUELTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJAINGRESOS] ([CODINGRESO], [TIPOINGRESO], [CODTIPOEGRESO], [CODUSU"& _ 
                "ARIO], [CODEMPRESA], [NUMCAJA], [CONCEPTO], [CODMONEDA], [COTIZACION1], [COTIZAC"& _ 
                "ION2], [IMPORTE], [VUELTO], [FECINGRESO], [FECGRA], [OBSERVACION], [CODFORCOBRO]"& _ 
                ") VALUES (@CODINGRESO, @TIPOINGRESO, @CODTIPOEGRESO, @CODUSUARIO, @CODEMPRESA, @"& _ 
                "NUMCAJA, @CONCEPTO, @CODMONEDA, @COTIZACION1, @COTIZACION2, @IMPORTE, @VUELTO, @"& _ 
                "FECINGRESO, @FECGRA, @OBSERVACION, @CODFORCOBRO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODINGRESO, TIPOINGRES"& _ 
                "O, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA, CONCEPTO, CODMONEDA, COTIZACI"& _ 
                "ON1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO "& _ 
                "FROM CAJAINGRESOS WHERE (CODINGRESO = @CODINGRESO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJAINGRESOS] SET [CODINGRESO] = @CODINGRESO, [TIPOINGRESO] = @TIPOINGRES"& _ 
                "O, [CODTIPOEGRESO] = @CODTIPOEGRESO, [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = "& _ 
                "@CODEMPRESA, [NUMCAJA] = @NUMCAJA, [CONCEPTO] = @CONCEPTO, [CODMONEDA] = @CODMON"& _ 
                "EDA, [COTIZACION1] = @COTIZACION1, [COTIZACION2] = @COTIZACION2, [IMPORTE] = @IM"& _ 
                "PORTE, [VUELTO] = @VUELTO, [FECINGRESO] = @FECINGRESO, [FECGRA] = @FECGRA, [OBSE"& _ 
                "RVACION] = @OBSERVACION, [CODFORCOBRO] = @CODFORCOBRO WHERE (([CODINGRESO] = @Or"& _ 
                "iginal_CODINGRESO) AND ((@IsNull_TIPOINGRESO = 1 AND [TIPOINGRESO] IS NULL) OR ("& _ 
                "[TIPOINGRESO] = @Original_TIPOINGRESO)) AND ((@IsNull_CODTIPOEGRESO = 1 AND [COD"& _ 
                "TIPOEGRESO] IS NULL) OR ([CODTIPOEGRESO] = @Original_CODTIPOEGRESO)) AND ((@IsNu"& _ 
                "ll_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUA"& _ 
                "RIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = "& _ 
                "@Original_CODEMPRESA)) AND ((@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUM"& _ 
                "CAJA] = @Original_NUMCAJA)) AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) O"& _ 
                "R ([CONCEPTO] = @Original_CONCEPTO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA]"& _ 
                " IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 "& _ 
                "AND [COTIZACION1] IS NULL) OR ([COTIZACION1] = @Original_COTIZACION1)) AND ((@Is"& _ 
                "Null_COTIZACION2 = 1 AND [COTIZACION2] IS NULL) OR ([COTIZACION2] = @Original_CO"& _ 
                "TIZACION2)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = @Or"& _ 
                "iginal_IMPORTE)) AND ((@IsNull_VUELTO = 1 AND [VUELTO] IS NULL) OR ([VUELTO] = @"& _ 
                "Original_VUELTO)) AND ((@IsNull_FECINGRESO = 1 AND [FECINGRESO] IS NULL) OR ([FE"& _ 
                "CINGRESO] = @Original_FECINGRESO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL"& _ 
                ") OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSERVACI"& _ 
                "ON] IS NULL) OR ([OBSERVACION] = @Original_OBSERVACION)) AND ((@IsNull_CODFORCOB"& _ 
                "RO = 1 AND [CODFORCOBRO] IS NULL) OR ([CODFORCOBRO] = @Original_CODFORCOBRO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA,"& _ 
                " CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FEC"& _ 
                "GRA, OBSERVACION, CODFORCOBRO FROM CAJAINGRESOS WHERE (CODINGRESO = @CODINGRESO)"& _ 
                ""
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VUELTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VUELTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJ"& _ 
                "A, CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      IMPORT"& _ 
                "E, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJAINGRES"& _ 
                "OS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CONCEPTO<>'VENTAS' AND CONCEPTO<>'Apertura de Caja'and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FECINGRESO >="& _ 
                "convert(datetime,@FECHA1,103) AND FECINGRESO <=convert(datetime,@FECHA2,103)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJAINGRESOSDataTable, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As DsCaja.CAJAINGRESOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.CAJAINGRESOSDataTable = New DsCaja.CAJAINGRESOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.CAJAINGRESOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "CAJAINGRESOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODINGRESO,Decimal)
            If (Original_TIPOINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_VUELTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_VUELTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_FECINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_FECINGRESO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODINGRESO,Decimal)
            If (TIPOINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CONCEPTO,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VUELTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(VUELTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FECINGRESO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODINGRESO,Decimal)
            If (TIPOINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CONCEPTO,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VUELTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(VUELTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FECINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CODINGRESO,Decimal)
            If (Original_TIPOINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_VUELTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_VUELTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_FECINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_FECINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA, CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO, Original_CODINGRESO, Original_TIPOINGRESO, Original_CODTIPOEGRESO, Original_CODUSUARIO, Original_CODEMPRESA, Original_NUMCAJA, Original_CONCEPTO, Original_CODMONEDA, Original_COTIZACION1, Original_COTIZACION2, Original_IMPORTE, Original_VUELTO, Original_FECINGRESO, Original_FECGRA, Original_OBSERVACION, Original_CODFORCOBRO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJACHEQUESRECIBIDOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJACHEQUESRECIBIDOS"
            tableMapping.ColumnMappings.Add("CODFORMACOBRO", "CODFORMACOBRO")
            tableMapping.ColumnMappings.Add("CODINGRESO", "CODINGRESO")
            tableMapping.ColumnMappings.Add("CODBANCO", "CODBANCO")
            tableMapping.ColumnMappings.Add("NUMCHEQUE", "NUMCHEQUE")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("CODESTADO", "CODESTADO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("FECHAVCTO", "FECHAVCTO")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("LIBRADOR", "LIBRADOR")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJACHEQUESRECIBIDOS] WHERE (((@IsNull_CODFORMACOBRO = 1 AND [CODFOR"& _ 
                "MACOBRO] IS NULL) OR ([CODFORMACOBRO] = @Original_CODFORMACOBRO)) AND ((@IsNull_"& _ 
                "CODINGRESO = 1 AND [CODINGRESO] IS NULL) OR ([CODINGRESO] = @Original_CODINGRESO"& _ 
                ")) AND ([CODBANCO] = @Original_CODBANCO) AND ([NUMCHEQUE] = @Original_NUMCHEQUE)"& _ 
                " AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = @Origina"& _ 
                "l_CODMONEDA)) AND ((@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) OR ([CODS"& _ 
                "UCURSAL] = @Original_CODSUCURSAL)) AND ((@IsNull_CODESTADO = 1 AND [CODESTADO] I"& _ 
                "S NULL) OR ([CODESTADO] = @Original_CODESTADO)) AND ((@IsNull_CODUSUARIO = 1 AND"& _ 
                " [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_C"& _ 
                "ODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)"& _ 
                ") AND ((@IsNull_FECHAVCTO = 1 AND [FECHAVCTO] IS NULL) OR ([FECHAVCTO] = @Origin"& _ 
                "al_FECHAVCTO)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = "& _ 
                "@Original_IMPORTE)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NULL) OR "& _ 
                "([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND [COTI"& _ 
                "ZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNull_FECG"& _ 
                "RA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_LIB"& _ 
                "RADOR = 1 AND [LIBRADOR] IS NULL) OR ([LIBRADOR] = @Original_LIBRADOR)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORMACOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORMACOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORMACOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODFORMACOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODBANCO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCHEQUE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCHEQUE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAVCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAVCTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LIBRADOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRADOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LIBRADOR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRADOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJACHEQUESRECIBIDOS] ([CODFORMACOBRO], [CODINGRESO], [CODBANCO], [N"& _ 
                "UMCHEQUE], [CODMONEDA], [CODSUCURSAL], [CODESTADO], [CODUSUARIO], [CODEMPRESA], "& _ 
                "[FECHAVCTO], [IMPORTE], [COTIZACION1], [COTIZACION2], [FECGRA], [LIBRADOR]) VALU"& _ 
                "ES (@CODFORMACOBRO, @CODINGRESO, @CODBANCO, @NUMCHEQUE, @CODMONEDA, @CODSUCURSAL"& _ 
                ", @CODESTADO, @CODUSUARIO, @CODEMPRESA, @FECHAVCTO, @IMPORTE, @COTIZACION1, @COT"& _ 
                "IZACION2, @FECGRA, @LIBRADOR);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODFORMACOBRO, CODINGRESO, CODBANCO, NUMC"& _ 
                "HEQUE, CODMONEDA, CODSUCURSAL, CODESTADO, CODUSUARIO, CODEMPRESA, FECHAVCTO, IMP"& _ 
                "ORTE, COTIZACION1, COTIZACION2, FECGRA, LIBRADOR FROM CAJACHEQUESRECIBIDOS WHERE"& _ 
                " (CODBANCO = @CODBANCO) AND (NUMCHEQUE = @NUMCHEQUE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORMACOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODFORMACOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODBANCO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCHEQUE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCHEQUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAVCTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIBRADOR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRADOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJACHEQUESRECIBIDOS] SET [CODFORMACOBRO] = @CODFORMACOBRO, [CODINGRESO] "& _ 
                "= @CODINGRESO, [CODBANCO] = @CODBANCO, [NUMCHEQUE] = @NUMCHEQUE, [CODMONEDA] = @"& _ 
                "CODMONEDA, [CODSUCURSAL] = @CODSUCURSAL, [CODESTADO] = @CODESTADO, [CODUSUARIO] "& _ 
                "= @CODUSUARIO, [CODEMPRESA] = @CODEMPRESA, [FECHAVCTO] = @FECHAVCTO, [IMPORTE] ="& _ 
                " @IMPORTE, [COTIZACION1] = @COTIZACION1, [COTIZACION2] = @COTIZACION2, [FECGRA] "& _ 
                "= @FECGRA, [LIBRADOR] = @LIBRADOR WHERE (((@IsNull_CODFORMACOBRO = 1 AND [CODFOR"& _ 
                "MACOBRO] IS NULL) OR ([CODFORMACOBRO] = @Original_CODFORMACOBRO)) AND ((@IsNull_"& _ 
                "CODINGRESO = 1 AND [CODINGRESO] IS NULL) OR ([CODINGRESO] = @Original_CODINGRESO"& _ 
                ")) AND ([CODBANCO] = @Original_CODBANCO) AND ([NUMCHEQUE] = @Original_NUMCHEQUE)"& _ 
                " AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = @Origina"& _ 
                "l_CODMONEDA)) AND ((@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) OR ([CODS"& _ 
                "UCURSAL] = @Original_CODSUCURSAL)) AND ((@IsNull_CODESTADO = 1 AND [CODESTADO] I"& _ 
                "S NULL) OR ([CODESTADO] = @Original_CODESTADO)) AND ((@IsNull_CODUSUARIO = 1 AND"& _ 
                " [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_C"& _ 
                "ODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)"& _ 
                ") AND ((@IsNull_FECHAVCTO = 1 AND [FECHAVCTO] IS NULL) OR ([FECHAVCTO] = @Origin"& _ 
                "al_FECHAVCTO)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = "& _ 
                "@Original_IMPORTE)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NULL) OR "& _ 
                "([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND [COTI"& _ 
                "ZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNull_FECG"& _ 
                "RA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_LIB"& _ 
                "RADOR = 1 AND [LIBRADOR] IS NULL) OR ([LIBRADOR] = @Original_LIBRADOR)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELEC"& _ 
                "T CODFORMACOBRO, CODINGRESO, CODBANCO, NUMCHEQUE, CODMONEDA, CODSUCURSAL, CODEST"& _ 
                "ADO, CODUSUARIO, CODEMPRESA, FECHAVCTO, IMPORTE, COTIZACION1, COTIZACION2, FECGR"& _ 
                "A, LIBRADOR FROM CAJACHEQUESRECIBIDOS WHERE (CODBANCO = @CODBANCO) AND (NUMCHEQU"& _ 
                "E = @NUMCHEQUE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORMACOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODFORMACOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODBANCO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODBANCO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCHEQUE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCHEQUE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAVCTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVCTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@LIBRADOR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRADOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORMACOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORMACOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORMACOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODFORMACOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODBANCO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODBANCO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCHEQUE", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCHEQUE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODESTADO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODESTADO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODESTADO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODESTADO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAVCTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVCTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAVCTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAVCTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_LIBRADOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRADOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_LIBRADOR", Global.System.Data.SqlDbType.[Char], 0, Global.System.Data.ParameterDirection.Input, 0, 0, "LIBRADOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODFORMACOBRO, CODINGRESO, CODBANCO, NUMCHEQUE, CODMONEDA, CODSUCURSAL"& _ 
                ", CODESTADO, CODUSUARIO, CODEMPRESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      FECHAVCTO, IMPORTE,"& _ 
                " COTIZACION1, COTIZACION2, FECGRA, LIBRADOR"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJACHEQUESRECIBIDOS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJACHEQUESRECIBIDOSDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.CAJACHEQUESRECIBIDOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.CAJACHEQUESRECIBIDOSDataTable = New DsCaja.CAJACHEQUESRECIBIDOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.CAJACHEQUESRECIBIDOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "CAJACHEQUESRECIBIDOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODFORMACOBRO As Global.System.Nullable(Of Decimal), ByVal Original_CODINGRESO As Global.System.Nullable(Of Decimal), ByVal Original_CODBANCO As Decimal, ByVal Original_NUMCHEQUE As String, ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal), ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal Original_CODESTADO As Global.System.Nullable(Of Decimal), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECHAVCTO As Global.System.Nullable(Of Date), ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal), ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal), ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal), ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_LIBRADOR As String) As Integer
            If (Original_CODFORMACOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODFORMACOBRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(0).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Original_CODINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_CODINGRESO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODBANCO,Decimal)
            If (Original_NUMCHEQUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NUMCHEQUE")
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_NUMCHEQUE,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_CODESTADO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_CODESTADO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAVCTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_FECHAVCTO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_LIBRADOR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_LIBRADOR,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODFORMACOBRO As Global.System.Nullable(Of Decimal), ByVal CODINGRESO As Global.System.Nullable(Of Decimal), ByVal CODBANCO As Decimal, ByVal NUMCHEQUE As String, ByVal CODMONEDA As Global.System.Nullable(Of Decimal), ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal CODESTADO As Global.System.Nullable(Of Decimal), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECHAVCTO As Global.System.Nullable(Of Date), ByVal IMPORTE As Global.System.Nullable(Of Decimal), ByVal COTIZACION1 As Global.System.Nullable(Of Decimal), ByVal COTIZACION2 As Global.System.Nullable(Of Decimal), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal LIBRADOR As String) As Integer
            If (CODFORMACOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODFORMACOBRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODINGRESO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODBANCO,Decimal)
            If (NUMCHEQUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMCHEQUE")
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NUMCHEQUE,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODESTADO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CODESTADO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (FECHAVCTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(FECHAVCTO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LIBRADOR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(LIBRADOR,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODFORMACOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODINGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODBANCO As Decimal,  _
                    ByVal NUMCHEQUE As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal CODESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAVCTO As Global.System.Nullable(Of Date),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal LIBRADOR As String,  _
                    ByVal Original_CODFORMACOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODBANCO As Decimal,  _
                    ByVal Original_NUMCHEQUE As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAVCTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_LIBRADOR As String) As Integer
            If (CODFORMACOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODFORMACOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (CODINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODINGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODBANCO,Decimal)
            If (NUMCHEQUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("NUMCHEQUE")
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NUMCHEQUE,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODESTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CODESTADO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (FECHAVCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(FECHAVCTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (LIBRADOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(LIBRADOR,String)
            End If
            If (Original_CODFORMACOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CODFORMACOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CODINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_CODINGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_CODBANCO,Decimal)
            If (Original_NUMCHEQUE Is Nothing) Then
                Throw New Global.System.ArgumentNullException("Original_NUMCHEQUE")
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_NUMCHEQUE,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_CODESTADO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_CODESTADO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAVCTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_FECHAVCTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_LIBRADOR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_LIBRADOR,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODFORMACOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODINGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal CODESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAVCTO As Global.System.Nullable(Of Date),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal LIBRADOR As String,  _
                    ByVal Original_CODFORMACOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODBANCO As Decimal,  _
                    ByVal Original_NUMCHEQUE As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODESTADO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAVCTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_LIBRADOR As String) As Integer
            Return Me.Update(CODFORMACOBRO, CODINGRESO, Original_CODBANCO, Original_NUMCHEQUE, CODMONEDA, CODSUCURSAL, CODESTADO, CODUSUARIO, CODEMPRESA, FECHAVCTO, IMPORTE, COTIZACION1, COTIZACION2, FECGRA, LIBRADOR, Original_CODFORMACOBRO, Original_CODINGRESO, Original_CODBANCO, Original_NUMCHEQUE, Original_CODMONEDA, Original_CODSUCURSAL, Original_CODESTADO, Original_CODUSUARIO, Original_CODEMPRESA, Original_FECHAVCTO, Original_IMPORTE, Original_COTIZACION1, Original_COTIZACION2, Original_FECGRA, Original_LIBRADOR)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class USUARIOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "USUARIO"
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("DESUSUARIO", "DESUSUARIO")
            tableMapping.ColumnMappings.Add("PASSUSUARIO", "PASSUSUARIO")
            tableMapping.ColumnMappings.Add("NIVELCUENTA", "NIVELCUENTA")
            tableMapping.ColumnMappings.Add("USUGRA", "USUGRA")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("APELLIDO", "APELLIDO")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("CONTACTO", "CONTACTO")
            tableMapping.ColumnMappings.Add("TELEFONOCONTACTO", "TELEFONOCONTACTO")
            tableMapping.ColumnMappings.Add("IMAGEN", "IMAGEN")
            tableMapping.ColumnMappings.Add("NIVELUSUARIO", "NIVELUSUARIO")
            tableMapping.ColumnMappings.Add("SEXO", "SEXO")
            tableMapping.ColumnMappings.Add("INICIOCOMPRAS", "INICIOCOMPRAS")
            tableMapping.ColumnMappings.Add("INICIOVENTAS", "INICIOVENTAS")
            tableMapping.ColumnMappings.Add("CELULAR", "CELULAR")
            tableMapping.ColumnMappings.Add("EMAIL", "EMAIL")
            tableMapping.ColumnMappings.Add("CODCIUDAD", "CODCIUDAD")
            tableMapping.ColumnMappings.Add("FECHANAC", "FECHANAC")
            tableMapping.ColumnMappings.Add("CEDULA", "CEDULA")
            tableMapping.ColumnMappings.Add("CODGRUPO", "CODGRUPO")
            tableMapping.ColumnMappings.Add("FECHAPASSW", "FECHAPASSW")
            tableMapping.ColumnMappings.Add("NUMSISTEMAS", "NUMSISTEMAS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [USUARIO] WHERE (([CODUSUARIO] = @Original_CODUSUARIO) AND ([CODEMPRE"& _ 
                "SA] = @Original_CODEMPRESA) AND ((@IsNull_DESUSUARIO = 1 AND [DESUSUARIO] IS NUL"& _ 
                "L) OR ([DESUSUARIO] = @Original_DESUSUARIO)) AND ((@IsNull_PASSUSUARIO = 1 AND ["& _ 
                "PASSUSUARIO] IS NULL) OR ([PASSUSUARIO] = @Original_PASSUSUARIO)) AND ((@IsNull_"& _ 
                "NIVELCUENTA = 1 AND [NIVELCUENTA] IS NULL) OR ([NIVELCUENTA] = @Original_NIVELCU"& _ 
                "ENTA)) AND ((@IsNull_USUGRA = 1 AND [USUGRA] IS NULL) OR ([USUGRA] = @Original_U"& _ 
                "SUGRA)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_"& _ 
                "FECGRA)) AND ((@IsNull_NOMBRE = 1 AND [NOMBRE] IS NULL) OR ([NOMBRE] = @Original"& _ 
                "_NOMBRE)) AND ((@IsNull_APELLIDO = 1 AND [APELLIDO] IS NULL) OR ([APELLIDO] = @O"& _ 
                "riginal_APELLIDO)) AND ((@IsNull_DIRECCION = 1 AND [DIRECCION] IS NULL) OR ([DIR"& _ 
                "ECCION] = @Original_DIRECCION)) AND ((@IsNull_TELEFONO = 1 AND [TELEFONO] IS NUL"& _ 
                "L) OR ([TELEFONO] = @Original_TELEFONO)) AND ((@IsNull_CONTACTO = 1 AND [CONTACT"& _ 
                "O] IS NULL) OR ([CONTACTO] = @Original_CONTACTO)) AND ((@IsNull_TELEFONOCONTACTO"& _ 
                " = 1 AND [TELEFONOCONTACTO] IS NULL) OR ([TELEFONOCONTACTO] = @Original_TELEFONO"& _ 
                "CONTACTO)) AND ((@IsNull_IMAGEN = 1 AND [IMAGEN] IS NULL) OR ([IMAGEN] = @Origin"& _ 
                "al_IMAGEN)) AND ((@IsNull_NIVELUSUARIO = 1 AND [NIVELUSUARIO] IS NULL) OR ([NIVE"& _ 
                "LUSUARIO] = @Original_NIVELUSUARIO)) AND ((@IsNull_SEXO = 1 AND [SEXO] IS NULL) "& _ 
                "OR ([SEXO] = @Original_SEXO)) AND ((@IsNull_INICIOCOMPRAS = 1 AND [INICIOCOMPRAS"& _ 
                "] IS NULL) OR ([INICIOCOMPRAS] = @Original_INICIOCOMPRAS)) AND ((@IsNull_INICIOV"& _ 
                "ENTAS = 1 AND [INICIOVENTAS] IS NULL) OR ([INICIOVENTAS] = @Original_INICIOVENTA"& _ 
                "S)) AND ((@IsNull_CELULAR = 1 AND [CELULAR] IS NULL) OR ([CELULAR] = @Original_C"& _ 
                "ELULAR)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) OR ([EMAIL] = @Original_EM"& _ 
                "AIL)) AND ((@IsNull_CODCIUDAD = 1 AND [CODCIUDAD] IS NULL) OR ([CODCIUDAD] = @Or"& _ 
                "iginal_CODCIUDAD)) AND ((@IsNull_FECHANAC = 1 AND [FECHANAC] IS NULL) OR ([FECHA"& _ 
                "NAC] = @Original_FECHANAC)) AND ((@IsNull_CEDULA = 1 AND [CEDULA] IS NULL) OR (["& _ 
                "CEDULA] = @Original_CEDULA)) AND ((@IsNull_CODGRUPO = 1 AND [CODGRUPO] IS NULL) "& _ 
                "OR ([CODGRUPO] = @Original_CODGRUPO)) AND ((@IsNull_FECHAPASSW = 1 AND [FECHAPAS"& _ 
                "SW] IS NULL) OR ([FECHAPASSW] = @Original_FECHAPASSW)) AND ((@IsNull_NUMSISTEMAS"& _ 
                " = 1 AND [NUMSISTEMAS] IS NULL) OR ([NUMSISTEMAS] = @Original_NUMSISTEMAS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PASSUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PASSUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIVELCUENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVELCUENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVELCUENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELCUENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_USUGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USUGRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "USUGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOMBRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOMBRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APELLIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APELLIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIRECCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIRECCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONTACTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONOCONTACTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONOCONTACTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONOCONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONOCONTACTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMAGEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIVELUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVELUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVELUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SEXO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEXO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "SEXO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INICIOCOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INICIOCOMPRAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INICIOCOMPRAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOCOMPRAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INICIOVENTAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INICIOVENTAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INICIOVENTAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOVENTAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CELULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CELULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CELULAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CELULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHANAC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHANAC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHANAC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHANAC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CEDULA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODGRUPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODGRUPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODGRUPO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODGRUPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAPASSW", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPASSW", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAPASSW", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPASSW", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMSISTEMAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMSISTEMAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMSISTEMAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMSISTEMAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [USUARIO] ([CODUSUARIO], [CODEMPRESA], [DESUSUARIO], [PASSUSUARIO], ["& _ 
                "NIVELCUENTA], [USUGRA], [FECGRA], [NOMBRE], [APELLIDO], [DIRECCION], [TELEFONO],"& _ 
                " [CONTACTO], [TELEFONOCONTACTO], [IMAGEN], [NIVELUSUARIO], [SEXO], [INICIOCOMPRA"& _ 
                "S], [INICIOVENTAS], [CELULAR], [EMAIL], [CODCIUDAD], [FECHANAC], [CEDULA], [CODG"& _ 
                "RUPO], [FECHAPASSW], [NUMSISTEMAS]) VALUES (@CODUSUARIO, @CODEMPRESA, @DESUSUARI"& _ 
                "O, @PASSUSUARIO, @NIVELCUENTA, @USUGRA, @FECGRA, @NOMBRE, @APELLIDO, @DIRECCION,"& _ 
                " @TELEFONO, @CONTACTO, @TELEFONOCONTACTO, @IMAGEN, @NIVELUSUARIO, @SEXO, @INICIO"& _ 
                "COMPRAS, @INICIOVENTAS, @CELULAR, @EMAIL, @CODCIUDAD, @FECHANAC, @CEDULA, @CODGR"& _ 
                "UPO, @FECHAPASSW, @NUMSISTEMAS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODUSUARIO, CODEMPRESA, DESUSUARIO, PAS"& _ 
                "SUSUARIO, NIVELCUENTA, USUGRA, FECGRA, NOMBRE, APELLIDO, DIRECCION, TELEFONO, CO"& _ 
                "NTACTO, TELEFONOCONTACTO, IMAGEN, NIVELUSUARIO, SEXO, INICIOCOMPRAS, INICIOVENTA"& _ 
                "S, CELULAR, EMAIL, CODCIUDAD, FECHANAC, CEDULA, CODGRUPO, FECHAPASSW, NUMSISTEMA"& _ 
                "S FROM USUARIO WHERE (CODEMPRESA = @CODEMPRESA) AND (CODUSUARIO = @CODUSUARIO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASSUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVELCUENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELCUENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USUGRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "USUGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONOCONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONOCONTACTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVELUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEXO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "SEXO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INICIOCOMPRAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOCOMPRAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INICIOVENTAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOVENTAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CELULAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CELULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHANAC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHANAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODGRUPO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODGRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAPASSW", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPASSW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMSISTEMAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMSISTEMAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [USUARIO] SET [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = @CODEMPRESA, [DES"& _ 
                "USUARIO] = @DESUSUARIO, [PASSUSUARIO] = @PASSUSUARIO, [NIVELCUENTA] = @NIVELCUEN"& _ 
                "TA, [USUGRA] = @USUGRA, [FECGRA] = @FECGRA, [NOMBRE] = @NOMBRE, [APELLIDO] = @AP"& _ 
                "ELLIDO, [DIRECCION] = @DIRECCION, [TELEFONO] = @TELEFONO, [CONTACTO] = @CONTACTO"& _ 
                ", [TELEFONOCONTACTO] = @TELEFONOCONTACTO, [IMAGEN] = @IMAGEN, [NIVELUSUARIO] = @"& _ 
                "NIVELUSUARIO, [SEXO] = @SEXO, [INICIOCOMPRAS] = @INICIOCOMPRAS, [INICIOVENTAS] ="& _ 
                " @INICIOVENTAS, [CELULAR] = @CELULAR, [EMAIL] = @EMAIL, [CODCIUDAD] = @CODCIUDAD"& _ 
                ", [FECHANAC] = @FECHANAC, [CEDULA] = @CEDULA, [CODGRUPO] = @CODGRUPO, [FECHAPASS"& _ 
                "W] = @FECHAPASSW, [NUMSISTEMAS] = @NUMSISTEMAS WHERE (([CODUSUARIO] = @Original_"& _ 
                "CODUSUARIO) AND ([CODEMPRESA] = @Original_CODEMPRESA) AND ((@IsNull_DESUSUARIO ="& _ 
                " 1 AND [DESUSUARIO] IS NULL) OR ([DESUSUARIO] = @Original_DESUSUARIO)) AND ((@Is"& _ 
                "Null_PASSUSUARIO = 1 AND [PASSUSUARIO] IS NULL) OR ([PASSUSUARIO] = @Original_PA"& _ 
                "SSUSUARIO)) AND ((@IsNull_NIVELCUENTA = 1 AND [NIVELCUENTA] IS NULL) OR ([NIVELC"& _ 
                "UENTA] = @Original_NIVELCUENTA)) AND ((@IsNull_USUGRA = 1 AND [USUGRA] IS NULL) "& _ 
                "OR ([USUGRA] = @Original_USUGRA)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL)"& _ 
                " OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_NOMBRE = 1 AND [NOMBRE] IS NULL"& _ 
                ") OR ([NOMBRE] = @Original_NOMBRE)) AND ((@IsNull_APELLIDO = 1 AND [APELLIDO] IS"& _ 
                " NULL) OR ([APELLIDO] = @Original_APELLIDO)) AND ((@IsNull_DIRECCION = 1 AND [DI"& _ 
                "RECCION] IS NULL) OR ([DIRECCION] = @Original_DIRECCION)) AND ((@IsNull_TELEFONO"& _ 
                " = 1 AND [TELEFONO] IS NULL) OR ([TELEFONO] = @Original_TELEFONO)) AND ((@IsNull"& _ 
                "_CONTACTO = 1 AND [CONTACTO] IS NULL) OR ([CONTACTO] = @Original_CONTACTO)) AND "& _ 
                "((@IsNull_TELEFONOCONTACTO = 1 AND [TELEFONOCONTACTO] IS NULL) OR ([TELEFONOCONT"& _ 
                "ACTO] = @Original_TELEFONOCONTACTO)) AND ((@IsNull_IMAGEN = 1 AND [IMAGEN] IS NU"& _ 
                "LL) OR ([IMAGEN] = @Original_IMAGEN)) AND ((@IsNull_NIVELUSUARIO = 1 AND [NIVELU"& _ 
                "SUARIO] IS NULL) OR ([NIVELUSUARIO] = @Original_NIVELUSUARIO)) AND ((@IsNull_SEX"& _ 
                "O = 1 AND [SEXO] IS NULL) OR ([SEXO] = @Original_SEXO)) AND ((@IsNull_INICIOCOMP"& _ 
                "RAS = 1 AND [INICIOCOMPRAS] IS NULL) OR ([INICIOCOMPRAS] = @Original_INICIOCOMPR"& _ 
                "AS)) AND ((@IsNull_INICIOVENTAS = 1 AND [INICIOVENTAS] IS NULL) OR ([INICIOVENTA"& _ 
                "S] = @Original_INICIOVENTAS)) AND ((@IsNull_CELULAR = 1 AND [CELULAR] IS NULL) O"& _ 
                "R ([CELULAR] = @Original_CELULAR)) AND ((@IsNull_EMAIL = 1 AND [EMAIL] IS NULL) "& _ 
                "OR ([EMAIL] = @Original_EMAIL)) AND ((@IsNull_CODCIUDAD = 1 AND [CODCIUDAD] IS N"& _ 
                "ULL) OR ([CODCIUDAD] = @Original_CODCIUDAD)) AND ((@IsNull_FECHANAC = 1 AND [FEC"& _ 
                "HANAC] IS NULL) OR ([FECHANAC] = @Original_FECHANAC)) AND ((@IsNull_CEDULA = 1 A"& _ 
                "ND [CEDULA] IS NULL) OR ([CEDULA] = @Original_CEDULA)) AND ((@IsNull_CODGRUPO = "& _ 
                "1 AND [CODGRUPO] IS NULL) OR ([CODGRUPO] = @Original_CODGRUPO)) AND ((@IsNull_FE"& _ 
                "CHAPASSW = 1 AND [FECHAPASSW] IS NULL) OR ([FECHAPASSW] = @Original_FECHAPASSW))"& _ 
                " AND ((@IsNull_NUMSISTEMAS = 1 AND [NUMSISTEMAS] IS NULL) OR ([NUMSISTEMAS] = @O"& _ 
                "riginal_NUMSISTEMAS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODUSUARIO, CODEMPRESA, DESUSUARIO, PASSUSUARIO,"& _ 
                " NIVELCUENTA, USUGRA, FECGRA, NOMBRE, APELLIDO, DIRECCION, TELEFONO, CONTACTO, T"& _ 
                "ELEFONOCONTACTO, IMAGEN, NIVELUSUARIO, SEXO, INICIOCOMPRAS, INICIOVENTAS, CELULA"& _ 
                "R, EMAIL, CODCIUDAD, FECHANAC, CEDULA, CODGRUPO, FECHAPASSW, NUMSISTEMAS FROM US"& _ 
                "UARIO WHERE (CODEMPRESA = @CODEMPRESA) AND (CODUSUARIO = @CODUSUARIO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PASSUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVELCUENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELCUENTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@USUGRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "USUGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NOMBRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@APELLIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DIRECCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TELEFONOCONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONOCONTACTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NIVELUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SEXO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "SEXO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INICIOCOMPRAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOCOMPRAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@INICIOVENTAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOVENTAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CELULAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CELULAR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHANAC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHANAC", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CEDULA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODGRUPO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODGRUPO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAPASSW", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPASSW", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMSISTEMAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMSISTEMAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PASSUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PASSUSUARIO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PASSUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIVELCUENTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVELCUENTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVELCUENTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELCUENTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_USUGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "USUGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_USUGRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "USUGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NOMBRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NOMBRE", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NOMBRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_APELLIDO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_APELLIDO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "APELLIDO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DIRECCION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DIRECCION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DIRECCION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONTACTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONTACTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TELEFONOCONTACTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONOCONTACTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TELEFONOCONTACTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TELEFONOCONTACTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMAGEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NIVELUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NIVELUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NIVELUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 3, 0, "NIVELUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SEXO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SEXO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SEXO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "SEXO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INICIOCOMPRAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INICIOCOMPRAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INICIOCOMPRAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOCOMPRAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_INICIOVENTAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "INICIOVENTAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_INICIOVENTAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 1, 0, "INICIOVENTAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CELULAR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CELULAR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CELULAR", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CELULAR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_EMAIL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_EMAIL", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "EMAIL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCIUDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCIUDAD", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCIUDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHANAC", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHANAC", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHANAC", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHANAC", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CEDULA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CEDULA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CEDULA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODGRUPO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODGRUPO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODGRUPO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODGRUPO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAPASSW", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPASSW", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAPASSW", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAPASSW", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMSISTEMAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMSISTEMAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMSISTEMAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMSISTEMAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODUSUARIO, CODEMPRESA, DESUSUARIO, PASSUSUARIO, NIVELCUENTA, USUGRA, "& _ 
                "FECGRA, NOMBRE, APELLIDO, DIRECCION, TELEFONO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CONTACTO,"& _ 
                " TELEFONOCONTACTO, IMAGEN, NIVELUSUARIO, SEXO, INICIOCOMPRAS, INICIOVENTAS, CELU"& _ 
                "LAR, EMAIL, CODCIUDAD, FECHANAC, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CEDULA, CODGRUPO, FECHA"& _ 
                "PASSW, NUMSISTEMAS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         USUARIO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.USUARIODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.USUARIODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.USUARIODataTable = New DsCaja.USUARIODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.USUARIODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "USUARIO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODUSUARIO As Decimal,  _
                    ByVal Original_CODEMPRESA As Decimal,  _
                    ByVal Original_DESUSUARIO As String,  _
                    ByVal Original_PASSUSUARIO As String,  _
                    ByVal Original_NIVELCUENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_USUGRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NOMBRE As String,  _
                    ByVal Original_APELLIDO As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_TELEFONO As String,  _
                    ByVal Original_CONTACTO As String,  _
                    ByVal Original_TELEFONOCONTACTO As String,  _
                    ByVal Original_IMAGEN As String,  _
                    ByVal Original_NIVELUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SEXO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INICIOCOMPRAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INICIOVENTAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CELULAR As String,  _
                    ByVal Original_EMAIL As String,  _
                    ByVal Original_CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHANAC As Global.System.Nullable(Of Date),  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_CODGRUPO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAPASSW As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMSISTEMAS As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODUSUARIO,Decimal)
            Me.Adapter.DeleteCommand.Parameters(1).Value = CType(Original_CODEMPRESA,Decimal)
            If (Original_DESUSUARIO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(Original_DESUSUARIO,String)
            End If
            If (Original_PASSUSUARIO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(Original_PASSUSUARIO,String)
            End If
            If (Original_NIVELCUENTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(Original_NIVELCUENTA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (Original_USUGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(Original_USUGRA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(Original_NOMBRE,String)
            End If
            If (Original_APELLIDO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(Original_APELLIDO,String)
            End If
            If (Original_DIRECCION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(Original_DIRECCION,String)
            End If
            If (Original_TELEFONO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(Original_TELEFONO,String)
            End If
            If (Original_CONTACTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(Original_CONTACTO,String)
            End If
            If (Original_TELEFONOCONTACTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(Original_TELEFONOCONTACTO,String)
            End If
            If (Original_IMAGEN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(Original_IMAGEN,String)
            End If
            If (Original_NIVELUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(Original_NIVELUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_SEXO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(Original_SEXO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_INICIOCOMPRAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(Original_INICIOCOMPRAS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_INICIOVENTAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = CType(Original_INICIOVENTAS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_CELULAR Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(35).Value = CType(Original_CELULAR,String)
            End If
            If (Original_EMAIL Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(37).Value = CType(Original_EMAIL,String)
            End If
            If (Original_CODCIUDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = CType(Original_CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHANAC.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = CType(Original_FECHANAC.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_CEDULA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(43).Value = CType(Original_CEDULA,String)
            End If
            If (Original_CODGRUPO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = CType(Original_CODGRUPO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(45).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAPASSW.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = CType(Original_FECHAPASSW.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(47).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMSISTEMAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = CType(Original_NUMSISTEMAS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal DESUSUARIO As String,  _
                    ByVal PASSUSUARIO As String,  _
                    ByVal NIVELCUENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal USUGRA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CONTACTO As String,  _
                    ByVal TELEFONOCONTACTO As String,  _
                    ByVal IMAGEN As String,  _
                    ByVal NIVELUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal SEXO As Global.System.Nullable(Of Decimal),  _
                    ByVal INICIOCOMPRAS As Global.System.Nullable(Of Decimal),  _
                    ByVal INICIOVENTAS As Global.System.Nullable(Of Decimal),  _
                    ByVal CELULAR As String,  _
                    ByVal EMAIL As String,  _
                    ByVal CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHANAC As Global.System.Nullable(Of Date),  _
                    ByVal CEDULA As String,  _
                    ByVal CODGRUPO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAPASSW As Global.System.Nullable(Of Date),  _
                    ByVal NUMSISTEMAS As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODUSUARIO,Decimal)
            Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODEMPRESA,Decimal)
            If (DESUSUARIO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(DESUSUARIO,String)
            End If
            If (PASSUSUARIO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(PASSUSUARIO,String)
            End If
            If (NIVELCUENTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(NIVELCUENTA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (USUGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(USUGRA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (NOMBRE Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(NOMBRE,String)
            End If
            If (APELLIDO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(APELLIDO,String)
            End If
            If (DIRECCION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(DIRECCION,String)
            End If
            If (TELEFONO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(TELEFONO,String)
            End If
            If (CONTACTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(CONTACTO,String)
            End If
            If (TELEFONOCONTACTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(TELEFONOCONTACTO,String)
            End If
            If (IMAGEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(IMAGEN,String)
            End If
            If (NIVELUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(NIVELUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SEXO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(SEXO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (INICIOCOMPRAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(INICIOCOMPRAS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (INICIOVENTAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(17).Value = CType(INICIOVENTAS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CELULAR Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(18).Value = CType(CELULAR,String)
            End If
            If (EMAIL Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(19).Value = CType(EMAIL,String)
            End If
            If (CODCIUDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(20).Value = CType(CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (FECHANAC.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(21).Value = CType(FECHANAC.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CEDULA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(22).Value = CType(CEDULA,String)
            End If
            If (CODGRUPO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(23).Value = CType(CODGRUPO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (FECHAPASSW.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(24).Value = CType(FECHAPASSW.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (NUMSISTEMAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(25).Value = CType(NUMSISTEMAS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODUSUARIO As Decimal,  _
                    ByVal CODEMPRESA As Decimal,  _
                    ByVal DESUSUARIO As String,  _
                    ByVal PASSUSUARIO As String,  _
                    ByVal NIVELCUENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal USUGRA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CONTACTO As String,  _
                    ByVal TELEFONOCONTACTO As String,  _
                    ByVal IMAGEN As String,  _
                    ByVal NIVELUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal SEXO As Global.System.Nullable(Of Decimal),  _
                    ByVal INICIOCOMPRAS As Global.System.Nullable(Of Decimal),  _
                    ByVal INICIOVENTAS As Global.System.Nullable(Of Decimal),  _
                    ByVal CELULAR As String,  _
                    ByVal EMAIL As String,  _
                    ByVal CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHANAC As Global.System.Nullable(Of Date),  _
                    ByVal CEDULA As String,  _
                    ByVal CODGRUPO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAPASSW As Global.System.Nullable(Of Date),  _
                    ByVal NUMSISTEMAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Decimal,  _
                    ByVal Original_CODEMPRESA As Decimal,  _
                    ByVal Original_DESUSUARIO As String,  _
                    ByVal Original_PASSUSUARIO As String,  _
                    ByVal Original_NIVELCUENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_USUGRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NOMBRE As String,  _
                    ByVal Original_APELLIDO As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_TELEFONO As String,  _
                    ByVal Original_CONTACTO As String,  _
                    ByVal Original_TELEFONOCONTACTO As String,  _
                    ByVal Original_IMAGEN As String,  _
                    ByVal Original_NIVELUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SEXO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INICIOCOMPRAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INICIOVENTAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CELULAR As String,  _
                    ByVal Original_EMAIL As String,  _
                    ByVal Original_CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHANAC As Global.System.Nullable(Of Date),  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_CODGRUPO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAPASSW As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMSISTEMAS As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODUSUARIO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODEMPRESA,Decimal)
            If (DESUSUARIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(DESUSUARIO,String)
            End If
            If (PASSUSUARIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(PASSUSUARIO,String)
            End If
            If (NIVELCUENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(NIVELCUENTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (USUGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(USUGRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(NOMBRE,String)
            End If
            If (APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(APELLIDO,String)
            End If
            If (DIRECCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(DIRECCION,String)
            End If
            If (TELEFONO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(TELEFONO,String)
            End If
            If (CONTACTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(CONTACTO,String)
            End If
            If (TELEFONOCONTACTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(TELEFONOCONTACTO,String)
            End If
            If (IMAGEN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(IMAGEN,String)
            End If
            If (NIVELUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(NIVELUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (SEXO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(SEXO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (INICIOCOMPRAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(INICIOCOMPRAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (INICIOVENTAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(INICIOVENTAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (CELULAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(CELULAR,String)
            End If
            If (EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(EMAIL,String)
            End If
            If (CODCIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (FECHANAC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(FECHANAC.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (CEDULA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(CEDULA,String)
            End If
            If (CODGRUPO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(CODGRUPO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (FECHAPASSW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(FECHAPASSW.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (NUMSISTEMAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(NUMSISTEMAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_CODUSUARIO,Decimal)
            Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_CODEMPRESA,Decimal)
            If (Original_DESUSUARIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_DESUSUARIO,String)
            End If
            If (Original_PASSUSUARIO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_PASSUSUARIO,String)
            End If
            If (Original_NIVELCUENTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_NIVELCUENTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_USUGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_USUGRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_NOMBRE Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_NOMBRE,String)
            End If
            If (Original_APELLIDO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_APELLIDO,String)
            End If
            If (Original_DIRECCION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_DIRECCION,String)
            End If
            If (Original_TELEFONO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_TELEFONO,String)
            End If
            If (Original_CONTACTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CONTACTO,String)
            End If
            If (Original_TELEFONOCONTACTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_TELEFONOCONTACTO,String)
            End If
            If (Original_IMAGEN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(50).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(51).Value = CType(Original_IMAGEN,String)
            End If
            If (Original_NIVELUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = CType(Original_NIVELUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(52).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(53).Value = Global.System.DBNull.Value
            End If
            If (Original_SEXO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = CType(Original_SEXO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(54).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(55).Value = Global.System.DBNull.Value
            End If
            If (Original_INICIOCOMPRAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = CType(Original_INICIOCOMPRAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(56).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(57).Value = Global.System.DBNull.Value
            End If
            If (Original_INICIOVENTAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = CType(Original_INICIOVENTAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(58).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(59).Value = Global.System.DBNull.Value
            End If
            If (Original_CELULAR Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(60).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(61).Value = CType(Original_CELULAR,String)
            End If
            If (Original_EMAIL Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(62).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(63).Value = CType(Original_EMAIL,String)
            End If
            If (Original_CODCIUDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = CType(Original_CODCIUDAD.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(64).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(65).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHANAC.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = CType(Original_FECHANAC.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(66).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(67).Value = Global.System.DBNull.Value
            End If
            If (Original_CEDULA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(68).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(69).Value = CType(Original_CEDULA,String)
            End If
            If (Original_CODGRUPO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = CType(Original_CODGRUPO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(70).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(71).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAPASSW.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = CType(Original_FECHAPASSW.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(72).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(73).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMSISTEMAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = CType(Original_NUMSISTEMAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(74).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(75).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal DESUSUARIO As String,  _
                    ByVal PASSUSUARIO As String,  _
                    ByVal NIVELCUENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal USUGRA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal NOMBRE As String,  _
                    ByVal APELLIDO As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CONTACTO As String,  _
                    ByVal TELEFONOCONTACTO As String,  _
                    ByVal IMAGEN As String,  _
                    ByVal NIVELUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal SEXO As Global.System.Nullable(Of Decimal),  _
                    ByVal INICIOCOMPRAS As Global.System.Nullable(Of Decimal),  _
                    ByVal INICIOVENTAS As Global.System.Nullable(Of Decimal),  _
                    ByVal CELULAR As String,  _
                    ByVal EMAIL As String,  _
                    ByVal CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHANAC As Global.System.Nullable(Of Date),  _
                    ByVal CEDULA As String,  _
                    ByVal CODGRUPO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAPASSW As Global.System.Nullable(Of Date),  _
                    ByVal NUMSISTEMAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Decimal,  _
                    ByVal Original_CODEMPRESA As Decimal,  _
                    ByVal Original_DESUSUARIO As String,  _
                    ByVal Original_PASSUSUARIO As String,  _
                    ByVal Original_NIVELCUENTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_USUGRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NOMBRE As String,  _
                    ByVal Original_APELLIDO As String,  _
                    ByVal Original_DIRECCION As String,  _
                    ByVal Original_TELEFONO As String,  _
                    ByVal Original_CONTACTO As String,  _
                    ByVal Original_TELEFONOCONTACTO As String,  _
                    ByVal Original_IMAGEN As String,  _
                    ByVal Original_NIVELUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_SEXO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INICIOCOMPRAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_INICIOVENTAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CELULAR As String,  _
                    ByVal Original_EMAIL As String,  _
                    ByVal Original_CODCIUDAD As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHANAC As Global.System.Nullable(Of Date),  _
                    ByVal Original_CEDULA As String,  _
                    ByVal Original_CODGRUPO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAPASSW As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMSISTEMAS As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODUSUARIO, Original_CODEMPRESA, DESUSUARIO, PASSUSUARIO, NIVELCUENTA, USUGRA, FECGRA, NOMBRE, APELLIDO, DIRECCION, TELEFONO, CONTACTO, TELEFONOCONTACTO, IMAGEN, NIVELUSUARIO, SEXO, INICIOCOMPRAS, INICIOVENTAS, CELULAR, EMAIL, CODCIUDAD, FECHANAC, CEDULA, CODGRUPO, FECHAPASSW, NUMSISTEMAS, Original_CODUSUARIO, Original_CODEMPRESA, Original_DESUSUARIO, Original_PASSUSUARIO, Original_NIVELCUENTA, Original_USUGRA, Original_FECGRA, Original_NOMBRE, Original_APELLIDO, Original_DIRECCION, Original_TELEFONO, Original_CONTACTO, Original_TELEFONOCONTACTO, Original_IMAGEN, Original_NIVELUSUARIO, Original_SEXO, Original_INICIOCOMPRAS, Original_INICIOVENTAS, Original_CELULAR, Original_EMAIL, Original_CODCIUDAD, Original_FECHANAC, Original_CEDULA, Original_CODGRUPO, Original_FECHAPASSW, Original_NUMSISTEMAS)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJAINGRESOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJAINGRESO"
            tableMapping.ColumnMappings.Add("CODINGRESO", "CODINGRESO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("TIPOINGRESO", "TIPOINGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("VUELTO", "VUELTO")
            tableMapping.ColumnMappings.Add("FECINGRESO", "FECINGRESO")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJAINGRESOS] WHERE (([CODINGRESO] = @Original_CODINGRESO) AND ((@Is"& _ 
                "Null_TIPOINGRESO = 1 AND [TIPOINGRESO] IS NULL) OR ([TIPOINGRESO] = @Original_TI"& _ 
                "POINGRESO)) AND ((@IsNull_CODTIPOEGRESO = 1 AND [CODTIPOEGRESO] IS NULL) OR ([CO"& _ 
                "DTIPOEGRESO] = @Original_CODTIPOEGRESO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUS"& _ 
                "UARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRE"& _ 
                "SA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ("& _ 
                "(@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUMCAJA] = @Original_NUMCAJA)) "& _ 
                "AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCEPTO] = @Original_CO"& _ 
                "NCEPTO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = "& _ 
                "@Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NULL) O"& _ 
                "R ([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND [CO"& _ 
                "TIZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNull_IM"& _ 
                "PORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = @Original_IMPORTE)) AND ((@IsNu"& _ 
                "ll_VUELTO = 1 AND [VUELTO] IS NULL) OR ([VUELTO] = @Original_VUELTO)) AND ((@IsN"& _ 
                "ull_FECINGRESO = 1 AND [FECINGRESO] IS NULL) OR ([FECINGRESO] = @Original_FECING"& _ 
                "RESO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_F"& _ 
                "ECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSERVACION] IS NULL) OR ([OBSERVACIO"& _ 
                "N] = @Original_OBSERVACION)) AND ((@IsNull_CODFORCOBRO = 1 AND [CODFORCOBRO] IS "& _ 
                "NULL) OR ([CODFORCOBRO] = @Original_CODFORCOBRO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VUELTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VUELTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJAINGRESOS] ([CODINGRESO], [TIPOINGRESO], [CODTIPOEGRESO], [CODUSU"& _ 
                "ARIO], [CODEMPRESA], [NUMCAJA], [CONCEPTO], [CODMONEDA], [COTIZACION1], [COTIZAC"& _ 
                "ION2], [IMPORTE], [VUELTO], [FECINGRESO], [FECGRA], [OBSERVACION], [CODFORCOBRO]"& _ 
                ") VALUES (@CODINGRESO, @TIPOINGRESO, @CODTIPOEGRESO, @CODUSUARIO, @CODEMPRESA, @"& _ 
                "NUMCAJA, @CONCEPTO, @CODMONEDA, @COTIZACION1, @COTIZACION2, @IMPORTE, @VUELTO, @"& _ 
                "FECINGRESO, @FECGRA, @OBSERVACION, @CODFORCOBRO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODINGRESO, TIPOINGRES"& _ 
                "O, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA, CONCEPTO, CODMONEDA, COTIZACI"& _ 
                "ON1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO "& _ 
                "FROM CAJAINGRESOS WHERE (CODINGRESO = @CODINGRESO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJAINGRESOS] SET [CODINGRESO] = @CODINGRESO, [TIPOINGRESO] = @TIPOINGRES"& _ 
                "O, [CODTIPOEGRESO] = @CODTIPOEGRESO, [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = "& _ 
                "@CODEMPRESA, [NUMCAJA] = @NUMCAJA, [CONCEPTO] = @CONCEPTO, [CODMONEDA] = @CODMON"& _ 
                "EDA, [COTIZACION1] = @COTIZACION1, [COTIZACION2] = @COTIZACION2, [IMPORTE] = @IM"& _ 
                "PORTE, [VUELTO] = @VUELTO, [FECINGRESO] = @FECINGRESO, [FECGRA] = @FECGRA, [OBSE"& _ 
                "RVACION] = @OBSERVACION, [CODFORCOBRO] = @CODFORCOBRO WHERE (([CODINGRESO] = @Or"& _ 
                "iginal_CODINGRESO) AND ((@IsNull_TIPOINGRESO = 1 AND [TIPOINGRESO] IS NULL) OR ("& _ 
                "[TIPOINGRESO] = @Original_TIPOINGRESO)) AND ((@IsNull_CODTIPOEGRESO = 1 AND [COD"& _ 
                "TIPOEGRESO] IS NULL) OR ([CODTIPOEGRESO] = @Original_CODTIPOEGRESO)) AND ((@IsNu"& _ 
                "ll_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUA"& _ 
                "RIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = "& _ 
                "@Original_CODEMPRESA)) AND ((@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUM"& _ 
                "CAJA] = @Original_NUMCAJA)) AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) O"& _ 
                "R ([CONCEPTO] = @Original_CONCEPTO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA]"& _ 
                " IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 "& _ 
                "AND [COTIZACION1] IS NULL) OR ([COTIZACION1] = @Original_COTIZACION1)) AND ((@Is"& _ 
                "Null_COTIZACION2 = 1 AND [COTIZACION2] IS NULL) OR ([COTIZACION2] = @Original_CO"& _ 
                "TIZACION2)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = @Or"& _ 
                "iginal_IMPORTE)) AND ((@IsNull_VUELTO = 1 AND [VUELTO] IS NULL) OR ([VUELTO] = @"& _ 
                "Original_VUELTO)) AND ((@IsNull_FECINGRESO = 1 AND [FECINGRESO] IS NULL) OR ([FE"& _ 
                "CINGRESO] = @Original_FECINGRESO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL"& _ 
                ") OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSERVACI"& _ 
                "ON] IS NULL) OR ([OBSERVACION] = @Original_OBSERVACION)) AND ((@IsNull_CODFORCOB"& _ 
                "RO = 1 AND [CODFORCOBRO] IS NULL) OR ([CODFORCOBRO] = @Original_CODFORCOBRO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA,"& _ 
                " CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FEC"& _ 
                "GRA, OBSERVACION, CODFORCOBRO FROM CAJAINGRESOS WHERE (CODINGRESO = @CODINGRESO)"& _ 
                ""
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VUELTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VUELTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJ"& _ 
                "A, CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      IMPORT"& _ 
                "E, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJAINGRES"& _ 
                "OS"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJAINGRESODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.CAJAINGRESODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.CAJAINGRESODataTable = New DsCaja.CAJAINGRESODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.CAJAINGRESODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "CAJAINGRESO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODINGRESO,Decimal)
            If (Original_TIPOINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_VUELTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_VUELTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_FECINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_FECINGRESO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODINGRESO,Decimal)
            If (TIPOINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CONCEPTO,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VUELTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(VUELTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FECINGRESO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODINGRESO,Decimal)
            If (TIPOINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CONCEPTO,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VUELTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(VUELTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FECINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CODINGRESO,Decimal)
            If (Original_TIPOINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_VUELTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_VUELTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_FECINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_FECINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA, CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO, Original_CODINGRESO, Original_TIPOINGRESO, Original_CODTIPOEGRESO, Original_CODUSUARIO, Original_CODEMPRESA, Original_NUMCAJA, Original_CONCEPTO, Original_CODMONEDA, Original_COTIZACION1, Original_COTIZACION2, Original_IMPORTE, Original_VUELTO, Original_FECINGRESO, Original_FECGRA, Original_OBSERVACION, Original_CODFORCOBRO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TIPOEGRESOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TIPOEGRESO"
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMTIPOEGRESO", "NUMTIPOEGRESO")
            tableMapping.ColumnMappings.Add("DESTIPOEGRESO", "DESTIPOEGRESO")
            tableMapping.ColumnMappings.Add("PRIORIDAD", "PRIORIDAD")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TIPOEGRESO] WHERE (([CODTIPOEGRESO] = @Original_CODTIPOEGRESO) AND ("& _ 
                "(@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_C"& _ 
                "ODUSUARIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRE"& _ 
                "SA] = @Original_CODEMPRESA)) AND ((@IsNull_NUMTIPOEGRESO = 1 AND [NUMTIPOEGRESO]"& _ 
                " IS NULL) OR ([NUMTIPOEGRESO] = @Original_NUMTIPOEGRESO)) AND ((@IsNull_DESTIPOE"& _ 
                "GRESO = 1 AND [DESTIPOEGRESO] IS NULL) OR ([DESTIPOEGRESO] = @Original_DESTIPOEG"& _ 
                "RESO)) AND ((@IsNull_PRIORIDAD = 1 AND [PRIORIDAD] IS NULL) OR ([PRIORIDAD] = @O"& _ 
                "riginal_PRIORIDAD)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] "& _ 
                "= @Original_FECGRA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIORIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TIPOEGRESO] ([CODTIPOEGRESO], [CODUSUARIO], [CODEMPRESA], [NUMTIPOEG"& _ 
                "RESO], [DESTIPOEGRESO], [PRIORIDAD], [FECGRA]) VALUES (@CODTIPOEGRESO, @CODUSUAR"& _ 
                "IO, @CODEMPRESA, @NUMTIPOEGRESO, @DESTIPOEGRESO, @PRIORIDAD, @FECGRA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT C"& _ 
                "ODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMTIPOEGRESO, DESTIPOEGRESO, PRIORIDAD, F"& _ 
                "ECGRA FROM TIPOEGRESO WHERE (CODTIPOEGRESO = @CODTIPOEGRESO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TIPOEGRESO] SET [CODTIPOEGRESO] = @CODTIPOEGRESO, [CODUSUARIO] = @CODUSUA"& _ 
                "RIO, [CODEMPRESA] = @CODEMPRESA, [NUMTIPOEGRESO] = @NUMTIPOEGRESO, [DESTIPOEGRES"& _ 
                "O] = @DESTIPOEGRESO, [PRIORIDAD] = @PRIORIDAD, [FECGRA] = @FECGRA WHERE (([CODTI"& _ 
                "POEGRESO] = @Original_CODTIPOEGRESO) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARI"& _ 
                "O] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRESA ="& _ 
                " 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ((@Is"& _ 
                "Null_NUMTIPOEGRESO = 1 AND [NUMTIPOEGRESO] IS NULL) OR ([NUMTIPOEGRESO] = @Origi"& _ 
                "nal_NUMTIPOEGRESO)) AND ((@IsNull_DESTIPOEGRESO = 1 AND [DESTIPOEGRESO] IS NULL)"& _ 
                " OR ([DESTIPOEGRESO] = @Original_DESTIPOEGRESO)) AND ((@IsNull_PRIORIDAD = 1 AND"& _ 
                " [PRIORIDAD] IS NULL) OR ([PRIORIDAD] = @Original_PRIORIDAD)) AND ((@IsNull_FECG"& _ 
                "RA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODTIPO"& _ 
                "EGRESO, CODUSUARIO, CODEMPRESA, NUMTIPOEGRESO, DESTIPOEGRESO, PRIORIDAD, FECGRA "& _ 
                "FROM TIPOEGRESO WHERE (CODTIPOEGRESO = @CODTIPOEGRESO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESTIPOEGRESO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIORIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMTIPOEGRESO, DESTIPOEGRESO, PRIOR"& _ 
                "IDAD, FECGRA FROM TIPOEGRESO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE DESTIPOEGRESO<>'Apertura de Caja' and  DESTI"& _ 
                "POEGRESO <>'Saldo Inicial'"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.TIPOEGRESODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.TIPOEGRESODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.TIPOEGRESODataTable = New DsCaja.TIPOEGRESODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.TIPOEGRESODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "TIPOEGRESO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODTIPOEGRESO As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMTIPOEGRESO As String, ByVal Original_DESTIPOEGRESO As String, ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODTIPOEGRESO,Decimal)
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMTIPOEGRESO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NUMTIPOEGRESO,String)
            End If
            If (Original_DESTIPOEGRESO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DESTIPOEGRESO,String)
            End If
            If (Original_PRIORIDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODTIPOEGRESO As Decimal, ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMTIPOEGRESO As String, ByVal DESTIPOEGRESO As String, ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODTIPOEGRESO,Decimal)
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMTIPOEGRESO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NUMTIPOEGRESO,String)
            End If
            If (DESTIPOEGRESO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DESTIPOEGRESO,String)
            End If
            If (PRIORIDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODTIPOEGRESO As Decimal, ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMTIPOEGRESO As String, ByVal DESTIPOEGRESO As String, ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_CODTIPOEGRESO As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMTIPOEGRESO As String, ByVal Original_DESTIPOEGRESO As String, ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODTIPOEGRESO,Decimal)
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMTIPOEGRESO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NUMTIPOEGRESO,String)
            End If
            If (DESTIPOEGRESO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DESTIPOEGRESO,String)
            End If
            If (PRIORIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CODTIPOEGRESO,Decimal)
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMTIPOEGRESO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_NUMTIPOEGRESO,String)
            End If
            If (Original_DESTIPOEGRESO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DESTIPOEGRESO,String)
            End If
            If (Original_PRIORIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMTIPOEGRESO As String, ByVal DESTIPOEGRESO As String, ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_CODTIPOEGRESO As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMTIPOEGRESO As String, ByVal Original_DESTIPOEGRESO As String, ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMTIPOEGRESO, DESTIPOEGRESO, PRIORIDAD, FECGRA, Original_CODTIPOEGRESO, Original_CODUSUARIO, Original_CODEMPRESA, Original_NUMTIPOEGRESO, Original_DESTIPOEGRESO, Original_PRIORIDAD, Original_FECGRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJAEGRESOSTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJAEGRESOS"
            tableMapping.ColumnMappings.Add("CODEGRESO", "CODEGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODPAGANZAS", "CODPAGANZAS")
            tableMapping.ColumnMappings.Add("NUMEROCUOTA", "NUMEROCUOTA")
            tableMapping.ColumnMappings.Add("CODCOMPRA", "CODCOMPRA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("FECHAMOVIMIENTO", "FECHAMOVIMIENTO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJAEGRESOS] WHERE (([CODEGRESO] = @Original_CODEGRESO) AND ((@IsNul"& _ 
                "l_CODTIPOEGRESO = 1 AND [CODTIPOEGRESO] IS NULL) OR ([CODTIPOEGRESO] = @Original"& _ 
                "_CODTIPOEGRESO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([COD"& _ 
                "USUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] "& _ 
                "IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ((@IsNull_CODPAGANZAS = 1"& _ 
                " AND [CODPAGANZAS] IS NULL) OR ([CODPAGANZAS] = @Original_CODPAGANZAS)) AND ((@I"& _ 
                "sNull_NUMEROCUOTA = 1 AND [NUMEROCUOTA] IS NULL) OR ([NUMEROCUOTA] = @Original_N"& _ 
                "UMEROCUOTA)) AND ((@IsNull_CODCOMPRA = 1 AND [CODCOMPRA] IS NULL) OR ([CODCOMPRA"& _ 
                "] = @Original_CODCOMPRA)) AND ((@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR (["& _ 
                "NUMCAJA] = @Original_NUMCAJA)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) "& _ 
                "OR ([IMPORTE] = @Original_IMPORTE)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] "& _ 
                "IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 A"& _ 
                "ND [COTIZACION1] IS NULL) OR ([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsN"& _ 
                "ull_COTIZACION2 = 1 AND [COTIZACION2] IS NULL) OR ([COTIZACION2] = @Original_COT"& _ 
                "IZACION2)) AND ((@IsNull_FECHAMOVIMIENTO = 1 AND [FECHAMOVIMIENTO] IS NULL) OR ("& _ 
                "[FECHAMOVIMIENTO] = @Original_FECHAMOVIMIENTO)) AND ((@IsNull_FECGRA = 1 AND [FE"& _ 
                "CGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_OBSERVACION = 1 A"& _ 
                "ND [OBSERVACION] IS NULL) OR ([OBSERVACION] = @Original_OBSERVACION)) AND ((@IsN"& _ 
                "ull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCEPTO] = @Original_CONCEPTO)) A"& _ 
                "ND ((@IsNull_CODFORCOBRO = 1 AND [CODFORCOBRO] IS NULL) OR ([CODFORCOBRO] = @Ori"& _ 
                "ginal_CODFORCOBRO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPAGANZAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPAGANZAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPAGANZAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPAGANZAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMEROCUOTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCUOTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMEROCUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMEROCUOTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAMOVIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAMOVIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJAEGRESOS] ([CODEGRESO], [CODTIPOEGRESO], [CODUSUARIO], [CODEMPRES"& _ 
                "A], [CODPAGANZAS], [NUMEROCUOTA], [CODCOMPRA], [NUMCAJA], [IMPORTE], [CODMONEDA]"& _ 
                ", [COTIZACION1], [COTIZACION2], [FECHAMOVIMIENTO], [FECGRA], [OBSERVACION], [CON"& _ 
                "CEPTO], [CODFORCOBRO]) VALUES (@CODEGRESO, @CODTIPOEGRESO, @CODUSUARIO, @CODEMPR"& _ 
                "ESA, @CODPAGANZAS, @NUMEROCUOTA, @CODCOMPRA, @NUMCAJA, @IMPORTE, @CODMONEDA, @CO"& _ 
                "TIZACION1, @COTIZACION2, @FECHAMOVIMIENTO, @FECGRA, @OBSERVACION, @CONCEPTO, @CO"& _ 
                "DFORCOBRO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODEGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, CODPAGANZA"& _ 
                "S, NUMEROCUOTA, CODCOMPRA, NUMCAJA, IMPORTE, CODMONEDA, COTIZACION1, COTIZACION2"& _ 
                ", FECHAMOVIMIENTO, FECGRA, OBSERVACION, CONCEPTO, CODFORCOBRO FROM CAJAEGRESOS W"& _ 
                "HERE (CODEGRESO = @CODEGRESO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPAGANZAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPAGANZAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMEROCUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMEROCUOTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJAEGRESOS] SET [CODEGRESO] = @CODEGRESO, [CODTIPOEGRESO] = @CODTIPOEGRE"& _ 
                "SO, [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = @CODEMPRESA, [CODPAGANZAS] = @COD"& _ 
                "PAGANZAS, [NUMEROCUOTA] = @NUMEROCUOTA, [CODCOMPRA] = @CODCOMPRA, [NUMCAJA] = @N"& _ 
                "UMCAJA, [IMPORTE] = @IMPORTE, [CODMONEDA] = @CODMONEDA, [COTIZACION1] = @COTIZAC"& _ 
                "ION1, [COTIZACION2] = @COTIZACION2, [FECHAMOVIMIENTO] = @FECHAMOVIMIENTO, [FECGR"& _ 
                "A] = @FECGRA, [OBSERVACION] = @OBSERVACION, [CONCEPTO] = @CONCEPTO, [CODFORCOBRO"& _ 
                "] = @CODFORCOBRO WHERE (([CODEGRESO] = @Original_CODEGRESO) AND ((@IsNull_CODTIP"& _ 
                "OEGRESO = 1 AND [CODTIPOEGRESO] IS NULL) OR ([CODTIPOEGRESO] = @Original_CODTIPO"& _ 
                "EGRESO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO]"& _ 
                " = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL)"& _ 
                " OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ((@IsNull_CODPAGANZAS = 1 AND [CO"& _ 
                "DPAGANZAS] IS NULL) OR ([CODPAGANZAS] = @Original_CODPAGANZAS)) AND ((@IsNull_NU"& _ 
                "MEROCUOTA = 1 AND [NUMEROCUOTA] IS NULL) OR ([NUMEROCUOTA] = @Original_NUMEROCUO"& _ 
                "TA)) AND ((@IsNull_CODCOMPRA = 1 AND [CODCOMPRA] IS NULL) OR ([CODCOMPRA] = @Ori"& _ 
                "ginal_CODCOMPRA)) AND ((@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUMCAJA]"& _ 
                " = @Original_NUMCAJA)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) OR ([IMP"& _ 
                "ORTE] = @Original_IMPORTE)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL)"& _ 
                " OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 AND [COTI"& _ 
                "ZACION1] IS NULL) OR ([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTI"& _ 
                "ZACION2 = 1 AND [COTIZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2"& _ 
                ")) AND ((@IsNull_FECHAMOVIMIENTO = 1 AND [FECHAMOVIMIENTO] IS NULL) OR ([FECHAMO"& _ 
                "VIMIENTO] = @Original_FECHAMOVIMIENTO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS"& _ 
                " NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSE"& _ 
                "RVACION] IS NULL) OR ([OBSERVACION] = @Original_OBSERVACION)) AND ((@IsNull_CONC"& _ 
                "EPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCEPTO] = @Original_CONCEPTO)) AND ((@Is"& _ 
                "Null_CODFORCOBRO = 1 AND [CODFORCOBRO] IS NULL) OR ([CODFORCOBRO] = @Original_CO"& _ 
                "DFORCOBRO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODEGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, CODPAGAN"& _ 
                "ZAS, NUMEROCUOTA, CODCOMPRA, NUMCAJA, IMPORTE, CODMONEDA, COTIZACION1, COTIZACIO"& _ 
                "N2, FECHAMOVIMIENTO, FECGRA, OBSERVACION, CONCEPTO, CODFORCOBRO FROM CAJAEGRESOS"& _ 
                " WHERE (CODEGRESO = @CODEGRESO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODPAGANZAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPAGANZAS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMEROCUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMEROCUOTA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHAMOVIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODPAGANZAS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODPAGANZAS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODPAGANZAS", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODPAGANZAS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMEROCUOTA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCUOTA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMEROCUOTA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMEROCUOTA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOMPRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOMPRA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODCOMPRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECHAMOVIMIENTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECHAMOVIMIENTO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODEGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, CODPAGANZAS, NUMEROC"& _ 
                "UOTA, CODCOMPRA, NUMCAJA, IMPORTE, CODMONEDA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      COTIZACION"& _ 
                "1, COTIZACION2, FECHAMOVIMIENTO, FECGRA, OBSERVACION, CONCEPTO, CODFORCOBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FRO"& _ 
                "M         CAJAEGRESOS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" FECHAMOVIMIENTO >=convert(datetime,@FECHA1,103) "& _ 
                "AND  FECHAMOVIMIENTO<=convert(datetime,@FECHA2,103)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJAEGRESOSDataTable, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As DsCaja.CAJAEGRESOSDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.CAJAEGRESOSDataTable = New DsCaja.CAJAEGRESOSDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.CAJAEGRESOSDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "CAJAEGRESOS")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODEGRESO As Decimal,  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPAGANZAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMEROCUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAMOVIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODEGRESO,Decimal)
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPAGANZAS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODPAGANZAS.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMEROCUOTA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NUMEROCUOTA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOMPRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CODCOMPRA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAMOVIMIENTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_FECHAMOVIMIENTO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODEGRESO As Decimal,  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPAGANZAS As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMEROCUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAMOVIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODEGRESO,Decimal)
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODPAGANZAS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODPAGANZAS.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMEROCUOTA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NUMEROCUOTA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODCOMPRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CODCOMPRA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVIMIENTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FECHAMOVIMIENTO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CONCEPTO,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(16).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODEGRESO As Decimal,  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPAGANZAS As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMEROCUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAMOVIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEGRESO As Decimal,  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPAGANZAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMEROCUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAMOVIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODEGRESO,Decimal)
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODPAGANZAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODPAGANZAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMEROCUOTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NUMEROCUOTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CODCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CODCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECHAMOVIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FECHAMOVIMIENTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CONCEPTO,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_CODEGRESO,Decimal)
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(21).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(23).Value = Global.System.DBNull.Value
            End If
            If (Original_CODPAGANZAS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(Original_CODPAGANZAS.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(25).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMEROCUOTA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(Original_NUMEROCUOTA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(27).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOMPRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(Original_CODCOMPRA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(29).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(31).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(33).Value = Global.System.DBNull.Value
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(35).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(37).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(39).Value = Global.System.DBNull.Value
            End If
            If (Original_FECHAMOVIMIENTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(Original_FECHAMOVIMIENTO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(41).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(43).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(47).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(48).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(49).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODPAGANZAS As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMEROCUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal FECHAMOVIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEGRESO As Decimal,  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODPAGANZAS As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMEROCUOTA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOMPRA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECHAMOVIMIENTO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODEGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, CODPAGANZAS, NUMEROCUOTA, CODCOMPRA, NUMCAJA, IMPORTE, CODMONEDA, COTIZACION1, COTIZACION2, FECHAMOVIMIENTO, FECGRA, OBSERVACION, CONCEPTO, CODFORCOBRO, Original_CODEGRESO, Original_CODTIPOEGRESO, Original_CODUSUARIO, Original_CODEMPRESA, Original_CODPAGANZAS, Original_NUMEROCUOTA, Original_CODCOMPRA, Original_NUMCAJA, Original_IMPORTE, Original_CODMONEDA, Original_COTIZACION1, Original_COTIZACION2, Original_FECHAMOVIMIENTO, Original_FECGRA, Original_OBSERVACION, Original_CONCEPTO, Original_CODFORCOBRO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class MONEDATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "MONEDA"
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMMONEDA", "NUMMONEDA")
            tableMapping.ColumnMappings.Add("DESMONEDA", "DESMONEDA")
            tableMapping.ColumnMappings.Add("SIMBOLO", "SIMBOLO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("PRIORIDAD", "PRIORIDAD")
            tableMapping.ColumnMappings.Add("DECIMALES", "DECIMALES")
            tableMapping.ColumnMappings.Add("IMAGEN", "IMAGEN")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [MONEDA] WHERE (([CODMONEDA] = @Original_CODMONEDA) AND ((@IsNull_COD"& _ 
                "USUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) "& _ 
                "AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Origi"& _ 
                "nal_CODEMPRESA)) AND ((@IsNull_NUMMONEDA = 1 AND [NUMMONEDA] IS NULL) OR ([NUMMO"& _ 
                "NEDA] = @Original_NUMMONEDA)) AND ((@IsNull_DESMONEDA = 1 AND [DESMONEDA] IS NUL"& _ 
                "L) OR ([DESMONEDA] = @Original_DESMONEDA)) AND ((@IsNull_SIMBOLO = 1 AND [SIMBOL"& _ 
                "O] IS NULL) OR ([SIMBOLO] = @Original_SIMBOLO)) AND ((@IsNull_FECGRA = 1 AND [FE"& _ 
                "CGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_PRIORIDAD = 1 AND"& _ 
                " [PRIORIDAD] IS NULL) OR ([PRIORIDAD] = @Original_PRIORIDAD)) AND ((@IsNull_DECI"& _ 
                "MALES = 1 AND [DECIMALES] IS NULL) OR ([DECIMALES] = @Original_DECIMALES)) AND ("& _ 
                "(@IsNull_IMAGEN = 1 AND [IMAGEN] IS NULL) OR ([IMAGEN] = @Original_IMAGEN)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIMBOLO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMBOLO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIMBOLO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMBOLO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIORIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DECIMALES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DECIMALES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DECIMALES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DECIMALES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMAGEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [MONEDA] ([CODMONEDA], [CODUSUARIO], [CODEMPRESA], [NUMMONEDA], [DESM"& _ 
                "ONEDA], [SIMBOLO], [FECGRA], [PRIORIDAD], [DECIMALES], [IMAGEN]) VALUES (@CODMON"& _ 
                "EDA, @CODUSUARIO, @CODEMPRESA, @NUMMONEDA, @DESMONEDA, @SIMBOLO, @FECGRA, @PRIOR"& _ 
                "IDAD, @DECIMALES, @IMAGEN);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODMONEDA, CODUSUARIO, CODEMPRESA, NUMMONEDA"& _ 
                ", DESMONEDA, SIMBOLO, FECGRA, PRIORIDAD, DECIMALES, IMAGEN FROM MONEDA WHERE (CO"& _ 
                "DMONEDA = @CODMONEDA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIMBOLO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMBOLO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DECIMALES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DECIMALES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [MONEDA] SET [CODMONEDA] = @CODMONEDA, [CODUSUARIO] = @CODUSUARIO, [CODEMP"& _ 
                "RESA] = @CODEMPRESA, [NUMMONEDA] = @NUMMONEDA, [DESMONEDA] = @DESMONEDA, [SIMBOL"& _ 
                "O] = @SIMBOLO, [FECGRA] = @FECGRA, [PRIORIDAD] = @PRIORIDAD, [DECIMALES] = @DECI"& _ 
                "MALES, [IMAGEN] = @IMAGEN WHERE (([CODMONEDA] = @Original_CODMONEDA) AND ((@IsNu"& _ 
                "ll_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUA"& _ 
                "RIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = "& _ 
                "@Original_CODEMPRESA)) AND ((@IsNull_NUMMONEDA = 1 AND [NUMMONEDA] IS NULL) OR ("& _ 
                "[NUMMONEDA] = @Original_NUMMONEDA)) AND ((@IsNull_DESMONEDA = 1 AND [DESMONEDA] "& _ 
                "IS NULL) OR ([DESMONEDA] = @Original_DESMONEDA)) AND ((@IsNull_SIMBOLO = 1 AND ["& _ 
                "SIMBOLO] IS NULL) OR ([SIMBOLO] = @Original_SIMBOLO)) AND ((@IsNull_FECGRA = 1 A"& _ 
                "ND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_PRIORIDAD ="& _ 
                " 1 AND [PRIORIDAD] IS NULL) OR ([PRIORIDAD] = @Original_PRIORIDAD)) AND ((@IsNul"& _ 
                "l_DECIMALES = 1 AND [DECIMALES] IS NULL) OR ([DECIMALES] = @Original_DECIMALES))"& _ 
                " AND ((@IsNull_IMAGEN = 1 AND [IMAGEN] IS NULL) OR ([IMAGEN] = @Original_IMAGEN)"& _ 
                "));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODMONEDA, CODUSUARIO, CODEMPRESA, NUMMONEDA, DESMONEDA, SIMBOLO, FE"& _ 
                "CGRA, PRIORIDAD, DECIMALES, IMAGEN FROM MONEDA WHERE (CODMONEDA = @CODMONEDA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@SIMBOLO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMBOLO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DECIMALES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DECIMALES", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESMONEDA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_SIMBOLO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMBOLO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_SIMBOLO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "SIMBOLO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIORIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DECIMALES", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DECIMALES", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DECIMALES", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DECIMALES", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMAGEN", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMAGEN", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMAGEN", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODMONEDA, CODUSUARIO, CODEMPRESA, NUMMONEDA, DESMONEDA, SIMBOLO, FECG"& _ 
                "RA, PRIORIDAD, DECIMALES, IMAGEN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         MONEDA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.MONEDADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.MONEDADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.MONEDADataTable = New DsCaja.MONEDADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.MONEDADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "MONEDA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODMONEDA As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMMONEDA As String, ByVal Original_DESMONEDA As String, ByVal Original_SIMBOLO As String, ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_DECIMALES As Global.System.Nullable(Of Boolean), ByVal Original_IMAGEN As String) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODMONEDA,Decimal)
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMMONEDA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NUMMONEDA,String)
            End If
            If (Original_DESMONEDA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DESMONEDA,String)
            End If
            If (Original_SIMBOLO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_SIMBOLO,String)
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIORIDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_DECIMALES.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_DECIMALES.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_IMAGEN Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_IMAGEN,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODMONEDA As Decimal, ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMMONEDA As String, ByVal DESMONEDA As String, ByVal SIMBOLO As String, ByVal FECGRA As Global.System.Nullable(Of Date), ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal DECIMALES As Global.System.Nullable(Of Boolean), ByVal IMAGEN As String) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODMONEDA,Decimal)
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMMONEDA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NUMMONEDA,String)
            End If
            If (DESMONEDA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DESMONEDA,String)
            End If
            If (SIMBOLO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(SIMBOLO,String)
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PRIORIDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DECIMALES.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(DECIMALES.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (IMAGEN Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(IMAGEN,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODMONEDA As Decimal,  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMMONEDA As String,  _
                    ByVal DESMONEDA As String,  _
                    ByVal SIMBOLO As String,  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal PRIORIDAD As Global.System.Nullable(Of Byte),  _
                    ByVal DECIMALES As Global.System.Nullable(Of Boolean),  _
                    ByVal IMAGEN As String,  _
                    ByVal Original_CODMONEDA As Decimal,  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMMONEDA As String,  _
                    ByVal Original_DESMONEDA As String,  _
                    ByVal Original_SIMBOLO As String,  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte),  _
                    ByVal Original_DECIMALES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IMAGEN As String) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODMONEDA,Decimal)
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMMONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NUMMONEDA,String)
            End If
            If (DESMONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DESMONEDA,String)
            End If
            If (SIMBOLO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(SIMBOLO,String)
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (PRIORIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (DECIMALES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(DECIMALES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (IMAGEN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(IMAGEN,String)
            End If
            Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_CODMONEDA,Decimal)
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMMONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_NUMMONEDA,String)
            End If
            If (Original_DESMONEDA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_DESMONEDA,String)
            End If
            If (Original_SIMBOLO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_SIMBOLO,String)
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_PRIORIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_DECIMALES.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_DECIMALES.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_IMAGEN Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_IMAGEN,String)
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMMONEDA As String,  _
                    ByVal DESMONEDA As String,  _
                    ByVal SIMBOLO As String,  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal PRIORIDAD As Global.System.Nullable(Of Byte),  _
                    ByVal DECIMALES As Global.System.Nullable(Of Boolean),  _
                    ByVal IMAGEN As String,  _
                    ByVal Original_CODMONEDA As Decimal,  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMMONEDA As String,  _
                    ByVal Original_DESMONEDA As String,  _
                    ByVal Original_SIMBOLO As String,  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte),  _
                    ByVal Original_DECIMALES As Global.System.Nullable(Of Boolean),  _
                    ByVal Original_IMAGEN As String) As Integer
            Return Me.Update(Original_CODMONEDA, CODUSUARIO, CODEMPRESA, NUMMONEDA, DESMONEDA, SIMBOLO, FECGRA, PRIORIDAD, DECIMALES, IMAGEN, Original_CODMONEDA, Original_CODUSUARIO, Original_CODEMPRESA, Original_NUMMONEDA, Original_DESMONEDA, Original_SIMBOLO, Original_FECGRA, Original_PRIORIDAD, Original_DECIMALES, Original_IMAGEN)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class COTIZACIONTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "COTIZACION"
            tableMapping.ColumnMappings.Add("FECHAMOVIMIENTO", "FECHAMOVIMIENTO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("FACTORCOBRO", "FACTORCOBRO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("FACTORVENTA", "FACTORVENTA")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("DESMONEDA", "DESMONEDA")
            tableMapping.ColumnMappings.Add("SIMBOLO", "SIMBOLO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     COTIZACION.FECHAMOVIMIENTO, COTIZACION.CODMONEDA, COTIZACION.CODUSUARI"& _ 
                "O, COTIZACION.FACTORCOBRO, COTIZACION.CODEMPRESA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      COTIZA"& _ 
                "CION.FACTORVENTA, COTIZACION.FECGRA, MONEDA.DESMONEDA, MONEDA.SIMBOLO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "    COTIZACION INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MONEDA ON COTIZACION.CODMONEDA "& _ 
                "= MONEDA.CODMONEDA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.COTIZACIONDataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.COTIZACIONDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.COTIZACIONDataTable = New DsCaja.COTIZACIONDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TIPOCOBROTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TIPOCOBRO"
            tableMapping.ColumnMappings.Add("CODCOBRO", "CODCOBRO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMCOBRO", "NUMCOBRO")
            tableMapping.ColumnMappings.Add("DESCOBRO", "DESCOBRO")
            tableMapping.ColumnMappings.Add("PRIORIDAD", "PRIORIDAD")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TIPOCOBRO] WHERE (([CODCOBRO] = @Original_CODCOBRO) AND ((@IsNull_CO"& _ 
                "DUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO))"& _ 
                " AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Orig"& _ 
                "inal_CODEMPRESA)) AND ((@IsNull_NUMCOBRO = 1 AND [NUMCOBRO] IS NULL) OR ([NUMCOB"& _ 
                "RO] = @Original_NUMCOBRO)) AND ((@IsNull_DESCOBRO = 1 AND [DESCOBRO] IS NULL) OR"& _ 
                " ([DESCOBRO] = @Original_DESCOBRO)) AND ((@IsNull_PRIORIDAD = 1 AND [PRIORIDAD] "& _ 
                "IS NULL) OR ([PRIORIDAD] = @Original_PRIORIDAD)) AND ((@IsNull_FECGRA = 1 AND [F"& _ 
                "ECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIORIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TIPOCOBRO] ([CODCOBRO], [CODUSUARIO], [CODEMPRESA], [NUMCOBRO], [DES"& _ 
                "COBRO], [PRIORIDAD], [FECGRA]) VALUES (@CODCOBRO, @CODUSUARIO, @CODEMPRESA, @NUM"& _ 
                "COBRO, @DESCOBRO, @PRIORIDAD, @FECGRA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODCOBRO, CODUSUARIO, CODEMPRESA"& _ 
                ", NUMCOBRO, DESCOBRO, PRIORIDAD, FECGRA FROM TIPOCOBRO WHERE (CODCOBRO = @CODCOB"& _ 
                "RO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TIPOCOBRO] SET [CODCOBRO] = @CODCOBRO, [CODUSUARIO] = @CODUSUARIO, [CODEM"& _ 
                "PRESA] = @CODEMPRESA, [NUMCOBRO] = @NUMCOBRO, [DESCOBRO] = @DESCOBRO, [PRIORIDAD"& _ 
                "] = @PRIORIDAD, [FECGRA] = @FECGRA WHERE (([CODCOBRO] = @Original_CODCOBRO) AND "& _ 
                "((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_"& _ 
                "CODUSUARIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPR"& _ 
                "ESA] = @Original_CODEMPRESA)) AND ((@IsNull_NUMCOBRO = 1 AND [NUMCOBRO] IS NULL)"& _ 
                " OR ([NUMCOBRO] = @Original_NUMCOBRO)) AND ((@IsNull_DESCOBRO = 1 AND [DESCOBRO]"& _ 
                " IS NULL) OR ([DESCOBRO] = @Original_DESCOBRO)) AND ((@IsNull_PRIORIDAD = 1 AND "& _ 
                "[PRIORIDAD] IS NULL) OR ([PRIORIDAD] = @Original_PRIORIDAD)) AND ((@IsNull_FECGR"& _ 
                "A = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODCOBRO"& _ 
                ", CODUSUARIO, CODEMPRESA, NUMCOBRO, DESCOBRO, PRIORIDAD, FECGRA FROM TIPOCOBRO W"& _ 
                "HERE (CODCOBRO = @CODCOBRO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PRIORIDAD", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PRIORIDAD", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PRIORIDAD", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODCOBRO, CODUSUARIO, CODEMPRESA, NUMCOBRO, DESCOBRO, PRIORIDAD, FECGR"& _ 
                "A"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         TIPOCOBRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.TIPOCOBRODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.TIPOCOBRODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.TIPOCOBRODataTable = New DsCaja.TIPOCOBRODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.TIPOCOBRODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "TIPOCOBRO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODCOBRO As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMCOBRO As String, ByVal Original_DESCOBRO As String, ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODCOBRO,Decimal)
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCOBRO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_NUMCOBRO,String)
            End If
            If (Original_DESCOBRO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_DESCOBRO,String)
            End If
            If (Original_PRIORIDAD.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal CODCOBRO As Decimal, ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMCOBRO As String, ByVal DESCOBRO As String, ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODCOBRO,Decimal)
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMCOBRO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(NUMCOBRO,String)
            End If
            If (DESCOBRO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(DESCOBRO,String)
            End If
            If (PRIORIDAD.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODCOBRO As Decimal, ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMCOBRO As String, ByVal DESCOBRO As String, ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_CODCOBRO As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMCOBRO As String, ByVal Original_DESCOBRO As String, ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODCOBRO,Decimal)
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (NUMCOBRO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(NUMCOBRO,String)
            End If
            If (DESCOBRO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(DESCOBRO,String)
            End If
            If (PRIORIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_CODCOBRO,Decimal)
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCOBRO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_NUMCOBRO,String)
            End If
            If (Original_DESCOBRO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_DESCOBRO,String)
            End If
            If (Original_PRIORIDAD.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_PRIORIDAD.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal NUMCOBRO As String, ByVal DESCOBRO As String, ByVal PRIORIDAD As Global.System.Nullable(Of Byte), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_CODCOBRO As Decimal, ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_NUMCOBRO As String, ByVal Original_DESCOBRO As String, ByVal Original_PRIORIDAD As Global.System.Nullable(Of Byte), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_CODCOBRO, CODUSUARIO, CODEMPRESA, NUMCOBRO, DESCOBRO, PRIORIDAD, FECGRA, Original_CODCOBRO, Original_CODUSUARIO, Original_CODEMPRESA, Original_NUMCOBRO, Original_DESCOBRO, Original_PRIORIDAD, Original_FECGRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJACIERRETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJACIERRE"
            tableMapping.ColumnMappings.Add("NUMCIERRE", "NUMCIERRE")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("CODCOBRADOR", "CODCOBRADOR")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("FECAPERTURA", "FECAPERTURA")
            tableMapping.ColumnMappings.Add("FECCIERRE", "FECCIERRE")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJACIERRE] WHERE (([NUMCIERRE] = @Original_NUMCIERRE) AND ((@IsNull"& _ 
                "_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUMCAJA] = @Original_NUMCAJA)) AND ((@I"& _ 
                "sNull_CODCOBRADOR = 1 AND [CODCOBRADOR] IS NULL) OR ([CODCOBRADOR] = @Original_C"& _ 
                "ODCOBRADOR)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUA"& _ 
                "RIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS N"& _ 
                "ULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ((@IsNull_FECAPERTURA = 1 AND"& _ 
                " [FECAPERTURA] IS NULL) OR ([FECAPERTURA] = @Original_FECAPERTURA)) AND ((@IsNul"& _ 
                "l_FECCIERRE = 1 AND [FECCIERRE] IS NULL) OR ([FECCIERRE] = @Original_FECCIERRE))"& _ 
                " AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)"& _ 
                "))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCIERRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOBRADOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECAPERTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECAPERTURA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECAPERTURA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECAPERTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECCIERRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJACIERRE] ([NUMCIERRE], [NUMCAJA], [CODCOBRADOR], [CODUSUARIO], [C"& _ 
                "ODEMPRESA], [FECAPERTURA], [FECCIERRE], [FECGRA]) VALUES (@NUMCIERRE, @NUMCAJA, "& _ 
                "@CODCOBRADOR, @CODUSUARIO, @CODEMPRESA, @FECAPERTURA, @FECCIERRE, @FECGRA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SEL"& _ 
                "ECT NUMCIERRE, NUMCAJA, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECAPERTURA, FECCIE"& _ 
                "RRE, FECGRA FROM CAJACIERRE WHERE (NUMCIERRE = @NUMCIERRE)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCIERRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECAPERTURA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECAPERTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJACIERRE] SET [NUMCIERRE] = @NUMCIERRE, [NUMCAJA] = @NUMCAJA, [CODCOBRA"& _ 
                "DOR] = @CODCOBRADOR, [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = @CODEMPRESA, [FE"& _ 
                "CAPERTURA] = @FECAPERTURA, [FECCIERRE] = @FECCIERRE, [FECGRA] = @FECGRA WHERE (("& _ 
                "[NUMCIERRE] = @Original_NUMCIERRE) AND ((@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NU"& _ 
                "LL) OR ([NUMCAJA] = @Original_NUMCAJA)) AND ((@IsNull_CODCOBRADOR = 1 AND [CODCO"& _ 
                "BRADOR] IS NULL) OR ([CODCOBRADOR] = @Original_CODCOBRADOR)) AND ((@IsNull_CODUS"& _ 
                "UARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AN"& _ 
                "D ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Origina"& _ 
                "l_CODEMPRESA)) AND ((@IsNull_FECAPERTURA = 1 AND [FECAPERTURA] IS NULL) OR ([FEC"& _ 
                "APERTURA] = @Original_FECAPERTURA)) AND ((@IsNull_FECCIERRE = 1 AND [FECCIERRE] "& _ 
                "IS NULL) OR ([FECCIERRE] = @Original_FECCIERRE)) AND ((@IsNull_FECGRA = 1 AND [F"& _ 
                "ECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NUMCIERRE, NUMCAJA, "& _ 
                "CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECAPERTURA, FECCIERRE, FECGRA FROM CAJACIE"& _ 
                "RRE WHERE (NUMCIERRE = @NUMCIERRE)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCIERRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECAPERTURA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECAPERTURA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCIERRE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "NUMCIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOBRADOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECAPERTURA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECAPERTURA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECAPERTURA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECAPERTURA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECCIERRE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECCIERRE", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     NUMCIERRE, NUMCAJA, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECAPERTURA, "& _ 
                "FECCIERRE, FECGRA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJACIERRE where "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FECCIERRE >=convert(datetime,"& _ 
                "@FECHA1,103) AND "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FECCIERRE<=convert(datetime,@FECHA2,103)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECCIERRE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJACIERREDataTable, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As DsCaja.CAJACIERREDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.CAJACIERREDataTable = New DsCaja.CAJACIERREDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.CAJACIERREDataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "CAJACIERRE")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_NUMCIERRE As Decimal, ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal), ByVal Original_CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECAPERTURA As Global.System.Nullable(Of Date), ByVal Original_FECCIERRE As Global.System.Nullable(Of Date), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_NUMCIERRE,Decimal)
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOBRADOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_FECAPERTURA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_FECAPERTURA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_FECCIERRE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FECCIERRE.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NUMCIERRE As Decimal, ByVal NUMCAJA As Global.System.Nullable(Of Decimal), ByVal CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECAPERTURA As Global.System.Nullable(Of Date), ByVal FECCIERRE As Global.System.Nullable(Of Date), ByVal FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(NUMCIERRE,Decimal)
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODCOBRADOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECAPERTURA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(FECAPERTURA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECCIERRE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECCIERRE.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal NUMCIERRE As Decimal,  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CODCOBRADOR As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal FECAPERTURA As Global.System.Nullable(Of Date),  _
                    ByVal FECCIERRE As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_NUMCIERRE As Decimal,  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODCOBRADOR As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECAPERTURA As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECCIERRE As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NUMCIERRE,Decimal)
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODCOBRADOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (FECAPERTURA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(FECAPERTURA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECCIERRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECCIERRE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(8).Value = CType(Original_NUMCIERRE,Decimal)
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOBRADOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(Original_CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_FECAPERTURA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_FECAPERTURA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_FECCIERRE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_FECCIERRE.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NUMCAJA As Global.System.Nullable(Of Decimal), ByVal CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECAPERTURA As Global.System.Nullable(Of Date), ByVal FECCIERRE As Global.System.Nullable(Of Date), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_NUMCIERRE As Decimal, ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal), ByVal Original_CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECAPERTURA As Global.System.Nullable(Of Date), ByVal Original_FECCIERRE As Global.System.Nullable(Of Date), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_NUMCIERRE, NUMCAJA, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECAPERTURA, FECCIERRE, FECGRA, Original_NUMCIERRE, Original_NUMCAJA, Original_CODCOBRADOR, Original_CODUSUARIO, Original_CODEMPRESA, Original_FECAPERTURA, Original_FECCIERRE, Original_FECGRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJASALDOTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJASALDO"
            tableMapping.ColumnMappings.Add("NUMCIERRE", "NUMCIERRE")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("SALDOINICIAL", "SALDOINICIAL")
            tableMapping.ColumnMappings.Add("SALDOCIERRE", "SALDOCIERRE")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            tableMapping.ColumnMappings.Add("DESMONEDA", "DESMONEDA")
            tableMapping.ColumnMappings.Add("DESFORCOBRO", "DESFORCOBRO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        MONEDA.DESMONEDA, TIPOFORMACOBRO.DESFORCOBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM            CAJAS"& _ 
                "ALDO INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         MONEDA ON CAJASALDO.CODMONEDA = MONEDA"& _ 
                ".CODMONEDA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                         TIPOFORMACOBRO ON CAJASALDO.CODF"& _ 
                "ORCOBRO = TIPOFORMACOBRO.CODFORCOBRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJASALDODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.CAJASALDODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.CAJASALDODataTable = New DsCaja.CAJASALDODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJA"
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("NUMEROCAJA", "NUMEROCAJA")
            tableMapping.ColumnMappings.Add("CODSUCURSAL", "CODSUCURSAL")
            tableMapping.ColumnMappings.Add("CODCOBRADOR", "CODCOBRADOR")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJA] WHERE (([NUMCAJA] = @Original_NUMCAJA) AND ((@IsNull_NUMEROCAJ"& _ 
                "A = 1 AND [NUMEROCAJA] IS NULL) OR ([NUMEROCAJA] = @Original_NUMEROCAJA)) AND (("& _ 
                "@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) OR ([CODSUCURSAL] = @Original"& _ 
                "_CODSUCURSAL)) AND ((@IsNull_CODCOBRADOR = 1 AND [CODCOBRADOR] IS NULL) OR ([COD"& _ 
                "COBRADOR] = @Original_CODCOBRADOR)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUSUARIO"& _ 
                "] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRESA = "& _ 
                "1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ((@IsN"& _ 
                "ull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_FECGRA)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMEROCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMEROCAJA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOBRADOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJA] ([NUMCAJA], [NUMEROCAJA], [CODSUCURSAL], [CODCOBRADOR], [CODUS"& _ 
                "UARIO], [CODEMPRESA], [FECGRA]) VALUES (@NUMCAJA, @NUMEROCAJA, @CODSUCURSAL, @CO"& _ 
                "DCOBRADOR, @CODUSUARIO, @CODEMPRESA, @FECGRA);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NUMCAJA, NUMEROCAJA, CODS"& _ 
                "UCURSAL, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECGRA FROM CAJA WHERE (NUMCAJA = "& _ 
                "@NUMCAJA)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMEROCAJA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJA] SET [NUMCAJA] = @NUMCAJA, [NUMEROCAJA] = @NUMEROCAJA, [CODSUCURSAL]"& _ 
                " = @CODSUCURSAL, [CODCOBRADOR] = @CODCOBRADOR, [CODUSUARIO] = @CODUSUARIO, [CODE"& _ 
                "MPRESA] = @CODEMPRESA, [FECGRA] = @FECGRA WHERE (([NUMCAJA] = @Original_NUMCAJA)"& _ 
                " AND ((@IsNull_NUMEROCAJA = 1 AND [NUMEROCAJA] IS NULL) OR ([NUMEROCAJA] = @Orig"& _ 
                "inal_NUMEROCAJA)) AND ((@IsNull_CODSUCURSAL = 1 AND [CODSUCURSAL] IS NULL) OR (["& _ 
                "CODSUCURSAL] = @Original_CODSUCURSAL)) AND ((@IsNull_CODCOBRADOR = 1 AND [CODCOB"& _ 
                "RADOR] IS NULL) OR ([CODCOBRADOR] = @Original_CODCOBRADOR)) AND ((@IsNull_CODUSU"& _ 
                "ARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND"& _ 
                " ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original"& _ 
                "_CODEMPRESA)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Ori"& _ 
                "ginal_FECGRA)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT NUMCAJA, NUMEROCAJA, CODSUCURSAL, CODCOBRADOR, CODUSUAR"& _ 
                "IO, CODEMPRESA, FECGRA FROM CAJA WHERE (NUMCAJA = @NUMCAJA)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMEROCAJA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMEROCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMEROCAJA", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMEROCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODSUCURSAL", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODSUCURSAL", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODSUCURSAL", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODCOBRADOR", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODCOBRADOR", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODCOBRADOR", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT NUMCAJA, NUMEROCAJA, CODSUCURSAL, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FEC"& _ 
                "GRA FROM CAJA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJADataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.CAJADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.CAJADataTable = New DsCaja.CAJADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.CAJADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "CAJA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_NUMCAJA As Decimal, ByVal Original_NUMEROCAJA As String, ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal Original_CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_NUMCAJA,Decimal)
            If (Original_NUMEROCAJA Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_NUMEROCAJA,String)
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOBRADOR.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal NUMCAJA As Decimal, ByVal NUMEROCAJA As String, ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(NUMCAJA,Decimal)
            If (NUMEROCAJA Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(NUMEROCAJA,String)
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODCOBRADOR.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NUMCAJA As Decimal, ByVal NUMEROCAJA As String, ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_NUMCAJA As Decimal, ByVal Original_NUMEROCAJA As String, ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal Original_CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(NUMCAJA,Decimal)
            If (NUMEROCAJA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(NUMEROCAJA,String)
            End If
            If (CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODCOBRADOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_NUMCAJA,Decimal)
            If (Original_NUMEROCAJA Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_NUMEROCAJA,String)
            End If
            If (Original_CODSUCURSAL.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_CODSUCURSAL.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_CODCOBRADOR.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_CODCOBRADOR.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(16).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(17).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(19).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal NUMEROCAJA As String, ByVal CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal Original_NUMCAJA As Decimal, ByVal Original_NUMEROCAJA As String, ByVal Original_CODSUCURSAL As Global.System.Nullable(Of Decimal), ByVal Original_CODCOBRADOR As Global.System.Nullable(Of Decimal), ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal), ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal), ByVal Original_FECGRA As Global.System.Nullable(Of Date)) As Integer
            Return Me.Update(Original_NUMCAJA, NUMEROCAJA, CODSUCURSAL, CODCOBRADOR, CODUSUARIO, CODEMPRESA, FECGRA, Original_NUMCAJA, Original_NUMEROCAJA, Original_CODSUCURSAL, Original_CODCOBRADOR, Original_CODUSUARIO, Original_CODEMPRESA, Original_FECGRA)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class APERTURACAJATableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "APERTURACAJA"
            tableMapping.ColumnMappings.Add("CODINGRESO", "CODINGRESO")
            tableMapping.ColumnMappings.Add("TIPOINGRESO", "TIPOINGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("VUELTO", "VUELTO")
            tableMapping.ColumnMappings.Add("FECINGRESO", "FECINGRESO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [CAJAINGRESOS] WHERE (([CODINGRESO] = @Original_CODINGRESO) AND ((@Is"& _ 
                "Null_TIPOINGRESO = 1 AND [TIPOINGRESO] IS NULL) OR ([TIPOINGRESO] = @Original_TI"& _ 
                "POINGRESO)) AND ((@IsNull_CODTIPOEGRESO = 1 AND [CODTIPOEGRESO] IS NULL) OR ([CO"& _ 
                "DTIPOEGRESO] = @Original_CODTIPOEGRESO)) AND ((@IsNull_CODUSUARIO = 1 AND [CODUS"& _ 
                "UARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUARIO)) AND ((@IsNull_CODEMPRE"& _ 
                "SA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = @Original_CODEMPRESA)) AND ("& _ 
                "(@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUMCAJA] = @Original_NUMCAJA)) "& _ 
                "AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) OR ([CONCEPTO] = @Original_CO"& _ 
                "NCEPTO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA] IS NULL) OR ([CODMONEDA] = "& _ 
                "@Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 AND [COTIZACION1] IS NULL) O"& _ 
                "R ([COTIZACION1] = @Original_COTIZACION1)) AND ((@IsNull_COTIZACION2 = 1 AND [CO"& _ 
                "TIZACION2] IS NULL) OR ([COTIZACION2] = @Original_COTIZACION2)) AND ((@IsNull_IM"& _ 
                "PORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = @Original_IMPORTE)) AND ((@IsNu"& _ 
                "ll_VUELTO = 1 AND [VUELTO] IS NULL) OR ([VUELTO] = @Original_VUELTO)) AND ((@IsN"& _ 
                "ull_FECINGRESO = 1 AND [FECINGRESO] IS NULL) OR ([FECINGRESO] = @Original_FECING"& _ 
                "RESO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original_F"& _ 
                "ECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSERVACION] IS NULL) OR ([OBSERVACIO"& _ 
                "N] = @Original_OBSERVACION)) AND ((@IsNull_CODFORCOBRO = 1 AND [CODFORCOBRO] IS "& _ 
                "NULL) OR ([CODFORCOBRO] = @Original_CODFORCOBRO)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VUELTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VUELTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [CAJAINGRESOS] ([CODINGRESO], [TIPOINGRESO], [CODTIPOEGRESO], [CODUSU"& _ 
                "ARIO], [CODEMPRESA], [NUMCAJA], [CONCEPTO], [CODMONEDA], [COTIZACION1], [COTIZAC"& _ 
                "ION2], [IMPORTE], [VUELTO], [FECINGRESO], [FECGRA], [OBSERVACION], [CODFORCOBRO]"& _ 
                ") VALUES (@CODINGRESO, @TIPOINGRESO, @CODTIPOEGRESO, @CODUSUARIO, @CODEMPRESA, @"& _ 
                "NUMCAJA, @CONCEPTO, @CODMONEDA, @COTIZACION1, @COTIZACION2, @IMPORTE, @VUELTO, @"& _ 
                "FECINGRESO, @FECGRA, @OBSERVACION, @CODFORCOBRO);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODINGRESO, TIPOINGRES"& _ 
                "O, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA, CONCEPTO, CODMONEDA, COTIZACI"& _ 
                "ON1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO "& _ 
                "FROM CAJAINGRESOS WHERE (CODINGRESO = @CODINGRESO)"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [CAJAINGRESOS] SET [CODINGRESO] = @CODINGRESO, [TIPOINGRESO] = @TIPOINGRES"& _ 
                "O, [CODTIPOEGRESO] = @CODTIPOEGRESO, [CODUSUARIO] = @CODUSUARIO, [CODEMPRESA] = "& _ 
                "@CODEMPRESA, [NUMCAJA] = @NUMCAJA, [CONCEPTO] = @CONCEPTO, [CODMONEDA] = @CODMON"& _ 
                "EDA, [COTIZACION1] = @COTIZACION1, [COTIZACION2] = @COTIZACION2, [IMPORTE] = @IM"& _ 
                "PORTE, [VUELTO] = @VUELTO, [FECINGRESO] = @FECINGRESO, [FECGRA] = @FECGRA, [OBSE"& _ 
                "RVACION] = @OBSERVACION, [CODFORCOBRO] = @CODFORCOBRO WHERE (([CODINGRESO] = @Or"& _ 
                "iginal_CODINGRESO) AND ((@IsNull_TIPOINGRESO = 1 AND [TIPOINGRESO] IS NULL) OR ("& _ 
                "[TIPOINGRESO] = @Original_TIPOINGRESO)) AND ((@IsNull_CODTIPOEGRESO = 1 AND [COD"& _ 
                "TIPOEGRESO] IS NULL) OR ([CODTIPOEGRESO] = @Original_CODTIPOEGRESO)) AND ((@IsNu"& _ 
                "ll_CODUSUARIO = 1 AND [CODUSUARIO] IS NULL) OR ([CODUSUARIO] = @Original_CODUSUA"& _ 
                "RIO)) AND ((@IsNull_CODEMPRESA = 1 AND [CODEMPRESA] IS NULL) OR ([CODEMPRESA] = "& _ 
                "@Original_CODEMPRESA)) AND ((@IsNull_NUMCAJA = 1 AND [NUMCAJA] IS NULL) OR ([NUM"& _ 
                "CAJA] = @Original_NUMCAJA)) AND ((@IsNull_CONCEPTO = 1 AND [CONCEPTO] IS NULL) O"& _ 
                "R ([CONCEPTO] = @Original_CONCEPTO)) AND ((@IsNull_CODMONEDA = 1 AND [CODMONEDA]"& _ 
                " IS NULL) OR ([CODMONEDA] = @Original_CODMONEDA)) AND ((@IsNull_COTIZACION1 = 1 "& _ 
                "AND [COTIZACION1] IS NULL) OR ([COTIZACION1] = @Original_COTIZACION1)) AND ((@Is"& _ 
                "Null_COTIZACION2 = 1 AND [COTIZACION2] IS NULL) OR ([COTIZACION2] = @Original_CO"& _ 
                "TIZACION2)) AND ((@IsNull_IMPORTE = 1 AND [IMPORTE] IS NULL) OR ([IMPORTE] = @Or"& _ 
                "iginal_IMPORTE)) AND ((@IsNull_VUELTO = 1 AND [VUELTO] IS NULL) OR ([VUELTO] = @"& _ 
                "Original_VUELTO)) AND ((@IsNull_FECINGRESO = 1 AND [FECINGRESO] IS NULL) OR ([FE"& _ 
                "CINGRESO] = @Original_FECINGRESO)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL"& _ 
                ") OR ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_OBSERVACION = 1 AND [OBSERVACI"& _ 
                "ON] IS NULL) OR ([OBSERVACION] = @Original_OBSERVACION)) AND ((@IsNull_CODFORCOB"& _ 
                "RO = 1 AND [CODFORCOBRO] IS NULL) OR ([CODFORCOBRO] = @Original_CODFORCOBRO)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA,"& _ 
                " CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FEC"& _ 
                "GRA, OBSERVACION, CODFORCOBRO FROM CAJAINGRESOS WHERE (CODINGRESO = @CODINGRESO)"& _ 
                ""
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODINGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 0, "CODINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_TIPOINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_TIPOINGRESO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "TIPOINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODTIPOEGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODTIPOEGRESO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODTIPOEGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODUSUARIO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODUSUARIO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODUSUARIO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODEMPRESA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODEMPRESA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODEMPRESA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_NUMCAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CONCEPTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CONCEPTO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CONCEPTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODMONEDA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODMONEDA", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODMONEDA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION1", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION1", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION1", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION1", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COTIZACION2", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COTIZACION2", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COTIZACION2", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "COTIZACION2", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_IMPORTE", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "IMPORTE", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_IMPORTE", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "IMPORTE", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_VUELTO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "VUELTO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_VUELTO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 18, 5, "VUELTO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECINGRESO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECINGRESO", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_OBSERVACION", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_OBSERVACION", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "OBSERVACION", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CODFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.[Decimal], 0, Global.System.Data.ParameterDirection.Input, 9, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJ"& _ 
                "A, CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      IMPORT"& _ 
                "E, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJAINGRES"& _ 
                "OS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE CONCEPTO='Apertura de Caja' and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FECINGRESO >=convert(datetime,@FECHA"& _ 
                "1,103) AND FECINGRESO <=convert(datetime,@FECHA2,103)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA2", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.APERTURACAJADataTable, ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA1 As Global.System.Nullable(Of Date), ByVal FECHA2 As Global.System.Nullable(Of Date)) As DsCaja.APERTURACAJADataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (FECHA2.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(FECHA2.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.APERTURACAJADataTable = New DsCaja.APERTURACAJADataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.APERTURACAJADataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "APERTURACAJA")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete( _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODINGRESO,Decimal)
            If (Original_TIPOINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(11).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(12).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(13).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(14).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(15).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(16).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_VUELTO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = CType(Original_VUELTO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_FECINGRESO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = CType(Original_FECINGRESO.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(28).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.DeleteCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.InsertCommand.Parameters(0).Value = CType(CODINGRESO,Decimal)
            If (TIPOINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(5).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(6).Value = CType(CONCEPTO,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(7).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(8).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(9).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VUELTO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(11).Value = CType(VUELTO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECINGRESO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(12).Value = CType(FECINGRESO.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(15).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.InsertCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal CODINGRESO As Decimal,  _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.UpdateCommand.Parameters(0).Value = CType(CODINGRESO,Decimal)
            If (TIPOINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(5).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(5).Value = Global.System.DBNull.Value
            End If
            If (CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(CONCEPTO,String)
            End If
            If (CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            If (VUELTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(VUELTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (FECINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(FECINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(OBSERVACION,String)
            End If
            If (CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(Original_CODINGRESO,Decimal)
            If (Original_TIPOINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = CType(Original_TIPOINGRESO.Value,Byte)
            Else
                Me.Adapter.UpdateCommand.Parameters(17).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(18).Value = Global.System.DBNull.Value
            End If
            If (Original_CODTIPOEGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = CType(Original_CODTIPOEGRESO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(19).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(20).Value = Global.System.DBNull.Value
            End If
            If (Original_CODUSUARIO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = CType(Original_CODUSUARIO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(21).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(22).Value = Global.System.DBNull.Value
            End If
            If (Original_CODEMPRESA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = CType(Original_CODEMPRESA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(23).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(24).Value = Global.System.DBNull.Value
            End If
            If (Original_NUMCAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = CType(Original_NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(25).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(26).Value = Global.System.DBNull.Value
            End If
            If (Original_CONCEPTO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(27).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(28).Value = CType(Original_CONCEPTO,String)
            End If
            If (Original_CODMONEDA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = CType(Original_CODMONEDA.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(29).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(30).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION1.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = CType(Original_COTIZACION1.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(31).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(32).Value = Global.System.DBNull.Value
            End If
            If (Original_COTIZACION2.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = CType(Original_COTIZACION2.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(33).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(34).Value = Global.System.DBNull.Value
            End If
            If (Original_IMPORTE.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = CType(Original_IMPORTE.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(35).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(36).Value = Global.System.DBNull.Value
            End If
            If (Original_VUELTO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = CType(Original_VUELTO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(37).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(38).Value = Global.System.DBNull.Value
            End If
            If (Original_FECINGRESO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = CType(Original_FECINGRESO.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(39).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(40).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(41).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(42).Value = Global.System.DBNull.Value
            End If
            If (Original_OBSERVACION Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(43).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(44).Value = CType(Original_OBSERVACION,String)
            End If
            If (Original_CODFORCOBRO.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = CType(Original_CODFORCOBRO.Value,Decimal)
            Else
                Me.Adapter.UpdateCommand.Parameters(45).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(46).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update( _
                    ByVal TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal CONCEPTO As String,  _
                    ByVal CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal OBSERVACION As String,  _
                    ByVal CODFORCOBRO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODINGRESO As Decimal,  _
                    ByVal Original_TIPOINGRESO As Global.System.Nullable(Of Byte),  _
                    ByVal Original_CODTIPOEGRESO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODUSUARIO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CODEMPRESA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_NUMCAJA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_CONCEPTO As String,  _
                    ByVal Original_CODMONEDA As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION1 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_COTIZACION2 As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_IMPORTE As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_VUELTO As Global.System.Nullable(Of Decimal),  _
                    ByVal Original_FECINGRESO As Global.System.Nullable(Of Date),  _
                    ByVal Original_FECGRA As Global.System.Nullable(Of Date),  _
                    ByVal Original_OBSERVACION As String,  _
                    ByVal Original_CODFORCOBRO As Global.System.Nullable(Of Decimal)) As Integer
            Return Me.Update(Original_CODINGRESO, TIPOINGRESO, CODTIPOEGRESO, CODUSUARIO, CODEMPRESA, NUMCAJA, CONCEPTO, CODMONEDA, COTIZACION1, COTIZACION2, IMPORTE, VUELTO, FECINGRESO, FECGRA, OBSERVACION, CODFORCOBRO, Original_CODINGRESO, Original_TIPOINGRESO, Original_CODTIPOEGRESO, Original_CODUSUARIO, Original_CODEMPRESA, Original_NUMCAJA, Original_CONCEPTO, Original_CODMONEDA, Original_COTIZACION1, Original_COTIZACION2, Original_IMPORTE, Original_VUELTO, Original_FECINGRESO, Original_FECGRA, Original_OBSERVACION, Original_CODFORCOBRO)
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class APERTURADETALLETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "APERTURADETALLE"
            tableMapping.ColumnMappings.Add("CODINGRESO", "CODINGRESO")
            tableMapping.ColumnMappings.Add("TIPOINGRESO", "TIPOINGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("VUELTO", "VUELTO")
            tableMapping.ColumnMappings.Add("FECINGRESO", "FECINGRESO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            tableMapping.ColumnMappings.Add("DESUSUARIO", "DESUSUARIO")
            tableMapping.ColumnMappings.Add("DESMONEDA", "DESMONEDA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CAJAINGRESOS.CODINGRESO, CAJAINGRESOS.TIPOINGRESO, CAJAINGRESOS.CODTIP"& _ 
                "OEGRESO, CAJAINGRESOS.CODUSUARIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CAJAINGRESOS.CODEMPRES"& _ 
                "A, CAJAINGRESOS.NUMCAJA, CAJAINGRESOS.CONCEPTO, CAJAINGRESOS.CODMONEDA, CAJAINGR"& _ 
                "ESOS.COTIZACION1,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       CAJAINGRESOS.COTIZACION2, CAJAINGRESOS"& _ 
                ".IMPORTE, CAJAINGRESOS.VUELTO, CAJAINGRESOS.FECINGRESO, CAJAINGRESOS.FECGRA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     CAJAINGRESOS.OBSERVACION, CAJAINGRESOS.CODFORCOBRO, USUARIO"& _ 
                ".DESUSUARIO, MONEDA.DESMONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJAINGRESOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "           USUARIO ON CAJAINGRESOS.CODUSUARIO = USUARIO.CODUSUARIO AND CAJAINGRE"& _ 
                "SOS.CODEMPRESA = USUARIO.CODEMPRESA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MONEDA ON "& _ 
                "CAJAINGRESOS.CODMONEDA = MONEDA.CODMONEDA"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE     (CAJAINGRESOS.FECINGRESO = "& _ 
                "convert(datetime,@FECHA,103)) AND (CAJAINGRESOS.CONCEPTO = 'Apertura de Caja') A"& _ 
                "ND CAJAINGRESOS. NUMCAJA=@NUMCAJA"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@NUMCAJA", Global.System.Data.SqlDbType.[Decimal], 5, Global.System.Data.ParameterDirection.Input, 9, 0, "NUMCAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.APERTURADETALLEDataTable, ByVal FECHA As Global.System.Nullable(Of Date), ByVal NUMCAJA As Global.System.Nullable(Of Decimal)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA As Global.System.Nullable(Of Date), ByVal NUMCAJA As Global.System.Nullable(Of Decimal)) As DsCaja.APERTURADETALLEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (NUMCAJA.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(NUMCAJA.Value,Decimal)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.APERTURADETALLEDataTable = New DsCaja.APERTURADETALLEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJAINGRESOSDETALLETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJAINGRESOSDETALLE"
            tableMapping.ColumnMappings.Add("CODINGRESO", "CODINGRESO")
            tableMapping.ColumnMappings.Add("TIPOINGRESO", "TIPOINGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("VUELTO", "VUELTO")
            tableMapping.ColumnMappings.Add("FECINGRESO", "FECINGRESO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            tableMapping.ColumnMappings.Add("DESMONEDA", "DESMONEDA")
            tableMapping.ColumnMappings.Add("DESUSUARIO", "DESUSUARIO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     CAJAINGRESOS.CODINGRESO, CAJAINGRESOS.TIPOINGRESO, CAJAINGRESOS.CODTIP"& _ 
                "OEGRESO, CAJAINGRESOS.CODUSUARIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CAJAINGRESOS.CODEMPRES"& _ 
                "A, CAJAINGRESOS.NUMCAJA, CAJAINGRESOS.CONCEPTO, CAJAINGRESOS.CODMONEDA, CAJAINGR"& _ 
                "ESOS.COTIZACION1,"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                       CAJAINGRESOS.COTIZACION2, CAJAINGRESOS"& _ 
                ".IMPORTE, CAJAINGRESOS.VUELTO, CAJAINGRESOS.FECINGRESO, CAJAINGRESOS.FECGRA, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&" "& _ 
                "                     CAJAINGRESOS.OBSERVACION, CAJAINGRESOS.CODFORCOBRO, MONEDA."& _ 
                "DESMONEDA, USUARIO.DESUSUARIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM         CAJAINGRESOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"           "& _ 
                "           MONEDA ON CAJAINGRESOS.CODMONEDA = MONEDA.CODMONEDA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"     "& _ 
                "                 USUARIO ON CAJAINGRESOS.CODUSUARIO = USUARIO.CODUSUARIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"WHERE "& _ 
                "CONCEPTO<>'VENTAS' AND CONCEPTO<>'Apertura de Caja' and "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FECINGRESO =convert(da"& _ 
                "tetime,@FECHA1,103) "
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECINGRESO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJAINGRESOSDETALLEDataTable, ByVal FECHA1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA1 As Global.System.Nullable(Of Date)) As DsCaja.CAJAINGRESOSDETALLEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.CAJAINGRESOSDETALLEDataTable = New DsCaja.CAJAINGRESOSDETALLEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class CAJAEGRESOSDETALLETableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "CAJAEGRESOSDETALLE"
            tableMapping.ColumnMappings.Add("DESMONEDA", "DESMONEDA")
            tableMapping.ColumnMappings.Add("DESUSUARIO", "DESUSUARIO")
            tableMapping.ColumnMappings.Add("CODEGRESO", "CODEGRESO")
            tableMapping.ColumnMappings.Add("CODTIPOEGRESO", "CODTIPOEGRESO")
            tableMapping.ColumnMappings.Add("CODUSUARIO", "CODUSUARIO")
            tableMapping.ColumnMappings.Add("CODEMPRESA", "CODEMPRESA")
            tableMapping.ColumnMappings.Add("CODPAGANZAS", "CODPAGANZAS")
            tableMapping.ColumnMappings.Add("NUMEROCUOTA", "NUMEROCUOTA")
            tableMapping.ColumnMappings.Add("CODCOMPRA", "CODCOMPRA")
            tableMapping.ColumnMappings.Add("NUMCAJA", "NUMCAJA")
            tableMapping.ColumnMappings.Add("IMPORTE", "IMPORTE")
            tableMapping.ColumnMappings.Add("CODMONEDA", "CODMONEDA")
            tableMapping.ColumnMappings.Add("COTIZACION1", "COTIZACION1")
            tableMapping.ColumnMappings.Add("COTIZACION2", "COTIZACION2")
            tableMapping.ColumnMappings.Add("FECHAMOVIMIENTO", "FECHAMOVIMIENTO")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("OBSERVACION", "OBSERVACION")
            tableMapping.ColumnMappings.Add("CONCEPTO", "CONCEPTO")
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT     MONEDA.DESMONEDA, USUARIO.DESUSUARIO, CAJAEGRESOS.CODEGRESO, CAJAEGRES"& _ 
                "OS.CODTIPOEGRESO, CAJAEGRESOS.CODUSUARIO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CAJAEGRESOS.CO"& _ 
                "DEMPRESA, CAJAEGRESOS.CODPAGANZAS, CAJAEGRESOS.NUMEROCUOTA, CAJAEGRESOS.CODCOMPR"& _ 
                "A, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CAJAEGRESOS.NUMCAJA, CAJAEGRESOS.IMPORTE, CAJAEGRESOS"& _ 
                ".CODMONEDA, CAJAEGRESOS.COTIZACION1, CAJAEGRESOS.COTIZACION2, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                "& _ 
                "      CAJAEGRESOS.FECHAMOVIMIENTO, CAJAEGRESOS.FECGRA, CAJAEGRESOS.OBSERVACION, "& _ 
                "CAJAEGRESOS.CONCEPTO, "&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      CAJAEGRESOS.CODFORCOBRO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM     "& _ 
                "    CAJAEGRESOS INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      MONEDA ON CAJAEGRESOS.CODMONED"& _ 
                "A = MONEDA.CODMONEDA INNER JOIN"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"                      USUARIO ON CAJAEGRESOS.CO"& _ 
                "DUSUARIO = USUARIO.CODUSUARIO"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"where    CAJAEGRESOS.FECHAMOVIMIENTO=CONVERT(DATE"& _ 
                "TIME,@FECHA1,103)"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECHA1", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHAMOVIMIENTO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.CAJAEGRESOSDETALLEDataTable, ByVal FECHA1 As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData(ByVal FECHA1 As Global.System.Nullable(Of Date)) As DsCaja.CAJAEGRESOSDETALLEDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (FECHA1.HasValue = true) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(FECHA1.Value,Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsCaja.CAJAEGRESOSDETALLEDataTable = New DsCaja.CAJAEGRESOSDETALLEDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class
    
    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DataObjectAttribute(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner"& _ 
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
    Partial Public Class TIPOFORMACOBROTableAdapter
        Inherits Global.System.ComponentModel.Component
        
        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter
        
        Private _connection As Global.System.Data.SqlClient.SqlConnection
        
        Private _transaction As Global.System.Data.SqlClient.SqlTransaction
        
        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand
        
        Private _clearBeforeFill As Boolean
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.ClearBeforeFill = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter
                End If
                Return Me._adapter
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection
                End If
                Return Me._connection
            End Get
            Set
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i),Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing)  _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection
                End If
                Return Me._commandCollection
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set
                Me._clearBeforeFill = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "TIPOFORMACOBRO"
            tableMapping.ColumnMappings.Add("CODFORCOBRO", "CODFORCOBRO")
            tableMapping.ColumnMappings.Add("DESFORCOBRO", "DESFORCOBRO")
            tableMapping.ColumnMappings.Add("CAJA", "CAJA")
            tableMapping.ColumnMappings.Add("FECGRA", "FECGRA")
            tableMapping.ColumnMappings.Add("COBROS", "COBROS")
            tableMapping.ColumnMappings.Add("PAGOS", "PAGOS")
            Me._adapter.TableMappings.Add(tableMapping)
            Me._adapter.DeleteCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.DeleteCommand.Connection = Me.Connection
            Me._adapter.DeleteCommand.CommandText = "DELETE FROM [TIPOFORMACOBRO] WHERE (([CODFORCOBRO] = @Original_CODFORCOBRO) AND ("& _ 
                "(@IsNull_DESFORCOBRO = 1 AND [DESFORCOBRO] IS NULL) OR ([DESFORCOBRO] = @Origina"& _ 
                "l_DESFORCOBRO)) AND ((@IsNull_CAJA = 1 AND [CAJA] IS NULL) OR ([CAJA] = @Origina"& _ 
                "l_CAJA)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR ([FECGRA] = @Original"& _ 
                "_FECGRA)) AND ((@IsNull_COBROS = 1 AND [COBROS] IS NULL) OR ([COBROS] = @Origina"& _ 
                "l_COBROS)) AND ((@IsNull_PAGOS = 1 AND [PAGOS] IS NULL) OR ([PAGOS] = @Original_"& _ 
                "PAGOS)))"
            Me._adapter.DeleteCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESFORCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAJA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COBROS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COBROS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAGOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.DeleteCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAGOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.InsertCommand.Connection = Me.Connection
            Me._adapter.InsertCommand.CommandText = "INSERT INTO [TIPOFORMACOBRO] ([DESFORCOBRO], [CAJA], [FECGRA], [COBROS], [PAGOS])"& _ 
                " VALUES (@DESFORCOBRO, @CAJA, @FECGRA, @COBROS, @PAGOS);"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODFORCOBRO, DE"& _ 
                "SFORCOBRO, CAJA, FECGRA, COBROS, PAGOS FROM TIPOFORMACOBRO WHERE (CODFORCOBRO = "& _ 
                "SCOPE_IDENTITY())"
            Me._adapter.InsertCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFORCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAJA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COBROS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.InsertCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAGOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand = New Global.System.Data.SqlClient.SqlCommand()
            Me._adapter.UpdateCommand.Connection = Me.Connection
            Me._adapter.UpdateCommand.CommandText = "UPDATE [TIPOFORMACOBRO] SET [DESFORCOBRO] = @DESFORCOBRO, [CAJA] = @CAJA, [FECGRA"& _ 
                "] = @FECGRA, [COBROS] = @COBROS, [PAGOS] = @PAGOS WHERE (([CODFORCOBRO] = @Origi"& _ 
                "nal_CODFORCOBRO) AND ((@IsNull_DESFORCOBRO = 1 AND [DESFORCOBRO] IS NULL) OR ([D"& _ 
                "ESFORCOBRO] = @Original_DESFORCOBRO)) AND ((@IsNull_CAJA = 1 AND [CAJA] IS NULL)"& _ 
                " OR ([CAJA] = @Original_CAJA)) AND ((@IsNull_FECGRA = 1 AND [FECGRA] IS NULL) OR"& _ 
                " ([FECGRA] = @Original_FECGRA)) AND ((@IsNull_COBROS = 1 AND [COBROS] IS NULL) O"& _ 
                "R ([COBROS] = @Original_COBROS)) AND ((@IsNull_PAGOS = 1 AND [PAGOS] IS NULL) OR"& _ 
                " ([PAGOS] = @Original_PAGOS)));"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"SELECT CODFORCOBRO, DESFORCOBRO, CAJA, FECGRA, "& _ 
                "COBROS, PAGOS FROM TIPOFORMACOBRO WHERE (CODFORCOBRO = @CODFORCOBRO)"
            Me._adapter.UpdateCommand.CommandType = Global.System.Data.CommandType.Text
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@DESFORCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CAJA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@COBROS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@PAGOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOS", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CODFORCOBRO", Global.System.Data.SqlDbType.TinyInt, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_DESFORCOBRO", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFORCOBRO", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_DESFORCOBRO", Global.System.Data.SqlDbType.VarChar, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "DESFORCOBRO", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_CAJA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_CAJA", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "CAJA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_FECGRA", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_FECGRA", Global.System.Data.SqlDbType.DateTime, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "FECGRA", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_COBROS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_COBROS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "COBROS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@IsNull_PAGOS", Global.System.Data.SqlDbType.Int, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOS", Global.System.Data.DataRowVersion.Original, true, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@Original_PAGOS", Global.System.Data.SqlDbType.Bit, 0, Global.System.Data.ParameterDirection.Input, 0, 0, "PAGOS", Global.System.Data.DataRowVersion.Original, false, Nothing, "", "", ""))
            Me._adapter.UpdateCommand.Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@CODFORCOBRO", Global.System.Data.SqlDbType.TinyInt, 1, Global.System.Data.ParameterDirection.Input, 0, 0, "CODFORCOBRO", Global.System.Data.DataRowVersion.Current, false, Nothing, "", "", ""))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(0) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODFORCOBRO, DESFORCOBRO, CAJA, FECGRA, COBROS, PAGOS"&Global.Microsoft.VisualBasic.ChrW(13)&Global.Microsoft.VisualBasic.ChrW(10)&"FROM        "& _ 
                "    TIPOFORMACOBRO"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, true)>  _
        Public Overloads Overridable Function Fill(ByVal dataTable As DsCaja.TIPOFORMACOBRODataTable) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (Me.ClearBeforeFill = true) Then
                dataTable.Clear
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], true)>  _
        Public Overloads Overridable Function GetData() As DsCaja.TIPOFORMACOBRODataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            Dim dataTable As DsCaja.TIPOFORMACOBRODataTable = New DsCaja.TIPOFORMACOBRODataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataTable As DsCaja.TIPOFORMACOBRODataTable) As Integer
            Return Me.Adapter.Update(dataTable)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataSet As DsCaja) As Integer
            Return Me.Adapter.Update(dataSet, "TIPOFORMACOBRO")
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRow As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(New Global.System.Data.DataRow() {dataRow})
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")>  _
        Public Overloads Overridable Function Update(ByVal dataRows() As Global.System.Data.DataRow) As Integer
            Return Me.Adapter.Update(dataRows)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Delete, true)>  _
        Public Overloads Overridable Function Delete(ByVal Original_CODFORCOBRO As Byte, ByVal Original_DESFORCOBRO As String, ByVal Original_CAJA As Global.System.Nullable(Of Boolean), ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_COBROS As Global.System.Nullable(Of Boolean), ByVal Original_PAGOS As Global.System.Nullable(Of Boolean)) As Integer
            Me.Adapter.DeleteCommand.Parameters(0).Value = CType(Original_CODFORCOBRO,Byte)
            If (Original_DESFORCOBRO Is Nothing) Then
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.DeleteCommand.Parameters(1).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(2).Value = CType(Original_DESFORCOBRO,String)
            End If
            If (Original_CAJA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = CType(Original_CAJA.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(3).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.DeleteCommand.Parameters(5).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(6).Value = Global.System.DBNull.Value
            End If
            If (Original_COBROS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = CType(Original_COBROS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(7).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(8).Value = Global.System.DBNull.Value
            End If
            If (Original_PAGOS.HasValue = true) Then
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(0,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = CType(Original_PAGOS.Value,Boolean)
            Else
                Me.Adapter.DeleteCommand.Parameters(9).Value = CType(1,Object)
                Me.Adapter.DeleteCommand.Parameters(10).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.DeleteCommand.Connection.State
            If ((Me.Adapter.DeleteCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.DeleteCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.DeleteCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.DeleteCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Insert, true)>  _
        Public Overloads Overridable Function Insert(ByVal DESFORCOBRO As String, ByVal CAJA As Global.System.Nullable(Of Boolean), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal COBROS As Global.System.Nullable(Of Boolean), ByVal PAGOS As Global.System.Nullable(Of Boolean)) As Integer
            If (DESFORCOBRO Is Nothing) Then
                Me.Adapter.InsertCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.InsertCommand.Parameters(0).Value = CType(DESFORCOBRO,String)
            End If
            If (CAJA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(1).Value = CType(CAJA.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(2).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.InsertCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (COBROS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(3).Value = CType(COBROS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (PAGOS.HasValue = true) Then
                Me.Adapter.InsertCommand.Parameters(4).Value = CType(PAGOS.Value,Boolean)
            Else
                Me.Adapter.InsertCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.InsertCommand.Connection.State
            If ((Me.Adapter.InsertCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.InsertCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.InsertCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.InsertCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESFORCOBRO As String, ByVal CAJA As Global.System.Nullable(Of Boolean), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal COBROS As Global.System.Nullable(Of Boolean), ByVal PAGOS As Global.System.Nullable(Of Boolean), ByVal Original_CODFORCOBRO As Byte, ByVal Original_DESFORCOBRO As String, ByVal Original_CAJA As Global.System.Nullable(Of Boolean), ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_COBROS As Global.System.Nullable(Of Boolean), ByVal Original_PAGOS As Global.System.Nullable(Of Boolean), ByVal CODFORCOBRO As Byte) As Integer
            If (DESFORCOBRO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(0).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(0).Value = CType(DESFORCOBRO,String)
            End If
            If (CAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(1).Value = CType(CAJA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(2).Value = CType(FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(2).Value = Global.System.DBNull.Value
            End If
            If (COBROS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(3).Value = CType(COBROS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(3).Value = Global.System.DBNull.Value
            End If
            If (PAGOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(4).Value = CType(PAGOS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(4).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(5).Value = CType(Original_CODFORCOBRO,Byte)
            If (Original_DESFORCOBRO Is Nothing) Then
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = Global.System.DBNull.Value
            Else
                Me.Adapter.UpdateCommand.Parameters(6).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(7).Value = CType(Original_DESFORCOBRO,String)
            End If
            If (Original_CAJA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = CType(Original_CAJA.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(8).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(9).Value = Global.System.DBNull.Value
            End If
            If (Original_FECGRA.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = CType(Original_FECGRA.Value,Date)
            Else
                Me.Adapter.UpdateCommand.Parameters(10).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(11).Value = Global.System.DBNull.Value
            End If
            If (Original_COBROS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = CType(Original_COBROS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(12).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(13).Value = Global.System.DBNull.Value
            End If
            If (Original_PAGOS.HasValue = true) Then
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(0,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = CType(Original_PAGOS.Value,Boolean)
            Else
                Me.Adapter.UpdateCommand.Parameters(14).Value = CType(1,Object)
                Me.Adapter.UpdateCommand.Parameters(15).Value = Global.System.DBNull.Value
            End If
            Me.Adapter.UpdateCommand.Parameters(16).Value = CType(CODFORCOBRO,Byte)
            Dim previousConnectionState As Global.System.Data.ConnectionState = Me.Adapter.UpdateCommand.Connection.State
            If ((Me.Adapter.UpdateCommand.Connection.State And Global.System.Data.ConnectionState.Open)  _
                        <> Global.System.Data.ConnectionState.Open) Then
                Me.Adapter.UpdateCommand.Connection.Open
            End If
            Try 
                Dim returnValue As Integer = Me.Adapter.UpdateCommand.ExecuteNonQuery
                Return returnValue
            Finally
                If (previousConnectionState = Global.System.Data.ConnectionState.Closed) Then
                    Me.Adapter.UpdateCommand.Connection.Close
                End If
            End Try
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"),  _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Update, true)>  _
        Public Overloads Overridable Function Update(ByVal DESFORCOBRO As String, ByVal CAJA As Global.System.Nullable(Of Boolean), ByVal FECGRA As Global.System.Nullable(Of Date), ByVal COBROS As Global.System.Nullable(Of Boolean), ByVal PAGOS As Global.System.Nullable(Of Boolean), ByVal Original_CODFORCOBRO As Byte, ByVal Original_DESFORCOBRO As String, ByVal Original_CAJA As Global.System.Nullable(Of Boolean), ByVal Original_FECGRA As Global.System.Nullable(Of Date), ByVal Original_COBROS As Global.System.Nullable(Of Boolean), ByVal Original_PAGOS As Global.System.Nullable(Of Boolean)) As Integer
            Return Me.Update(DESFORCOBRO, CAJA, FECGRA, COBROS, PAGOS, Original_CODFORCOBRO, Original_DESFORCOBRO, Original_CAJA, Original_FECGRA, Original_COBROS, Original_PAGOS, Original_CODFORCOBRO)
        End Function
    End Class
    
    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
     Global.System.ComponentModel.ToolboxItem(true),  _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD"& _ 
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"),  _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")>  _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component
        
        Private _updateOrder As UpdateOrderOption
        
        Private _cAJAINGRESOSTableAdapter As CAJAINGRESOSTableAdapter
        
        Private _cAJACHEQUESRECIBIDOSTableAdapter As CAJACHEQUESRECIBIDOSTableAdapter
        
        Private _uSUARIOTableAdapter As USUARIOTableAdapter
        
        Private _cAJAINGRESOTableAdapter As CAJAINGRESOTableAdapter
        
        Private _tIPOEGRESOTableAdapter As TIPOEGRESOTableAdapter
        
        Private _cAJAEGRESOSTableAdapter As CAJAEGRESOSTableAdapter
        
        Private _mONEDATableAdapter As MONEDATableAdapter
        
        Private _tIPOCOBROTableAdapter As TIPOCOBROTableAdapter
        
        Private _cAJACIERRETableAdapter As CAJACIERRETableAdapter
        
        Private _cAJATableAdapter As CAJATableAdapter
        
        Private _aPERTURACAJATableAdapter As APERTURACAJATableAdapter
        
        Private _tIPOFORMACOBROTableAdapter As TIPOFORMACOBROTableAdapter
        
        Private _backupDataSetBeforeUpdate As Boolean
        
        Private _connection As Global.System.Data.IDbConnection
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set
                Me._updateOrder = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJAINGRESOSTableAdapter() As CAJAINGRESOSTableAdapter
            Get
                Return Me._cAJAINGRESOSTableAdapter
            End Get
            Set
                Me._cAJAINGRESOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJACHEQUESRECIBIDOSTableAdapter() As CAJACHEQUESRECIBIDOSTableAdapter
            Get
                Return Me._cAJACHEQUESRECIBIDOSTableAdapter
            End Get
            Set
                Me._cAJACHEQUESRECIBIDOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property USUARIOTableAdapter() As USUARIOTableAdapter
            Get
                Return Me._uSUARIOTableAdapter
            End Get
            Set
                Me._uSUARIOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJAINGRESOTableAdapter() As CAJAINGRESOTableAdapter
            Get
                Return Me._cAJAINGRESOTableAdapter
            End Get
            Set
                Me._cAJAINGRESOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TIPOEGRESOTableAdapter() As TIPOEGRESOTableAdapter
            Get
                Return Me._tIPOEGRESOTableAdapter
            End Get
            Set
                Me._tIPOEGRESOTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJAEGRESOSTableAdapter() As CAJAEGRESOSTableAdapter
            Get
                Return Me._cAJAEGRESOSTableAdapter
            End Get
            Set
                Me._cAJAEGRESOSTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property MONEDATableAdapter() As MONEDATableAdapter
            Get
                Return Me._mONEDATableAdapter
            End Get
            Set
                Me._mONEDATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TIPOCOBROTableAdapter() As TIPOCOBROTableAdapter
            Get
                Return Me._tIPOCOBROTableAdapter
            End Get
            Set
                Me._tIPOCOBROTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJACIERRETableAdapter() As CAJACIERRETableAdapter
            Get
                Return Me._cAJACIERRETableAdapter
            End Get
            Set
                Me._cAJACIERRETableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property CAJATableAdapter() As CAJATableAdapter
            Get
                Return Me._cAJATableAdapter
            End Get
            Set
                Me._cAJATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property APERTURACAJATableAdapter() As APERTURACAJATableAdapter
            Get
                Return Me._aPERTURACAJATableAdapter
            End Get
            Set
                Me._aPERTURACAJATableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.EditorAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microso"& _ 
            "ft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3"& _ 
            "a", "System.Drawing.Design.UITypeEditor")>  _
        Public Property TIPOFORMACOBROTableAdapter() As TIPOFORMACOBROTableAdapter
            Get
                Return Me._tIPOFORMACOBROTableAdapter
            End Get
            Set
                Me._tIPOFORMACOBROTableAdapter = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                If ((Not (Me._cAJAINGRESOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJAINGRESOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJAINGRESOSTableAdapter.Connection
                End If
                If ((Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJACHEQUESRECIBIDOSTableAdapter.Connection
                End If
                If ((Not (Me._uSUARIOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._uSUARIOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._uSUARIOTableAdapter.Connection
                End If
                If ((Not (Me._cAJAINGRESOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJAINGRESOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJAINGRESOTableAdapter.Connection
                End If
                If ((Not (Me._tIPOEGRESOTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tIPOEGRESOTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tIPOEGRESOTableAdapter.Connection
                End If
                If ((Not (Me._cAJAEGRESOSTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJAEGRESOSTableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJAEGRESOSTableAdapter.Connection
                End If
                If ((Not (Me._mONEDATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._mONEDATableAdapter.Connection) Is Nothing)) Then
                    Return Me._mONEDATableAdapter.Connection
                End If
                If ((Not (Me._tIPOCOBROTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tIPOCOBROTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tIPOCOBROTableAdapter.Connection
                End If
                If ((Not (Me._cAJACIERRETableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJACIERRETableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJACIERRETableAdapter.Connection
                End If
                If ((Not (Me._cAJATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._cAJATableAdapter.Connection) Is Nothing)) Then
                    Return Me._cAJATableAdapter.Connection
                End If
                If ((Not (Me._aPERTURACAJATableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._aPERTURACAJATableAdapter.Connection) Is Nothing)) Then
                    Return Me._aPERTURACAJATableAdapter.Connection
                End If
                If ((Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing)  _
                            AndAlso (Not (Me._tIPOFORMACOBROTableAdapter.Connection) Is Nothing)) Then
                    Return Me._tIPOFORMACOBROTableAdapter.Connection
                End If
                Return Nothing
            End Get
            Set
                Me._connection = value
            End Set
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                If (Not (Me._cAJAINGRESOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._uSUARIOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cAJAINGRESOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tIPOEGRESOTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cAJAEGRESOSTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._mONEDATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tIPOCOBROTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cAJACIERRETableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._cAJATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._aPERTURACAJATableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                If (Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing) Then
                    count = (count + 1)
                End If
                Return count
            End Get
        End Property
        
        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateUpdatedRows(ByVal dataSet As DsCaja, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._uSUARIOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.USUARIO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._uSUARIOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tIPOCOBROTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TIPOCOBRO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tIPOCOBROTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._mONEDATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.MONEDA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._mONEDATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJACIERRETableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJACIERRE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJACIERRETableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tIPOEGRESOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TIPOEGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tIPOEGRESOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.TIPOFORMACOBRO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._tIPOFORMACOBROTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._aPERTURACAJATableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.APERTURACAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._aPERTURACAJATableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJAEGRESOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJAEGRESOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJAEGRESOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJAINGRESOTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJAINGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJAINGRESOTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJACHEQUESRECIBIDOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJACHEQUESRECIBIDOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            If (Not (Me._cAJAINGRESOSTableAdapter) Is Nothing) Then
                Dim updatedRows() As Global.System.Data.DataRow = dataSet.CAJAINGRESOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.ModifiedCurrent)
                updatedRows = Me.GetRealUpdatedRows(updatedRows, allAddedRows)
                If ((Not (updatedRows) Is Nothing)  _
                            AndAlso (0 < updatedRows.Length)) Then
                    result = (result + Me._cAJAINGRESOSTableAdapter.Update(updatedRows))
                    allChangedRows.AddRange(updatedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateInsertedRows(ByVal dataSet As DsCaja, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._uSUARIOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.USUARIO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._uSUARIOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tIPOCOBROTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TIPOCOBRO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tIPOCOBROTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._mONEDATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.MONEDA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._mONEDATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJACIERRETableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJACIERRE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJACIERRETableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tIPOEGRESOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TIPOEGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tIPOEGRESOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.TIPOFORMACOBRO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._tIPOFORMACOBROTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._aPERTURACAJATableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.APERTURACAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._aPERTURACAJATableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJAEGRESOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJAEGRESOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJAEGRESOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJAINGRESOTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJAINGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJAINGRESOTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJACHEQUESRECIBIDOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJACHEQUESRECIBIDOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            If (Not (Me._cAJAINGRESOSTableAdapter) Is Nothing) Then
                Dim addedRows() As Global.System.Data.DataRow = dataSet.CAJAINGRESOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Added)
                If ((Not (addedRows) Is Nothing)  _
                            AndAlso (0 < addedRows.Length)) Then
                    result = (result + Me._cAJAINGRESOSTableAdapter.Update(addedRows))
                    allAddedRows.AddRange(addedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function UpdateDeletedRows(ByVal dataSet As DsCaja, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            If (Not (Me._cAJAINGRESOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJAINGRESOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJAINGRESOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJACHEQUESRECIBIDOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJACHEQUESRECIBIDOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cAJAINGRESOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJAINGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJAINGRESOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cAJAEGRESOSTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJAEGRESOS.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJAEGRESOSTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._aPERTURACAJATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.APERTURACAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._aPERTURACAJATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TIPOFORMACOBRO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tIPOFORMACOBROTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tIPOEGRESOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TIPOEGRESO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tIPOEGRESOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cAJACIERRETableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJACIERRE.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJACIERRETableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._mONEDATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.MONEDA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._mONEDATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._tIPOCOBROTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.TIPOCOBRO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._tIPOCOBROTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._cAJATableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.CAJA.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._cAJATableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            If (Not (Me._uSUARIOTableAdapter) Is Nothing) Then
                Dim deletedRows() As Global.System.Data.DataRow = dataSet.USUARIO.Select(Nothing, Nothing, Global.System.Data.DataViewRowState.Deleted)
                If ((Not (deletedRows) Is Nothing)  _
                            AndAlso (0 < deletedRows.Length)) Then
                    result = (result + Me._uSUARIOTableAdapter.Update(deletedRows))
                    allChangedRows.AddRange(deletedRows)
                End If
            End If
            Return result
        End Function
        
        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing)  _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing)  _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = false) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function
        
        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overridable Function UpdateAll(ByVal dataSet As DsCaja) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = false) Then
                Return 0
            End If
            If ((Not (Me._cAJAINGRESOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJAINGRESOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJACHEQUESRECIBIDOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._uSUARIOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._uSUARIOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cAJAINGRESOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJAINGRESOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tIPOEGRESOTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tIPOEGRESOTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cAJAEGRESOSTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJAEGRESOSTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._mONEDATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._mONEDATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tIPOCOBROTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tIPOCOBROTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cAJACIERRETableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJACIERRETableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._cAJATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._cAJATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._aPERTURACAJATableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._aPERTURACAJATableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            If ((Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing)  _
                        AndAlso (Me.MatchTableAdapterConnection(Me._tIPOFORMACOBROTableAdapter.Connection) = false)) Then
                Throw New Global.System.ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection s"& _ 
                        "tring.")
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana"& _ 
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = false
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken)  _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open
                workConnOpened = true
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa"& _ 
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try 
                '---- Prepare for update -----------
                '
                If (Not (Me._cAJAINGRESOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJAINGRESOSTableAdapter, Me._cAJAINGRESOSTableAdapter.Connection)
                    Me._cAJAINGRESOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJAINGRESOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJAINGRESOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJAINGRESOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJAINGRESOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJACHEQUESRECIBIDOSTableAdapter, Me._cAJACHEQUESRECIBIDOSTableAdapter.Connection)
                    Me._cAJACHEQUESRECIBIDOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJACHEQUESRECIBIDOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJACHEQUESRECIBIDOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJACHEQUESRECIBIDOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJACHEQUESRECIBIDOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._uSUARIOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._uSUARIOTableAdapter, Me._uSUARIOTableAdapter.Connection)
                    Me._uSUARIOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._uSUARIOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._uSUARIOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._uSUARIOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._uSUARIOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cAJAINGRESOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJAINGRESOTableAdapter, Me._cAJAINGRESOTableAdapter.Connection)
                    Me._cAJAINGRESOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJAINGRESOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJAINGRESOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJAINGRESOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJAINGRESOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tIPOEGRESOTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tIPOEGRESOTableAdapter, Me._tIPOEGRESOTableAdapter.Connection)
                    Me._tIPOEGRESOTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tIPOEGRESOTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tIPOEGRESOTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tIPOEGRESOTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tIPOEGRESOTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cAJAEGRESOSTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJAEGRESOSTableAdapter, Me._cAJAEGRESOSTableAdapter.Connection)
                    Me._cAJAEGRESOSTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJAEGRESOSTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJAEGRESOSTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJAEGRESOSTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJAEGRESOSTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._mONEDATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._mONEDATableAdapter, Me._mONEDATableAdapter.Connection)
                    Me._mONEDATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._mONEDATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._mONEDATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._mONEDATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._mONEDATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tIPOCOBROTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tIPOCOBROTableAdapter, Me._tIPOCOBROTableAdapter.Connection)
                    Me._tIPOCOBROTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tIPOCOBROTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tIPOCOBROTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tIPOCOBROTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tIPOCOBROTableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cAJACIERRETableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJACIERRETableAdapter, Me._cAJACIERRETableAdapter.Connection)
                    Me._cAJACIERRETableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJACIERRETableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJACIERRETableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJACIERRETableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJACIERRETableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._cAJATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._cAJATableAdapter, Me._cAJATableAdapter.Connection)
                    Me._cAJATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._cAJATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._cAJATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._cAJATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._aPERTURACAJATableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._aPERTURACAJATableAdapter, Me._aPERTURACAJATableAdapter.Connection)
                    Me._aPERTURACAJATableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._aPERTURACAJATableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._aPERTURACAJATableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._aPERTURACAJATableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._aPERTURACAJATableAdapter.Adapter)
                    End If
                End If
                If (Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing) Then
                    revertConnections.Add(Me._tIPOFORMACOBROTableAdapter, Me._tIPOFORMACOBROTableAdapter.Connection)
                    Me._tIPOFORMACOBROTableAdapter.Connection = CType(workConnection,Global.System.Data.SqlClient.SqlConnection)
                    Me._tIPOFORMACOBROTableAdapter.Transaction = CType(workTransaction,Global.System.Data.SqlClient.SqlTransaction)
                    If Me._tIPOFORMACOBROTableAdapter.Adapter.AcceptChangesDuringUpdate Then
                        Me._tIPOFORMACOBROTableAdapter.Adapter.AcceptChangesDuringUpdate = false
                        adaptersWithAcceptChangesDuringUpdate.Add(Me._tIPOFORMACOBROTableAdapter.Adapter)
                    End If
                End If
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges
                            row.SetAdded
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close
                End If
                If (Not (Me._cAJAINGRESOSTableAdapter) Is Nothing) Then
                    Me._cAJAINGRESOSTableAdapter.Connection = CType(revertConnections(Me._cAJAINGRESOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJAINGRESOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cAJACHEQUESRECIBIDOSTableAdapter) Is Nothing) Then
                    Me._cAJACHEQUESRECIBIDOSTableAdapter.Connection = CType(revertConnections(Me._cAJACHEQUESRECIBIDOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJACHEQUESRECIBIDOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._uSUARIOTableAdapter) Is Nothing) Then
                    Me._uSUARIOTableAdapter.Connection = CType(revertConnections(Me._uSUARIOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._uSUARIOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cAJAINGRESOTableAdapter) Is Nothing) Then
                    Me._cAJAINGRESOTableAdapter.Connection = CType(revertConnections(Me._cAJAINGRESOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJAINGRESOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tIPOEGRESOTableAdapter) Is Nothing) Then
                    Me._tIPOEGRESOTableAdapter.Connection = CType(revertConnections(Me._tIPOEGRESOTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tIPOEGRESOTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cAJAEGRESOSTableAdapter) Is Nothing) Then
                    Me._cAJAEGRESOSTableAdapter.Connection = CType(revertConnections(Me._cAJAEGRESOSTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJAEGRESOSTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._mONEDATableAdapter) Is Nothing) Then
                    Me._mONEDATableAdapter.Connection = CType(revertConnections(Me._mONEDATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._mONEDATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tIPOCOBROTableAdapter) Is Nothing) Then
                    Me._tIPOCOBROTableAdapter.Connection = CType(revertConnections(Me._tIPOCOBROTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tIPOCOBROTableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cAJACIERRETableAdapter) Is Nothing) Then
                    Me._cAJACIERRETableAdapter.Connection = CType(revertConnections(Me._cAJACIERRETableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJACIERRETableAdapter.Transaction = Nothing
                End If
                If (Not (Me._cAJATableAdapter) Is Nothing) Then
                    Me._cAJATableAdapter.Connection = CType(revertConnections(Me._cAJATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._cAJATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._aPERTURACAJATableAdapter) Is Nothing) Then
                    Me._aPERTURACAJATableAdapter.Connection = CType(revertConnections(Me._aPERTURACAJATableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._aPERTURACAJATableAdapter.Transaction = Nothing
                End If
                If (Not (Me._tIPOFORMACOBROTableAdapter) Is Nothing) Then
                    Me._tIPOFORMACOBROTableAdapter.Connection = CType(revertConnections(Me._tIPOFORMACOBROTableAdapter),Global.System.Data.SqlClient.SqlConnection)
                    Me._tIPOFORMACOBROTableAdapter.Transaction = Nothing
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = true
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return true
            End If
            If ((Me.Connection Is Nothing)  _
                        OrElse (inputConnection Is Nothing)) Then
                Return true
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return true
            End If
            Return false
        End Function
        
        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Enum UpdateOrderOption
            
            InsertUpdateDelete = 0
            
            UpdateInsertDelete = 1
        End Enum
        
        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)
            
            Private _relation As Global.System.Data.DataRelation
            
            Private _childFirst As Integer
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing)  _
                            AndAlso (traversedRows.ContainsKey(parent) = false))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing)  _
                                AndAlso (traversedRows.ContainsKey(parent) = false))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function
            
            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing)  _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
