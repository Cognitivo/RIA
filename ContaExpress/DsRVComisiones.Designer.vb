'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.34014
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On



'''<summary>
'''Represents a strongly typed in-memory cache of data.
'''</summary>
<Global.System.Serializable(),  _
 Global.System.ComponentModel.DesignerCategoryAttribute("code"),  _
 Global.System.ComponentModel.ToolboxItem(true),  _
 Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedDataSetSchema"),  _
 Global.System.Xml.Serialization.XmlRootAttribute("DsRVComisiones"),  _
 Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.DataSet")>  _
Partial Public Class DsRVComisiones
    Inherits Global.System.Data.DataSet
    
    Private tableComisionVendedorCobranza As ComisionVendedorCobranzaDataTable
    
    Private tableComisionVendedorFacturacion As ComisionVendedorFacturacionDataTable
    
    Private tableComisionVendedorCobrDet As ComisionVendedorCobrDetDataTable
    
    Private tableComisionVendedorCobranzaTipoVenta As ComisionVendedorCobranzaTipoVentaDataTable
    
    Private tableComisionNotasCredito As ComisionNotasCreditoDataTable
    
    Private _schemaSerializationMode As Global.System.Data.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Sub New()
        MyBase.New
        Me.BeginInit
        Me.InitClass
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler MyBase.Relations.CollectionChanged, schemaChangedHandler
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
        MyBase.New(info, context, false)
        If (Me.IsBinarySerialized(info, context) = true) Then
            Me.InitVars(false)
            Dim schemaChangedHandler1 As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
            AddHandler Me.Tables.CollectionChanged, schemaChangedHandler1
            AddHandler Me.Relations.CollectionChanged, schemaChangedHandler1
            Return
        End If
        Dim strSchema As String = CType(info.GetValue("XmlSchema", GetType(String)),String)
        If (Me.DetermineSchemaSerializationMode(info, context) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
            If (Not (ds.Tables("ComisionVendedorCobranza")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorCobranzaDataTable(ds.Tables("ComisionVendedorCobranza")))
            End If
            If (Not (ds.Tables("ComisionVendedorFacturacion")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorFacturacionDataTable(ds.Tables("ComisionVendedorFacturacion")))
            End If
            If (Not (ds.Tables("ComisionVendedorCobrDet")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorCobrDetDataTable(ds.Tables("ComisionVendedorCobrDet")))
            End If
            If (Not (ds.Tables("ComisionVendedorCobranzaTipoVenta")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorCobranzaTipoVentaDataTable(ds.Tables("ComisionVendedorCobranzaTipoVenta")))
            End If
            If (Not (ds.Tables("ComisionNotasCredito")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionNotasCreditoDataTable(ds.Tables("ComisionNotasCredito")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXmlSchema(New Global.System.Xml.XmlTextReader(New Global.System.IO.StringReader(strSchema)))
        End If
        Me.GetSerializationData(info, context)
        Dim schemaChangedHandler As Global.System.ComponentModel.CollectionChangeEventHandler = AddressOf Me.SchemaChanged
        AddHandler MyBase.Tables.CollectionChanged, schemaChangedHandler
        AddHandler Me.Relations.CollectionChanged, schemaChangedHandler
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ComisionVendedorCobranza() As ComisionVendedorCobranzaDataTable
        Get
            Return Me.tableComisionVendedorCobranza
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ComisionVendedorFacturacion() As ComisionVendedorFacturacionDataTable
        Get
            Return Me.tableComisionVendedorFacturacion
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ComisionVendedorCobrDet() As ComisionVendedorCobrDetDataTable
        Get
            Return Me.tableComisionVendedorCobrDet
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ComisionVendedorCobranzaTipoVenta() As ComisionVendedorCobranzaTipoVentaDataTable
        Get
            Return Me.tableComisionVendedorCobranzaTipoVenta
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.Browsable(false),  _
     Global.System.ComponentModel.DesignerSerializationVisibility(Global.System.ComponentModel.DesignerSerializationVisibility.Content)>  _
    Public ReadOnly Property ComisionNotasCredito() As ComisionNotasCreditoDataTable
        Get
            Return Me.tableComisionNotasCredito
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.BrowsableAttribute(true),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Visible)>  _
    Public Overrides Property SchemaSerializationMode() As Global.System.Data.SchemaSerializationMode
        Get
            Return Me._schemaSerializationMode
        End Get
        Set
            Me._schemaSerializationMode = value
        End Set
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Tables() As Global.System.Data.DataTableCollection
        Get
            Return MyBase.Tables
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
     Global.System.ComponentModel.DesignerSerializationVisibilityAttribute(Global.System.ComponentModel.DesignerSerializationVisibility.Hidden)>  _
    Public Shadows ReadOnly Property Relations() As Global.System.Data.DataRelationCollection
        Get
            Return MyBase.Relations
        End Get
    End Property
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub InitializeDerivedDataSet()
        Me.BeginInit
        Me.InitClass
        Me.EndInit
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Overrides Function Clone() As Global.System.Data.DataSet
        Dim cln As DsRVComisiones = CType(MyBase.Clone,DsRVComisiones)
        cln.InitVars
        cln.SchemaSerializationMode = Me.SchemaSerializationMode
        Return cln
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeTables() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function ShouldSerializeRelations() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Sub ReadXmlSerializable(ByVal reader As Global.System.Xml.XmlReader)
        If (Me.DetermineSchemaSerializationMode(reader) = Global.System.Data.SchemaSerializationMode.IncludeSchema) Then
            Me.Reset
            Dim ds As Global.System.Data.DataSet = New Global.System.Data.DataSet()
            ds.ReadXml(reader)
            If (Not (ds.Tables("ComisionVendedorCobranza")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorCobranzaDataTable(ds.Tables("ComisionVendedorCobranza")))
            End If
            If (Not (ds.Tables("ComisionVendedorFacturacion")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorFacturacionDataTable(ds.Tables("ComisionVendedorFacturacion")))
            End If
            If (Not (ds.Tables("ComisionVendedorCobrDet")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorCobrDetDataTable(ds.Tables("ComisionVendedorCobrDet")))
            End If
            If (Not (ds.Tables("ComisionVendedorCobranzaTipoVenta")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionVendedorCobranzaTipoVentaDataTable(ds.Tables("ComisionVendedorCobranzaTipoVenta")))
            End If
            If (Not (ds.Tables("ComisionNotasCredito")) Is Nothing) Then
                MyBase.Tables.Add(New ComisionNotasCreditoDataTable(ds.Tables("ComisionNotasCredito")))
            End If
            Me.DataSetName = ds.DataSetName
            Me.Prefix = ds.Prefix
            Me.Namespace = ds.Namespace
            Me.Locale = ds.Locale
            Me.CaseSensitive = ds.CaseSensitive
            Me.EnforceConstraints = ds.EnforceConstraints
            Me.Merge(ds, false, Global.System.Data.MissingSchemaAction.Add)
            Me.InitVars
        Else
            Me.ReadXml(reader)
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Protected Overrides Function GetSchemaSerializable() As Global.System.Xml.Schema.XmlSchema
        Dim stream As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
        Me.WriteXmlSchema(New Global.System.Xml.XmlTextWriter(stream, Nothing))
        stream.Position = 0
        Return Global.System.Xml.Schema.XmlSchema.Read(New Global.System.Xml.XmlTextReader(stream), Nothing)
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars()
        Me.InitVars(true)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Friend Overloads Sub InitVars(ByVal initTable As Boolean)
        Me.tableComisionVendedorCobranza = CType(MyBase.Tables("ComisionVendedorCobranza"),ComisionVendedorCobranzaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComisionVendedorCobranza) Is Nothing) Then
                Me.tableComisionVendedorCobranza.InitVars
            End If
        End If
        Me.tableComisionVendedorFacturacion = CType(MyBase.Tables("ComisionVendedorFacturacion"),ComisionVendedorFacturacionDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComisionVendedorFacturacion) Is Nothing) Then
                Me.tableComisionVendedorFacturacion.InitVars
            End If
        End If
        Me.tableComisionVendedorCobrDet = CType(MyBase.Tables("ComisionVendedorCobrDet"),ComisionVendedorCobrDetDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComisionVendedorCobrDet) Is Nothing) Then
                Me.tableComisionVendedorCobrDet.InitVars
            End If
        End If
        Me.tableComisionVendedorCobranzaTipoVenta = CType(MyBase.Tables("ComisionVendedorCobranzaTipoVenta"),ComisionVendedorCobranzaTipoVentaDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComisionVendedorCobranzaTipoVenta) Is Nothing) Then
                Me.tableComisionVendedorCobranzaTipoVenta.InitVars
            End If
        End If
        Me.tableComisionNotasCredito = CType(MyBase.Tables("ComisionNotasCredito"),ComisionNotasCreditoDataTable)
        If (initTable = true) Then
            If (Not (Me.tableComisionNotasCredito) Is Nothing) Then
                Me.tableComisionNotasCredito.InitVars
            End If
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub InitClass()
        Me.DataSetName = "DsRVComisiones"
        Me.Prefix = ""
        Me.Namespace = "http://tempuri.org/DsRVComisiones.xsd"
        Me.EnforceConstraints = false
        Me.SchemaSerializationMode = Global.System.Data.SchemaSerializationMode.IncludeSchema
        Me.tableComisionVendedorCobranza = New ComisionVendedorCobranzaDataTable()
        MyBase.Tables.Add(Me.tableComisionVendedorCobranza)
        Me.tableComisionVendedorFacturacion = New ComisionVendedorFacturacionDataTable()
        MyBase.Tables.Add(Me.tableComisionVendedorFacturacion)
        Me.tableComisionVendedorCobrDet = New ComisionVendedorCobrDetDataTable()
        MyBase.Tables.Add(Me.tableComisionVendedorCobrDet)
        Me.tableComisionVendedorCobranzaTipoVenta = New ComisionVendedorCobranzaTipoVentaDataTable()
        MyBase.Tables.Add(Me.tableComisionVendedorCobranzaTipoVenta)
        Me.tableComisionNotasCredito = New ComisionNotasCreditoDataTable()
        MyBase.Tables.Add(Me.tableComisionNotasCredito)
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComisionVendedorCobranza() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComisionVendedorFacturacion() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComisionVendedorCobrDet() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComisionVendedorCobranzaTipoVenta() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Function ShouldSerializeComisionNotasCredito() As Boolean
        Return false
    End Function
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Private Sub SchemaChanged(ByVal sender As Object, ByVal e As Global.System.ComponentModel.CollectionChangeEventArgs)
        If (e.Action = Global.System.ComponentModel.CollectionChangeAction.Remove) Then
            Me.InitVars
        End If
    End Sub
    
    <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
     Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Shared Function GetTypedDataSetSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
        Dim ds As DsRVComisiones = New DsRVComisiones()
        Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
        Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
        Dim any As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
        any.Namespace = ds.Namespace
        sequence.Items.Add(any)
        type.Particle = sequence
        Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
        If xs.Contains(dsSchema.TargetNamespace) Then
            Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
            Try 
                Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                dsSchema.Write(s1)
                Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                Do While schemas.MoveNext
                    schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                    s2.SetLength(0)
                    schema.Write(s2)
                    If (s1.Length = s2.Length) Then
                        s1.Position = 0
                        s2.Position = 0
                        
                        Do While ((s1.Position <> s1.Length)  _
                                    AndAlso (s1.ReadByte = s2.ReadByte))
                            
                            
                        Loop
                        If (s1.Position = s1.Length) Then
                            Return type
                        End If
                    End If
                    
                Loop
            Finally
                If (Not (s1) Is Nothing) Then
                    s1.Close
                End If
                If (Not (s2) Is Nothing) Then
                    s2.Close
                End If
            End Try
        End If
        xs.Add(dsSchema)
        Return type
    End Function
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComisionVendedorCobranzaRowChangeEventHandler(ByVal sender As Object, ByVal e As ComisionVendedorCobranzaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComisionVendedorFacturacionRowChangeEventHandler(ByVal sender As Object, ByVal e As ComisionVendedorFacturacionRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComisionVendedorCobrDetRowChangeEventHandler(ByVal sender As Object, ByVal e As ComisionVendedorCobrDetRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComisionVendedorCobranzaTipoVentaRowChangeEventHandler(ByVal sender As Object, ByVal e As ComisionVendedorCobranzaTipoVentaRowChangeEvent)
    
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
    Public Delegate Sub ComisionNotasCreditoRowChangeEventHandler(ByVal sender As Object, ByVal e As ComisionNotasCreditoRowChangeEvent)
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ComisionVendedorCobranzaDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComisionVendedorCobranzaRow)
        
        Private columnCODVENDEDOR As Global.System.Data.DataColumn
        
        Private columnNUMVENDEDOR As Global.System.Data.DataColumn
        
        Private columnDESVENDEDOR As Global.System.Data.DataColumn
        
        Private columnTOTALCONIVA As Global.System.Data.DataColumn
        
        Private columnTOTALSINIVA As Global.System.Data.DataColumn
        
        Private columnFECHACOMP As Global.System.Data.DataColumn
        
        Private columnNROCOMPROBANTE As Global.System.Data.DataColumn
        
        Private columnNUMVENTA As Global.System.Data.DataColumn
        
        Private columnFECHAFACT As Global.System.Data.DataColumn
        
        Private columnTIPO As Global.System.Data.DataColumn
        
        Private columnFECHAREGISTROCOB As Global.System.Data.DataColumn
        
        Private columnNRORECIBO As Global.System.Data.DataColumn
        
        Private columnNUMCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnDESCIUDAD As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBREFANTASIA As Global.System.Data.DataColumn
        
        Private columnNUMDEVOLUCION As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ComisionVendedorCobranza"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCONIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TOTALSINIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALSINIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHACOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACOMP
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NROCOMPROBANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNROCOMPROBANTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAFACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAFACT
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property FECHAREGISTROCOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAREGISTROCOB
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NRORECIBOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRORECIBO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESCIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCIUDAD
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NOMBREFANTASIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREFANTASIA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMDEVOLUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMDEVOLUCION
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ComisionVendedorCobranzaRow
            Get
                Return CType(Me.Rows(index),ComisionVendedorCobranzaRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorCobranzaRowChanging As ComisionVendedorCobranzaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorCobranzaRowChanged As ComisionVendedorCobranzaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorCobranzaRowDeleting As ComisionVendedorCobranzaRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorCobranzaRowDeleted As ComisionVendedorCobranzaRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddComisionVendedorCobranzaRow(ByVal row As ComisionVendedorCobranzaRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddComisionVendedorCobranzaRow( _
                    ByVal NUMVENDEDOR As String,  _
                    ByVal DESVENDEDOR As String,  _
                    ByVal TOTALCONIVA As Decimal,  _
                    ByVal TOTALSINIVA As Decimal,  _
                    ByVal FECHACOMP As Date,  _
                    ByVal NROCOMPROBANTE As String,  _
                    ByVal NUMVENTA As String,  _
                    ByVal FECHAFACT As Date,  _
                    ByVal TIPO As String,  _
                    ByVal FECHAREGISTROCOB As Date,  _
                    ByVal NRORECIBO As String,  _
                    ByVal NUMCLIENTE As Decimal,  _
                    ByVal NOMBRE As String,  _
                    ByVal DIRECCION As String,  _
                    ByVal DESCIUDAD As String,  _
                    ByVal TELEFONO As String,  _
                    ByVal CODCLIENTE As Decimal,  _
                    ByVal NOMBREFANTASIA As String,  _
                    ByVal NUMDEVOLUCION As Integer) As ComisionVendedorCobranzaRow
            Dim rowComisionVendedorCobranzaRow As ComisionVendedorCobranzaRow = CType(Me.NewRow,ComisionVendedorCobranzaRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NUMVENDEDOR, DESVENDEDOR, TOTALCONIVA, TOTALSINIVA, FECHACOMP, NROCOMPROBANTE, NUMVENTA, FECHAFACT, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, NUMDEVOLUCION}
            rowComisionVendedorCobranzaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComisionVendedorCobranzaRow)
            Return rowComisionVendedorCobranzaRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODVENDEDOR(ByVal CODVENDEDOR As Integer) As ComisionVendedorCobranzaRow
            Return CType(Me.Rows.Find(New Object() {CODVENDEDOR}),ComisionVendedorCobranzaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComisionVendedorCobranzaDataTable = CType(MyBase.Clone,ComisionVendedorCobranzaDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComisionVendedorCobranzaDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODVENDEDOR = MyBase.Columns("CODVENDEDOR")
            Me.columnNUMVENDEDOR = MyBase.Columns("NUMVENDEDOR")
            Me.columnDESVENDEDOR = MyBase.Columns("DESVENDEDOR")
            Me.columnTOTALCONIVA = MyBase.Columns("TOTALCONIVA")
            Me.columnTOTALSINIVA = MyBase.Columns("TOTALSINIVA")
            Me.columnFECHACOMP = MyBase.Columns("FECHACOMP")
            Me.columnNROCOMPROBANTE = MyBase.Columns("NROCOMPROBANTE")
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
            Me.columnFECHAFACT = MyBase.Columns("FECHAFACT")
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnFECHAREGISTROCOB = MyBase.Columns("FECHAREGISTROCOB")
            Me.columnNRORECIBO = MyBase.Columns("NRORECIBO")
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnDESCIUDAD = MyBase.Columns("DESCIUDAD")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnNOMBREFANTASIA = MyBase.Columns("NOMBREFANTASIA")
            Me.columnNUMDEVOLUCION = MyBase.Columns("NUMDEVOLUCION")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODVENDEDOR = New Global.System.Data.DataColumn("CODVENDEDOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODVENDEDOR)
            Me.columnNUMVENDEDOR = New Global.System.Data.DataColumn("NUMVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENDEDOR)
            Me.columnDESVENDEDOR = New Global.System.Data.DataColumn("DESVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESVENDEDOR)
            Me.columnTOTALCONIVA = New Global.System.Data.DataColumn("TOTALCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCONIVA)
            Me.columnTOTALSINIVA = New Global.System.Data.DataColumn("TOTALSINIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALSINIVA)
            Me.columnFECHACOMP = New Global.System.Data.DataColumn("FECHACOMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACOMP)
            Me.columnNROCOMPROBANTE = New Global.System.Data.DataColumn("NROCOMPROBANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNROCOMPROBANTE)
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnFECHAFACT = New Global.System.Data.DataColumn("FECHAFACT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAFACT)
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnFECHAREGISTROCOB = New Global.System.Data.DataColumn("FECHAREGISTROCOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAREGISTROCOB)
            Me.columnNRORECIBO = New Global.System.Data.DataColumn("NRORECIBO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRORECIBO)
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnDESCIUDAD = New Global.System.Data.DataColumn("DESCIUDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCIUDAD)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnNOMBREFANTASIA = New Global.System.Data.DataColumn("NOMBREFANTASIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREFANTASIA)
            Me.columnNUMDEVOLUCION = New Global.System.Data.DataColumn("NUMDEVOLUCION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMDEVOLUCION)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODVENDEDOR}, true))
            Me.columnCODVENDEDOR.AutoIncrement = true
            Me.columnCODVENDEDOR.AutoIncrementSeed = -1
            Me.columnCODVENDEDOR.AutoIncrementStep = -1
            Me.columnCODVENDEDOR.AllowDBNull = false
            Me.columnCODVENDEDOR.ReadOnly = true
            Me.columnCODVENDEDOR.Unique = true
            Me.columnNUMVENDEDOR.MaxLength = 50
            Me.columnDESVENDEDOR.MaxLength = 150
            Me.columnTOTALCONIVA.ReadOnly = true
            Me.columnTOTALSINIVA.ReadOnly = true
            Me.columnFECHACOMP.ReadOnly = true
            Me.columnNROCOMPROBANTE.ReadOnly = true
            Me.columnNROCOMPROBANTE.MaxLength = 50
            Me.columnNUMVENTA.ReadOnly = true
            Me.columnNUMVENTA.MaxLength = 20
            Me.columnFECHAFACT.ReadOnly = true
            Me.columnTIPO.ReadOnly = true
            Me.columnTIPO.MaxLength = 15
            Me.columnFECHAREGISTROCOB.ReadOnly = true
            Me.columnNRORECIBO.ReadOnly = true
            Me.columnNRORECIBO.MaxLength = 500
            Me.columnNUMCLIENTE.ReadOnly = true
            Me.columnNOMBRE.ReadOnly = true
            Me.columnNOMBRE.MaxLength = 50
            Me.columnDIRECCION.ReadOnly = true
            Me.columnDIRECCION.MaxLength = 80
            Me.columnDESCIUDAD.ReadOnly = true
            Me.columnDESCIUDAD.MaxLength = 50
            Me.columnTELEFONO.ReadOnly = true
            Me.columnTELEFONO.MaxLength = 50
            Me.columnCODCLIENTE.ReadOnly = true
            Me.columnNOMBREFANTASIA.ReadOnly = true
            Me.columnNOMBREFANTASIA.MaxLength = 80
            Me.columnNUMDEVOLUCION.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewComisionVendedorCobranzaRow() As ComisionVendedorCobranzaRow
            Return CType(Me.NewRow,ComisionVendedorCobranzaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComisionVendedorCobranzaRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComisionVendedorCobranzaRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComisionVendedorCobranzaRowChangedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaRowChanged(Me, New ComisionVendedorCobranzaRowChangeEvent(CType(e.Row,ComisionVendedorCobranzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComisionVendedorCobranzaRowChangingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaRowChanging(Me, New ComisionVendedorCobranzaRowChangeEvent(CType(e.Row,ComisionVendedorCobranzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComisionVendedorCobranzaRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaRowDeleted(Me, New ComisionVendedorCobranzaRowChangeEvent(CType(e.Row,ComisionVendedorCobranzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComisionVendedorCobranzaRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaRowDeleting(Me, New ComisionVendedorCobranzaRowChangeEvent(CType(e.Row,ComisionVendedorCobranzaRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveComisionVendedorCobranzaRow(ByVal row As ComisionVendedorCobranzaRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVComisiones = New DsRVComisiones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComisionVendedorCobranzaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ComisionVendedorFacturacionDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComisionVendedorFacturacionRow)
        
        Private columnCODVENDEDOR As Global.System.Data.DataColumn
        
        Private columnNUMVENDEDOR As Global.System.Data.DataColumn
        
        Private columnDESVENDEDOR As Global.System.Data.DataColumn
        
        Private columnMONTOCONIVA As Global.System.Data.DataColumn
        
        Private columnMONTOSINIVA As Global.System.Data.DataColumn
        
        Private columnPORCCONIVA As Global.System.Data.DataColumn
        
        Private columnPORCSINIVA As Global.System.Data.DataColumn
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub New()
            MyBase.New
            Me.TableName = "ComisionVendedorFacturacion"
            Me.BeginInit
            Me.InitClass
            Me.EndInit
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property CODVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property NUMVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property DESVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESVENDEDOR
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONTOCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTOCONIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property MONTOSINIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMONTOSINIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORCCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCCONIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public ReadOnly Property PORCSINIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnPORCSINIVA
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"),  _
         Global.System.ComponentModel.Browsable(false)>  _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Default ReadOnly Property Item(ByVal index As Integer) As ComisionVendedorFacturacionRow
            Get
                Return CType(Me.Rows(index),ComisionVendedorFacturacionRow)
            End Get
        End Property
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorFacturacionRowChanging As ComisionVendedorFacturacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorFacturacionRowChanged As ComisionVendedorFacturacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorFacturacionRowDeleting As ComisionVendedorFacturacionRowChangeEventHandler
        
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Event ComisionVendedorFacturacionRowDeleted As ComisionVendedorFacturacionRowChangeEventHandler
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Sub AddComisionVendedorFacturacionRow(ByVal row As ComisionVendedorFacturacionRow)
            Me.Rows.Add(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overloads Function AddComisionVendedorFacturacionRow(ByVal NUMVENDEDOR As String, ByVal DESVENDEDOR As String, ByVal MONTOCONIVA As Decimal, ByVal MONTOSINIVA As Decimal, ByVal PORCCONIVA As Decimal, ByVal PORCSINIVA As Decimal) As ComisionVendedorFacturacionRow
            Dim rowComisionVendedorFacturacionRow As ComisionVendedorFacturacionRow = CType(Me.NewRow,ComisionVendedorFacturacionRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NUMVENDEDOR, DESVENDEDOR, MONTOCONIVA, MONTOSINIVA, PORCCONIVA, PORCSINIVA}
            rowComisionVendedorFacturacionRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComisionVendedorFacturacionRow)
            Return rowComisionVendedorFacturacionRow
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function FindByCODVENDEDOR(ByVal CODVENDEDOR As Integer) As ComisionVendedorFacturacionRow
            Return CType(Me.Rows.Find(New Object() {CODVENDEDOR}),ComisionVendedorFacturacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComisionVendedorFacturacionDataTable = CType(MyBase.Clone,ComisionVendedorFacturacionDataTable)
            cln.InitVars
            Return cln
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComisionVendedorFacturacionDataTable()
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Friend Sub InitVars()
            Me.columnCODVENDEDOR = MyBase.Columns("CODVENDEDOR")
            Me.columnNUMVENDEDOR = MyBase.Columns("NUMVENDEDOR")
            Me.columnDESVENDEDOR = MyBase.Columns("DESVENDEDOR")
            Me.columnMONTOCONIVA = MyBase.Columns("MONTOCONIVA")
            Me.columnMONTOSINIVA = MyBase.Columns("MONTOSINIVA")
            Me.columnPORCCONIVA = MyBase.Columns("PORCCONIVA")
            Me.columnPORCSINIVA = MyBase.Columns("PORCSINIVA")
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Private Sub InitClass()
            Me.columnCODVENDEDOR = New Global.System.Data.DataColumn("CODVENDEDOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODVENDEDOR)
            Me.columnNUMVENDEDOR = New Global.System.Data.DataColumn("NUMVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENDEDOR)
            Me.columnDESVENDEDOR = New Global.System.Data.DataColumn("DESVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESVENDEDOR)
            Me.columnMONTOCONIVA = New Global.System.Data.DataColumn("MONTOCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTOCONIVA)
            Me.columnMONTOSINIVA = New Global.System.Data.DataColumn("MONTOSINIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMONTOSINIVA)
            Me.columnPORCCONIVA = New Global.System.Data.DataColumn("PORCCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCCONIVA)
            Me.columnPORCSINIVA = New Global.System.Data.DataColumn("PORCSINIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnPORCSINIVA)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODVENDEDOR}, true))
            Me.columnCODVENDEDOR.AutoIncrement = true
            Me.columnCODVENDEDOR.AutoIncrementSeed = -1
            Me.columnCODVENDEDOR.AutoIncrementStep = -1
            Me.columnCODVENDEDOR.AllowDBNull = false
            Me.columnCODVENDEDOR.ReadOnly = true
            Me.columnCODVENDEDOR.Unique = true
            Me.columnNUMVENDEDOR.MaxLength = 50
            Me.columnDESVENDEDOR.MaxLength = 150
            Me.columnMONTOCONIVA.ReadOnly = true
            Me.columnMONTOSINIVA.ReadOnly = true
            Me.columnPORCCONIVA.ReadOnly = true
            Me.columnPORCSINIVA.ReadOnly = true
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Function NewComisionVendedorFacturacionRow() As ComisionVendedorFacturacionRow
            Return CType(Me.NewRow,ComisionVendedorFacturacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComisionVendedorFacturacionRow(builder)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComisionVendedorFacturacionRow)
        End Function
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComisionVendedorFacturacionRowChangedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorFacturacionRowChanged(Me, New ComisionVendedorFacturacionRowChangeEvent(CType(e.Row,ComisionVendedorFacturacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComisionVendedorFacturacionRowChangingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorFacturacionRowChanging(Me, New ComisionVendedorFacturacionRowChangeEvent(CType(e.Row,ComisionVendedorFacturacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComisionVendedorFacturacionRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorFacturacionRowDeleted(Me, New ComisionVendedorFacturacionRowChangeEvent(CType(e.Row,ComisionVendedorFacturacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComisionVendedorFacturacionRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorFacturacionRowDeleting(Me, New ComisionVendedorFacturacionRowChangeEvent(CType(e.Row,ComisionVendedorFacturacionRow), e.Action))
            End If
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Sub RemoveComisionVendedorFacturacionRow(ByVal row As ComisionVendedorFacturacionRow)
            Me.Rows.Remove(row)
        End Sub
        
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(),  _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")>  _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVComisiones = New DsRVComisiones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComisionVendedorFacturacionDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try 
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current,Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0
                            
                            Do While ((s1.Position <> s1.Length)  _
                                        AndAlso (s1.ReadByte = s2.ReadByte))
                                
                                
                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If
                        
                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class
    
    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(),  _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")>  _
    Partial Public Class ComisionVendedorCobrDetDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComisionVendedorCobrDetRow)
        
        Private columnCODVENDEDOR As Global.System.Data.DataColumn
        
        Private columnNUMVENDEDOR As Global.System.Data.DataColumn
        
        Private columnDESVENDEDOR As Global.System.Data.DataColumn
        
        Private columnNUMVENTA As Global.System.Data.DataColumn
        
        Private columnFECHAREGISTROCOB As Global.System.Data.DataColumn
        
        Private columnNRORECIBO As Global.System.Data.DataColumn
        
        Private columnNOMBREFANTASIA As Global.System.Data.DataColumn
        
        Private columnTOTALCONIVA As Global.System.Data.DataColumn
        
        Private columnTOTALSINIVA As Global.System.Data.DataColumn
        
        Private columnNROCOMPROBANTE As Global.System.Data.DataColumn
        
        Private columnFECHAFACT As Global.System.Data.DataColumn
        
        Private columnFECHACOMP As Global.System.Data.DataColumn
        
        Private columnTIPO As Global.System.Data.DataColumn
        
        Private columnNUMCLIENTE As Global.System.Data.DataColumn
        
        Private columnNOMBRE As Global.System.Data.DataColumn
        
        Private columnDIRECCION As Global.System.Data.DataColumn
        
        Private columnDESCIUDAD As Global.System.Data.DataColumn
        
        Private columnTELEFONO As Global.System.Data.DataColumn
        
        Private columnCODCLIENTE As Global.System.Data.DataColumn
        
        Private columnNUMDEVOLUCION As Global.System.Data.DataColumn
        
        Private columnCODVENDEDOR1 As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ComisionVendedorCobrDet"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHAREGISTROCOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAREGISTROCOB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NRORECIBOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRORECIBO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOMBREFANTASIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREFANTASIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TOTALCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCONIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TOTALSINIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALSINIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NROCOMPROBANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNROCOMPROBANTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHAFACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAFACT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHACOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACOMP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESCIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCIUDAD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMDEVOLUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMDEVOLUCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODVENDEDOR1Column() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODVENDEDOR1
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ComisionVendedorCobrDetRow
            Get
                Return CType(Me.Rows(index), ComisionVendedorCobrDetRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobrDetRowChanging As ComisionVendedorCobrDetRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobrDetRowChanged As ComisionVendedorCobrDetRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobrDetRowDeleting As ComisionVendedorCobrDetRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobrDetRowDeleted As ComisionVendedorCobrDetRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddComisionVendedorCobrDetRow(ByVal row As ComisionVendedorCobrDetRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddComisionVendedorCobrDetRow( _
                    ByVal NUMVENDEDOR As String, _
                    ByVal DESVENDEDOR As String, _
                    ByVal NUMVENTA As String, _
                    ByVal FECHAREGISTROCOB As Date, _
                    ByVal NRORECIBO As String, _
                    ByVal NOMBREFANTASIA As String, _
                    ByVal TOTALCONIVA As Decimal, _
                    ByVal TOTALSINIVA As Decimal, _
                    ByVal NROCOMPROBANTE As String, _
                    ByVal FECHAFACT As Date, _
                    ByVal FECHACOMP As Date, _
                    ByVal TIPO As String, _
                    ByVal NUMCLIENTE As Decimal, _
                    ByVal NOMBRE As String, _
                    ByVal DIRECCION As String, _
                    ByVal DESCIUDAD As String, _
                    ByVal TELEFONO As String, _
                    ByVal CODCLIENTE As Decimal, _
                    ByVal NUMDEVOLUCION As Integer, _
                    ByVal CODVENDEDOR1 As Decimal) As ComisionVendedorCobrDetRow
            Dim rowComisionVendedorCobrDetRow As ComisionVendedorCobrDetRow = CType(Me.NewRow, ComisionVendedorCobrDetRow)
            Dim columnValuesArray() As Object = New Object() {Nothing, NUMVENDEDOR, DESVENDEDOR, NUMVENTA, FECHAREGISTROCOB, NRORECIBO, NOMBREFANTASIA, TOTALCONIVA, TOTALSINIVA, NROCOMPROBANTE, FECHAFACT, FECHACOMP, TIPO, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NUMDEVOLUCION, CODVENDEDOR1}
            rowComisionVendedorCobrDetRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComisionVendedorCobrDetRow)
            Return rowComisionVendedorCobrDetRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCODVENDEDOR(ByVal CODVENDEDOR As Integer) As ComisionVendedorCobrDetRow
            Return CType(Me.Rows.Find(New Object() {CODVENDEDOR}), ComisionVendedorCobrDetRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComisionVendedorCobrDetDataTable = CType(MyBase.Clone, ComisionVendedorCobrDetDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComisionVendedorCobrDetDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnCODVENDEDOR = MyBase.Columns("CODVENDEDOR")
            Me.columnNUMVENDEDOR = MyBase.Columns("NUMVENDEDOR")
            Me.columnDESVENDEDOR = MyBase.Columns("DESVENDEDOR")
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
            Me.columnFECHAREGISTROCOB = MyBase.Columns("FECHAREGISTROCOB")
            Me.columnNRORECIBO = MyBase.Columns("NRORECIBO")
            Me.columnNOMBREFANTASIA = MyBase.Columns("NOMBREFANTASIA")
            Me.columnTOTALCONIVA = MyBase.Columns("TOTALCONIVA")
            Me.columnTOTALSINIVA = MyBase.Columns("TOTALSINIVA")
            Me.columnNROCOMPROBANTE = MyBase.Columns("NROCOMPROBANTE")
            Me.columnFECHAFACT = MyBase.Columns("FECHAFACT")
            Me.columnFECHACOMP = MyBase.Columns("FECHACOMP")
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnDESCIUDAD = MyBase.Columns("DESCIUDAD")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnNUMDEVOLUCION = MyBase.Columns("NUMDEVOLUCION")
            Me.columnCODVENDEDOR1 = MyBase.Columns("CODVENDEDOR1")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnCODVENDEDOR = New Global.System.Data.DataColumn("CODVENDEDOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODVENDEDOR)
            Me.columnNUMVENDEDOR = New Global.System.Data.DataColumn("NUMVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENDEDOR)
            Me.columnDESVENDEDOR = New Global.System.Data.DataColumn("DESVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESVENDEDOR)
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnFECHAREGISTROCOB = New Global.System.Data.DataColumn("FECHAREGISTROCOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAREGISTROCOB)
            Me.columnNRORECIBO = New Global.System.Data.DataColumn("NRORECIBO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRORECIBO)
            Me.columnNOMBREFANTASIA = New Global.System.Data.DataColumn("NOMBREFANTASIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREFANTASIA)
            Me.columnTOTALCONIVA = New Global.System.Data.DataColumn("TOTALCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCONIVA)
            Me.columnTOTALSINIVA = New Global.System.Data.DataColumn("TOTALSINIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALSINIVA)
            Me.columnNROCOMPROBANTE = New Global.System.Data.DataColumn("NROCOMPROBANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNROCOMPROBANTE)
            Me.columnFECHAFACT = New Global.System.Data.DataColumn("FECHAFACT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAFACT)
            Me.columnFECHACOMP = New Global.System.Data.DataColumn("FECHACOMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACOMP)
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnDESCIUDAD = New Global.System.Data.DataColumn("DESCIUDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCIUDAD)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnNUMDEVOLUCION = New Global.System.Data.DataColumn("NUMDEVOLUCION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMDEVOLUCION)
            Me.columnCODVENDEDOR1 = New Global.System.Data.DataColumn("CODVENDEDOR1", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODVENDEDOR1)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODVENDEDOR}, True))
            Me.columnCODVENDEDOR.AutoIncrement = True
            Me.columnCODVENDEDOR.AutoIncrementSeed = -1
            Me.columnCODVENDEDOR.AutoIncrementStep = -1
            Me.columnCODVENDEDOR.AllowDBNull = False
            Me.columnCODVENDEDOR.ReadOnly = True
            Me.columnCODVENDEDOR.Unique = True
            Me.columnNUMVENDEDOR.MaxLength = 50
            Me.columnDESVENDEDOR.MaxLength = 150
            Me.columnNUMVENTA.MaxLength = 20
            Me.columnNRORECIBO.MaxLength = 500
            Me.columnNOMBREFANTASIA.MaxLength = 80
            Me.columnTOTALCONIVA.ReadOnly = True
            Me.columnTOTALSINIVA.ReadOnly = True
            Me.columnNROCOMPROBANTE.ReadOnly = True
            Me.columnNROCOMPROBANTE.MaxLength = 50
            Me.columnFECHAFACT.ReadOnly = True
            Me.columnFECHACOMP.ReadOnly = True
            Me.columnTIPO.ReadOnly = True
            Me.columnTIPO.MaxLength = 15
            Me.columnNUMCLIENTE.ReadOnly = True
            Me.columnNOMBRE.ReadOnly = True
            Me.columnNOMBRE.MaxLength = 50
            Me.columnDIRECCION.ReadOnly = True
            Me.columnDIRECCION.MaxLength = 80
            Me.columnDESCIUDAD.ReadOnly = True
            Me.columnDESCIUDAD.MaxLength = 50
            Me.columnTELEFONO.ReadOnly = True
            Me.columnTELEFONO.MaxLength = 50
            Me.columnCODCLIENTE.ReadOnly = True
            Me.columnNUMDEVOLUCION.ReadOnly = True
            Me.columnCODVENDEDOR1.ReadOnly = True
            Me.columnCODVENDEDOR1.Caption = "CODVENDEDOR"
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewComisionVendedorCobrDetRow() As ComisionVendedorCobrDetRow
            Return CType(Me.NewRow, ComisionVendedorCobrDetRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComisionVendedorCobrDetRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComisionVendedorCobrDetRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComisionVendedorCobrDetRowChangedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobrDetRowChanged(Me, New ComisionVendedorCobrDetRowChangeEvent(CType(e.Row, ComisionVendedorCobrDetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComisionVendedorCobrDetRowChangingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobrDetRowChanging(Me, New ComisionVendedorCobrDetRowChangeEvent(CType(e.Row, ComisionVendedorCobrDetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComisionVendedorCobrDetRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobrDetRowDeleted(Me, New ComisionVendedorCobrDetRowChangeEvent(CType(e.Row, ComisionVendedorCobrDetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComisionVendedorCobrDetRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobrDetRowDeleting(Me, New ComisionVendedorCobrDetRowChangeEvent(CType(e.Row, ComisionVendedorCobrDetRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveComisionVendedorCobrDetRow(ByVal row As ComisionVendedorCobrDetRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVComisiones = New DsRVComisiones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComisionVendedorCobrDetDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ComisionVendedorCobranzaTipoVentaDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComisionVendedorCobranzaTipoVentaRow)

        Private columnTOTALCONIVA As Global.System.Data.DataColumn

        Private columnTOTALSINIVA As Global.System.Data.DataColumn

        Private columnNROCOMPROBANTE As Global.System.Data.DataColumn

        Private columnNUMVENTA As Global.System.Data.DataColumn

        Private columnNUMDEVOLUCION As Global.System.Data.DataColumn

        Private columnFECHAFACT As Global.System.Data.DataColumn

        Private columnFECHACOMP As Global.System.Data.DataColumn

        Private columnTIPO As Global.System.Data.DataColumn

        Private columnFECHAREGISTROCOB As Global.System.Data.DataColumn

        Private columnNRORECIBO As Global.System.Data.DataColumn

        Private columnNUMCLIENTE As Global.System.Data.DataColumn

        Private columnNOMBRE As Global.System.Data.DataColumn

        Private columnDIRECCION As Global.System.Data.DataColumn

        Private columnDESCIUDAD As Global.System.Data.DataColumn

        Private columnTELEFONO As Global.System.Data.DataColumn

        Private columnCODCLIENTE As Global.System.Data.DataColumn

        Private columnNOMBREFANTASIA As Global.System.Data.DataColumn

        Private columnMODALIDADPAGO As Global.System.Data.DataColumn

        Private columnCODVENDEDOR As Global.System.Data.DataColumn

        Private columnNUMVENDEDOR As Global.System.Data.DataColumn

        Private columnDESVENDEDOR As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ComisionVendedorCobranzaTipoVenta"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TOTALCONIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALCONIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TOTALSINIVAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTOTALSINIVA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NROCOMPROBANTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNROCOMPROBANTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMDEVOLUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMDEVOLUCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHAFACTColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAFACT
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHACOMPColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACOMP
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TIPOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTIPO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHAREGISTROCOBColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHAREGISTROCOB
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NRORECIBOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRORECIBO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMCLIENTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DIRECCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDIRECCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESCIUDADColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESCIUDAD
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property TELEFONOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnTELEFONO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODCLIENTEColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODCLIENTE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOMBREFANTASIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREFANTASIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property MODALIDADPAGOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnMODALIDADPAGO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ComisionVendedorCobranzaTipoVentaRow
            Get
                Return CType(Me.Rows(index), ComisionVendedorCobranzaTipoVentaRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobranzaTipoVentaRowChanging As ComisionVendedorCobranzaTipoVentaRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobranzaTipoVentaRowChanged As ComisionVendedorCobranzaTipoVentaRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobranzaTipoVentaRowDeleting As ComisionVendedorCobranzaTipoVentaRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionVendedorCobranzaTipoVentaRowDeleted As ComisionVendedorCobranzaTipoVentaRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddComisionVendedorCobranzaTipoVentaRow(ByVal row As ComisionVendedorCobranzaTipoVentaRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddComisionVendedorCobranzaTipoVentaRow( _
                    ByVal TOTALCONIVA As Decimal, _
                    ByVal TOTALSINIVA As Decimal, _
                    ByVal NROCOMPROBANTE As String, _
                    ByVal NUMVENTA As String, _
                    ByVal NUMDEVOLUCION As Integer, _
                    ByVal FECHAFACT As Date, _
                    ByVal FECHACOMP As Date, _
                    ByVal TIPO As String, _
                    ByVal FECHAREGISTROCOB As Date, _
                    ByVal NRORECIBO As String, _
                    ByVal NUMCLIENTE As Decimal, _
                    ByVal NOMBRE As String, _
                    ByVal DIRECCION As String, _
                    ByVal DESCIUDAD As String, _
                    ByVal TELEFONO As String, _
                    ByVal CODCLIENTE As Integer, _
                    ByVal NOMBREFANTASIA As String, _
                    ByVal MODALIDADPAGO As Byte, _
                    ByVal CODVENDEDOR As Integer, _
                    ByVal NUMVENDEDOR As String, _
                    ByVal DESVENDEDOR As String) As ComisionVendedorCobranzaTipoVentaRow
            Dim rowComisionVendedorCobranzaTipoVentaRow As ComisionVendedorCobranzaTipoVentaRow = CType(Me.NewRow, ComisionVendedorCobranzaTipoVentaRow)
            Dim columnValuesArray() As Object = New Object() {TOTALCONIVA, TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, FECHAFACT, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, MODALIDADPAGO, CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR}
            rowComisionVendedorCobranzaTipoVentaRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComisionVendedorCobranzaTipoVentaRow)
            Return rowComisionVendedorCobranzaTipoVentaRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComisionVendedorCobranzaTipoVentaDataTable = CType(MyBase.Clone, ComisionVendedorCobranzaTipoVentaDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComisionVendedorCobranzaTipoVentaDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnTOTALCONIVA = MyBase.Columns("TOTALCONIVA")
            Me.columnTOTALSINIVA = MyBase.Columns("TOTALSINIVA")
            Me.columnNROCOMPROBANTE = MyBase.Columns("NROCOMPROBANTE")
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
            Me.columnNUMDEVOLUCION = MyBase.Columns("NUMDEVOLUCION")
            Me.columnFECHAFACT = MyBase.Columns("FECHAFACT")
            Me.columnFECHACOMP = MyBase.Columns("FECHACOMP")
            Me.columnTIPO = MyBase.Columns("TIPO")
            Me.columnFECHAREGISTROCOB = MyBase.Columns("FECHAREGISTROCOB")
            Me.columnNRORECIBO = MyBase.Columns("NRORECIBO")
            Me.columnNUMCLIENTE = MyBase.Columns("NUMCLIENTE")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnDIRECCION = MyBase.Columns("DIRECCION")
            Me.columnDESCIUDAD = MyBase.Columns("DESCIUDAD")
            Me.columnTELEFONO = MyBase.Columns("TELEFONO")
            Me.columnCODCLIENTE = MyBase.Columns("CODCLIENTE")
            Me.columnNOMBREFANTASIA = MyBase.Columns("NOMBREFANTASIA")
            Me.columnMODALIDADPAGO = MyBase.Columns("MODALIDADPAGO")
            Me.columnCODVENDEDOR = MyBase.Columns("CODVENDEDOR")
            Me.columnNUMVENDEDOR = MyBase.Columns("NUMVENDEDOR")
            Me.columnDESVENDEDOR = MyBase.Columns("DESVENDEDOR")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnTOTALCONIVA = New Global.System.Data.DataColumn("TOTALCONIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALCONIVA)
            Me.columnTOTALSINIVA = New Global.System.Data.DataColumn("TOTALSINIVA", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTOTALSINIVA)
            Me.columnNROCOMPROBANTE = New Global.System.Data.DataColumn("NROCOMPROBANTE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNROCOMPROBANTE)
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnNUMDEVOLUCION = New Global.System.Data.DataColumn("NUMDEVOLUCION", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMDEVOLUCION)
            Me.columnFECHAFACT = New Global.System.Data.DataColumn("FECHAFACT", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAFACT)
            Me.columnFECHACOMP = New Global.System.Data.DataColumn("FECHACOMP", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACOMP)
            Me.columnTIPO = New Global.System.Data.DataColumn("TIPO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTIPO)
            Me.columnFECHAREGISTROCOB = New Global.System.Data.DataColumn("FECHAREGISTROCOB", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHAREGISTROCOB)
            Me.columnNRORECIBO = New Global.System.Data.DataColumn("NRORECIBO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRORECIBO)
            Me.columnNUMCLIENTE = New Global.System.Data.DataColumn("NUMCLIENTE", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMCLIENTE)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnDIRECCION = New Global.System.Data.DataColumn("DIRECCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDIRECCION)
            Me.columnDESCIUDAD = New Global.System.Data.DataColumn("DESCIUDAD", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESCIUDAD)
            Me.columnTELEFONO = New Global.System.Data.DataColumn("TELEFONO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnTELEFONO)
            Me.columnCODCLIENTE = New Global.System.Data.DataColumn("CODCLIENTE", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODCLIENTE)
            Me.columnNOMBREFANTASIA = New Global.System.Data.DataColumn("NOMBREFANTASIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREFANTASIA)
            Me.columnMODALIDADPAGO = New Global.System.Data.DataColumn("MODALIDADPAGO", GetType(Byte), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnMODALIDADPAGO)
            Me.columnCODVENDEDOR = New Global.System.Data.DataColumn("CODVENDEDOR", GetType(Integer), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODVENDEDOR)
            Me.columnNUMVENDEDOR = New Global.System.Data.DataColumn("NUMVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENDEDOR)
            Me.columnDESVENDEDOR = New Global.System.Data.DataColumn("DESVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESVENDEDOR)
            Me.columnTOTALCONIVA.ReadOnly = True
            Me.columnTOTALSINIVA.ReadOnly = True
            Me.columnNROCOMPROBANTE.ReadOnly = True
            Me.columnNROCOMPROBANTE.MaxLength = 502
            Me.columnNUMVENTA.ReadOnly = True
            Me.columnNUMVENTA.MaxLength = 20
            Me.columnNUMDEVOLUCION.ReadOnly = True
            Me.columnFECHAFACT.ReadOnly = True
            Me.columnFECHACOMP.ReadOnly = True
            Me.columnTIPO.ReadOnly = True
            Me.columnTIPO.MaxLength = 9
            Me.columnFECHAREGISTROCOB.ReadOnly = True
            Me.columnNRORECIBO.ReadOnly = True
            Me.columnNRORECIBO.MaxLength = 502
            Me.columnNUMCLIENTE.ReadOnly = True
            Me.columnNOMBRE.ReadOnly = True
            Me.columnNOMBRE.MaxLength = 50
            Me.columnDIRECCION.ReadOnly = True
            Me.columnDIRECCION.MaxLength = 80
            Me.columnDESCIUDAD.ReadOnly = True
            Me.columnDESCIUDAD.MaxLength = 50
            Me.columnTELEFONO.ReadOnly = True
            Me.columnTELEFONO.MaxLength = 50
            Me.columnCODCLIENTE.ReadOnly = True
            Me.columnNOMBREFANTASIA.ReadOnly = True
            Me.columnNOMBREFANTASIA.MaxLength = 80
            Me.columnMODALIDADPAGO.ReadOnly = True
            Me.columnCODVENDEDOR.ReadOnly = True
            Me.columnNUMVENDEDOR.ReadOnly = True
            Me.columnNUMVENDEDOR.MaxLength = 50
            Me.columnDESVENDEDOR.ReadOnly = True
            Me.columnDESVENDEDOR.MaxLength = 150
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewComisionVendedorCobranzaTipoVentaRow() As ComisionVendedorCobranzaTipoVentaRow
            Return CType(Me.NewRow, ComisionVendedorCobranzaTipoVentaRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComisionVendedorCobranzaTipoVentaRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComisionVendedorCobranzaTipoVentaRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComisionVendedorCobranzaTipoVentaRowChangedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaTipoVentaRowChanged(Me, New ComisionVendedorCobranzaTipoVentaRowChangeEvent(CType(e.Row, ComisionVendedorCobranzaTipoVentaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComisionVendedorCobranzaTipoVentaRowChangingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaTipoVentaRowChanging(Me, New ComisionVendedorCobranzaTipoVentaRowChangeEvent(CType(e.Row, ComisionVendedorCobranzaTipoVentaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComisionVendedorCobranzaTipoVentaRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaTipoVentaRowDeleted(Me, New ComisionVendedorCobranzaTipoVentaRowChangeEvent(CType(e.Row, ComisionVendedorCobranzaTipoVentaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComisionVendedorCobranzaTipoVentaRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComisionVendedorCobranzaTipoVentaRowDeleting(Me, New ComisionVendedorCobranzaTipoVentaRowChangeEvent(CType(e.Row, ComisionVendedorCobranzaTipoVentaRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveComisionVendedorCobranzaTipoVentaRow(ByVal row As ComisionVendedorCobranzaTipoVentaRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVComisiones = New DsRVComisiones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComisionVendedorCobranzaTipoVentaDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents the strongly named DataTable class.
    '''</summary>
    <Global.System.Serializable(), _
     Global.System.Xml.Serialization.XmlSchemaProviderAttribute("GetTypedTableSchema")> _
    Partial Public Class ComisionNotasCreditoDataTable
        Inherits Global.System.Data.TypedTableBase(Of ComisionNotasCreditoRow)

        Private columnNUMDEVOLUCION As Global.System.Data.DataColumn

        Private columnNOMBRE As Global.System.Data.DataColumn

        Private columnCODVENDEDOR As Global.System.Data.DataColumn

        Private columnCODTIPOCOBRO As Global.System.Data.DataColumn

        Private columnDESTIPOCOBRO As Global.System.Data.DataColumn

        Private columnFECHACOBRO As Global.System.Data.DataColumn

        Private columnNRORECIBO As Global.System.Data.DataColumn

        Private columnNOMBREFANTASIA As Global.System.Data.DataColumn

        Private columnNUMVENTA As Global.System.Data.DataColumn

        Private columnDESVENDEDOR As Global.System.Data.DataColumn

        Private columnimportesiniva As Global.System.Data.DataColumn

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.TableName = "ComisionNotasCredito"
            Me.BeginInit()
            Me.InitClass()
            Me.EndInit()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal table As Global.System.Data.DataTable)
            MyBase.New()
            Me.TableName = table.TableName
            If (table.CaseSensitive <> table.DataSet.CaseSensitive) Then
                Me.CaseSensitive = table.CaseSensitive
            End If
            If (table.Locale.ToString <> table.DataSet.Locale.ToString) Then
                Me.Locale = table.Locale
            End If
            If (table.Namespace <> table.DataSet.Namespace) Then
                Me.Namespace = table.Namespace
            End If
            Me.Prefix = table.Prefix
            Me.MinimumCapacity = table.MinimumCapacity
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Sub New(ByVal info As Global.System.Runtime.Serialization.SerializationInfo, ByVal context As Global.System.Runtime.Serialization.StreamingContext)
            MyBase.New(info, context)
            Me.InitVars()
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMDEVOLUCIONColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMDEVOLUCION
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOMBREColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBRE
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property CODTIPOCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnCODTIPOCOBRO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESTIPOCOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESTIPOCOBRO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property FECHACOBROColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnFECHACOBRO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NRORECIBOColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNRORECIBO
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NOMBREFANTASIAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNOMBREFANTASIA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property NUMVENTAColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnNUMVENTA
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property DESVENDEDORColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnDESVENDEDOR
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property importesinivaColumn() As Global.System.Data.DataColumn
            Get
                Return Me.columnimportesiniva
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property Count() As Integer
            Get
                Return Me.Rows.Count
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Default Public ReadOnly Property Item(ByVal index As Integer) As ComisionNotasCreditoRow
            Get
                Return CType(Me.Rows(index), ComisionNotasCreditoRow)
            End Get
        End Property

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionNotasCreditoRowChanging As ComisionNotasCreditoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionNotasCreditoRowChanged As ComisionNotasCreditoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionNotasCreditoRowDeleting As ComisionNotasCreditoRowChangeEventHandler

        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Event ComisionNotasCreditoRowDeleted As ComisionNotasCreditoRowChangeEventHandler

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Sub AddComisionNotasCreditoRow(ByVal row As ComisionNotasCreditoRow)
            Me.Rows.Add(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overloads Function AddComisionNotasCreditoRow(ByVal NUMDEVOLUCION As String, ByVal NOMBRE As String, ByVal CODVENDEDOR As Decimal, ByVal CODTIPOCOBRO As Decimal, ByVal DESTIPOCOBRO As String, ByVal FECHACOBRO As Date, ByVal NRORECIBO As String, ByVal NOMBREFANTASIA As String, ByVal NUMVENTA As String, ByVal DESVENDEDOR As String, ByVal importesiniva As Decimal) As ComisionNotasCreditoRow
            Dim rowComisionNotasCreditoRow As ComisionNotasCreditoRow = CType(Me.NewRow, ComisionNotasCreditoRow)
            Dim columnValuesArray() As Object = New Object() {NUMDEVOLUCION, NOMBRE, CODVENDEDOR, CODTIPOCOBRO, DESTIPOCOBRO, FECHACOBRO, NRORECIBO, NOMBREFANTASIA, NUMVENTA, DESVENDEDOR, importesiniva}
            rowComisionNotasCreditoRow.ItemArray = columnValuesArray
            Me.Rows.Add(rowComisionNotasCreditoRow)
            Return rowComisionNotasCreditoRow
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function FindByCODVENDEDOR(ByVal CODVENDEDOR As Decimal) As ComisionNotasCreditoRow
            Return CType(Me.Rows.Find(New Object() {CODVENDEDOR}), ComisionNotasCreditoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overrides Function Clone() As Global.System.Data.DataTable
            Dim cln As ComisionNotasCreditoDataTable = CType(MyBase.Clone, ComisionNotasCreditoDataTable)
            cln.InitVars()
            Return cln
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function CreateInstance() As Global.System.Data.DataTable
            Return New ComisionNotasCreditoDataTable()
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub InitVars()
            Me.columnNUMDEVOLUCION = MyBase.Columns("NUMDEVOLUCION")
            Me.columnNOMBRE = MyBase.Columns("NOMBRE")
            Me.columnCODVENDEDOR = MyBase.Columns("CODVENDEDOR")
            Me.columnCODTIPOCOBRO = MyBase.Columns("CODTIPOCOBRO")
            Me.columnDESTIPOCOBRO = MyBase.Columns("DESTIPOCOBRO")
            Me.columnFECHACOBRO = MyBase.Columns("FECHACOBRO")
            Me.columnNRORECIBO = MyBase.Columns("NRORECIBO")
            Me.columnNOMBREFANTASIA = MyBase.Columns("NOMBREFANTASIA")
            Me.columnNUMVENTA = MyBase.Columns("NUMVENTA")
            Me.columnDESVENDEDOR = MyBase.Columns("DESVENDEDOR")
            Me.columnimportesiniva = MyBase.Columns("importesiniva")
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitClass()
            Me.columnNUMDEVOLUCION = New Global.System.Data.DataColumn("NUMDEVOLUCION", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMDEVOLUCION)
            Me.columnNOMBRE = New Global.System.Data.DataColumn("NOMBRE", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBRE)
            Me.columnCODVENDEDOR = New Global.System.Data.DataColumn("CODVENDEDOR", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODVENDEDOR)
            Me.columnCODTIPOCOBRO = New Global.System.Data.DataColumn("CODTIPOCOBRO", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnCODTIPOCOBRO)
            Me.columnDESTIPOCOBRO = New Global.System.Data.DataColumn("DESTIPOCOBRO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESTIPOCOBRO)
            Me.columnFECHACOBRO = New Global.System.Data.DataColumn("FECHACOBRO", GetType(Date), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnFECHACOBRO)
            Me.columnNRORECIBO = New Global.System.Data.DataColumn("NRORECIBO", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNRORECIBO)
            Me.columnNOMBREFANTASIA = New Global.System.Data.DataColumn("NOMBREFANTASIA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNOMBREFANTASIA)
            Me.columnNUMVENTA = New Global.System.Data.DataColumn("NUMVENTA", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnNUMVENTA)
            Me.columnDESVENDEDOR = New Global.System.Data.DataColumn("DESVENDEDOR", GetType(String), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnDESVENDEDOR)
            Me.columnimportesiniva = New Global.System.Data.DataColumn("importesiniva", GetType(Decimal), Nothing, Global.System.Data.MappingType.Element)
            MyBase.Columns.Add(Me.columnimportesiniva)
            Me.Constraints.Add(New Global.System.Data.UniqueConstraint("Constraint1", New Global.System.Data.DataColumn() {Me.columnCODVENDEDOR}, True))
            Me.columnNUMDEVOLUCION.MaxLength = 20
            Me.columnNOMBRE.MaxLength = 50
            Me.columnCODVENDEDOR.AllowDBNull = False
            Me.columnCODVENDEDOR.Unique = True
            Me.columnDESTIPOCOBRO.MaxLength = 150
            Me.columnNRORECIBO.MaxLength = 500
            Me.columnNOMBREFANTASIA.MaxLength = 80
            Me.columnNUMVENTA.MaxLength = 20
            Me.columnDESVENDEDOR.MaxLength = 150
            Me.columnimportesiniva.ReadOnly = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function NewComisionNotasCreditoRow() As ComisionNotasCreditoRow
            Return CType(Me.NewRow, ComisionNotasCreditoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function NewRowFromBuilder(ByVal builder As Global.System.Data.DataRowBuilder) As Global.System.Data.DataRow
            Return New ComisionNotasCreditoRow(builder)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Function GetRowType() As Global.System.Type
            Return GetType(ComisionNotasCreditoRow)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanged(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanged(e)
            If (Not (Me.ComisionNotasCreditoRowChangedEvent) Is Nothing) Then
                RaiseEvent ComisionNotasCreditoRowChanged(Me, New ComisionNotasCreditoRowChangeEvent(CType(e.Row, ComisionNotasCreditoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowChanging(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowChanging(e)
            If (Not (Me.ComisionNotasCreditoRowChangingEvent) Is Nothing) Then
                RaiseEvent ComisionNotasCreditoRowChanging(Me, New ComisionNotasCreditoRowChangeEvent(CType(e.Row, ComisionNotasCreditoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleted(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleted(e)
            If (Not (Me.ComisionNotasCreditoRowDeletedEvent) Is Nothing) Then
                RaiseEvent ComisionNotasCreditoRowDeleted(Me, New ComisionNotasCreditoRowChangeEvent(CType(e.Row, ComisionNotasCreditoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overrides Sub OnRowDeleting(ByVal e As Global.System.Data.DataRowChangeEventArgs)
            MyBase.OnRowDeleting(e)
            If (Not (Me.ComisionNotasCreditoRowDeletingEvent) Is Nothing) Then
                RaiseEvent ComisionNotasCreditoRowDeleting(Me, New ComisionNotasCreditoRowChangeEvent(CType(e.Row, ComisionNotasCreditoRow), e.Action))
            End If
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub RemoveComisionNotasCreditoRow(ByVal row As ComisionNotasCreditoRow)
            Me.Rows.Remove(row)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Shared Function GetTypedTableSchema(ByVal xs As Global.System.Xml.Schema.XmlSchemaSet) As Global.System.Xml.Schema.XmlSchemaComplexType
            Dim type As Global.System.Xml.Schema.XmlSchemaComplexType = New Global.System.Xml.Schema.XmlSchemaComplexType()
            Dim sequence As Global.System.Xml.Schema.XmlSchemaSequence = New Global.System.Xml.Schema.XmlSchemaSequence()
            Dim ds As DsRVComisiones = New DsRVComisiones()
            Dim any1 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any1.Namespace = "http://www.w3.org/2001/XMLSchema"
            any1.MinOccurs = New Decimal(0)
            any1.MaxOccurs = Decimal.MaxValue
            any1.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any1)
            Dim any2 As Global.System.Xml.Schema.XmlSchemaAny = New Global.System.Xml.Schema.XmlSchemaAny()
            any2.Namespace = "urn:schemas-microsoft-com:xml-diffgram-v1"
            any2.MinOccurs = New Decimal(1)
            any2.ProcessContents = Global.System.Xml.Schema.XmlSchemaContentProcessing.Lax
            sequence.Items.Add(any2)
            Dim attribute1 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute1.Name = "namespace"
            attribute1.FixedValue = ds.Namespace
            type.Attributes.Add(attribute1)
            Dim attribute2 As Global.System.Xml.Schema.XmlSchemaAttribute = New Global.System.Xml.Schema.XmlSchemaAttribute()
            attribute2.Name = "tableTypeName"
            attribute2.FixedValue = "ComisionNotasCreditoDataTable"
            type.Attributes.Add(attribute2)
            type.Particle = sequence
            Dim dsSchema As Global.System.Xml.Schema.XmlSchema = ds.GetSchemaSerializable
            If xs.Contains(dsSchema.TargetNamespace) Then
                Dim s1 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Dim s2 As Global.System.IO.MemoryStream = New Global.System.IO.MemoryStream()
                Try
                    Dim schema As Global.System.Xml.Schema.XmlSchema = Nothing
                    dsSchema.Write(s1)
                    Dim schemas As Global.System.Collections.IEnumerator = xs.Schemas(dsSchema.TargetNamespace).GetEnumerator
                    Do While schemas.MoveNext
                        schema = CType(schemas.Current, Global.System.Xml.Schema.XmlSchema)
                        s2.SetLength(0)
                        schema.Write(s2)
                        If (s1.Length = s2.Length) Then
                            s1.Position = 0
                            s2.Position = 0

                            Do While ((s1.Position <> s1.Length) _
                                        AndAlso (s1.ReadByte = s2.ReadByte))


                            Loop
                            If (s1.Position = s1.Length) Then
                                Return type
                            End If
                        End If

                    Loop
                Finally
                    If (Not (s1) Is Nothing) Then
                        s1.Close()
                    End If
                    If (Not (s2) Is Nothing) Then
                        s2.Close()
                    End If
                End Try
            End If
            xs.Add(dsSchema)
            Return type
        End Function
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComisionVendedorCobranzaRow
        Inherits Global.System.Data.DataRow

        Private tableComisionVendedorCobranza As ComisionVendedorCobranzaDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComisionVendedorCobranza = CType(Me.Table, ComisionVendedorCobranzaDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODVENDEDOR() As Integer
            Get
                Return CType(Me(Me.tableComisionVendedorCobranza.CODVENDEDORColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobranza.CODVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NUMVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENDEDOR' in table 'ComisionVendedorCobranza' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.NUMVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.DESVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESVENDEDOR' in table 'ComisionVendedorCobranza' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.DESVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALCONIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.TOTALCONIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCONIVA' in table 'ComisionVendedorCobranza' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranza.TOTALCONIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALSINIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.TOTALSINIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALSINIVA' in table 'ComisionVendedorCobranza' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranza.TOTALSINIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHACOMP() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.FECHACOMPColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACOMP' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobranza.FECHACOMPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NROCOMPROBANTE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NROCOMPROBANTEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NROCOMPROBANTE' in table 'ComisionVendedorCobranza' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.NROCOMPROBANTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENTA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NUMVENTAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.NUMVENTAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAFACT() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.FECHAFACTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAFACT' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobranza.FECHAFACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.TIPOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPO' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.TIPOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAREGISTROCOB() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.FECHAREGISTROCOBColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAREGISTROCOB' in table 'ComisionVendedorCobranza' is DB" & _
                            "Null.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobranza.FECHAREGISTROCOBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NRORECIBO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NRORECIBOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NRORECIBO' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.NRORECIBOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NUMCLIENTEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranza.NUMCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBRE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NOMBREColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.NOMBREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DIRECCION() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.DIRECCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.DIRECCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCIUDAD() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.DESCIUDADColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCIUDAD' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.DESCIUDADColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.TELEFONOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TELEFONO' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.TELEFONOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODCLIENTE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.CODCLIENTEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'ComisionVendedorCobranza' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranza.CODCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBREFANTASIA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NOMBREFANTASIAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBREFANTASIA' in table 'ComisionVendedorCobranza' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranza.NOMBREFANTASIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMDEVOLUCION() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranza.NUMDEVOLUCIONColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMDEVOLUCION' in table 'ComisionVendedorCobranza' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobranza.NUMDEVOLUCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NUMVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENDEDORNull()
            Me(Me.tableComisionVendedorCobranza.NUMVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.DESVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESVENDEDORNull()
            Me(Me.tableComisionVendedorCobranza.DESVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALCONIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.TOTALCONIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALCONIVANull()
            Me(Me.tableComisionVendedorCobranza.TOTALCONIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALSINIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.TOTALSINIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALSINIVANull()
            Me(Me.tableComisionVendedorCobranza.TOTALSINIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHACOMPNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.FECHACOMPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHACOMPNull()
            Me(Me.tableComisionVendedorCobranza.FECHACOMPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNROCOMPROBANTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NROCOMPROBANTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNROCOMPROBANTENull()
            Me(Me.tableComisionVendedorCobranza.NROCOMPROBANTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NUMVENTAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENTANull()
            Me(Me.tableComisionVendedorCobranza.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAFACTNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.FECHAFACTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAFACTNull()
            Me(Me.tableComisionVendedorCobranza.FECHAFACTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.TIPOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPONull()
            Me(Me.tableComisionVendedorCobranza.TIPOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAREGISTROCOBNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.FECHAREGISTROCOBColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAREGISTROCOBNull()
            Me(Me.tableComisionVendedorCobranza.FECHAREGISTROCOBColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNRORECIBONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NRORECIBOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNRORECIBONull()
            Me(Me.tableComisionVendedorCobranza.NRORECIBOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NUMCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableComisionVendedorCobranza.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NOMBREColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBRENull()
            Me(Me.tableComisionVendedorCobranza.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.DIRECCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableComisionVendedorCobranza.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCIUDADNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.DESCIUDADColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCIUDADNull()
            Me(Me.tableComisionVendedorCobranza.DESCIUDADColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.TELEFONOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONONull()
            Me(Me.tableComisionVendedorCobranza.TELEFONOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.CODCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableComisionVendedorCobranza.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBREFANTASIANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NOMBREFANTASIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBREFANTASIANull()
            Me(Me.tableComisionVendedorCobranza.NOMBREFANTASIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMDEVOLUCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranza.NUMDEVOLUCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMDEVOLUCIONNull()
            Me(Me.tableComisionVendedorCobranza.NUMDEVOLUCIONColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComisionVendedorFacturacionRow
        Inherits Global.System.Data.DataRow

        Private tableComisionVendedorFacturacion As ComisionVendedorFacturacionDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComisionVendedorFacturacion = CType(Me.Table, ComisionVendedorFacturacionDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODVENDEDOR() As Integer
            Get
                Return CType(Me(Me.tableComisionVendedorFacturacion.CODVENDEDORColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorFacturacion.CODVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorFacturacion.NUMVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENDEDOR' in table 'ComisionVendedorFacturacion' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorFacturacion.NUMVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorFacturacion.DESVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESVENDEDOR' in table 'ComisionVendedorFacturacion' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorFacturacion.DESVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MONTOCONIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorFacturacion.MONTOCONIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MONTOCONIVA' in table 'ComisionVendedorFacturacion' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorFacturacion.MONTOCONIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MONTOSINIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorFacturacion.MONTOSINIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MONTOSINIVA' in table 'ComisionVendedorFacturacion' is DBNu" & _
                            "ll.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorFacturacion.MONTOSINIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PORCCONIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorFacturacion.PORCCONIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORCCONIVA' in table 'ComisionVendedorFacturacion' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorFacturacion.PORCCONIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property PORCSINIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorFacturacion.PORCSINIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'PORCSINIVA' in table 'ComisionVendedorFacturacion' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorFacturacion.PORCSINIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorFacturacion.NUMVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENDEDORNull()
            Me(Me.tableComisionVendedorFacturacion.NUMVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorFacturacion.DESVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESVENDEDORNull()
            Me(Me.tableComisionVendedorFacturacion.DESVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMONTOCONIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorFacturacion.MONTOCONIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMONTOCONIVANull()
            Me(Me.tableComisionVendedorFacturacion.MONTOCONIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMONTOSINIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorFacturacion.MONTOSINIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMONTOSINIVANull()
            Me(Me.tableComisionVendedorFacturacion.MONTOSINIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPORCCONIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorFacturacion.PORCCONIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPORCCONIVANull()
            Me(Me.tableComisionVendedorFacturacion.PORCCONIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsPORCSINIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorFacturacion.PORCSINIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetPORCSINIVANull()
            Me(Me.tableComisionVendedorFacturacion.PORCSINIVAColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComisionVendedorCobrDetRow
        Inherits Global.System.Data.DataRow

        Private tableComisionVendedorCobrDet As ComisionVendedorCobrDetDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComisionVendedorCobrDet = CType(Me.Table, ComisionVendedorCobrDetDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODVENDEDOR() As Integer
            Get
                Return CType(Me(Me.tableComisionVendedorCobrDet.CODVENDEDORColumn), Integer)
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobrDet.CODVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NUMVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENDEDOR' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.NUMVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.DESVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESVENDEDOR' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.DESVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENTA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NUMVENTAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.NUMVENTAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAREGISTROCOB() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.FECHAREGISTROCOBColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAREGISTROCOB' in table 'ComisionVendedorCobrDet' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobrDet.FECHAREGISTROCOBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NRORECIBO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NRORECIBOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NRORECIBO' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.NRORECIBOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBREFANTASIA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NOMBREFANTASIAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBREFANTASIA' in table 'ComisionVendedorCobrDet' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.NOMBREFANTASIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALCONIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.TOTALCONIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCONIVA' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobrDet.TOTALCONIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALSINIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.TOTALSINIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALSINIVA' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobrDet.TOTALSINIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NROCOMPROBANTE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NROCOMPROBANTEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NROCOMPROBANTE' in table 'ComisionVendedorCobrDet' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.NROCOMPROBANTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAFACT() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.FECHAFACTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAFACT' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobrDet.FECHAFACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHACOMP() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.FECHACOMPColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACOMP' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobrDet.FECHACOMPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.TIPOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPO' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.TIPOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NUMCLIENTEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobrDet.NUMCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBRE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NOMBREColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.NOMBREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DIRECCION() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.DIRECCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.DIRECCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCIUDAD() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.DESCIUDADColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCIUDAD' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.DESCIUDADColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.TELEFONOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TELEFONO' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobrDet.TELEFONOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODCLIENTE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.CODCLIENTEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'ComisionVendedorCobrDet' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobrDet.CODCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMDEVOLUCION() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.NUMDEVOLUCIONColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMDEVOLUCION' in table 'ComisionVendedorCobrDet' is DBNull" & _
                            ".", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobrDet.NUMDEVOLUCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODVENDEDOR1() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobrDet.CODVENDEDOR1Column), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODVENDEDOR1' in table 'ComisionVendedorCobrDet' is DBNull." & _
                            "", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobrDet.CODVENDEDOR1Column) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NUMVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENDEDORNull()
            Me(Me.tableComisionVendedorCobrDet.NUMVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.DESVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESVENDEDORNull()
            Me(Me.tableComisionVendedorCobrDet.DESVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NUMVENTAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENTANull()
            Me(Me.tableComisionVendedorCobrDet.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAREGISTROCOBNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.FECHAREGISTROCOBColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAREGISTROCOBNull()
            Me(Me.tableComisionVendedorCobrDet.FECHAREGISTROCOBColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNRORECIBONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NRORECIBOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNRORECIBONull()
            Me(Me.tableComisionVendedorCobrDet.NRORECIBOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBREFANTASIANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NOMBREFANTASIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBREFANTASIANull()
            Me(Me.tableComisionVendedorCobrDet.NOMBREFANTASIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALCONIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.TOTALCONIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALCONIVANull()
            Me(Me.tableComisionVendedorCobrDet.TOTALCONIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALSINIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.TOTALSINIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALSINIVANull()
            Me(Me.tableComisionVendedorCobrDet.TOTALSINIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNROCOMPROBANTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NROCOMPROBANTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNROCOMPROBANTENull()
            Me(Me.tableComisionVendedorCobrDet.NROCOMPROBANTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAFACTNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.FECHAFACTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAFACTNull()
            Me(Me.tableComisionVendedorCobrDet.FECHAFACTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHACOMPNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.FECHACOMPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHACOMPNull()
            Me(Me.tableComisionVendedorCobrDet.FECHACOMPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.TIPOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPONull()
            Me(Me.tableComisionVendedorCobrDet.TIPOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NUMCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableComisionVendedorCobrDet.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NOMBREColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBRENull()
            Me(Me.tableComisionVendedorCobrDet.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.DIRECCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableComisionVendedorCobrDet.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCIUDADNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.DESCIUDADColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCIUDADNull()
            Me(Me.tableComisionVendedorCobrDet.DESCIUDADColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.TELEFONOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONONull()
            Me(Me.tableComisionVendedorCobrDet.TELEFONOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.CODCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableComisionVendedorCobrDet.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMDEVOLUCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.NUMDEVOLUCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMDEVOLUCIONNull()
            Me(Me.tableComisionVendedorCobrDet.NUMDEVOLUCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODVENDEDOR1Null() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobrDet.CODVENDEDOR1Column)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODVENDEDOR1Null()
            Me(Me.tableComisionVendedorCobrDet.CODVENDEDOR1Column) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComisionVendedorCobranzaTipoVentaRow
        Inherits Global.System.Data.DataRow

        Private tableComisionVendedorCobranzaTipoVenta As ComisionVendedorCobranzaTipoVentaDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComisionVendedorCobranzaTipoVenta = CType(Me.Table, ComisionVendedorCobranzaTipoVentaDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALCONIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.TOTALCONIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALCONIVA' in table 'ComisionVendedorCobranzaTipoVenta' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.TOTALCONIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TOTALSINIVA() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.TOTALSINIVAColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TOTALSINIVA' in table 'ComisionVendedorCobranzaTipoVenta' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.TOTALSINIVAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NROCOMPROBANTE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NROCOMPROBANTEColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NROCOMPROBANTE' in table 'ComisionVendedorCobranzaTipoVenta" & _
                            "' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NROCOMPROBANTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENTA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENTAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'ComisionVendedorCobranzaTipoVenta' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENTAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMDEVOLUCION() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMDEVOLUCIONColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMDEVOLUCION' in table 'ComisionVendedorCobranzaTipoVenta'" & _
                            " is DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMDEVOLUCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAFACT() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHAFACTColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAFACT' in table 'ComisionVendedorCobranzaTipoVenta' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHAFACTColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHACOMP() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHACOMPColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACOMP' in table 'ComisionVendedorCobranzaTipoVenta' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHACOMPColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TIPO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.TIPOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TIPO' in table 'ComisionVendedorCobranzaTipoVenta' is DBNul" & _
                            "l.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.TIPOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHAREGISTROCOB() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHAREGISTROCOBColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHAREGISTROCOB' in table 'ComisionVendedorCobranzaTipoVen" & _
                            "ta' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHAREGISTROCOBColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NRORECIBO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NRORECIBOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NRORECIBO' in table 'ComisionVendedorCobranzaTipoVenta' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NRORECIBOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMCLIENTE() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMCLIENTEColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMCLIENTE' in table 'ComisionVendedorCobranzaTipoVenta' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBRE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'ComisionVendedorCobranzaTipoVenta' is DBN" & _
                            "ull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DIRECCION() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.DIRECCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DIRECCION' in table 'ComisionVendedorCobranzaTipoVenta' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.DIRECCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESCIUDAD() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.DESCIUDADColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESCIUDAD' in table 'ComisionVendedorCobranzaTipoVenta' is " & _
                            "DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.DESCIUDADColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property TELEFONO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.TELEFONOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'TELEFONO' in table 'ComisionVendedorCobranzaTipoVenta' is D" & _
                            "BNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.TELEFONOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODCLIENTE() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.CODCLIENTEColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODCLIENTE' in table 'ComisionVendedorCobranzaTipoVenta' is" & _
                            " DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.CODCLIENTEColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBREFANTASIA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREFANTASIAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBREFANTASIA' in table 'ComisionVendedorCobranzaTipoVenta" & _
                            "' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREFANTASIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property MODALIDADPAGO() As Byte
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.MODALIDADPAGOColumn), Byte)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'MODALIDADPAGO' in table 'ComisionVendedorCobranzaTipoVenta'" & _
                            " is DBNull.", e)
                End Try
            End Get
            Set(value As Byte)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.MODALIDADPAGOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODVENDEDOR() As Integer
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.CODVENDEDORColumn), Integer)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODVENDEDOR' in table 'ComisionVendedorCobranzaTipoVenta' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As Integer)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.CODVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENDEDOR' in table 'ComisionVendedorCobranzaTipoVenta' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionVendedorCobranzaTipoVenta.DESVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESVENDEDOR' in table 'ComisionVendedorCobranzaTipoVenta' i" & _
                            "s DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionVendedorCobranzaTipoVenta.DESVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALCONIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.TOTALCONIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALCONIVANull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.TOTALCONIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTOTALSINIVANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.TOTALSINIVAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTOTALSINIVANull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.TOTALSINIVAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNROCOMPROBANTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NROCOMPROBANTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNROCOMPROBANTENull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NROCOMPROBANTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENTAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENTANull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMDEVOLUCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NUMDEVOLUCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMDEVOLUCIONNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMDEVOLUCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAFACTNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.FECHAFACTColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAFACTNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHAFACTColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHACOMPNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.FECHACOMPColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHACOMPNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHACOMPColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTIPONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.TIPOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTIPONull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.TIPOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHAREGISTROCOBNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.FECHAREGISTROCOBColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHAREGISTROCOBNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.FECHAREGISTROCOBColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNRORECIBONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NRORECIBOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNRORECIBONull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NRORECIBOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NUMCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMCLIENTENull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBRENull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDIRECCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.DIRECCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDIRECCIONNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.DIRECCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESCIUDADNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.DESCIUDADColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESCIUDADNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.DESCIUDADColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsTELEFONONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.TELEFONOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetTELEFONONull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.TELEFONOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODCLIENTENull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.CODCLIENTEColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODCLIENTENull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.CODCLIENTEColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBREFANTASIANull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREFANTASIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBREFANTASIANull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NOMBREFANTASIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsMODALIDADPAGONull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.MODALIDADPAGOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetMODALIDADPAGONull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.MODALIDADPAGOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.CODVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODVENDEDORNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.CODVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENDEDORNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.NUMVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionVendedorCobranzaTipoVenta.DESVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESVENDEDORNull()
            Me(Me.tableComisionVendedorCobranzaTipoVenta.DESVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Represents strongly named DataRow class.
    '''</summary>
    Partial Public Class ComisionNotasCreditoRow
        Inherits Global.System.Data.DataRow

        Private tableComisionNotasCredito As ComisionNotasCreditoDataTable

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Sub New(ByVal rb As Global.System.Data.DataRowBuilder)
            MyBase.New(rb)
            Me.tableComisionNotasCredito = CType(Me.Table, ComisionNotasCreditoDataTable)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMDEVOLUCION() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.NUMDEVOLUCIONColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMDEVOLUCION' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.NUMDEVOLUCIONColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBRE() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.NOMBREColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBRE' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.NOMBREColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODVENDEDOR() As Decimal
            Get
                Return CType(Me(Me.tableComisionNotasCredito.CODVENDEDORColumn), Decimal)
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionNotasCredito.CODVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property CODTIPOCOBRO() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.CODTIPOCOBROColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'CODTIPOCOBRO' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionNotasCredito.CODTIPOCOBROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESTIPOCOBRO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.DESTIPOCOBROColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESTIPOCOBRO' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.DESTIPOCOBROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property FECHACOBRO() As Date
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.FECHACOBROColumn), Date)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'FECHACOBRO' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As Date)
                Me(Me.tableComisionNotasCredito.FECHACOBROColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NRORECIBO() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.NRORECIBOColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NRORECIBO' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.NRORECIBOColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NOMBREFANTASIA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.NOMBREFANTASIAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NOMBREFANTASIA' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.NOMBREFANTASIAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property NUMVENTA() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.NUMVENTAColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'NUMVENTA' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.NUMVENTAColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property DESVENDEDOR() As String
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.DESVENDEDORColumn), String)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'DESVENDEDOR' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As String)
                Me(Me.tableComisionNotasCredito.DESVENDEDORColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property importesiniva() As Decimal
            Get
                Try
                    Return CType(Me(Me.tableComisionNotasCredito.importesinivaColumn), Decimal)
                Catch e As Global.System.InvalidCastException
                    Throw New Global.System.Data.StrongTypingException("The value for column 'importesiniva' in table 'ComisionNotasCredito' is DBNull.", e)
                End Try
            End Get
            Set(value As Decimal)
                Me(Me.tableComisionNotasCredito.importesinivaColumn) = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMDEVOLUCIONNull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.NUMDEVOLUCIONColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMDEVOLUCIONNull()
            Me(Me.tableComisionNotasCredito.NUMDEVOLUCIONColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBRENull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.NOMBREColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBRENull()
            Me(Me.tableComisionNotasCredito.NOMBREColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsCODTIPOCOBRONull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.CODTIPOCOBROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetCODTIPOCOBRONull()
            Me(Me.tableComisionNotasCredito.CODTIPOCOBROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESTIPOCOBRONull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.DESTIPOCOBROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESTIPOCOBRONull()
            Me(Me.tableComisionNotasCredito.DESTIPOCOBROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsFECHACOBRONull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.FECHACOBROColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetFECHACOBRONull()
            Me(Me.tableComisionNotasCredito.FECHACOBROColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNRORECIBONull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.NRORECIBOColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNRORECIBONull()
            Me(Me.tableComisionNotasCredito.NRORECIBOColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNOMBREFANTASIANull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.NOMBREFANTASIAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNOMBREFANTASIANull()
            Me(Me.tableComisionNotasCredito.NOMBREFANTASIAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsNUMVENTANull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.NUMVENTAColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetNUMVENTANull()
            Me(Me.tableComisionNotasCredito.NUMVENTAColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsDESVENDEDORNull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.DESVENDEDORColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetDESVENDEDORNull()
            Me(Me.tableComisionNotasCredito.DESVENDEDORColumn) = Global.System.Convert.DBNull
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Function IsimportesinivaNull() As Boolean
            Return Me.IsNull(Me.tableComisionNotasCredito.importesinivaColumn)
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub SetimportesinivaNull()
            Me(Me.tableComisionNotasCredito.importesinivaColumn) = Global.System.Convert.DBNull
        End Sub
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComisionVendedorCobranzaRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComisionVendedorCobranzaRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComisionVendedorCobranzaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComisionVendedorCobranzaRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComisionVendedorFacturacionRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComisionVendedorFacturacionRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComisionVendedorFacturacionRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComisionVendedorFacturacionRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComisionVendedorCobrDetRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComisionVendedorCobrDetRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComisionVendedorCobrDetRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComisionVendedorCobrDetRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComisionVendedorCobranzaTipoVentaRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComisionVendedorCobranzaTipoVentaRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComisionVendedorCobranzaTipoVentaRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComisionVendedorCobranzaTipoVentaRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class

    '''<summary>
    '''Row event argument class
    '''</summary>
    <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
    Public Class ComisionNotasCreditoRowChangeEvent
        Inherits Global.System.EventArgs

        Private eventRow As ComisionNotasCreditoRow

        Private eventAction As Global.System.Data.DataRowAction

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New(ByVal row As ComisionNotasCreditoRow, ByVal action As Global.System.Data.DataRowAction)
            MyBase.New()
            Me.eventRow = row
            Me.eventAction = action
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Row() As ComisionNotasCreditoRow
            Get
                Return Me.eventRow
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public ReadOnly Property Action() As Global.System.Data.DataRowAction
            Get
                Return Me.eventAction
            End Get
        End Property
    End Class
End Class

Namespace DsRVComisionesTableAdapters

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ComisionVendedorCobranzaTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ComisionVendedorCobranza"
            tableMapping.ColumnMappings.Add("NUMVENDEDOR", "NUMVENDEDOR")
            tableMapping.ColumnMappings.Add("DESVENDEDOR", "DESVENDEDOR")
            tableMapping.ColumnMappings.Add("TOTALCONIVA", "TOTALCONIVA")
            tableMapping.ColumnMappings.Add("TOTALSINIVA", "TOTALSINIVA")
            tableMapping.ColumnMappings.Add("CODVENDEDOR", "CODVENDEDOR")
            tableMapping.ColumnMappings.Add("FECHACOMP", "FECHACOMP")
            tableMapping.ColumnMappings.Add("NROCOMPROBANTE", "NROCOMPROBANTE")
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            tableMapping.ColumnMappings.Add("FECHAFACT", "FECHAFACT")
            tableMapping.ColumnMappings.Add("TIPO", "TIPO")
            tableMapping.ColumnMappings.Add("FECHAREGISTROCOB", "FECHAREGISTROCOB")
            tableMapping.ColumnMappings.Add("NRORECIBO", "NRORECIBO")
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("DESCIUDAD", "DESCIUDAD")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBREFANTASIA", "NOMBREFANTASIA")
            tableMapping.ColumnMappings.Add("NUMDEVOLUCION", "NUMDEVOLUCION")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT TOTALCONIVACOB AS TOTALCONIVA, TOTALSINIVACOB AS " & _
                "TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                " FECHAFACT, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DI" & _
                "RECCION, DESCIUDAD, TELEFONO, CODCLIENTE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NOMBREFANTA" & _
                "SIA, CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELECT        TOP (" & _
                "100) PERCENT dbo.VENDEDOR.CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, dbo.VENDEDOR.DE" & _
                "SVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    V.TOTALVENTA - " & _
                "V.TOTALIVA AS TOTALSINIVACOB, V.TOTALVENTA AS TOTALCONIVACOB, SUBSTRING(V.NUMVEN" & _
                "TA, 9, LEN(V.NUMVENTA) - 7) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "  AS NROCOMPROBANTE, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7) AS NUMVENTA, " & _
                "V.FECHAVENTA AS FECHACOMP, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   " & _
                " V.FECHAVENTA AS FECHAFACT, CASE WHEN V.MODALIDADPAGO = 0 THEN 'VTA_CONT' ELSE '" & _
                "VTA_OTROS' END AS TIPO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "   AS FECHAREGISTROCOB, NULL AS NRORECIBO, NULL AS NUMDEVOLUCION, dbo.CLIENTES.N" & _
                "UMCLIENTE, dbo.CLIENTES.NOMBRE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "      dbo.CLIENTES.DIRECCION, dbo.CIUDAD.DESCIUDAD, dbo.CLIENTES.TELEFONO, V.COD" & _
                "CLIENTE, dbo.CLIENTES.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            " & _
                "dbo.VENTAS AS V INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    " & _
                "dbo.CLIENTES ON V.CODCLIENTE = dbo.CLIENTES.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                                            dbo.CIUDAD ON dbo.CLIENTES.CODCIUDAD" & _
                " = dbo.CIUDAD.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "        dbo.VENDEDOR ON V.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "            WHERE        (V.ESTADO = 1) AND (V.MODALIDADPAGO = 0 OR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                                         V.MODALIDADPAGO = 4)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "         UNION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SELECT        TOP (100) PERCENT CODVEN" & _
                "DEDOR, NUMVENDEDOR, DESVENDEDOR, SUM(TOTALSINIVACOB) AS TOTALSINIVA, SUM(TOTALCO" & _
                "NIVACOB) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   AS TOTALCONIVA, NR" & _
                "OCOMPROBANTE, NULL AS NUMVENTA, FECHACOMP, NULL AS FECHAFACT, TIPO, FECHAREGISTR" & _
                "OCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NUMDEVOLUC" & _
                "ION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTA" & _
                "SIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT        TOP (100) PERCENT " & _
                "VENDEDOR_3.CODVENDEDOR, VENDEDOR_3.NUMVENDEDOR, VENDEDOR_3.DESVENDEDOR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                                           (SELE" & _
                "CT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                               " & _
                "                                     FROM            dbo.VENTASFORMACOBRO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                                               W" & _
                "HERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA) AND (FECHAREGISTROCO" & _
                "B >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                       " & _
                "                                                       @fechaini, 103)) AND (FEC" & _
                "HAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                                          (SELECT        SUM(IMP" & _
                "ORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                " & _
                "                    FROM            dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_3" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                                                " & _
                "    WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA) AND (FECHAREGIS" & _
                "TROCOB >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "                                                            @fechaini, 103)) AND" & _
                " (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                                          / V.TOTALVENTA * V.TOT" & _
                "ALIVA AS TOTALSINIVACOB," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                      " & _
                "                            (SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                      FROM      " & _
                "      dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                              " & _
                "                                                      WHERE        (CODTIPOCOBRO" & _
                " <> 5) AND (CODVENTA = V.CODVENTA)) AS TOTALCONIVACOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                                       VFCORIG.NRORECIBO + ' ' +" & _
                " ISNULL(VFCORIG.RECIBONROSERIE, '') AS NROCOMPROBANTE, V.NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                                                                   VFCORIG.FECHA" & _
                "REGISTROCOB AS FECHACOMP, V.FECHAVENTA AS FECHAFACT, 'RECIBO' AS TIPO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                                       VFCORIG.F" & _
                "ECHAREGISTROCOB, VFCORIG.NRORECIBO + ' ' + ISNULL(VFCORIG.RECIBONROSERIE, '') AS" & _
                " NRORECIBO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                             " & _
                "                 AS NUMDEVOLUCION, CLIENTES_2.NUMCLIENTE, CLIENTES_2.NOMBRE, CLI" & _
                "ENTES_2.DIRECCION, CIUDAD_2.DESCIUDAD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       " & _
                "                                       CLIENTES_2.TELEFONO, V.CODCLIENTE, CLIENT" & _
                "ES_2.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    FROM   " & _
                "         dbo.VENTASFORMACOBRO AS VFCORIG INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "                                                   dbo.VENTAS AS V ON V.CODVENTA" & _
                " = VFCORIG.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                              dbo.CLIENTES AS CLIENTES_2 ON V.CODCLIENTE = CLIEN" & _
                "TES_2.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "                                dbo.CIUDAD AS CIUDAD_2 ON CLIENTES_2.CODCIUDAD =" & _
                " CIUDAD_2.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                              dbo.VENDEDOR AS VENDEDOR_3 ON V.CODVENDEDOR = VEND" & _
                "EDOR_3.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    WHERE   " & _
                "     (VFCORIG.CODTIPOCOBRO <> 5) AND (V.ESTADO = 1)) AS dt2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "       GROUP BY CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, NROCOMPROBANTE, FECHACOMP" & _
                ", TIPO, FECHAREGISTROCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                         " & _
                "          NUMDEVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, COD" & _
                "CLIENTE, NOMBREFANTASIA) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         AS MOVIMIENTOSCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & _
                "        (FECHACOMP >= CONVERT(DATETIME, @fechaini, 103)) AND (FECHACOMP <= CONVE" & _
                "RT(DATETIME, @fechafin, 103)) AND (CODVENDEDOR IN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "(SELECT        item" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            dbo.fnPartir" & _
                "(@vend, ',') AS fnPartir_1))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY FECHACOMP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@vend", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT TOTALCONIVACOB AS TOTALCONIVA, TOTALSINIVACOB AS " & _
                "TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                " FECHAFACT, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DI" & _
                "RECCION, DESCIUDAD, TELEFONO, CODCLIENTE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NOMBREFANTA" & _
                "SIA, CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELECT        TOP (" & _
                "100) PERCENT dbo.VENDEDOR.CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, dbo.VENDEDOR.DE" & _
                "SVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    V.TOTALVENTA - " & _
                "V.TOTALIVA AS TOTALSINIVACOB, V.TOTALVENTA AS TOTALCONIVACOB, SUBSTRING(V.NUMVEN" & _
                "TA, 9, LEN(V.NUMVENTA) - 7) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "  AS NROCOMPROBANTE, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7) AS NUMVENTA, " & _
                "V.FECHAVENTA AS FECHACOMP, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   " & _
                " V.FECHAVENTA AS FECHAFACT, CASE WHEN V.MODALIDADPAGO = 0 THEN 'VTA_CONT' ELSE '" & _
                "VTA_OTROS' END AS TIPO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "   AS FECHAREGISTROCOB, NULL AS NRORECIBO, NULL AS NUMDEVOLUCION, dbo.CLIENTES.N" & _
                "UMCLIENTE, dbo.CLIENTES.NOMBRE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "      dbo.CLIENTES.DIRECCION, dbo.CIUDAD.DESCIUDAD, dbo.CLIENTES.TELEFONO, V.COD" & _
                "CLIENTE, dbo.CLIENTES.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            " & _
                "dbo.VENTAS AS V INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    " & _
                "dbo.CLIENTES ON V.CODCLIENTE = dbo.CLIENTES.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                                            dbo.CIUDAD ON dbo.CLIENTES.CODCIUDAD" & _
                " = dbo.CIUDAD.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "        dbo.VENDEDOR ON V.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "            WHERE        (V.ESTADO = 1) AND (V.MODALIDADPAGO = 0 OR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                                         V.MODALIDADPAGO = 4)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "         UNION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SELECT        TOP (100) PERCENT CODVEN" & _
                "DEDOR, NUMVENDEDOR, DESVENDEDOR, SUM(TOTALSINIVACOB) AS TOTALSINIVA, SUM(TOTALCO" & _
                "NIVACOB) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   AS TOTALCONIVA, NR" & _
                "OCOMPROBANTE, NULL AS NUMVENTA, FECHACOMP, NULL AS FECHAFACT, TIPO, FECHAREGISTR" & _
                "OCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NUMDEVOLUC" & _
                "ION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTA" & _
                "SIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT        TOP (100) PERCENT " & _
                "VENDEDOR_3.CODVENDEDOR, VENDEDOR_3.NUMVENDEDOR, VENDEDOR_3.DESVENDEDOR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                                           (SELE" & _
                "CT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                               " & _
                "                                     FROM            dbo.VENTASFORMACOBRO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                                               W" & _
                "HERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA) AND (FECHAREGISTROCO" & _
                "B >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                       " & _
                "                                                       @fechaini, 103)) AND (FEC" & _
                "HAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                "                                                          (SELECT        SUM(IMP" & _
                "ORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                " & _
                "                    FROM            dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_3" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                                                " & _
                "    WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA) AND (FECHAREGIS" & _
                "TROCOB >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "                                                            @fechaini, 103)) AND" & _
                " (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                                          / V.TOTALVENTA * V.TOT" & _
                "ALIVA AS TOTALSINIVACOB," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                      " & _
                "                            (SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                      FROM      " & _
                "      dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                              " & _
                "                                                      WHERE        (CODTIPOCOBRO" & _
                " <> 5) AND (CODVENTA = V.CODVENTA)) AS TOTALCONIVACOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                                       VFCORIG.NRORECIBO + ' ' +" & _
                " ISNULL(VFCORIG.RECIBONROSERIE, '') AS NROCOMPROBANTE, V.NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                                                                   VFCORIG.FECHA" & _
                "REGISTROCOB AS FECHACOMP, V.FECHAVENTA AS FECHAFACT, 'RECIBO' AS TIPO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                                                                       VFCORIG.F" & _
                "ECHAREGISTROCOB, VFCORIG.NRORECIBO + ' ' + ISNULL(VFCORIG.RECIBONROSERIE, '') AS" & _
                " NRORECIBO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                             " & _
                "                 AS NUMDEVOLUCION, CLIENTES_2.NUMCLIENTE, CLIENTES_2.NOMBRE, CLI" & _
                "ENTES_2.DIRECCION, CIUDAD_2.DESCIUDAD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       " & _
                "                                       CLIENTES_2.TELEFONO, V.CODCLIENTE, CLIENT" & _
                "ES_2.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    FROM   " & _
                "         dbo.VENTASFORMACOBRO AS VFCORIG INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                           " & _
                "                                                   dbo.VENTAS AS V ON V.CODVENTA" & _
                " = VFCORIG.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                              dbo.CLIENTES AS CLIENTES_2 ON V.CODCLIENTE = CLIEN" & _
                "TES_2.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "                                dbo.CIUDAD AS CIUDAD_2 ON CLIENTES_2.CODCIUDAD =" & _
                " CIUDAD_2.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                              dbo.VENDEDOR AS VENDEDOR_3 ON V.CODVENDEDOR = VEND" & _
                "EDOR_3.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    WHERE   " & _
                "     (VFCORIG.CODTIPOCOBRO <> 5) AND (V.ESTADO = 1)) AS dt2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "       GROUP BY CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, NROCOMPROBANTE, FECHACOMP" & _
                ", TIPO, FECHAREGISTROCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                         " & _
                "          NUMDEVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, COD" & _
                "CLIENTE, NOMBREFANTASIA) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         AS MOVIMIENTOSCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE" & _
                "        (FECHACOMP >= CONVERT(DATETIME, @fechaini, 103)) AND (FECHACOMP <= CONVE" & _
                "RT(DATETIME, @fechafin, 103)) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY FECHACOMP"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillBy1Vend(ByVal dataTable As DsRVComisiones.ComisionVendedorCobranzaDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetDataBy1Vend(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As DsRVComisiones.ComisionVendedorCobranzaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorCobranzaDataTable = New DsRVComisiones.ComisionVendedorCobranzaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DsRVComisiones.ComisionVendedorCobranzaDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetData(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As DsRVComisiones.ComisionVendedorCobranzaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorCobranzaDataTable = New DsRVComisiones.ComisionVendedorCobranzaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ComisionVendedorFacturacionTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ComisionVendedorFacturacion"
            tableMapping.ColumnMappings.Add("CODVENDEDOR", "CODVENDEDOR")
            tableMapping.ColumnMappings.Add("NUMVENDEDOR", "NUMVENDEDOR")
            tableMapping.ColumnMappings.Add("DESVENDEDOR", "DESVENDEDOR")
            tableMapping.ColumnMappings.Add("MONTOCONIVA", "MONTOCONIVA")
            tableMapping.ColumnMappings.Add("MONTOSINIVA", "MONTOSINIVA")
            tableMapping.ColumnMappings.Add("PORCCONIVA", "PORCCONIVA")
            tableMapping.ColumnMappings.Add("PORCSINIVA", "PORCSINIVA")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, MONTOCONIVA, MONTOSINIVA, CO" & _
                "MISIONPOR +" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        ISNULL(PORCENTAJECOMISI" & _
                "ON, 0) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            dbo.METAS" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                          WHERE        (META =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "                             (SELECT        MAX(META) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "                                               FROM            dbo.METAS AS META" & _
                "S_1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                               WHERE       " & _
                " (META <= SUBCONSULTA2.MONTOCONIVA)))) AS PORCCONIVA, COMISIONPOR +" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                  (SELECT        ISNULL(PORCENTAJECOMISION, 0) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                        FROM            dbo.METAS AS METAS_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "             WHERE        (META =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                             " & _
                "                (SELECT        MAX(META) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "                                  FROM            dbo.METAS AS METAS_1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                                                       WHERE        (META <= SUB" & _
                "CONSULTA2.MONTOSINIVA)))) AS PORCSINIVA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELECT        CODVENDE" & _
                "DOR, NUMVENDEDOR, DESVENDEDOR, COMISIONPOR, SUM(DEBE) AS MONTOCONIVA, ROUND(SUM(" & _
                "DEBE) - SUM(IVA), 0) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    AS MO" & _
                "NTOSINIVA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT        dbo.VENDEDOR" & _
                ".CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, dbo.VENDEDOR.DESVENDEDOR, dbo.VENDEDOR.C" & _
                "OMISIONPOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                  " & _
                "            CASE dbo.CLIENTESCUENTACORRIENTE.IDTRANSACCION WHEN 1 THEN dbo.CLIEN" & _
                "TESCUENTACORRIENTE.DEBE WHEN 2 THEN - dbo.devolucion.totalDevolucion" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                                                     END AS DEBE" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                            " & _
                "  CASE dbo.CLIENTESCUENTACORRIENTE.IDTRANSACCION WHEN 1 THEN dbo.VENTAS.TOTALIVA" & _
                " WHEN 2 THEN - dbo.devolucion.totalIVA END" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                                           AS IVA, dbo.CLIENTESCUENTACORRIENTE.I" & _
                "DTRANSACCION, dbo.CLIENTESCUENTACORRIENTE.CONCEPTO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            " & _
                "                        FROM            dbo.CLIENTESCUENTACORRIENTE INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                                              db" & _
                "o.VENTAS ON dbo.CLIENTESCUENTACORRIENTE.CODVENTA = dbo.VENTAS.CODVENTA INNER JOI" & _
                "N" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                             " & _
                " dbo.CLIENTES ON dbo.CLIENTESCUENTACORRIENTE.CODCLIENTE = dbo.CLIENTES.CODCLIENT" & _
                "E AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                        " & _
                "      dbo.VENTAS.CODCLIENTE = dbo.CLIENTES.CODCLIENTE INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                dbo.VENDEDOR ON " & _
                "dbo.VENTAS.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "                                                                 dbo.DEVOLUCION " & _
                "ON dbo.CLIENTESCUENTACORRIENTE.CODDEVOLUCION = dbo.DEVOLUCION.CODDEVOLUCION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                                                 WHERE        (dbo.CLIENTESCUENT" & _
                "ACORRIENTE.FECHACLIENTEMOV >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                              " & _
                "                                                @fdesde, 103)) AND (dbo.CLIENTES" & _
                "CUENTACORRIENTE.FECHACLIENTEMOV <= CONVERT(DATETIME, @fhasta, 103)) AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                                                                        (dbo.CLI" & _
                "ENTESCUENTACORRIENTE.IDTRANSACCION IN (1, 2)) AND (dbo.CLIENTESCUENTACORRIENTE.C" & _
                "ONCEPTO NOT LIKE 'Anulac%')) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "   AS SUBCONSULTA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          GROUP BY CODVENDEDOR, NUMVENDEDOR, " & _
                "DESVENDEDOR, COMISIONPOR) AS SUBCONSULTA2"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fdesde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fhasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, MONTOCONIVA, MONTOSINIVA, CO" & _
                "MISIONPOR +" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        ISNULL(PORCENTAJECOMISI" & _
                "ON, 0) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            dbo.METAS" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                          WHERE        (META =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                " & _
                "                             (SELECT        MAX(META) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "                                               FROM            dbo.METAS AS META" & _
                "S_1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                               WHERE       " & _
                " (META <= SUBCONSULTA2.MONTOCONIVA)))) AS PORCCONIVA, COMISIONPOR +" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                  (SELECT        ISNULL(PORCENTAJECOMISION, 0) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                        FROM            dbo.METAS AS METAS_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "             WHERE        (META =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                             " & _
                "                (SELECT        MAX(META) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "                                  FROM            dbo.METAS AS METAS_1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                                                       WHERE        (META <= SUB" & _
                "CONSULTA2.MONTOSINIVA)))) AS PORCSINIVA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELECT        CODVENDE" & _
                "DOR, NUMVENDEDOR, DESVENDEDOR, COMISIONPOR, SUM(DEBE) AS MONTOCONIVA, ROUND(SUM(" & _
                "DEBE) - SUM(IVA), 0) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    AS MO" & _
                "NTOSINIVA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT        dbo.VENDEDOR" & _
                ".CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, dbo.VENDEDOR.DESVENDEDOR, dbo.VENDEDOR.C" & _
                "OMISIONPOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                  " & _
                "            CASE dbo.CLIENTESCUENTACORRIENTE.IDTRANSACCION WHEN 1 THEN dbo.CLIEN" & _
                "TESCUENTACORRIENTE.DEBE WHEN 2 THEN - dbo.devolucion.totalDevolucion" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                                                     END AS DEBE" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                            " & _
                "  CASE dbo.CLIENTESCUENTACORRIENTE.IDTRANSACCION WHEN 1 THEN dbo.VENTAS.TOTALIVA" & _
                " WHEN 2 THEN - dbo.devolucion.totalIVA END" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                                           AS IVA, dbo.CLIENTESCUENTACORRIENTE.I" & _
                "DTRANSACCION, dbo.CLIENTESCUENTACORRIENTE.CONCEPTO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                            " & _
                "                        FROM            dbo.CLIENTESCUENTACORRIENTE INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                                                                              db" & _
                "o.VENTAS ON dbo.CLIENTESCUENTACORRIENTE.CODVENTA = dbo.VENTAS.CODVENTA INNER JOI" & _
                "N" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                             " & _
                " dbo.CLIENTES ON dbo.CLIENTESCUENTACORRIENTE.CODCLIENTE = dbo.CLIENTES.CODCLIENT" & _
                "E AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                        " & _
                "      dbo.VENTAS.CODCLIENTE = dbo.CLIENTES.CODCLIENTE INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                dbo.VENDEDOR ON " & _
                "dbo.VENTAS.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "                                                                 dbo.DEVOLUCION " & _
                "ON dbo.CLIENTESCUENTACORRIENTE.CODDEVOLUCION = dbo.DEVOLUCION.CODDEVOLUCION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                                                 WHERE        (dbo.VENDEDOR.CODV" & _
                "ENDEDOR IN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                    " & _
                "              (SELECT        item" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                             " & _
                "                                       FROM            dbo.fnPartir(@vend, ',') " & _
                "AS fnPartir_1)) AND (dbo.CLIENTESCUENTACORRIENTE.FECHACLIENTEMOV >= CONVERT(DATE" & _
                "TIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                        " & _
                "      @fdesde, 103)) AND (dbo.CLIENTESCUENTACORRIENTE.FECHACLIENTEMOV <= CONVERT" & _
                "(DATETIME, @fhasta, 103)) AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                " & _
                "                              (dbo.CLIENTESCUENTACORRIENTE.IDTRANSACCION IN (1, " & _
                "2)) AND (dbo.CLIENTESCUENTACORRIENTE.CONCEPTO NOT LIKE 'Anulac%')) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "                                         AS SUBCONSULTA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "   GROUP BY CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, COMISIONPOR) AS SUBCONSULTA2"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fdesde", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fhasta", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@vend", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DsRVComisiones.ComisionVendedorFacturacionDataTable, ByVal fdesde As Global.System.Nullable(Of Date), ByVal fhasta As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fdesde.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fdesde.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fhasta.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fhasta.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal fdesde As Global.System.Nullable(Of Date), ByVal fhasta As Global.System.Nullable(Of Date)) As DsRVComisiones.ComisionVendedorFacturacionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fdesde.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fdesde.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fhasta.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fhasta.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorFacturacionDataTable = New DsRVComisiones.ComisionVendedorFacturacionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy1Vend(ByVal dataTable As DsRVComisiones.ComisionVendedorFacturacionDataTable, ByVal fdesde As Global.System.Nullable(Of Date), ByVal fhasta As Global.System.Nullable(Of Date), ByVal vend As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fdesde.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fdesde.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fhasta.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fhasta.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBy1Vend(ByVal fdesde As Global.System.Nullable(Of Date), ByVal fhasta As Global.System.Nullable(Of Date), ByVal vend As String) As DsRVComisiones.ComisionVendedorFacturacionDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fdesde.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fdesde.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fhasta.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fhasta.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorFacturacionDataTable = New DsRVComisiones.ComisionVendedorFacturacionDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ComisionVendedorCobrDetTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ComisionVendedorCobrDet"
            tableMapping.ColumnMappings.Add("NUMVENDEDOR", "NUMVENDEDOR")
            tableMapping.ColumnMappings.Add("DESVENDEDOR", "DESVENDEDOR")
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            tableMapping.ColumnMappings.Add("FECHAREGISTROCOB", "FECHAREGISTROCOB")
            tableMapping.ColumnMappings.Add("NRORECIBO", "NRORECIBO")
            tableMapping.ColumnMappings.Add("NOMBREFANTASIA", "NOMBREFANTASIA")
            tableMapping.ColumnMappings.Add("TOTALCONIVA", "TOTALCONIVA")
            tableMapping.ColumnMappings.Add("TOTALSINIVA", "TOTALSINIVA")
            tableMapping.ColumnMappings.Add("NROCOMPROBANTE", "NROCOMPROBANTE")
            tableMapping.ColumnMappings.Add("FECHAFACT", "FECHAFACT")
            tableMapping.ColumnMappings.Add("FECHACOMP", "FECHACOMP")
            tableMapping.ColumnMappings.Add("TIPO", "TIPO")
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("DESCIUDAD", "DESCIUDAD")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("NUMDEVOLUCION", "NUMDEVOLUCION")
            tableMapping.ColumnMappings.Add("CODVENDEDOR", "CODVENDEDOR1")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT TOTALCONIVACOB AS TOTALCONIVA, TOTALSINIVACOB AS " & _
                "TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                        " & _
                " FECHAFACT, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DI" & _
                "RECCION, DESCIUDAD, TELEFONO, CODCLIENTE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NOMBREFANTA" & _
                "SIA, CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELECT        TOP (" & _
                "100) PERCENT dbo.VENDEDOR.CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, dbo.VENDEDOR.DE" & _
                "SVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    V.TOTALVENTA - " & _
                "V.TOTALIVA AS TOTALSINIVACOB, V.TOTALVENTA AS TOTALCONIVACOB, SUBSTRING(V.NUMVEN" & _
                "TA, 9, LEN(V.NUMVENTA) - 7) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "  AS NROCOMPROBANTE, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7) AS NUMVENTA, " & _
                "V.FECHAVENTA AS FECHACOMP, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   " & _
                " V.FECHAVENTA AS FECHAFACT,CASE WHEN V.MODALIDADPAGO=0 then  'VTA_CONT' else 'VT" & _
                "A_OTROS' END AS TIPO, NULL AS FECHAREGISTROCOB, NULL AS NRORECIBO, NULL AS NUMDE" & _
                "VOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    dbo.CLIENTES.NUM" & _
                "CLIENTE, dbo.CLIENTES.NOMBRE, dbo.CLIENTES.DIRECCION, dbo.CIUDAD.DESCIUDAD, dbo." & _
                "CLIENTES.TELEFONO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    V.CODCL" & _
                "IENTE, dbo.CLIENTES.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            db" & _
                "o.VENTAS AS V INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    db" & _
                "o.CLIENTES ON V.CODCLIENTE = dbo.CLIENTES.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                          dbo.CIUDAD ON dbo.CLIENTES.CODCIUDAD =" & _
                " dbo.CIUDAD.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "      dbo.VENDEDOR ON V.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "          WHERE        (V.ESTADO = 1) AND (V.MODALIDADPAGO = 0 OR V.MODALIDADPAG" & _
                "O = 4)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          UNION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SELECT       " & _
                " TOP (100) PERCENT CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, SUM(TOTALSINIVACOB) AS" & _
                " TOTALSINIVA, SUM(TOTALCONIVACOB) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                            " & _
                "       AS TOTALCONIVA, NROCOMPROBANTE, NULL AS NUMVENTA, FECHACOMP, NULL AS FECH" & _
                "AFACT, TIPO, FECHAREGISTROCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "               NUMDEVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO" & _
                ", CODCLIENTE, NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT " & _
                "       TOP (100) PERCENT VENDEDOR_3.CODVENDEDOR, VENDEDOR_3.NUMVENDEDOR, VENDEDO" & _
                "R_3.DESVENDEDOR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                              " & _
                "                    (SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                                                              FROM            db" & _
                "o.VENTASFORMACOBRO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                            " & _
                "                        WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVE" & _
                "NTA) AND (FECHAREGISTROCOB >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                              " & _
                "                                                                                " & _
                "@fechaini, 103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                               " & _
                "   (SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                       " & _
                "                                             FROM            dbo.VENTASFORMACOBR" & _
                "O AS VENTASFORMACOBRO_3" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                       " & _
                "                             WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V." & _
                "CODVENTA) AND (FECHAREGISTROCOB >= CONVERT(DATETIME, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "                                                                                " & _
                "     @fechaini, 103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103)" & _
                ")) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                           " & _
                "   / V.TOTALVENTA * V.TOTALIVA AS TOTALSINIVACOB," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             " & _
                "                                                     (SELECT        SUM(IMPORTE)" & _
                " AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                     " & _
                "               FROM            dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                                                               W" & _
                "HERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA)) AS TOTALCONIVACOB, " & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                              " & _
                "VFCORIG.NRORECIBO + ' ' + ISNULL(VFCORIG.RECIBONROSERIE, '') AS NROCOMPROBANTE, " & _
                "V.NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                  " & _
                "            VFCORIG.FECHAREGISTROCOB AS FECHACOMP, V.FECHAVENTA AS FECHAFACT, 'R" & _
                "ECIBO' AS TIPO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                              " & _
                "                VFCORIG.FECHAREGISTROCOB, VFCORIG.NRORECIBO + ' ' + ISNULL(VFCOR" & _
                "IG.RECIBONROSERIE, '') AS NRORECIBO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                                          AS NUMDEVOLUCION, CLIENTES_2.NUMCLIENT" & _
                "E, CLIENTES_2.NOMBRE, CLIENTES_2.DIRECCION, CIUDAD_2.DESCIUDAD, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                CLIENTES_2.TELEF" & _
                "ONO, V.CODCLIENTE, CLIENTES_2.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                  " & _
                "                  FROM            dbo.VENTASFORMACOBRO AS VFCORIG INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                                            dbo." & _
                "VENTAS AS V ON V.CODVENTA = VFCORIG.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                                       dbo.CLIENTES AS CLIENTES_" & _
                "2 ON V.CODCLIENTE = CLIENTES_2.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "                                                         dbo.CIUDAD AS CIUDAD_2 " & _
                "ON CLIENTES_2.CODCIUDAD = CIUDAD_2.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                                       dbo.VENDEDOR AS VENDEDOR_" & _
                "3 ON V.CODVENDEDOR = VENDEDOR_3.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                   " & _
                "                 WHERE        (VFCORIG.CODTIPOCOBRO <> 5) AND (V.ESTADO = 1)) AS" & _
                " dt2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          GROUP BY CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, " & _
                "NROCOMPROBANTE, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "                                   NUMDEVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION," & _
                " DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         AS " & _
                "MOVIMIENTOSCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (FECHACOMP >= CONVERT(DATETIME, @fechaini, 103)" & _
                ") AND (FECHACOMP <= CONVERT(DATETIME, @fechafin, 103))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY TIPO DESC, NROC" & _
                "OMPROBANTE"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT TOTALCONIVACOB AS TOTALCONIVA, TOTALSINIVACOB AS " & _
                "TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, FECHAFACT, FECHACOMP, TIPO" & _
                ", FECHAREGISTROCOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         NRORECIBO, NUMCLIENTE, NOMBRE, DI" & _
                "RECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, CODVENDEDOR, NUMVENDED" & _
                "OR, DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELECT        TOP (100) PERCENT dbo.VENDEDOR.C" & _
                "ODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, dbo.VENDEDOR.DESVENDEDOR, V.TOTALVENTA - V" & _
                ".TOTALIVA AS TOTALSINIVACOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "   V.TOTALVENTA AS TOTALCONIVACOB, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7)" & _
                " AS NROCOMPROBANTE, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7) AS NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    V.FECHAVENTA AS FECHACOMP, " & _
                "V.FECHAVENTA AS FECHAFACT, CASE WHEN V.MODALIDADPAGO = 0 THEN 'VTA_CONT' END AS " & _
                "TIPO, NULL AS FECHAREGISTROCOB, NULL AS NRORECIBO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                              AS NUMDEVOLUCION, dbo.CLIENTES.NUMCLIENTE, dbo.CLI" & _
                "ENTES.NOMBRE, dbo.CLIENTES.DIRECCION, dbo.CIUDAD.DESCIUDAD, dbo.CLIENTES.TELEFON" & _
                "O, V.CODCLIENTE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    dbo.CLIEN" & _
                "TES.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            dbo.VENTAS AS V IN" & _
                "NER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    dbo.CLIENTES ON V." & _
                "CODCLIENTE = dbo.CLIENTES.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                          dbo.CIUDAD ON dbo.CLIENTES.CODCIUDAD = dbo.CIUDAD.CODC" & _
                "IUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    dbo.VENDED" & _
                "OR ON V.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          WHERE " & _
                "       (V.ESTADO = 1) AND (V.MODALIDADPAGO = 0)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          UNION" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SELECT        TOP (100) PERCENT CODVENDEDOR, NUMVEND" & _
                "EDOR, DESVENDEDOR, SUM(TOTALSINIVACOB) AS TOTALSINIVA, SUM(TOTALCONIVACOB) AS TO" & _
                "TALCONIVA, NROCOMPROBANTE, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "     AS NUMVENTA, FECHACOMP, NULL AS FECHAFACT, TIPO, FECHAREGISTROCOB, NRORECIB" & _
                "O, NUMDEVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE" & _
                ", " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                 FROM            (SELECT        TOP (100) PERCENT VENDEDOR_3.COD" & _
                "VENDEDOR, VENDEDOR_3.NUMVENDEDOR, VENDEDOR_3.DESVENDEDOR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "                                                             (SELECT        SUM(" & _
                "IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                             " & _
                "                       FROM            dbo.VENTASFORMACOBRO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                   " & _
                "                                                                 WHERE        (C" & _
                "ODVENTA = V.CODVENTA) AND (FECHAREGISTROCOB >= CONVERT(DATETIME, @fechaini, 103)" & _
                ") AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "               " & _
                "                                                               -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "              " & _
                "                                                                    (SELECT     " & _
                "   SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                      " & _
                "                              FROM            dbo.VENTASFORMACOBRO AS VENTASFORM" & _
                "ACOBRO_3" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                      " & _
                "              WHERE        (CODVENTA = V.CODVENTA) AND (FECHAREGISTROCOB >= CONV" & _
                "ERT(DATETIME, @fechaini, 103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fecha" & _
                "fin, 103))) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                  " & _
                "            / V.TOTALVENTA * V.TOTALIVA AS TOTALSINIVACOB," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "                                                              (SELECT        SUM" & _
                "(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                            " & _
                "                        FROM            dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO" & _
                "_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                            " & _
                "        WHERE        (CODVENTA = V.CODVENTA)) AS TOTALCONIVACOB, VFCORIG.NRORECI" & _
                "BO + ' ' + ISNULL(VFCORIG.RECIBONROSERIE, '') AS NROCOMPROBANTE, V.NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & " " & _
                "                                                                             VFC" & _
                "ORIG.FECHAREGISTROCOB AS FECHACOMP, V.FECHAVENTA AS FECHAFACT, 'RECIBO' AS TIPO," & _
                " VFCORIG.FECHAREGISTROCOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   " & _
                "                           VFCORIG.NRORECIBO + ' ' + ISNULL(VFCORIG.RECIBONROSER" & _
                "IE, '') AS NRORECIBO, NULL AS NUMDEVOLUCION, CLIENTES_2.NUMCLIENTE, CLIENTES_2.N" & _
                "OMBRE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                       " & _
                "       CLIENTES_2.DIRECCION, CIUDAD_2.DESCIUDAD, CLIENTES_2.TELEFONO, V.CODCLIEN" & _
                "TE, CLIENTES_2.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                 " & _
                "   FROM            dbo.VENTASFORMACOBRO AS VFCORIG INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                 " & _
                "                                                             dbo.VENTAS AS V ON " & _
                "V.CODVENTA = VFCORIG.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "                                        dbo.CLIENTES AS CLIENTES_2 ON V.CODCLIEN" & _
                "TE = CLIENTES_2.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                                          dbo.CIUDAD AS CIUDAD_2 ON CLIENTES_2.C" & _
                "ODCIUDAD = CIUDAD_2.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "                                        dbo.VENDEDOR AS VENDEDOR_3 ON V.CODVENDE" & _
                "DOR = VENDEDOR_3.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                  " & _
                "  WHERE        (VFCORIG.CODTIPOCOBRO <> 5) AND (V.ESTADO = 1)) AS dt2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                 GROUP BY CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, NROCOMPROBANTE," & _
                " FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMDEVOLUCION, NUMCLIENTE, NOMBRE" & _
                ", DIRECCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   DESCIUDAD, TEL" & _
                "EFONO, CODCLIENTE, NOMBREFANTASIA) AS MOVIMIENTOSCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (FECHACOM" & _
                "P >= CONVERT(DATETIME, @fechaini, 103)) AND (FECHACOMP <= CONVERT(DATETIME, @fec" & _
                "hafin, 103)) AND (CODVENDEDOR IN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        it" & _
                "em" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            dbo.fnPartir(@vend, ',') AS f" & _
                "nPartir_1))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY TIPO DESC, NROCOMPROBANTE"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@vend", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DsRVComisiones.ComisionVendedorCobrDetDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As DsRVComisiones.ComisionVendedorCobrDetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorCobrDetDataTable = New DsRVComisiones.ComisionVendedorCobrDetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy1Vend(ByVal dataTable As DsRVComisiones.ComisionVendedorCobrDetDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBy1Vend(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As DsRVComisiones.ComisionVendedorCobrDetDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorCobrDetDataTable = New DsRVComisiones.ComisionVendedorCobrDetDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ComisionVendedorCobranzaTipoVentaTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ComisionVendedorCobranzaTipoVenta"
            tableMapping.ColumnMappings.Add("TOTALCONIVA", "TOTALCONIVA")
            tableMapping.ColumnMappings.Add("TOTALSINIVA", "TOTALSINIVA")
            tableMapping.ColumnMappings.Add("NROCOMPROBANTE", "NROCOMPROBANTE")
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            tableMapping.ColumnMappings.Add("NUMDEVOLUCION", "NUMDEVOLUCION")
            tableMapping.ColumnMappings.Add("FECHAFACT", "FECHAFACT")
            tableMapping.ColumnMappings.Add("FECHACOMP", "FECHACOMP")
            tableMapping.ColumnMappings.Add("TIPO", "TIPO")
            tableMapping.ColumnMappings.Add("FECHAREGISTROCOB", "FECHAREGISTROCOB")
            tableMapping.ColumnMappings.Add("NRORECIBO", "NRORECIBO")
            tableMapping.ColumnMappings.Add("NUMCLIENTE", "NUMCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("DIRECCION", "DIRECCION")
            tableMapping.ColumnMappings.Add("DESCIUDAD", "DESCIUDAD")
            tableMapping.ColumnMappings.Add("TELEFONO", "TELEFONO")
            tableMapping.ColumnMappings.Add("CODCLIENTE", "CODCLIENTE")
            tableMapping.ColumnMappings.Add("NOMBREFANTASIA", "NOMBREFANTASIA")
            tableMapping.ColumnMappings.Add("MODALIDADPAGO", "MODALIDADPAGO")
            tableMapping.ColumnMappings.Add("CODVENDEDOR", "CODVENDEDOR")
            tableMapping.ColumnMappings.Add("NUMVENDEDOR", "NUMVENDEDOR")
            tableMapping.ColumnMappings.Add("DESVENDEDOR", "DESVENDEDOR")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(1) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        TOP (100) PERCENT TOTALCONIVACOB AS TOTALCONIVA, TOTALSINIVACOB AS " & _
                "TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, FECHAFACT, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "            FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DI" & _
                "RECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "     MODALIDADPAGO, CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELE" & _
                "CT        TOP (100) PERCENT dbo.VENDEDOR.CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, " & _
                "dbo.VENDEDOR.DESVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    " & _
                "V.TOTALVENTA - V.TOTALIVA AS TOTALSINIVACOB, V.TOTALVENTA AS TOTALCONIVACOB, SUB" & _
                "STRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                   " & _
                "                 AS NROCOMPROBANTE, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7" & _
                ") AS NUMVENTA, V.FECHAVENTA AS FECHACOMP, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                V.FECHAVENTA AS FECHAFACT, CASE WHEN V.MODALIDADPAGO = 0 THEN 'V" & _
                "TA_CONT' ELSE 'VTA_OTROS' END AS TIPO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                  " & _
                "                  AS FECHAREGISTROCOB, NULL AS NRORECIBO, NULL AS NUMDEVOLUCION," & _
                " dbo.CLIENTES.NUMCLIENTE, dbo.CLIENTES.NOMBRE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                     dbo.CLIENTES.DIRECCION, dbo.CIUDAD.DESCIUDAD, dbo.CLIENTES." & _
                "TELEFONO, V.CODCLIENTE, dbo.CLIENTES.NOMBREFANTASIA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "                           V.MODALIDADPAGO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM      " & _
                "      dbo.VENTAS AS V INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "      dbo.CLIENTES ON V.CODCLIENTE = dbo.CLIENTES.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                  dbo.CIUDAD ON dbo.CLIENTES.COD" & _
                "CIUDAD = dbo.CIUDAD.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "              dbo.VENDEDOR ON V.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                  WHERE        (V.ESTADO = 1) AND (V.MODALIDADPAGO = 0 OR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                               V.MODALIDADPAGO = 4)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "               UNION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SELECT        TOP (100) PERCENT " & _
                "CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, SUM(TOTALSINIVACOB) AS TOTALSINIVA, SUM(T" & _
                "OTALCONIVACOB) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   AS TOTALCONI" & _
                "VA, NROCOMPROBANTE, NULL AS NUMVENTA, FECHACOMP, NULL AS FECHAFACT, TIPO, FECHAR" & _
                "EGISTROCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NUMD" & _
                "EVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBR" & _
                "EFANTASIA, MODALIDADPAGO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT     " & _
                "   TOP (100) PERCENT VENDEDOR_3.CODVENDEDOR, VENDEDOR_3.NUMVENDEDOR, VENDEDOR_3." & _
                "DESVENDEDOR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                  " & _
                "                (SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                                                          FROM            dbo.VE" & _
                "NTASFORMACOBRO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                " & _
                "                    WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA)" & _
                " AND (FECHAREGISTROCOB >= CONVERT(DATETIME, @fechaini, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                                                                " & _
                "       103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                                                                               (" & _
                "SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                           " & _
                "                                         FROM            dbo.VENTASFORMACOBRO AS" & _
                " VENTASFORMACOBRO_3" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                           " & _
                "                         WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODV" & _
                "ENTA) AND (FECHAREGISTROCOB >= CONVERT(DATETIME, @fechaini, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "                                                                                " & _
                "            103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                              /" & _
                " V.TOTALVENTA * V.TOTALIVA AS TOTALSINIVACOB," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                 " & _
                "                                                 (SELECT        SUM(IMPORTE) AS " & _
                "Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                         " & _
                "           FROM            dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                                                           WHERE" & _
                "        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA)) AS TOTALCONIVACOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                                            VFCO" & _
                "RIG.NRORECIBO + ' ' + ISNULL(VFCORIG.RECIBONROSERIE, '') AS NROCOMPROBANTE, V.NU" & _
                "MVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                      " & _
                "        VFCORIG.FECHAREGISTROCOB AS FECHACOMP, V.FECHAVENTA AS FECHAFACT, 'RECIB" & _
                "O' AS TIPO, VFCORIG.FECHAREGISTROCOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                        " & _
                "                                      VFCORIG.NRORECIBO + ' ' + ISNULL(VFCORIG.R" & _
                "ECIBONROSERIE, '') AS NRORECIBO, NULL AS NUMDEVOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                                                        CLIENTES_2.NUMCLIENTE, C" & _
                "LIENTES_2.NOMBRE, CLIENTES_2.DIRECCION, CIUDAD_2.DESCIUDAD, CLIENTES_2.TELEFONO," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                             " & _
                " V.CODCLIENTE, CLIENTES_2.NOMBREFANTASIA, V.MODALIDADPAGO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "                               FROM            dbo.VENTASFORMACOBRO AS VFCORIG I" & _
                "NNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                     " & _
                "         dbo.VENTAS AS V ON V.CODVENTA = VFCORIG.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                                                    dbo.CLIENTES" & _
                " AS CLIENTES_2 ON V.CODCLIENTE = CLIENTES_2.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                                                                      dbo.CIUDAD" & _
                " AS CIUDAD_2 ON CLIENTES_2.CODCIUDAD = CIUDAD_2.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                                                    dbo.VENDEDOR" & _
                " AS VENDEDOR_3 ON V.CODVENDEDOR = VENDEDOR_3.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                              WHERE        (VFCORIG.CODTIPOCOBRO <> 5) AND (V.ES" & _
                "TADO = 1)) AS dt2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          GROUP BY CODVENDEDOR, NUMVENDEDOR, " & _
                "DESVENDEDOR, NROCOMPROBANTE, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMDE" & _
                "VOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NUMCLIENTE, NOMBR" & _
                "E, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, MODALIDADPAGO) AS" & _
                " MOVIMIENTOSCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (FECHACOMP >= CONVERT(DATETIME, @fechaini, 103" & _
                ")) AND (FECHACOMP <= CONVERT(DATETIME, @fechafin, 103))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY FECHACOMP"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        TOP (100) PERCENT TOTALCONIVACOB AS TOTALCONIVA, TOTALSINIVACOB AS " & _
                "TOTALSINIVA, NROCOMPROBANTE, NUMVENTA, NUMDEVOLUCION, FECHAFACT, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "             " & _
                "            FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMCLIENTE, NOMBRE, DI" & _
                "RECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                    " & _
                "     MODALIDADPAGO, CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            (SELE" & _
                "CT        TOP (100) PERCENT dbo.VENDEDOR.CODVENDEDOR, dbo.VENDEDOR.NUMVENDEDOR, " & _
                "dbo.VENDEDOR.DESVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                    " & _
                "V.TOTALVENTA - V.TOTALIVA AS TOTALSINIVACOB, V.TOTALVENTA AS TOTALCONIVACOB, SUB" & _
                "STRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                   " & _
                "                 AS NROCOMPROBANTE, SUBSTRING(V.NUMVENTA, 9, LEN(V.NUMVENTA) - 7" & _
                ") AS NUMVENTA, V.FECHAVENTA AS FECHACOMP, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                    " & _
                "                V.FECHAVENTA AS FECHAFACT, CASE WHEN V.MODALIDADPAGO = 0 THEN 'V" & _
                "TA_CONT' ELSE 'VTA_OTROS' END AS TIPO, NULL " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                  " & _
                "                  AS FECHAREGISTROCOB, NULL AS NRORECIBO, NULL AS NUMDEVOLUCION," & _
                " dbo.CLIENTES.NUMCLIENTE, dbo.CLIENTES.NOMBRE, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               " & _
                "                     dbo.CLIENTES.DIRECCION, dbo.CIUDAD.DESCIUDAD, dbo.CLIENTES." & _
                "TELEFONO, V.CODCLIENTE, dbo.CLIENTES.NOMBREFANTASIA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "                           V.MODALIDADPAGO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM      " & _
                "      dbo.VENTAS AS V INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                              " & _
                "      dbo.CLIENTES ON V.CODCLIENTE = dbo.CLIENTES.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                  dbo.CIUDAD ON dbo.CLIENTES.COD" & _
                "CIUDAD = dbo.CIUDAD.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                      " & _
                "              dbo.VENDEDOR ON V.CODVENDEDOR = dbo.VENDEDOR.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                  WHERE        (V.ESTADO = 1) AND (V.MODALIDADPAGO = 0 OR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "     " & _
                "                                               V.MODALIDADPAGO = 4)" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "           " & _
                "               UNION" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          SELECT        TOP (100) PERCENT " & _
                "CODVENDEDOR, NUMVENDEDOR, DESVENDEDOR, SUM(TOTALSINIVACOB) AS TOTALSINIVA, SUM(T" & _
                "OTALCONIVACOB) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   AS TOTALCONI" & _
                "VA, NROCOMPROBANTE, NULL AS NUMVENTA, FECHACOMP, NULL AS FECHAFACT, TIPO, FECHAR" & _
                "EGISTROCOB, NRORECIBO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NUMD" & _
                "EVOLUCION, NUMCLIENTE, NOMBRE, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBR" & _
                "EFANTASIA, MODALIDADPAGO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          FROM            (SELECT     " & _
                "   TOP (100) PERCENT VENDEDOR_3.CODVENDEDOR, VENDEDOR_3.NUMVENDEDOR, VENDEDOR_3." & _
                "DESVENDEDOR," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                  " & _
                "                (SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          " & _
                "                                                          FROM            dbo.VE" & _
                "NTASFORMACOBRO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                " & _
                "                    WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA)" & _
                " AND (FECHAREGISTROCOB >= CONVERT(DATETIME, @fechaini, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                       " & _
                "                                                                                " & _
                "       103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) -" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                                                                               (" & _
                "SELECT        SUM(IMPORTE) AS Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                           " & _
                "                                         FROM            dbo.VENTASFORMACOBRO AS" & _
                " VENTASFORMACOBRO_3" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                           " & _
                "                         WHERE        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODV" & _
                "ENTA) AND (FECHAREGISTROCOB >= CONVERT(DATETIME, @fechaini, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                  " & _
                "                                                                                " & _
                "            103)) AND (FECHAREGISTROCOB <= CONVERT(DATETIME, @fechafin, 103))) " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                              /" & _
                " V.TOTALVENTA * V.TOTALIVA AS TOTALSINIVACOB," & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                 " & _
                "                                                 (SELECT        SUM(IMPORTE) AS " & _
                "Expr1" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                         " & _
                "           FROM            dbo.VENTASFORMACOBRO AS VENTASFORMACOBRO_2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "         " & _
                "                                                                           WHERE" & _
                "        (CODTIPOCOBRO <> 5) AND (CODVENTA = V.CODVENTA)) AS TOTALCONIVACOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "  " & _
                "                                                                            VFCO" & _
                "RIG.NRORECIBO + ' ' + ISNULL(VFCORIG.RECIBONROSERIE, '') AS NROCOMPROBANTE, V.NU" & _
                "MVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                      " & _
                "        VFCORIG.FECHAREGISTROCOB AS FECHACOMP, V.FECHAVENTA AS FECHAFACT, 'RECIB" & _
                "O' AS TIPO, VFCORIG.FECHAREGISTROCOB, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                        " & _
                "                                      VFCORIG.NRORECIBO + ' ' + ISNULL(VFCORIG.R" & _
                "ECIBONROSERIE, '') AS NRORECIBO, NULL AS NUMDEVOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                                                        CLIENTES_2.NUMCLIENTE, C" & _
                "LIENTES_2.NOMBRE, CLIENTES_2.DIRECCION, CIUDAD_2.DESCIUDAD, CLIENTES_2.TELEFONO," & _
                " " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                             " & _
                " V.CODCLIENTE, CLIENTES_2.NOMBREFANTASIA, V.MODALIDADPAGO" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                     " & _
                "                               FROM            dbo.VENTASFORMACOBRO AS VFCORIG I" & _
                "NNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                                     " & _
                "         dbo.VENTAS AS V ON V.CODVENTA = VFCORIG.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                                                    dbo.CLIENTES" & _
                " AS CLIENTES_2 ON V.CODCLIENTE = CLIENTES_2.CODCLIENTE LEFT OUTER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                                                                      dbo.CIUDAD" & _
                " AS CIUDAD_2 ON CLIENTES_2.CODCIUDAD = CIUDAD_2.CODCIUDAD INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "          " & _
                "                                                                    dbo.VENDEDOR" & _
                " AS VENDEDOR_3 ON V.CODVENDEDOR = VENDEDOR_3.CODVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                      " & _
                "                              WHERE        (VFCORIG.CODTIPOCOBRO <> 5) AND (V.ES" & _
                "TADO = 1)) AS dt2" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                          GROUP BY CODVENDEDOR, NUMVENDEDOR, " & _
                "DESVENDEDOR, NROCOMPROBANTE, FECHACOMP, TIPO, FECHAREGISTROCOB, NRORECIBO, NUMDE" & _
                "VOLUCION, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                                                   NUMCLIENTE, NOMBR" & _
                "E, DIRECCION, DESCIUDAD, TELEFONO, CODCLIENTE, NOMBREFANTASIA, MODALIDADPAGO) AS" & _
                " MOVIMIENTOSCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE        (FECHACOMP >= CONVERT(DATETIME, @fechaini, 103" & _
                ")) AND (FECHACOMP <= CONVERT(DATETIME, @fechafin, 103)) AND (CODVENDEDOR IN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "   " & _
                "                          (SELECT        item" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FR" & _
                "OM            dbo.fnPartir(@vend, ',') AS fnPartir_1))" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "ORDER BY DESVENDEDOR"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOMP", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@vend", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function Fill(ByVal dataTable As DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetData(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable = New DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillBy(ByVal dataTable As DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataBy(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            Dim dataTable As DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable = New DsRVComisiones.ComisionVendedorCobranzaTipoVentaDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''Represents the connection and commands used to retrieve and save data.
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DataObjectAttribute(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterDesigner, Microsoft.VSDesigner" & _
        ", Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter")> _
    Partial Public Class ComisionNotasCreditoTableAdapter
        Inherits Global.System.ComponentModel.Component

        Private WithEvents _adapter As Global.System.Data.SqlClient.SqlDataAdapter

        Private _connection As Global.System.Data.SqlClient.SqlConnection

        Private _transaction As Global.System.Data.SqlClient.SqlTransaction

        Private _commandCollection() As Global.System.Data.SqlClient.SqlCommand

        Private _clearBeforeFill As Boolean

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Sub New()
            MyBase.New()
            Me.ClearBeforeFill = True
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Friend ReadOnly Property Adapter() As Global.System.Data.SqlClient.SqlDataAdapter
            Get
                If (Me._adapter Is Nothing) Then
                    Me.InitAdapter()
                End If
                Return Me._adapter
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Connection() As Global.System.Data.SqlClient.SqlConnection
            Get
                If (Me._connection Is Nothing) Then
                    Me.InitConnection()
                End If
                Return Me._connection
            End Get
            Set(value As Global.System.Data.SqlClient.SqlConnection)
                Me._connection = value
                If (Not (Me.Adapter.InsertCommand) Is Nothing) Then
                    Me.Adapter.InsertCommand.Connection = value
                End If
                If (Not (Me.Adapter.DeleteCommand) Is Nothing) Then
                    Me.Adapter.DeleteCommand.Connection = value
                End If
                If (Not (Me.Adapter.UpdateCommand) Is Nothing) Then
                    Me.Adapter.UpdateCommand.Connection = value
                End If
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    If (Not (Me.CommandCollection(i)) Is Nothing) Then
                        CType(Me.CommandCollection(i), Global.System.Data.SqlClient.SqlCommand).Connection = value
                    End If
                    i = (i + 1)
                Loop
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Friend Property Transaction() As Global.System.Data.SqlClient.SqlTransaction
            Get
                Return Me._transaction
            End Get
            Set(value As Global.System.Data.SqlClient.SqlTransaction)
                Me._transaction = value
                Dim i As Integer = 0
                Do While (i < Me.CommandCollection.Length)
                    Me.CommandCollection(i).Transaction = Me._transaction
                    i = (i + 1)
                Loop
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.DeleteCommand) Is Nothing)) Then
                    Me.Adapter.DeleteCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.InsertCommand) Is Nothing)) Then
                    Me.Adapter.InsertCommand.Transaction = Me._transaction
                End If
                If ((Not (Me.Adapter) Is Nothing) _
                            AndAlso (Not (Me.Adapter.UpdateCommand) Is Nothing)) Then
                    Me.Adapter.UpdateCommand.Transaction = Me._transaction
                End If
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected ReadOnly Property CommandCollection() As Global.System.Data.SqlClient.SqlCommand()
            Get
                If (Me._commandCollection Is Nothing) Then
                    Me.InitCommandCollection()
                End If
                Return Me._commandCollection
            End Get
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property ClearBeforeFill() As Boolean
            Get
                Return Me._clearBeforeFill
            End Get
            Set(value As Boolean)
                Me._clearBeforeFill = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitAdapter()
            Me._adapter = New Global.System.Data.SqlClient.SqlDataAdapter()
            Dim tableMapping As Global.System.Data.Common.DataTableMapping = New Global.System.Data.Common.DataTableMapping()
            tableMapping.SourceTable = "Table"
            tableMapping.DataSetTable = "ComisionNotasCredito"
            tableMapping.ColumnMappings.Add("NUMDEVOLUCION", "NUMDEVOLUCION")
            tableMapping.ColumnMappings.Add("NOMBRE", "NOMBRE")
            tableMapping.ColumnMappings.Add("CODVENDEDOR", "CODVENDEDOR")
            tableMapping.ColumnMappings.Add("CODTIPOCOBRO", "CODTIPOCOBRO")
            tableMapping.ColumnMappings.Add("DESTIPOCOBRO", "DESTIPOCOBRO")
            tableMapping.ColumnMappings.Add("FECHACOBRO", "FECHACOBRO")
            tableMapping.ColumnMappings.Add("NRORECIBO", "NRORECIBO")
            tableMapping.ColumnMappings.Add("NOMBREFANTASIA", "NOMBREFANTASIA")
            tableMapping.ColumnMappings.Add("NUMVENTA", "NUMVENTA")
            tableMapping.ColumnMappings.Add("DESVENDEDOR", "DESVENDEDOR")
            tableMapping.ColumnMappings.Add("importesiniva", "importesiniva")
            Me._adapter.TableMappings.Add(tableMapping)
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitConnection()
            Me._connection = New Global.System.Data.SqlClient.SqlConnection()
            Me._connection.ConnectionString = Global.ContaExpress.My.MySettings.Default.GESTIONConnectionString2
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Sub InitCommandCollection()
            Me._commandCollection = New Global.System.Data.SqlClient.SqlCommand(2) {}
            Me._commandCollection(0) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(0).Connection = Me.Connection
            Me._commandCollection(0).CommandText = "SELECT        VENTASFORMACOBRO.CODTIPOCOBRO, DEVOLUCION.TOTALDEVOLUCION - DEVOLUC" & _
                "ION.TOTALIVA AS importesiniva, VENTASFORMACOBRO.DESTIPOCOBRO, VENTASFORMACOBRO.F" & _
                "ECHACOBRO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR.CODVENDEDOR, VENTASFORMACOBRO.NUM" & _
                "DEVOLUCION, VENTASFORMACOBRO.NRORECIBO, CLIENTES.NOMBRE, CLIENTES.NOMBREFANTASIA" & _
                ", VENTAS.NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR.DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM        " & _
                "    VENTASFORMACOBRO INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENTAS ON VENTASFORMAC" & _
                "OBRO.CODVENTA = VENTAS.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR ON" & _
                " VENTAS.CODVENDEDOR = VENDEDOR.CODVENDEDOR INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "         DEVOLUCION ON VENTASFORMACOBRO.NUMDEVOLUCION = DEVOLUCION.NUMDEVOLUCION" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "GROUP BY VENTASFORMACOBRO.CODTIPOCOBRO, VENTASFORMACOBRO.IMPORTE, VENTASFORMAC" & _
                "OBRO.DESTIPOCOBRO, VENTASFORMACOBRO.FECHACOBRO, VENDEDOR.CODVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                 VENTASFORMACOBRO.NUMDEVOLUCION, VENTASFORMACOBRO.NRORECIBO, CLI" & _
                "ENTES.NOMBRE, CLIENTES.NOMBREFANTASIA, VENTAS.NUMVENTA, VENDEDOR.DESVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                         DEVOLUCION.TOTALDEVOLUCION - DEVOLUCION.TOTALIVA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "HAVIN" & _
                "G        (VENDEDOR.CODVENDEDOR =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        it" & _
                "em" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            dbo.fnPartir(@vend, ',') AS f" & _
                "nPartir_1)) AND (VENTASFORMACOBRO.CODTIPOCOBRO = 5) AND (VENTASFORMACOBRO.FECHAC" & _
                "OBRO >= CONVERT(DATETIME, @fechaini, 103)) AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         (VENTA" & _
                "SFORMACOBRO.FECHACOBRO <= CONVERT(DATETIME, @fechafin, 103)) AND (VENTASFORMACOB" & _
                "RO.NRORECIBO <> '""""')"
            Me._commandCollection(0).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOBRO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOBRO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(0).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@vend", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(1).Connection = Me.Connection
            Me._commandCollection(1).CommandText = "SELECT        VENTASFORMACOBRO.CODTIPOCOBRO, DEVOLUCION.TOTALDEVOLUCION - DEVOLUC" & _
                "ION.TOTALIVA AS importesiniva, VENTASFORMACOBRO.DESTIPOCOBRO, VENTASFORMACOBRO.F" & _
                "ECHACOBRO, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR.CODVENDEDOR, VENTASFORMACOBRO.NUM" & _
                "DEVOLUCION, VENTASFORMACOBRO.NRORECIBO, CLIENTES.NOMBRE, CLIENTES.NOMBREFANTASIA" & _
                ", VENTAS.NUMVENTA, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR.DESVENDEDOR" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM        " & _
                "    VENTASFORMACOBRO INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENTAS ON VENTASFORMAC" & _
                "OBRO.CODVENTA = VENTAS.CODVENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR ON" & _
                " VENTAS.CODVENDEDOR = VENDEDOR.CODVENDEDOR INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         " & _
                "CLIENTES ON VENTAS.CODCLIENTE = CLIENTES.CODCLIENTE INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                " & _
                "         DEVOLUCION ON VENTASFORMACOBRO.NUMDEVOLUCION = DEVOLUCION.NUMDEVOLUCION" & _
                "" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "GROUP BY VENTASFORMACOBRO.CODTIPOCOBRO, VENTASFORMACOBRO.IMPORTE, VENTASFORMAC" & _
                "OBRO.DESTIPOCOBRO, VENTASFORMACOBRO.FECHACOBRO, VENDEDOR.CODVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "        " & _
                "                 VENTASFORMACOBRO.NUMDEVOLUCION, VENTASFORMACOBRO.NRORECIBO, CLI" & _
                "ENTES.NOMBRE, CLIENTES.NOMBREFANTASIA, VENTAS.NUMVENTA, VENDEDOR.DESVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & _
                "                         DEVOLUCION.TOTALDEVOLUCION - DEVOLUCION.TOTALIVA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "HAVIN" & _
                "G        (VENDEDOR.CODVENDEDOR =" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                             (SELECT        it" & _
                "em" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                               FROM            dbo.fnPartir(@vend, ',') AS f" & _
                "nPartir_1)) AND (VENTASFORMACOBRO.CODTIPOCOBRO = 5) AND (VENTASFORMACOBRO.FECHAC" & _
                "OBRO >= CONVERT(DATETIME, @fechaini, 103)) AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         (VENTA" & _
                "SFORMACOBRO.FECHACOBRO <= CONVERT(DATETIME, @fechafin, 103)) AND (VENTASFORMACOB" & _
                "RO.NRORECIBO <> '""""')"
            Me._commandCollection(1).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOBRO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOBRO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(1).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@vend", Global.System.Data.SqlDbType.VarChar, 1024, Global.System.Data.ParameterDirection.Input, 0, 0, "", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2) = New Global.System.Data.SqlClient.SqlCommand()
            Me._commandCollection(2).Connection = Me.Connection
            Me._commandCollection(2).CommandText = "SELECT        VENTASFORMACOBRO.CODTIPOCOBRO, VENTASFORMACOBRO.IMPORTE, VENTASFORM" & _
                "ACOBRO.DESTIPOCOBRO, VENTASFORMACOBRO.FECHACOBRO, VENDEDOR.CODVENDEDOR, " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "      " & _
                "                   VENTASFORMACOBRO.NUMDEVOLUCION, VENTASFORMACOBRO.NRORECIBO, C" & _
                "LIENTES.NOMBRE, CLIENTES.NOMBREFANTASIA" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "FROM            VENTASFORMACOBRO INNER " & _
                "JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENTAS ON VENTASFORMACOBRO.CODVENTA = VENTAS.CODV" & _
                "ENTA INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         VENDEDOR ON VENTAS.CODVENDEDOR = VENDE" & _
                "DOR.CODVENDEDOR INNER JOIN" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "                         CLIENTES ON VENTAS.CODCLIEN" & _
                "TE = CLIENTES.CODCLIENTE" & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "WHERE         (VENTASFORMACOBRO.CODTIPOCOBRO = 5) AND " & _
                "(VENTASFORMACOBRO.FECHACOBRO >= CONVERT(DATETIME, @fechaini, 103)) AND " & Global.Microsoft.VisualBasic.ChrW(13) & Global.Microsoft.VisualBasic.ChrW(10) & "       " & _
                "                  (VENTASFORMACOBRO.FECHACOBRO <= CONVERT(DATETIME, @fechafin, 1" & _
                "03))"
            Me._commandCollection(2).CommandType = Global.System.Data.CommandType.Text
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechaini", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOBRO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
            Me._commandCollection(2).Parameters.Add(New Global.System.Data.SqlClient.SqlParameter("@fechafin", Global.System.Data.SqlDbType.DateTime, 8, Global.System.Data.ParameterDirection.Input, 0, 0, "FECHACOBRO", Global.System.Data.DataRowVersion.Current, False, Nothing, "", "", ""))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, True)> _
        Public Overridable Overloads Function FillNC2(ByVal dataTable As DsRVComisiones.ComisionNotasCreditoDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], True)> _
        Public Overridable Overloads Function GetDataNC2(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As DsRVComisiones.ComisionNotasCreditoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(0)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            Dim dataTable As DsRVComisiones.ComisionNotasCreditoDataTable = New DsRVComisiones.ComisionNotasCreditoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillNC(ByVal dataTable As DsRVComisiones.ComisionNotasCreditoDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataNC(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date), ByVal vend As String) As DsRVComisiones.ComisionNotasCreditoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(1)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (vend Is Nothing) Then
                Throw New Global.System.ArgumentNullException("vend")
            Else
                Me.Adapter.SelectCommand.Parameters(2).Value = CType(vend, String)
            End If
            Dim dataTable As DsRVComisiones.ComisionNotasCreditoDataTable = New DsRVComisiones.ComisionNotasCreditoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.Fill, False)> _
        Public Overridable Overloads Function FillNCTodos(ByVal dataTable As DsRVComisiones.ComisionNotasCreditoDataTable, ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As Integer
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            If (Me.ClearBeforeFill = True) Then
                dataTable.Clear()
            End If
            Dim returnValue As Integer = Me.Adapter.Fill(dataTable)
            Return returnValue
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapter"), _
         Global.System.ComponentModel.DataObjectMethodAttribute(Global.System.ComponentModel.DataObjectMethodType.[Select], False)> _
        Public Overridable Overloads Function GetDataNCTodos(ByVal fechaini As Global.System.Nullable(Of Date), ByVal fechafin As Global.System.Nullable(Of Date)) As DsRVComisiones.ComisionNotasCreditoDataTable
            Me.Adapter.SelectCommand = Me.CommandCollection(2)
            If (fechaini.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(0).Value = CType(fechaini.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(0).Value = Global.System.DBNull.Value
            End If
            If (fechafin.HasValue = True) Then
                Me.Adapter.SelectCommand.Parameters(1).Value = CType(fechafin.Value, Date)
            Else
                Me.Adapter.SelectCommand.Parameters(1).Value = Global.System.DBNull.Value
            End If
            Dim dataTable As DsRVComisiones.ComisionNotasCreditoDataTable = New DsRVComisiones.ComisionNotasCreditoDataTable()
            Me.Adapter.Fill(dataTable)
            Return dataTable
        End Function
    End Class

    '''<summary>
    '''TableAdapterManager is used to coordinate TableAdapters in the dataset to enable Hierarchical Update scenarios
    '''</summary>
    <Global.System.ComponentModel.DesignerCategoryAttribute("code"), _
     Global.System.ComponentModel.ToolboxItem(True), _
     Global.System.ComponentModel.DesignerAttribute("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSD" & _
        "esigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), _
     Global.System.ComponentModel.Design.HelpKeywordAttribute("vs.data.TableAdapterManager")> _
    Partial Public Class TableAdapterManager
        Inherits Global.System.ComponentModel.Component

        Private _updateOrder As UpdateOrderOption

        Private _backupDataSetBeforeUpdate As Boolean

        Private _connection As Global.System.Data.IDbConnection

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property UpdateOrder() As UpdateOrderOption
            Get
                Return Me._updateOrder
            End Get
            Set(value As UpdateOrderOption)
                Me._updateOrder = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Property BackupDataSetBeforeUpdate() As Boolean
            Get
                Return Me._backupDataSetBeforeUpdate
            End Get
            Set(value As Boolean)
                Me._backupDataSetBeforeUpdate = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public Property Connection() As Global.System.Data.IDbConnection
            Get
                If (Not (Me._connection) Is Nothing) Then
                    Return Me._connection
                End If
                Return Nothing
            End Get
            Set(value As Global.System.Data.IDbConnection)
                Me._connection = value
            End Set
        End Property

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), _
         Global.System.ComponentModel.Browsable(False)> _
        Public ReadOnly Property TableAdapterInstanceCount() As Integer
            Get
                Dim count As Integer = 0
                Return count
            End Get
        End Property

        '''<summary>
        '''Update rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateUpdatedRows(ByVal dataSet As DsRVComisiones, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow), ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Insert rows in top-down order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateInsertedRows(ByVal dataSet As DsRVComisiones, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Delete rows in bottom-up order.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function UpdateDeletedRows(ByVal dataSet As DsRVComisiones, ByVal allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Integer
            Dim result As Integer = 0
            Return result
        End Function

        '''<summary>
        '''Remove inserted rows that become updated rows after calling TableAdapter.Update(inserted rows) first
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Function GetRealUpdatedRows(ByVal updatedRows() As Global.System.Data.DataRow, ByVal allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)) As Global.System.Data.DataRow()
            If ((updatedRows Is Nothing) _
                        OrElse (updatedRows.Length < 1)) Then
                Return updatedRows
            End If
            If ((allAddedRows Is Nothing) _
                        OrElse (allAddedRows.Count < 1)) Then
                Return updatedRows
            End If
            Dim realUpdatedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim i As Integer = 0
            Do While (i < updatedRows.Length)
                Dim row As Global.System.Data.DataRow = updatedRows(i)
                If (allAddedRows.Contains(row) = False) Then
                    realUpdatedRows.Add(row)
                End If
                i = (i + 1)
            Loop
            Return realUpdatedRows.ToArray
        End Function

        '''<summary>
        '''Update all changes to the dataset.
        '''</summary>
        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Overridable Function UpdateAll(ByVal dataSet As DsRVComisiones) As Integer
            If (dataSet Is Nothing) Then
                Throw New Global.System.ArgumentNullException("dataSet")
            End If
            If (dataSet.HasChanges = False) Then
                Return 0
            End If
            Dim workConnection As Global.System.Data.IDbConnection = Me.Connection
            If (workConnection Is Nothing) Then
                Throw New Global.System.ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterMana" & _
                        "ger TableAdapter property to a valid TableAdapter instance.")
            End If
            Dim workConnOpened As Boolean = False
            If ((workConnection.State And Global.System.Data.ConnectionState.Broken) _
                        = Global.System.Data.ConnectionState.Broken) Then
                workConnection.Close()
            End If
            If (workConnection.State = Global.System.Data.ConnectionState.Closed) Then
                workConnection.Open()
                workConnOpened = True
            End If
            Dim workTransaction As Global.System.Data.IDbTransaction = workConnection.BeginTransaction
            If (workTransaction Is Nothing) Then
                Throw New Global.System.ApplicationException("The transaction cannot begin. The current data connection does not support transa" & _
                        "ctions or the current state is not allowing the transaction to begin.")
            End If
            Dim allChangedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim allAddedRows As Global.System.Collections.Generic.List(Of Global.System.Data.DataRow) = New Global.System.Collections.Generic.List(Of Global.System.Data.DataRow)()
            Dim adaptersWithAcceptChangesDuringUpdate As Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter) = New Global.System.Collections.Generic.List(Of Global.System.Data.Common.DataAdapter)()
            Dim revertConnections As Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection) = New Global.System.Collections.Generic.Dictionary(Of Object, Global.System.Data.IDbConnection)()
            Dim result As Integer = 0
            Dim backupDataSet As Global.System.Data.DataSet = Nothing
            If Me.BackupDataSetBeforeUpdate Then
                backupDataSet = New Global.System.Data.DataSet()
                backupDataSet.Merge(dataSet)
            End If
            Try
                '---- Prepare for update -----------
                '
                '
                '---- Perform updates -----------
                '
                If (Me.UpdateOrder = UpdateOrderOption.UpdateInsertDelete) Then
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                Else
                    result = (result + Me.UpdateInsertedRows(dataSet, allAddedRows))
                    result = (result + Me.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows))
                End If
                result = (result + Me.UpdateDeletedRows(dataSet, allChangedRows))
                '
                '---- Commit updates -----------
                '
                workTransaction.Commit()
                If (0 < allAddedRows.Count) Then
                    Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                    allAddedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
                If (0 < allChangedRows.Count) Then
                    Dim rows((allChangedRows.Count) - 1) As Global.System.Data.DataRow
                    allChangedRows.CopyTo(rows)
                    Dim i As Integer = 0
                    Do While (i < rows.Length)
                        Dim row As Global.System.Data.DataRow = rows(i)
                        row.AcceptChanges()
                        i = (i + 1)
                    Loop
                End If
            Catch ex As Global.System.Exception
                workTransaction.Rollback()
                '---- Restore the dataset -----------
                If Me.BackupDataSetBeforeUpdate Then
                    Global.System.Diagnostics.Debug.Assert((Not (backupDataSet) Is Nothing))
                    dataSet.Clear()
                    dataSet.Merge(backupDataSet)
                Else
                    If (0 < allAddedRows.Count) Then
                        Dim rows((allAddedRows.Count) - 1) As Global.System.Data.DataRow
                        allAddedRows.CopyTo(rows)
                        Dim i As Integer = 0
                        Do While (i < rows.Length)
                            Dim row As Global.System.Data.DataRow = rows(i)
                            row.AcceptChanges()
                            row.SetAdded()
                            i = (i + 1)
                        Loop
                    End If
                End If
                Throw ex
            Finally
                If workConnOpened Then
                    workConnection.Close()
                End If
                If (0 < adaptersWithAcceptChangesDuringUpdate.Count) Then
                    Dim adapters((adaptersWithAcceptChangesDuringUpdate.Count) - 1) As Global.System.Data.Common.DataAdapter
                    adaptersWithAcceptChangesDuringUpdate.CopyTo(adapters)
                    Dim i As Integer = 0
                    Do While (i < adapters.Length)
                        Dim adapter As Global.System.Data.Common.DataAdapter = adapters(i)
                        adapter.AcceptChangesDuringUpdate = True
                        i = (i + 1)
                    Loop
                End If
            End Try
            Return result
        End Function

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Sub SortSelfReferenceRows(ByVal rows() As Global.System.Data.DataRow, ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
            Global.System.Array.Sort(Of Global.System.Data.DataRow)(rows, New SelfReferenceComparer(relation, childFirst))
        End Sub

        <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
         Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Protected Overridable Function MatchTableAdapterConnection(ByVal inputConnection As Global.System.Data.IDbConnection) As Boolean
            If (Not (Me._connection) Is Nothing) Then
                Return True
            End If
            If ((Me.Connection Is Nothing) _
                        OrElse (inputConnection Is Nothing)) Then
                Return True
            End If
            If String.Equals(Me.Connection.ConnectionString, inputConnection.ConnectionString, Global.System.StringComparison.Ordinal) Then
                Return True
            End If
            Return False
        End Function

        '''<summary>
        '''Update Order Option
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Public Enum UpdateOrderOption

            InsertUpdateDelete = 0

            UpdateInsertDelete = 1
        End Enum

        '''<summary>
        '''Used to sort self-referenced table's rows
        '''</summary>
        <Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
        Private Class SelfReferenceComparer
            Inherits Object
            Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow)

            Private _relation As Global.System.Data.DataRelation

            Private _childFirst As Integer

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Friend Sub New(ByVal relation As Global.System.Data.DataRelation, ByVal childFirst As Boolean)
                MyBase.New()
                Me._relation = relation
                If childFirst Then
                    Me._childFirst = -1
                Else
                    Me._childFirst = 1
                End If
            End Sub

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Private Function GetRoot(ByVal row As Global.System.Data.DataRow, ByRef distance As Integer) As Global.System.Data.DataRow
                Global.System.Diagnostics.Debug.Assert((Not (row) Is Nothing))
                Dim root As Global.System.Data.DataRow = row
                distance = 0

                Dim traversedRows As Global.System.Collections.Generic.IDictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow) = New Global.System.Collections.Generic.Dictionary(Of Global.System.Data.DataRow, Global.System.Data.DataRow)()
                traversedRows(row) = row

                Dim parent As Global.System.Data.DataRow = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Do While ((Not (parent) Is Nothing) _
                            AndAlso (traversedRows.ContainsKey(parent) = False))
                    distance = (distance + 1)
                    root = parent
                    traversedRows(parent) = parent
                    parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.[Default])

                Loop

                If (distance = 0) Then
                    traversedRows.Clear()
                    traversedRows(row) = row
                    parent = row.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Do While ((Not (parent) Is Nothing) _
                                AndAlso (traversedRows.ContainsKey(parent) = False))
                        distance = (distance + 1)
                        root = parent
                        traversedRows(parent) = parent
                        parent = parent.GetParentRow(Me._relation, Global.System.Data.DataRowVersion.Original)

                    Loop
                End If

                Return root
            End Function

            <Global.System.Diagnostics.DebuggerNonUserCodeAttribute(), _
             Global.System.CodeDom.Compiler.GeneratedCodeAttribute("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")> _
            Public Function Compare(ByVal row1 As Global.System.Data.DataRow, ByVal row2 As Global.System.Data.DataRow) As Integer Implements Global.System.Collections.Generic.IComparer(Of Global.System.Data.DataRow).Compare
                If Object.ReferenceEquals(row1, row2) Then
                    Return 0
                End If
                If (row1 Is Nothing) Then
                    Return -1
                End If
                If (row2 Is Nothing) Then
                    Return 1
                End If

                Dim distance1 As Integer = 0
                Dim root1 As Global.System.Data.DataRow = Me.GetRoot(row1, distance1)

                Dim distance2 As Integer = 0
                Dim root2 As Global.System.Data.DataRow = Me.GetRoot(row2, distance2)

                If Object.ReferenceEquals(root1, root2) Then
                    Return (Me._childFirst * distance1.CompareTo(distance2))
                Else
                    Global.System.Diagnostics.Debug.Assert(((Not (root1.Table) Is Nothing) _
                                    AndAlso (Not (root2.Table) Is Nothing)))
                    If (root1.Table.Rows.IndexOf(root1) < root2.Table.Rows.IndexOf(root2)) Then
                        Return -1
                    Else
                        Return 1
                    End If
                End If
            End Function
        End Class
    End Class
End Namespace
